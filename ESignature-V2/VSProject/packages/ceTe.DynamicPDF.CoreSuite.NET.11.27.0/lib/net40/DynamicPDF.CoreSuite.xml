<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DynamicPDF.CoreSuite</name>
    </assembly>
    <members>
        <member name="T:ceTe.Common.BarcodingCore.Calculate">
            <summary>
            Specifies calculation type for barcodes.
            </summary>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.Calculate.Yes">
            <summary>
            Always calculate.
            </summary>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.Calculate.No">
            <summary>
            Never calculate.
            </summary>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.Calculate.Auto">
            <summary>
            Automatically detect when to calculate.
            </summary>
        </member>
        <member name="M:ceTe.Common.BarcodingCore.GS1DataBarEncoderCore.GetGS1DataBarWidths(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Generate widths for GS1 DataBar elemetns for a given value
            </summary>
            <param name="val">required value</param>
            <param name="n">number of modules</param>
            <param name="elements">elements in set (Omnidirectional, Truncated, Stacked, Stacked Omnidirectional, Expanded=4, Limited=7)</param>
            <param name="maxWidth">max module width of an element</param>
            <param name="noNarrow">=0 will skip patterns without a one module wide element</param>
        </member>
        <member name="M:ceTe.Common.BarcodingCore.GS1DataBarEncoderCore.Combinations(System.Int32,System.Int32)">
            <summary>
            Returns the number of Combinations of r selected from n: Combinations = n! / ((n-r)! * r!)
            </summary>
            <param name="n"></param>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.MsiBarcodeCoreCheckDigitMode.None">
            <summary>
            No check digit.
            </summary>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.MsiBarcodeCoreCheckDigitMode.Mod10">
            <summary>
            Check digit of mod 10.
            </summary>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.MsiBarcodeCoreCheckDigitMode.Mod11">
            <summary>
            Check digit of mod 11.
            </summary>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.MsiBarcodeCoreCheckDigitMode.Mod1010">
            <summary>
            Check digit of mod 1010.
            </summary>
        </member>
        <member name="F:ceTe.Common.BarcodingCore.MsiBarcodeCoreCheckDigitMode.Mod1110">
            <summary>
            Check digit of mod 1110.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Action">
             <summary>
             Base class representing a destination or action.
             </summary>
             <remarks>Action's derived classes are: <see cref="T:ceTe.DynamicPDF.UrlAction"/>, <see cref="T:ceTe.DynamicPDF.XYDestination"/> and <see cref="T:ceTe.DynamicPDF.ZoomDestination"/>.
             Take a look a the <a href="Outlines and BookMarks.html">Outlines and Bookmarks</a> topic for examples that use these derived classes.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Action.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Action"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Action.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.OutlineAnnotationAction">
            <summary>
            Represents outline annotation action class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutlineAnnotationAction.NextAction">
            <summary>
            Gets or sets next action for the current action.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AnnotationReaderEvents">
             <summary>
             Represents annotation reader events.
             </summary>
            ^AnnotationReaderEvents
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.AnnotationReaderEvents.MouseUp">
            <summary>
            Gets or sets annotation mouse up event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AnnotationReaderEvents.MouseDown">
            <summary>
            Gets or sets annotation mouse down event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AnnotationReaderEvents.MouseEnter">
            <summary>
            Gets or sets annotation mouse enter event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AnnotationReaderEvents.MouseExit">
            <summary>
            Gets or sets annotation mouse exit event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AnnotationReaderEvents.OnBlur">
            <summary>
            Gets or sets annotation on blur event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AnnotationReaderEvents.OnFocus">
            <summary>
            Gets or sets annotation on focus event actions.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AnnotationShowHideAction">
             <summary>
             Represents an annotation show hide  action.
             </summary>
            ^AnnotationShowHideAction
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.AnnotationShowHideAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the annotation show hide  action class.
            </summary>
            <param name="fieldName">The field name to hide or show.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AnnotationShowHideAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.AnnotationShowHideAction.ShowField">
            <summary>
            Gets or sets field to hide or show. By default field will be hide.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Cryptography.Aes128Security">
             <summary>
             Represents AES 128 bit PDF document security.
             </summary>
             <remarks>
             AES 128 bit PDF security is compatible with PDF version 1.5 and higher and can be read
             with Adobe Acrobat Reader version 7 or higher. Older readers will not be able to
             read document encrypted with this security. Setting document version to lower values will throw an exception at the time of draw.
             For more details on AES 128 bit security take a look at the <a href="Security.html">Security</a> topic.
             </remarks>
            ^Aes128Security.Example1
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.Security">
             <summary>
             Base class from which all security classes are derived.
             </summary>
             <remarks>Security's derived classes are: <see cref="T:ceTe.DynamicPDF.Cryptography.RC4128Security"/> and <see cref="T:ceTe.DynamicPDF.Cryptography.RC440Security"/>.</remarks>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Security.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Security"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Security.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Security"/> class.
            </summary>
            <param name="ownerPassword">The owner password.</param>
            <param name="userPassword">The user password.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Security.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Security"/> class.
            </summary>
            <param name="password">The owner and user password.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Security.Draw(ceTe.DynamicPDF.IO.DocumentWriter,ceTe.DynamicPDF.IO.Encrypter)">
            <summary>
            Draws the encrypter dictionary to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
            <param name="encrypter"><see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object used to encrypt the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Security.GetEncrypter(System.Byte[])">
            <summary>
            Gets an <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object to be used for encrypting the document.
            </summary>
            <param name="id">ID of the current PDF document.</param>
            <returns>An <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Security.BinPassword(System.String)">
            <summary>
            Gets a byte array of the password padded with the PDF padding array.
            </summary>
            <param name="password">The password.</param>
            <returns>A byte array representing the password.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Security.OwnerPassword">
            <summary>
            Gets or sets the owner password.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Security.UserPassword">
            <summary>
            Gets or sets the user password.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Security.AllowPrint">
            <summary>
            Gets or sets if the document can be printed by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Security.AllowEdit">
            <summary>
            Gets or sets if the document can be edited by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Security.AllowCopy">
            <summary>
            Gets or sets if text and images can be copied to the clipboard by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Security.AllowUpdateAnnotsAndFields">
            <summary>
            Gets or sets if annotations and form fields can be added, edited
            and modified by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Security.Filler">
            <summary>
            Gets the byte array specified by Adobe to use as a filler for passwords.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes128Security.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.Aes128Security"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes128Security.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.Aes128Security"/> class.
            </summary>
            <param name="ownerPassword">The owner password to open the document.</param>
            <param name="userPassword">The user password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes128Security.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.Aes128Security"/> class.
            </summary>
            <param name="password">The owner password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes128Security.GetEncrypter(System.Byte[])">
            <summary>
            Gets a 128 bit <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object to be used for encrypting the document.
            </summary>
            <param name="id">ID of the current PDF document.</param>
            <returns>An <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes128Security.Draw(ceTe.DynamicPDF.IO.DocumentWriter,ceTe.DynamicPDF.IO.Encrypter)">
            <summary>
            Draws the encrypter dictionary to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
            <param name="encrypter"><see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object used to encrypt the document.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes128Security.AllowFormFilling">
            <summary>
            Gets or sets if form filling should be allowed by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes128Security.AllowAccessibility">
            <summary>
            Gets or sets if accessibility programs should be able to read
            the documents text and images for the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes128Security.AllowDocumentAssembly">
            <summary>
            Gets or sets if the document can be assembled and manipulated by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes128Security.AllowHighResolutionPrinting">
            <summary>
            Gets or sets if the document can be printed at a high resolution by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes128Security.DocumentComponents">
             <summary>
             Gets or sets the documents components to be encrypted.
             </summary>
            ^Aes128Security.Example2
        </member>
        <member name="T:ceTe.DynamicPDF.Cryptography.Aes256Security">
             <summary>
             Represents AES 256 bit PDF document security.
             </summary>
             <remarks>
             AES 256 bit PDF security is compatible with PDF version 1.5 and higher.
             This class is FIPS compliant when used in applications that targets .NET Framework 3.5 and higher.
             Setting document’s PDF version to 1.4 or lower will throw an exception during the creation of PDF.
             Adobe Acrobat Reader version X or higher is needed to open documents encrypted with this class. For more details on AES 256 bit security take a look at the <a href="Security.html">Security</a> topic.
             </remarks>
            ^Aes256Security.Example1
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes256Security.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.Aes256Security"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes256Security.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.Aes256Security"/> class.
            </summary>
            <param name="ownerPassword">The owner password to open the document.</param>
            <param name="userPassword">The user password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes256Security.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.Aes256Security"/> class.
            </summary>
            <param name="password">The owner password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes256Security.GetEncrypter(System.Byte[])">
            <summary>
            Gets a 256 bit <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object to be used for encrypting the document.
            </summary>
            <param name="id">ID of the current PDF document.</param>
            <returns>An <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.Aes256Security.Draw(ceTe.DynamicPDF.IO.DocumentWriter,ceTe.DynamicPDF.IO.Encrypter)">
            <summary>
            Draws the encrypter dictionary to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
            <param name="encrypter"><see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object used to encrypt the document.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes256Security.AllowFormFilling">
            <summary>
            Gets or sets if form filling should be allowed by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes256Security.AllowAccessibility">
            <summary>
            Gets or sets if accessibility programs should be able to read
            the documents text and images for the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes256Security.AllowDocumentAssembly">
            <summary>
            Gets or sets if the document can be assembled and manipulated by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes256Security.AllowHighResolutionPrinting">
            <summary>
            Gets or sets if the document can be printed at a high resolution by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.Aes256Security.DocumentComponents">
             <summary>
             Gets or sets the documents components to be encrypted.
             </summary>
            ^Aes256Security.Example2
        </member>
        <member name="T:ceTe.DynamicPDF.Annotation">
             <summary>
             Represents an annotation resource.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.Resource">
             <summary>
             Base class from which all resources are derived.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Resource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Resource"/> class using the next UID.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Resource.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Resource"/> class.
            </summary>
            <param name="uid"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.Resource.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the resource to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the resource's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Resource.NewUid">
            <summary>
            Generates a new unique ID for a resource.
            </summary>
            <returns>The generated unique ID.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Resource.Uid">
            <summary>
            Gets the unique ID of the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resource.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resource.ResourceType">
            <summary>
            Gets the type of resource.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Annotation.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.IAnnotation)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Annotation"/> class.
            </summary>
            <param name="left">The left X coordinate of the annotation.</param>
            <param name="top">The top Y coordinate of the annotation.</param>
            <param name="right">The right X coordinate of the annotation.</param>
            <param name="bottom">The bottom Y coordinate of the annotation.</param>
            <param name="iAnnotation">The iAnnotaion for the annotation.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Annotation.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the annotation to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the annotation's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Annotation.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Annotation.ResourceType">
            <summary>
             Gets the type of resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Annotation.Left">
            <summary>
            Gets or sets the left X coordinate of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Annotation.Right">
            <summary>
            Gets or sets the right X coordinate of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Annotation.Top">
            <summary>
            Gets or sets the top Y coordinate of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Annotation.Bottom">
            <summary>
            Gets or sets the bottom Y coordinate of the annotation.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AreaDimensions">
             <summary>
             Base class representing the dimensions of an area.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.AreaDimensions.GetPdfY(System.Single)">
            <summary>
            Gets the translated Y coordinate.
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.AreaDimensions.GetPdfY(System.Single,ceTe.DynamicPDF.PageElements.RelativeTo,System.Boolean)">
            <summary>
            Gets the translated Y coordinate.
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <param name="relativeTo"></param>
            <param name="ignoreMargins"></param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.AreaDimensions.GetPdfX(System.Single)">
            <summary>
            Gets the translated X coordinate.
            </summary>
            <param name="x">X coordinate to translate.</param>
            <returns>A translated X coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.AreaDimensions.GetPdfX(System.Single,ceTe.DynamicPDF.PageElements.RelativeTo,System.Boolean)">
            <summary>
            Gets the translated X coordinate.
            </summary>
            <param name="x">X coordinate to translate.</param>
            <param name="relativeTo"></param>
            <param name="ignoreMargins"></param>
            <returns>A translated X coordinate.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.Body">
            <summary>
            Represents the dimensions of the areas body.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.Edge">
            <summary>
            Represents the dimensions of the areas edge.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.Width">
            <summary>
            Gets or sets the width of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.Height">
            <summary>
            Gets or sets the height of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.LeftMargin">
            <summary>
            Gets or sets the left margin of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.TopMargin">
            <summary>
            Gets or sets the top margin of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.RightMargin">
            <summary>
            Gets or sets the right margin of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AreaDimensions.BottomMargin">
            <summary>
            Gets or sets the bottom margin of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Artifact">
             <summary>
             Represents an artifact.
             </summary>
            ^Artifact
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.Tag">
             <summary>
             Base class from which tag classes are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TagType">
            <summary>
            Gets the tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Annotation">
            <summary>
            Gets the structure element of tag type annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Article">
            <summary>
            Gets the structure element of tag type article.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.BibliographyEntry">
            <summary>
            Gets the structure element of tag type bibliography entry.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.BlockQuotation">
            <summary>
            Gets the structure element of tag type block quotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Caption">
            <summary>
            Gets the structure element of tag type caption.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Code">
            <summary>
            Gets the structure element of tag type code.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Division">
            <summary>
            Gets the structure element of tag type division.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Document">
            <summary>
            Gets the structure element of tag type document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Figure">
            <summary>
            Gets the structure element of tag type figure.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Form">
            <summary>
            Gets the structure element of tag type form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Formula">
            <summary>
            Gets the structure element of tag type formula.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Heading">
            <summary>
            Gets the structure element of tag type heading.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.HeadingLevel1">
            <summary>
            Gets the structure element of tag type heading level 1.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.HeadingLevel2">
            <summary>
            Gets the structure element of tag type heading level 2.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.HeadingLevel3">
            <summary>
            Gets the structure element of tag type heading level 3.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.HeadingLevel4">
            <summary>
            Gets the structure element of tag type heading level 4.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.HeadingLevel5">
            <summary>
            Gets the structure element of tag type heading level 5.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.HeadingLevel6">
            <summary>
            Gets the structure element of tag type heading level 6.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Index">
            <summary>
            Gets the structure element of tag type index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.List">
            <summary>
            Gets the structure element of tag type list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Label">
            <summary>
            Gets the structure element of tag type label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.ListBody">
            <summary>
            Gets the structure element of tag type list body.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.ListItem">
            <summary>
            Gets the structure element of tag type list item.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Link">
            <summary>
            Gets the structure element of tag type link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.NonStructuralElement">
            <summary>
            Gets the structure element of tag type nonstructural element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Note">
            <summary>
            Gets the structure element of tag type note.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Paragraph">
            <summary>
            Gets the structure element of tag type paragraph.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Part">
            <summary>
            Gets the structure element of tag type part.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Private">
            <summary>
            Gets the structure element of tag type private.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Quotation">
            <summary>
            Gets the structure element of tag type quotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Reference">
            <summary>
            Gets the structure element of tag type reference.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Ruby">
            <summary>
            Gets the structure element of tag type ruby.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Section">
            <summary>
            Gets the structure element of tag type section.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Span">
            <summary>
            Gets the structure element of tag type span.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Table">
            <summary>
            Gets the structure element of tag type table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableBodyRowGroup">
            <summary>
            Gets the structure element of tag type table body row group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableDataCell">
            <summary>
            Gets the structure element of table data cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableFooterRowGroup">
            <summary>
            Gets the structure element of tag type table footer row group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableHeader">
            <summary>
            Gets the structure element of tag type table header.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableHeaderRowGroup">
            <summary>
            Gets the structure element of tag type table header row group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableOfContent">
            <summary>
            Gets the structure element of tag type table of content.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableOfContentItem">
            <summary>
            Gets the structure element of tag type table of content item.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.TableRow">
            <summary>
            Gets the structure element of tag type table row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Warichu">
            <summary>
            Gets the structure element of tag type Warichu.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Tag.Artifact">
            <summary>
            Gets the artifact.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Artifact"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.#ctor(ceTe.DynamicPDF.BoundingBox)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Artifact"/> class.
            </summary>
            <param name="bBox">Bounding box of the artifact.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.#ctor(ceTe.DynamicPDF.ArtifactType,ceTe.DynamicPDF.Attached)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Artifact"/> class.
            </summary>
            <param name="type">Type of artifact.</param>
            <param name="attached">A value indicating to which the artifact is logically attached.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.#ctor(ceTe.DynamicPDF.ArtifactType,ceTe.DynamicPDF.SubType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Artifact"/> class.
            </summary>
            <param name="type">Type of artifact.</param>
            <param name="subType">Sub type of the artifact.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.#ctor(ceTe.DynamicPDF.ArtifactType,ceTe.DynamicPDF.Attached,ceTe.DynamicPDF.SubType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Artifact"/> class.
            </summary>
            <param name="type">Type of artifact.</param>
            <param name="attached">A value indicating to which the artifact is logically attached.</param>
            <param name="subType">Sub type of the artifact.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.#ctor(ceTe.DynamicPDF.ArtifactType,ceTe.DynamicPDF.BoundingBox,ceTe.DynamicPDF.Attached,ceTe.DynamicPDF.SubType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Artifact"/> class.
            </summary>
            <param name="type">Type of artifact.</param>
            <param name="bBox">Bounding box of the artifact.</param>
            <param name="attached">A value indicating to which the artifact is logically attached.</param>
            <param name="subType">Sub type of the artifact.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.SetType(ceTe.DynamicPDF.ArtifactType)">
            <summary>
            Sets a <see cref="T:ceTe.DynamicPDF.ArtifactType"/> to the <see cref="T:ceTe.DynamicPDF.Artifact"/>.
            </summary>
            <param name="type"> value of <see cref="T:System.Type"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.SetBoundingBox(ceTe.DynamicPDF.BoundingBox)">
            <summary>
            Sets a <see cref="T:ceTe.DynamicPDF.BoundingBox"/> to the <see cref="T:ceTe.DynamicPDF.Artifact"/>.
            </summary>
            <param name="boundingBox"> value of <see cref="T:ceTe.DynamicPDF.BoundingBox"/></param>     
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.SetBoundingBox">
            <summary>
            Sets a  <see cref="T:ceTe.DynamicPDF.BoundingBox"/> <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.Artifact"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.SetAttached(ceTe.DynamicPDF.Attached)">
            <summary>
            Sets a <see cref="T:ceTe.DynamicPDF.Attached"/> to the <see cref="T:ceTe.DynamicPDF.Artifact"/>.
            </summary>
            <param name="attached"> value of <see cref="T:ceTe.DynamicPDF.Attached"/></param>  
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.SetSubType(ceTe.DynamicPDF.SubType)">
            <summary>
            Sets a <see cref="T:ceTe.DynamicPDF.SubType"/> to the <see cref="T:ceTe.DynamicPDF.Artifact"/>.
            </summary>
            <param name="subType"> value of <see cref="T:ceTe.DynamicPDF.SubType"/></param>  
        </member>
        <member name="M:ceTe.DynamicPDF.Artifact.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the artifact to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the artifact output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Artifact.TagType">
            <summary>
            Gets a value indicating artifact tag
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Attached">
             <summary>
             Represents an attached
             </summary>
            ^Attached
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Attached.#ctor(ceTe.DynamicPDF.Edge)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Attached"/> class.
            </summary>
            <param name="value">Value of the edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Attached.#ctor(ceTe.DynamicPDF.Edge,ceTe.DynamicPDF.Edge)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Attached"/> class.
            </summary>
            <param name="value1">Value of the edge.</param>
            <param name="value2">Value of the edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Attached.#ctor(ceTe.DynamicPDF.Edge,ceTe.DynamicPDF.Edge,ceTe.DynamicPDF.Edge)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Attached"/> class.
            </summary>
            <param name="value1">Value of the edge.</param>
            <param name="value2">Value of the edge.</param>
            <param name="value3">Value of the edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Attached.#ctor(ceTe.DynamicPDF.Edge,ceTe.DynamicPDF.Edge,ceTe.DynamicPDF.Edge,ceTe.DynamicPDF.Edge)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Attached"/> class.
            </summary>
            <param name="value1">Value of the edge.</param>
            <param name="value2">Value of the edge.</param>
            <param name="value3">Value of the edge.</param>
            <param name="value4">Value of the edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Attached.SetEdge(ceTe.DynamicPDF.Edge)">
            <summary>
            Sets the value to the edge.
            </summary>
            <param name="value">Value of the edge.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.AttributeClass">
             <summary>
             Represents a attribute class.
             </summary>
            ^AttributeClass
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeClass.#ctor(System.String)">
            <summary>
            Initializes a new instance of the attribute class.
            </summary>
            <param name="attributeClassName">Name of the attribute class.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.AttributeClass.AttributeObjects">
            <summary>
            Gets the collection of attribute objects.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AttributeClassList">
             <summary>
             Represents a AttributeClassList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeClassList.Add(ceTe.DynamicPDF.AttributeClass)">
            <summary>
            Adds attribute class to the attribute class list .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AttributeClassList.Item(System.Int32)">
            <summary>
            Gets the attribute class at the given index .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AttributeClassList.Count">
            <summary>
            Gets the no of attribute classes in the Attribute class List .
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AttributeObject">
             <summary>
             Represents an attribute object.
             </summary>
            ^AttributeObject
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.AttributeType">
             <summary>
             Represents an attribute type.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.AttributeType.Owner">
            <summary>
            Gets the attribute owner.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.#ctor(ceTe.DynamicPDF.AttributeOwner)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> class.
            </summary>
            <param name="attributeOwner">Owner of the attribute object.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetPlacement">
            <summary>
            Sets a placement <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetPlacement(ceTe.DynamicPDF.Placement)">
            <summary>
            Sets a placement <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="placement"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetWritingMode">
            <summary>
            Sets a writing mode <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetWritingMode(ceTe.DynamicPDF.WritingMode)">
            <summary>
            Sets a writing mode <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="attributeValue"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBackgroundColor">
            <summary>
            Sets a background color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBackgroundColor(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Sets a background color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="rgbColor"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBackgroundColor(System.Single,System.Single,System.Single)">
            <summary>
            Sets a background color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="red">The red intensity.</param>
            <param name="green">The green intensity.</param>
            <param name="blue">The blue intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderColor">
            <summary>
            Sets a border color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderColor(System.Single,System.Single,System.Single)">
            <summary>
            Sets a border color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="red">The red intensity.</param>
            <param name="green">The green intensity.</param>
            <param name="blue">The blue intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderColor(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Sets a border color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="rgbColor"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderColor(ceTe.DynamicPDF.RgbColor,ceTe.DynamicPDF.RgbColor,ceTe.DynamicPDF.RgbColor,ceTe.DynamicPDF.RgbColor)">
            <summary>
            Sets a border color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="beforeEdge">The before edge color of the border.</param>
            <param name="afterEdge">The after edge color of the border.</param>
            <param name="startEdge">The start edge color of the border.</param>
            <param name="endEdge">The end edge color of the border.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderStyle">
            <summary>
            Sets a border style <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderStyle(ceTe.DynamicPDF.BorderStyleAttribute)">
            <summary>
            Sets a border style <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="allEdgesValue">Value of the Borde style <see cref="T:ceTe.DynamicPDF.Attribute"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderStyle(ceTe.DynamicPDF.BorderStyleAttribute,ceTe.DynamicPDF.BorderStyleAttribute,ceTe.DynamicPDF.BorderStyleAttribute,ceTe.DynamicPDF.BorderStyleAttribute)">
            <summary>
            Sets a border style <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="beforeEdge">The before edge border style of the border</param>
            <param name="afterEdge">The after edge border style of the border</param>
            <param name="startEdge">The start edge border style of the border</param>
            <param name="endEdge">The end edge border style of the border</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderThickness">
            <summary>
            Sets a border thickness <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderThickness(System.Single)">
            <summary>
            Sets a border thickness <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="allEdgesValue"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBorderThickness(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets a border thickness <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="beforeEdge">Value of the before edge.</param>
            <param name="afterEdge">Value of the after edge.</param>
            <param name="startEdge">Value of the start edge.</param>
            <param name="endEdge">Value of the end edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColor">
            <summary>
            Sets a  color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColor(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Sets a  color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="rgbColor"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColor(System.Single,System.Single,System.Single)">
            <summary>
            Sets a  color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="red">The red intensity.</param>
            <param name="green">The green intensity.</param>
            <param name="blue">The blue intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetPadding">
            <summary>
            Sets a padding <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetPadding(System.Single)">
            <summary>
            Sets a padding <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="allEdges"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetPadding(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets a padding <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="beforeEdge">Value of the before edge.</param>
            <param name="afterEdge">Value of the after edge.</param>
            <param name="startEdge">Value of the start edge.</param>
            <param name="endEdge">Value of the end edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetSpaceBefore">
            <summary>
            Sets a space before <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetSpaceBefore(System.Single)">
            <summary>
            Sets a space before <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="spaceBefore"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetSpaceAfter">
            <summary>
            Sets a space after <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetSpaceAfter(System.Single)">
            <summary>
            Sets a space after <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="spaceAfter"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetStartIndent">
            <summary>
            Sets a start indent <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetStartIndent(System.Single)">
            <summary>
            Sets a start indent <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="startIndent"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetEndIndent">
            <summary>
            Sets a end indent <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetEndIndent(System.Single)">
            <summary>
            Sets a end indent <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="endIndent"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextIndent">
            <summary>
            Sets a text indent <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextIndent(System.Single)">
            <summary>
            Sets a text indent <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="textIndent"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextAlign">
            <summary>
            Sets a text align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextAlign(ceTe.DynamicPDF.TextAlignAttribute)">
            <summary>
            Sets a text align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="textAlign"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBoundingBox">
            <summary>
            Sets a bounding box <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBoundingBox(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets a bounding box <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="left"> Value of the left margin <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
            <param name="bottom"> Value of the bottom margin <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
            <param name="right"> Value of the right margin <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
            <param name="top"> Value of the top margin <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBoundingBox(ceTe.DynamicPDF.BoundingBox)">
            <summary>
            Sets a bounding box <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="bBox"> Value of the <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetWidth">
            <summary>
            Sets a width <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetAutoWidth">
            <summary>
            Sets a width <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with value auto.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetWidth(System.Single)">
            <summary>
            Sets a width <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="width"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetHeight">
            <summary>
            Sets a height <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetAutoHeight">
            <summary>
            Sets a height <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with value auto.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetHeight(System.Single)">
            <summary>
            Sets a height <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="height"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBlockAlign">
            <summary>
            Sets a block align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBlockAlign(ceTe.DynamicPDF.BlockAlign)">
            <summary>
            Sets a block align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="blockAlign"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetInlineAlign">
            <summary>
            Sets a inline align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetInlineAlign(ceTe.DynamicPDF.InlineAlign)">
            <summary>
            Sets a inline align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="inlineAlign"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTableCellBorderStyle">
            <summary>
            Sets a table cell border style <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTableCellBorderStyle(ceTe.DynamicPDF.BorderStyleAttribute)">
            <summary>
            Sets a table cell border style <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="tBorderStyle"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTableCellBorderStyle(ceTe.DynamicPDF.BorderStyleAttribute,ceTe.DynamicPDF.BorderStyleAttribute,ceTe.DynamicPDF.BorderStyleAttribute,ceTe.DynamicPDF.BorderStyleAttribute)">
            <summary>
            Sets a table cell border style <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="beforeEdge">Value of the before edge.</param>
            <param name="afterEdge">Value of the after edge.</param>
            <param name="startEdge">Value of the start edge.</param>
            <param name="endEdge">Value of the end edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTableCellPadding">
            <summary>
            Sets a table cell padding <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTableCellPadding(System.Single)">
            <summary>
            Sets a table cell padding <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="allEdges"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTableCellPadding(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets a table cell padding <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="beforeEdge">Value of the before edge.</param>
            <param name="afterEdge">Value of the after edge.</param>
            <param name="startEdge">Value of the start edge.</param>
            <param name="endEdge">Value of the end edge.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetLineHeight">
            <summary>
            Sets a line height<see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetLineHeight(ceTe.DynamicPDF.LineHeight)">
            <summary>
            Sets a line height <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="lineHeight"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetLineHeight(System.Single)">
            <summary>
            Sets a line height <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="lineHeight"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBaselineShift">
            <summary>
            Sets a baseline shift<see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetBaselineShift(System.Single)">
            <summary>
            Sets a  baseline shift<see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="baselineShift"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextDecorationType">
            <summary>
            Sets a text decoration type<see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextDecorationType(ceTe.DynamicPDF.TextDecorationType)">
            <summary>
            Sets a text decoration type<see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="textDecorationType"> value of  <see cref="T:ceTe.DynamicPDF.Attribute"/></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextDecorationColor">
            <summary>
            Sets a text decoration color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextDecorationColor(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Sets a  text decoration color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="rgbColor"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextDecorationColor(System.Single,System.Single,System.Single)">
            <summary>
            Sets a   text decoration color <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="red">The red intensity.</param>
            <param name="green">The green intensity.</param>
            <param name="blue">The blue intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextDecorationThickness">
            <summary>
            Sets a  text decoration thickness <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetTextDecorationThickness(System.Single)">
            <summary>
            Sets a  text decoration thickness <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="textDecorationThickness"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnCount">
            <summary>
            Sets a  column count <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnCount(System.Int32)">
            <summary>
            Sets a  column count <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="columnCount"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnWidths">
            <summary>
            Sets a  column widths <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnWidths(System.Single)">
            <summary>
            Sets a  column widths <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="columnWidths"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnWidths(System.Single[])">
            <summary>
            Sets a  column widths <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="columnWidths"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnGap">
            <summary>
            Sets a  column gap <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnGap(System.Single)">
            <summary>
            Sets a column gap <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="columnGap"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnGap(System.Single[])">
            <summary>
            Sets a column gap <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="columnGap"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetGlyphOrientationVertical">
            <summary>
            Sets a  glyph orientation vertical <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetAutoGlyphOrientationVertical">
            <summary>
            Sets a  glyph orientation vertical <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with value auto.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetAutoGlyphOrientationVertical(System.Int32)">
            <summary>
            Sets a  glyph orientation vertical <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> .
            </summary>
            <param name="angle"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetRubyAlign">
            <summary>
            Sets a  ruby align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetRubyAlign(ceTe.DynamicPDF.RubyAlign)">
            <summary>
            Sets a ruby align <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="rubyAlign"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetRubyPosition">
            <summary>
            Sets a  ruby position <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetRubyPosition(ceTe.DynamicPDF.RubyPosition)">
            <summary>
            Sets a ruby positon <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="rubyPosition"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetRole(ceTe.DynamicPDF.Role)">
            <summary>
            Sets a role <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="role"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetChecked">
            <summary>
            Sets a  checked <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetChecked(ceTe.DynamicPDF.Checked)">
            <summary>
            Sets a checked <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="checkedValue"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetDescription(System.String)">
            <summary>
            Sets a description <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="desc"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetListNumbering">
            <summary>
            Sets a  list numbering <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetListNumbering(ceTe.DynamicPDF.ListNumbering)">
            <summary>
            Sets a list numbering<see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="listNumbering"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetRowSpan">
            <summary>
            Sets a  row span <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetRowSpan(System.Int32)">
            <summary>
            Sets a row span <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="rowSpan"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnSpan">
            <summary>
            Sets a  column span <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetColumnSpan(System.Int32)">
            <summary>
            Sets a column span <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="colSpan"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetHeaders">
            <summary>
            Sets a  headers <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetHeaders(System.String[])">
            <summary>
            Sets a headers <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="headers"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetScope">
            <summary>
            Sets a  scope <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/> with default value.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetScope(ceTe.DynamicPDF.Scope)">
            <summary>
            Sets a scope <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="scope"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeObject.SetSummary(System.String)">
            <summary>
            Sets a summary <see cref="T:ceTe.DynamicPDF.Attribute"/> to the <see cref="T:ceTe.DynamicPDF.AttributeObject"/>.
            </summary>
            <param name="summary"> value of <see cref="T:ceTe.DynamicPDF.Attribute"/></param> 
        </member>
        <member name="P:ceTe.DynamicPDF.AttributeObject.Owner">
            <summary>
            Gets the owner of the attribute object.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AttributeOwner">
             <summary>
             Specifies the attribute owner. 
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.Layout">
            <summary>
            Layout. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.List">
            <summary>
            List. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.PrintField">
            <summary>
            PrintField. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.Table">
            <summary>
            Table. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.XML_1_00">
            <summary>
            XML version 1.00 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.HTML_3_20">
            <summary>
            HTML version 3.20
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.HTML_4_01">
            <summary>
            HTML version 4.01 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.OEB_1_00">
            <summary>
            OEB version 1.0 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.RTF_1_05">
            <summary>
            RTF version 1.05 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.CSS_1_00">
            <summary>
            CSS version 1.00 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.CSS_2_00">
            <summary>
            CSS version 2.00 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttributeOwner.UserProperties">
            <summary>
            UserProperties. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AttributeTypeList">
             <summary>
             Represents a AttributeTypeList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.AttributeTypeList.Add(ceTe.DynamicPDF.AttributeType)">
            <summary>
            Adds attribute type to the attribute type list .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AttributeTypeList.Item(System.Int32)">
            <summary>
            Gets the attribute type at the given index .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AttributeTypeList.Count">
            <summary>
            Gets the no of attribute types in the Attribute Type List .
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AutoGradient">
             <summary>
             Represents an automatically calculated gradient pattern.
             </summary>
             <remarks>See the <a href="Colors.html">Colors</a> topic for more on gradient patterns.<p/>
             <b>NOTE:</b> The X1, Y1, X2 and Y2 properties of this class will be automatically calculated. If these values are set, they will be overwritten.
             </remarks>
            ^AutoGradient
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.Gradient">
             <summary>
             Represents a gradient pattern.
             </summary>
             <remarks>See the <a href="Colors.html">Colors</a> topic for more on gradient patterns.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.Pattern">
             <summary>
             Represents the base class for all pattern colors are derived.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="T:ceTe.DynamicPDF.Color">
             <summary>
             Base class representing color.
             </summary>
             <remarks>Color's derived classes are: <see cref="T:ceTe.DynamicPDF.CmykColor"/>, <see cref="T:ceTe.DynamicPDF.Grayscale"/>, <see cref="T:ceTe.DynamicPDF.WebColor"/>, <see cref="T:ceTe.DynamicPDF.RgbColor"/>, <see cref="T:ceTe.DynamicPDF.Gradient"/> and <see cref="T:ceTe.DynamicPDF.SpotColor"/>.  See the <a href="Colors.html">Colors</a> topic for more on colors.</remarks>	
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Color.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Color"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Color.Equals(System.Object)">
            <summary>
            Tests equality of colors.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <b>Color</b>.</param>
            <returns><b>true</b> if the two colors are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Color.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <b>Color</b>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Color.DrawStroke(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>PageWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Color.DrawStroke(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <b>OperatorWriter</b> object.
            </summary>
            <param name="writer"><b>OperatorWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Color.DrawFill(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>PageWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Color.DrawFill(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <b>OperatorWriter</b> object.
            </summary>
            <param name="writer"><b>OperatorWriter</b> object to receive the color data.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Color.ColorSpace">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Pattern.ColorSpace">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.RgbColor,ceTe.DynamicPDF.RgbColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Gradient"/> class.
            </summary>
            <param name="x1">X coordinate of the first color.</param>
            <param name="y1">Y coordinate of the first color.</param>
            <param name="x2">X coordinate of the second color.</param>
            <param name="y2">Y coordinate of the second color.</param>
            <param name="color1">First RGB color.</param>
            <param name="color2">Second RGB color.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.CmykColor,ceTe.DynamicPDF.CmykColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Gradient"/> class.
            </summary>
            <param name="x1">X coordinate of the first color.</param>
            <param name="y1">Y coordinate of the first color.</param>
            <param name="x2">X coordinate of the second color.</param>
            <param name="y2">Y coordinate of the second color.</param>
            <param name="color1">First CMYK color.</param>
            <param name="color2">Second CMYK color.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Grayscale,ceTe.DynamicPDF.Grayscale)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Gradient"/> class.
            </summary>
            <param name="x1">X coordinate of the first color.</param>
            <param name="y1">Y coordinate of the first color.</param>
            <param name="x2">X coordinate of the second color.</param>
            <param name="y2">Y coordinate of the second color.</param>
            <param name="color1">First Grayscale color.</param>
            <param name="color2">Second Grayscale color.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.Equals(System.Object)">
            <summary>
            Tests equality of colors.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <b>Color</b>.</param>
            <returns><b>true</b> if the two colors are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.Color"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.DrawStroke(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.DrawFill(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Gradient.GetResource(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Gets the resource for the gradient.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the gradient color data.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Resource"/> used for the gradient.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Gradient.X1">
            <summary>
            Gets or sets the X coordinate of the first color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Gradient.Y1">
            <summary>
            Gets or sets the Y coordinate of the first color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Gradient.X2">
            <summary>
            Gets or sets the X coordinate of the second color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Gradient.Y2">
            <summary>
            Gets or sets the Y coordinate of the second color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Gradient.Color1">
            <summary>
            Gets the first color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Gradient.Color2">
            <summary>
            Gets the second color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Gradient.ColorSpace">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoGradient.#ctor(System.Single,ceTe.DynamicPDF.RgbColor,ceTe.DynamicPDF.RgbColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoGradient"/> class.
            </summary>
            <param name="angle">Angle of the AutoGradient.</param>
            <param name="color1">First RGB color.</param>
            <param name="color2">Second RGB color.</param>
            <remarks><b>NOTE:</b> The X1, Y1, X2 and Y2 properties of this class will be automatically calculated. If these values are set, they will be overwritten.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoGradient.#ctor(System.Single,ceTe.DynamicPDF.CmykColor,ceTe.DynamicPDF.CmykColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoGradient"/> class.
            </summary>
            <param name="angle">Angle of the AutoGradient.</param>&gt;
            <param name="color1">First CMYK color.</param>
            <param name="color2">Second CMYK color.</param>
            <remarks><b>NOTE:</b> The X1, Y1, X2 and Y2 properties of this class will be automatically calculated. If these values are set, they will be overwritten.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoGradient.#ctor(System.Single,ceTe.DynamicPDF.Grayscale,ceTe.DynamicPDF.Grayscale)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoGradient"/> class.
            </summary>
            <param name="angle">Angle of the AutoGradient.</param>
            <param name="color1">First Grayscale color.</param>
            <param name="color2">Second Grayscale color.</param>
            <remarks><b>NOTE:</b> The X1, Y1, X2 and Y2 properties of this class will be automatically calculated. If these values are set, they will be overwritten.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoGradient.DrawFill(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoGradient.DrawStroke(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the color data.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoGradient.Angle">
            <summary>
            Gets or sets the angle of the Gradient.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.BlendMode">
            <summary>
            The type of blending to use.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Normal">
            <summary>
            Normal blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Multiply">
            <summary>
            Multiply blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Screen">
            <summary>
            Screen blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Overlay">
            <summary>
            Overlay blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Darken">
            <summary>
            Darken blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Lighten">
            <summary>
            Lighten blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.ColorDodge">
            <summary>
            Color Dodge blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.ColorBurn">
            <summary>
            Color Burn blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.HardLight">
            <summary>
            Hard Light blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.SoftLight">
            <summary>
            Soft Light blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Difference">
            <summary>
            Difference blending.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlendMode.Exclusion">
            <summary>
            Exclusion blending.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.BoundingBox">
             <summary>
             Represents a bounding box.
             </summary>
            ^BoundingBox
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.BoundingBox.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.BoundingBox"/> class.
            </summary>
            <param name="left">The left edge of the bounding box.</param>
            <param name="bottom">The bottom edge of the bounding box.</param>
            <param name="right">The right edge of the bounding box.</param>
            <param name="top">The top edge of the bounding box.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.BoundingBox.#ctor(ceTe.DynamicPDF.Page,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.BoundingBox"/> class.
            </summary>
            <param name="page">page of the document.</param>
            <param name="x">X coordinate of the page element.</param>
            <param name="y">Y coordinate of the page element.</param>
            <param name="width">width  of the page element.</param>
            <param name="height">height  of the page element.</param>
            <param name="angle">angle of the page element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.BoundingBox.SetBBox(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the bounding box.
            </summary>
            <param name="left">The left edge of the bounding box.</param>
            <param name="bottom">The bottom edge of the bounding box.</param>
            <param name="right">The right edge of the bounding box.</param>
            <param name="top">The top edge of the bounding box.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Certificate">
             <summary>
             Represents a digital certificate.
             </summary>
             <remarks>
             <font color="red"><b>NOTE:</b> This class requires the .NET Framework 2.0 or greater  and it is not available for .NET standard</font><p/>
             </remarks>
            ^Certificate
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Certificate.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Initializes a new instance of a Certificate from an X509Certificate2 certificate class.
            </summary>
            <remarks>
            <font color="red"><b>NOTE:</b> This class requires the .NET Framework 2.0 or greater.</font><p/>
            </remarks>
            <param name="certificate">A digital certificate with private key.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Certificate.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of a Certificate from the given file.
            </summary>
            <remarks>
            <font color="red"><b>NOTE:</b> This class requires the .NET Framework 2.0 or greater.</font><p/>
            </remarks>
            <param name="certificatePath">Physical file path to a digital certificate with private key.</param>
            <param name="password">Password for the certificate.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Certificate.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of a Certificate from the given data.
            </summary>
            <remarks>
            <font color="red"><b>NOTE:</b> This class requires the .NET Framework 2.0 or greater.</font><p/>
            </remarks>
            <param name="certificateData">Byte array containing the digital certificate with private key.</param>
            <param name="password">Password for the certificate.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Certificate.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
            <summary>
            Initializes a new instance of a Certificate from the certificate store.
            </summary>
            <remarks>
            <font color="red"><b>NOTE:</b> This class requires the .NET Framework 2.0 or greater.</font><p/>
            </remarks>
            <param name="storeName">Store name where the certificate resides.</param>
            <param name="storeLocation">Value of type <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation"/></param>
            <param name="certificateSubject">A portion or full subject string corresponds to fetch the certificate from store.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Certificate.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation,System.String)">
            <summary>
            Initializes a new instance of a Certificate from the certificate store.
            </summary>
            <remarks>
            <font color="red"><b>NOTE:</b> This class requires the .NET Framework 2.0 or greater.</font><p/>
            </remarks>
            <param name="storeName">Value of type <see cref="T:System.Security.Cryptography.X509Certificates.StoreName"/></param>
            <param name="storeLocation">Value of type <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation"/></param>
            <param name="certificateSubject">A portion or full subject string corresponds to fetch the certificate from store.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Certificate.#ctor(System.String)">
            <summary>
            Initializes a new instance of a Certificate from the certificate store.
            </summary>
            <param name="certificateSubject">A portion or full subject string corresponds to fetch the certificate from store.</param>
            <remarks>
            <font color="red"><b>NOTE:</b> This class requires the .NET Framework 2.0 or greater.</font><p/>
            Default certificate store will be used.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Certificate.IncludeWholeChain">
            <summary>
            Specifies how much of the X.509 certificate chain should be included in the signed data.
            Default value is true. If it is false, include option will be EndCertOnly.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Certificate.SubjectName">
            <summary>
            Gets the subject name of the certificate loaded.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Certificate.Subject">
            <summary>
            Gets the complete subject string from the certificate loaded.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Certificate.Issuer">
            <summary>
            Gets the complete issuer string from the certificate loaded.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Certificate.TimestampServerUrl">
            <summary>
            Get the Timestamp Server Url from the certificate loaded.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Certificate.SignSilently">
            <summary>
            Gets or sets to prompt for the selection of a signing Certificate.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Certificate.SignatureType">
            <summary>
            Gets or sets type of signature.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.CertifyingPermission">
            <summary>
            Specifies the Permission to Certify the document that specifies options such as allow changes, allow form filing etc.
            </summary>
            <remarks><font color="red">This enum is not available for .NET standard.</font></remarks>
        </member>
        <member name="F:ceTe.DynamicPDF.CertifyingPermission.NoChangesAllowed">
            <summary>
            No changes to the Document are permitted.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CertifyingPermission.AllowFormFilling">
            <summary>
            Permitted changes include filling in forms, instantiating page templates, and signing; other changes invalidate the signature.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CertifyingPermission.AllowFormFillingAndAnnotation">
            <summary>
            Permitted changes include filling in forms, instantiating page templates, signing, annotation creation, deletion, and modification; other changes invalidate the signature
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Cryptography.EncryptDocumentComponents">
            <summary>
            Specifies the document components to be encrypted. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Cryptography.EncryptDocumentComponents.All">
            <summary>
            Encrypts all document contents.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Cryptography.EncryptDocumentComponents.AllExceptMetadata">
            <summary>
            Encrypts all document contents except metadata.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Cryptography.EncryptDocumentComponents.OnlyFileAttachments">
            <summary>
            Encrypts only file attachments.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.CustomPropertyList">
             <summary>
             Represent document custom property list.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.CustomPropertyList.Add(System.String,System.String)">
            <summary>
            Adds custom properties to the document custom property list.
            </summary>
            <param name="name">Name of the property. </param>
            <param name="value">Value of the property. </param>
        </member>
        <member name="T:ceTe.DynamicPDF.DocumentReaderEvents">
             <summary>
             Represents document reader events.
             </summary>
            ^DocumentReaderEvents
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentReaderEvents.WillClose">
            <summary>
            Gets or sets document will close event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentReaderEvents.WillSave">
            <summary>
            Gets or sets document will save event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentReaderEvents.DidSave">
            <summary>
            Gets or sets document did save event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentReaderEvents.WillPrint">
            <summary>
            Gets or sets document will print event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentReaderEvents.DidPrint">
            <summary>
            Gets or sets document did print event actions.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.FileLaunchMode">
            <summary>
            Represents file opening mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.FileLaunchMode.NewWindow">
            <summary>
            The file will be opened in new window.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.FileLaunchMode.ExistingWindow">
            <summary>
            The file will be opened in existing window.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.FileLaunchMode.UserPreference">
            <summary>
            The file will be opened based on user preference. This is the default.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.FileOpenAction">
             <summary>
             Represents a file open action.
             </summary>
            ^FileOpenAction
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.FileOpenAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the file open action class.
            </summary>
            <param name="filePath">The path of the open file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.FileOpenAction.#ctor(System.String,ceTe.DynamicPDF.FileLaunchMode)">
            <summary>
            Initializes a new instance of the file open action class.
            </summary>
            <param name="filePath">The path of the open file.</param>
            <param name="mode">The file open mode.</param> 
        </member>
        <member name="M:ceTe.DynamicPDF.FileOpenAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormOutput">
             <summary>
             Specifies output options for the form fields.
             </summary>
            ^Lic.Merger.Pro.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormOutput.Flatten">
            <summary>
            Form fields will be flattened.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormOutput.Remove">
            <summary>
            Form fields will be removed.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormOutput.Retain">
            <summary>
            Form fields will be retained.
            </summary>
            <remarks>
            Default option.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormFieldOutput">
             <summary>
             Specifies output options for the form field.
             </summary>
            ^Lic.Merger.Pro.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldOutput.Flatten">
            <summary>
            The field will be flattened.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldOutput.Remove">
            <summary>
            The field will be removed.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldOutput.Retain">
            <summary>
            The field will be retained.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldOutput.Inherit">
            <summary>
            Field's output will depend on the document's form level output settings.
            </summary> 
            <remarks>
            Default option.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.GoToAction">
             <summary>
             Represents a goto action.
             </summary>
            ^GoToAction
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.GoToAction.#ctor(System.Int32,ceTe.DynamicPDF.PageZoom)">
            <summary>
            Initializes a new instance of the goto action class.
            </summary>
            <param name="pageNumber">Page number targeted by the destination.</param>
            <param name="zoom">Zoom used to display the destination.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.GoToAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.ImportFormDataAction">
             <summary>
             Represents an import form data action.
             </summary>
            ^ImportFormDataAction
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.ImportFormDataAction.#ctor">
            <summary>
            Initializes a new instance of the import form data action class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.ImportFormDataAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the import form data action class.
            </summary>
            <param name="filePath">Path of the FDF file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ImportFormDataAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.DocumentOptimization">
             <summary>
             Represents document optimization.
             </summary>
            ^DocumentOptimization
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentOptimization.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.DocumentOptimization"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentOptimization.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.DocumentOptimization"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentOptimization.Images">
            <summary>
            Gets or sets a Boolean value indicating whether the images need to be optimized in the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentOptimization.Fonts">
            <summary>
            Gets or sets a Boolean value indicating whether the fonts need to be optimized in the document.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.DocumentResourceList">
             <summary>
             Represents a collection of resources for a document.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentResourceList.Add(ceTe.DynamicPDF.Resource)">
            <summary>
            Adds a resource to the document.
            </summary>
            <param name="resource">The resource to add.</param>
            <returns>The PDF object number of the added resource.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentResourceList.AddUnique(ceTe.DynamicPDF.Resource)">
            <summary>
            Adds a unique resource to the document.
            </summary>
            <param name="resource">The resource to add.</param>
            <returns>The PDF object number of the added resource.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.DocumentResourceList.CurrentObjectNumber">
            <summary>
            Gets the current object number of the next resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Cryptography.RC440Security">
             <summary>
             Represents RC4 40 bit PDF document security.
             </summary>
             <remarks>
             RC4 40 bit PDF security is compatible with PDF version 1.1 and higher and can be read
             with Adobe Acrobat version 3 and higher. For more details on RC4 40 bit security take a look at the <a href="Security.html">Security</a> topic.
             </remarks>
            ^RC440Security
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC440Security.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.RC440Security"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC440Security.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.RC440Security"/> class.
            </summary>
            <param name="ownerPassword">The owner password to open the document.</param>
            <param name="userPassword">The user password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC440Security.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.RC440Security"/> class.
            </summary>
            <param name="password">The owner password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC440Security.GetEncrypter(System.Byte[])">
            <summary>
            Gets a 40 bit <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object to be used for encrypting the document.
            </summary>
            <param name="id">ID of the current PDF document.</param>
            <returns>An <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC440Security.Draw(ceTe.DynamicPDF.IO.DocumentWriter,ceTe.DynamicPDF.IO.Encrypter)">
            <summary>
            Draws the encrypter dictionary to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
            <param name="encrypter"><see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object used to encrypt the document.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Encrypter">
             <summary>
             Represents an Encrypter class used for encryption of the document.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Encrypter.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> class.
            </summary>
            <param name="owner">Encrypted owner password.</param>
            <param name="user">Encrypted user password.</param>
            <param name="encryptionKey">Encryption key.</param>
            <param name="privileges">PDF value of privileges.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Encrypter.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the encrypter dictionary to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Encrypter.Encrypt(System.Byte)">
            <summary>
            Encrypts the byte.
            </summary>
            <param name="data">Byte to encrypt.</param>
            <returns>An encrypted byte.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Encrypter.Encrypt(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encrypts the data found in the data byte array to the output stream.
            </summary>
            <param name="stream">The output stream to recieve the encrypted data.</param>
            <param name="data">Data to encrypt.</param>
            <param name="start">Start of the data to encrypt.</param>
            <param name="length">Length of the data to encrypt.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Encrypter.Encrypt(System.Byte[])">
            <summary>
            Encrypts the data found in the data byte array and returns the output.
            </summary>        
            <param name="data">Data to encrypt.</param>
            <returns>An encrypted byte array.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Encrypter.Reset(System.Int32)">
            <summary>
            Resets the encryptor.
            </summary>
            <param name="objectNumber"></param>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.DocumentWriter">
             <summary>
             Represents a writer class for a document.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.#ctor(ceTe.DynamicPDF.Document)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> class.
            </summary>
            <param name="document">The Document to be drawn.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.Draw">
            <summary>
            Initiates the actual drawing of the PDF .
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.GetObjectNumber">
            <summary>
            Gets the indirect object number of the current indirect object.
            </summary>
            <returns>Object number of current indirect object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.GetObjectNumber(System.Int32)">
            <summary>
            Gets the indirect object number of the current indirect object.
            </summary>
            <param name="offset">Offset from the current object.</param>
            <returns>Object number of current indirect object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.GetPageObject(System.Int32)">
            <summary>
            Returns the indirect object number for the given page.
            </summary>
            <param name="pageNumber">Page number in the document.</param>
            <returns>The indirect object number for the given page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.Write(System.Byte[])">
            <summary>
            Writes a byte array to the document.
            </summary>
            <param name="data">The byte array to output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.Write(System.Byte[],System.Int32)">
            <summary>
            Writes a portion of a byte array to the document.
            </summary>
            <param name="data">The byte array to output.</param>
            <param name="length">The length to output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a portion of a byte array to the document.
            </summary>
            <param name="data">The byte array to output.</param>
            <param name="start">The start index of source.</param>
            <param name="length">The length to output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteArrayOpen">
            <summary>
            Opens a PDF array on the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteArrayClose">
            <summary>
            Closes a PDF array on the document
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteBeginObject">
            <summary>
            Begins a PDF object on the document.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes a boolean value to the document.
            </summary>
            <param name="value">The boolean value to output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteDictionaryOpen">
            <summary>
            Opens a dictionary entry on the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteDictionaryClose">
            <summary>
            Closes a dictionary entry on the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteEndObject">
            <summary>
            Closes a PDF object on the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteName(System.String)">
            <summary>
            Writes a string to the document.
            </summary>
            <param name="name">String to output to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteName(System.Byte[])">
            <summary>
            Writes a byte array to the document.
            </summary>
            <param name="name">Byte array to output to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteName(System.Byte[],System.String)">
            <summary>
            Writes a byte array to the document.
            </summary>
            <param name="name">Byte array to output to the document.</param>
            <param name="nameSuffix">Suffix to output to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteName(System.Byte)">
            <summary>
            Writes a byte to the document.
            </summary>
            <param name="name">Byte to output to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteName(System.Byte,System.Int32)">
            <summary>
            Writes a byte to the document.
            </summary>
            <param name="nameCharacter">Byte to output to the document.</param>
            <param name="nameNumber">Integer to output to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteName(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a portion of the byte array to the document.
            </summary>
            <param name="name">Byte array to output to the document.</param>
            <param name="start">Start of the byte array to output.</param>
            <param name="length">Length of the byte array to output</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteReference(System.Int32)">
            <summary>
            Writes a resource reference to the document.
            </summary>
            <param name="objectNumber">Resource object number or page number to be written to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteReferenceShallow(System.Int32)">
            <summary>
            Writes a shallow resource reference to the document.
            </summary>
            <param name="objectNumber">Resource object number or page number to be written to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumber0">
            <summary>
            Writes the number 0 to the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumber1">
            <summary>
            Writes the number 1 to the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumberNeg1">
            <summary>
            Writes a negative 1 to the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumber(System.Int32)">
            <summary>
            Writes an <b>integer</b> to the document.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumber(System.Int16)">
            <summary>
            Writes a <b>short</b> to the document.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumber(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a number to the document.
            </summary>
            <param name="data">The byte array containing the number to be written.</param>
            <param name="start">Start of number.</param>
            <param name="length">Length of number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumber(System.Single)">
            <summary>
            Writes a <b>float</b> to the document.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNumberColor(System.Single)">
            <summary>
            Writes a color value to the document.
            </summary>
            <param name="value">Color value to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteNull">
            <summary>
            Writes a null value to the document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteStream(System.Byte[],System.Int32)">
            <summary>
            Writes a PDF stream object to the document.
            </summary>
            <param name="data">Byte array to output.</param>
            <param name="length">Length of output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteStream(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a PDF stream object to the document.
            </summary>
            <param name="data">Byte array to output.</param>
            <param name="start">Start of output.</param>
            <param name="length">Length of output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteStreamWithCompression(System.Byte[],System.Int32)">
            <summary>
            Writes a PDF stream object to the document.
            </summary>
            <param name="data">Byte array to output.</param>
            <param name="length">Length of output.</param>
            <returns>Size of stream after compression.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteText(System.String)">
            <summary>
            Writes a PDF text object to the document.
            </summary>
            <param name="text">The text of the text object to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteText(System.Byte[])">
            <summary>
            Writes a PDF text object to the document.
            </summary>
            <param name="text">The text of the text object to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteTextRawWithoutEncryption(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a raw PDF text object to the document without any encryption.
            </summary>
            <param name="text">The text of the text object to write.</param>
            <param name="startIndex">The start index of the supplied byte array.</param>
            <param name="count">The number of total bytes to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteTextWithoutEncryption(System.Byte[])">
            <summary>
            Writes a PDF text object to the document without any encryption.
            </summary>
            <param name="text">The text of the text object to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.ClearFontSubsetter">
            <summary>
            Clears the current font subsetter.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.SetFontSubsetter(ceTe.DynamicPDF.Text.IFontSubsettable)">
            <summary>
            Sets the current font subsetter.
            </summary>
            <param name="subsettableFont">Subsettable font to use for setting the current font subsetter.</param>
            <returns>The current font subsetter.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteReference(ceTe.DynamicPDF.Resource)">
            <summary>
            Writes a reference to the supplied resource to the document.
            </summary>
            <param name="resource">Resource to be written to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteReferenceUnique(ceTe.DynamicPDF.Resource)">
            <summary>
            Writes a unique reference to the supplied resource to the document.
            </summary>
            <param name="resource">Resource to be written to the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.DocumentWriter.WriteReferenceShallow(ceTe.DynamicPDF.Resource)">
            <summary>
            Writes a shallow reference to the supplied resource to the document.
            </summary>
            <param name="resource">Resource to be written to the document.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.DocumentWriter.Resources">
            <summary>
            Gets a resource list for the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.DocumentWriter.CurrentSection">
            <summary>
            Gets the current Section.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.DocumentWriter.Document">
            <summary>
            Gets the current document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.DocumentWriter.FontSubsetter">
            <summary>
            Gets the current font subsetter.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.DocumentWriter.CreationDate">
            <summary>
            Gets document creation time.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.DocumentWriter.ModifiedDate">
            <summary>
            Gets document modified time.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Attachment">
             <summary>
             Represents a Attachments present in PDFDocument
             </summary>
             <remarks>This class should be used when you want to get the attachment files present in an pdf document</remarks>
            ^Attachment 
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Attachment.GetData">
            <summary>
             Gets the Data of the Attachment Files.
            </summary>
            <returns>Contains the byte array of Attachment files</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Attachment.Filename">
            <summary>
            Gets the Filenames of the Attachment Files present in PDFDocument.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Attachment.MimeType">
            <summary>
            Gets the Filenames of the Attachment Files present in PDFDocument.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.SecurityInfo">
            <summary>
            Represents different types of the security.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SecurityInfo.RC440">
            <summary>
            RC4 40 bit security.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SecurityInfo.RC4128">
            <summary>
            RC4 128 bit security.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SecurityInfo.Aes128">
            <summary>
            AES 128 bit security.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SecurityInfo.Aes256">
            <summary>
            AES 256 bit security.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SecurityInfo.None">
            <summary>
            No security.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.SignatureFieldFlatteningOptions">
            <summary>
            Specifies the digital signature flattening options.
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font>Use <see cref="T:ceTe.DynamicPDF.Forms.FormFieldOutput"/> enum instead.</remarks>    
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SignatureFieldFlatteningOptions.Flatten">
            <summary>
            Digital signature fields will no longer be editable after merging.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SignatureFieldFlatteningOptions.Remove">
            <summary>
            All digital signature fields will be removed while flattening.
            </summary>
            <remarks>
            Default option.
            </remarks>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.SignatureFieldFlatteningOptions.Retain">
            <summary>
            Existing signature fields will be preserved.
            </summary>
            <remarks>
            New signed signature fields will remain valid.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.FormFlatteningOptions">
             <summary>
             Represents options for flattening form fields in the PDF documents.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font> Refer <see cref="P:ceTe.DynamicPDF.Forms.Form.Output"/> and <see cref="P:ceTe.DynamicPDF.Forms.Form.SignatureFieldsOutput"/> properties for more details.</remarks>
            ^FormFlatteningOptions 
            ^Lic.Merger.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.FormFlatteningOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.FormFlatteningOptions"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FormFlatteningOptions.DigitalSignatures">
            <summary>
            Gets or sets a value indicating digital signature flattening option.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FormFlatteningOptions.Default">
            <summary>
            Gets an instance of <see cref="T:ceTe.DynamicPDF.Merger.FormFlatteningOptions"/> with <see cref="P:ceTe.DynamicPDF.Merger.FormFlatteningOptions.DigitalSignatures"/> property set to remove.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FormFlatteningOptions.RetainDigitalSignatures">
            <summary>
            Gets an instance of <see cref="T:ceTe.DynamicPDF.Merger.FormFlatteningOptions"/> with <see cref="P:ceTe.DynamicPDF.Merger.FormFlatteningOptions.DigitalSignatures"/> property set to retain.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.EncryptionInfo">
            <summary>
            Represents security information of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.EncryptionInfo.SecurityInfo">
            <summary>
            Gets the security information of the PDF document. Returns the type of the security the PDF document has.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.EncryptionInfo.HasUserPassword">
            <summary>
            Gets the user password information of the PDF document. Returns true if the PDF document has document open password otherwise flase.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.EncryptionInfo.HasOwnerPassword">
            <summary>
            Gets the owner password information of the PDF document. Returns true if the PDF document has document modification/permission password otherwise flase.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.EmbeddedFile">
             <summary>
             Represents a PDF document's EmbeddedFile(attachment) entry.
             </summary>
            ^EmbeddedFile
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.EmbeddedFile.#ctor(System.Byte[],System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.EmbeddedFile"/> class.
            </summary>
            <param name="file">The byte array of the file need to be Embedded</param>
            <param name="fileName">Name of the File Embedded</param>
            <param name="modifiedDate">Last modified date of the file</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.EmbeddedFile.#ctor(System.IO.FileStream,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.EmbeddedFile"/> class.
            </summary>
            <param name="file">The FileStream of the file need to be Embedded</param>
            <param name="fileName">Name of the File Embedded</param>
            <param name="modifiedDate">Last modified date of the file</param>
        </member>
        <member name="M:ceTe.DynamicPDF.EmbeddedFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.EmbeddedFile"/> class.
            </summary>
            <param name="filePath">The physical path to the file need to be Embedded</param>
        </member>
        <member name="M:ceTe.DynamicPDF.EmbeddedFile.DrawReference(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws a reference to the EmbeddedFile indirect object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the EmbeddedFile indirect object.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.EmbeddedFile.FileName">
            <summary>
            Gets and Sets the FileName of the EmbeddedFile.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.EmbeddedFile.Relation">
            <summary>
            Gets or Sets the embedded file relation.
            </summary>
            <remarks><font color="red">NOTE:</font> This property is required for PDF/A-3a, PDF/A-3b and PDF/A-3u documents.</remarks> 
        </member>
        <member name="P:ceTe.DynamicPDF.EmbeddedFile.MimeType">
            <summary>
            Gets and Sets the mime type of the embedded file.
            </summary>
             <remarks><font color="red">NOTE:</font> This property is required for PDF/A-3a, PDF/A-3b and PDF/A-3u documents.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.EmbeddedFile.Description">
            <summary>
            Gets and Sets the description of the embedded file.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.OperatorWriter">
             <summary>
             Class represents the PDF operators.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetRelativeToState(ceTe.DynamicPDF.PageElements.RelativeTo,System.Boolean)">
            <summary>
            Assigns the relative position for placement of the page element on the page.
            </summary>
            <param name="relativeTo">Placement of the page element on the page</param>
            <param name="ignoreMargins">Setting false will consider the margin while placing the page element based on the RelativeTo property.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Do(ceTe.DynamicPDF.Resource)">
            <summary>
            Abstract method for writing "DO" operator to the page.
            </summary>
            <param name="xObject">Reference of type <see cref="T:ceTe.DynamicPDF.Resource"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsShift(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="width">The width of the area.</param>
            <param name="height">The height of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsSimpleRotate(System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="angle">The angle coordinate of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsSimpleRotate(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="xX">The XX value of the angle of the area.</param>
            <param name="xY">The XY value of the angle of the area.</param>
            <param name="yX">The YX value of the angle of the area.</param>
            <param name="yY">The YY value of the angle of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsRotate(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="width">The width of the area.</param>
            <param name="height">The height of the area.</param>
            <param name="angle">The angle coordinate of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsRotate(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="width">The width of the area.</param>
            <param name="height">The height of the area.</param>
            <param name="xX">The XX value of the angle of the area.</param>
            <param name="xY">The XY value of the angle of the area.</param>
            <param name="yX">The YX value of the angle of the area.</param>
            <param name="yY">The YY value of the angle of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsScale(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="width">The width of the area.</param>
            <param name="height">The height of the area.</param>
            <param name="scaleX">The x scale of the area.</param>
            <param name="scaleY">The y scale of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsTransform(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="width">The width of the area.</param>
            <param name="height">The height of the area.</param>
            <param name="angle">The angle coordinate of the area.</param>
            <param name="scaleX">The x scale of the area.</param>
            <param name="scaleY">The y scale of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetDimensionsTransform(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Transforms the coordinate space for the current area.
            </summary>
            <param name="x">The x coordinate of the area.</param>
            <param name="y">The y coordinate of the area.</param>
            <param name="width">The width of the area.</param>
            <param name="height">The height of the area.</param>
            <param name="xX">The XX value of the angle of the area.</param>
            <param name="xY">The XY value of the angle of the area.</param>
            <param name="yX">The YX value of the angle of the area.</param>
            <param name="yY">The YY value of the angle of the area.</param>
            <param name="scaleX">The x scale of the area.</param>
            <param name="scaleY">The y scale of the area.</param>
            <remarks>You must call <see cref="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions"/> once you are done using the transformed coordinate space.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.ResetDimensions">
            <summary>
            Resets the coordinate space for the current area.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_BT">
            <summary>
            Writes a PDF "BT" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_ET">
            <summary>
            Writes a PDF "ET" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_W">
            <summary>
            Writes a PDF "W" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Wx">
            <summary>
            Writes a PDF "W*" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tj_(System.Char[],System.Boolean)">
            <summary>
            Writes a PDF "Tj" operator to the page.
            </summary>
            <param name="text">The byte array of WINANSI text to draw.</param>
            <param name="rightToLeft">Specifies if the text is to be drawn right to left.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tj_(System.Char[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes a PDF "Tj" operator to the page.
            </summary>
            <param name="textArray">The byte array of WINANSI text to draw.</param>
            <param name="start">The start position of text.</param>
            <param name="length">The number of characters to draw.</param>
            <param name="rightToLeft">Specifies if the text is to be drawn right to left.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_TJ_Open">
            <summary>
            Opens array for writting TJ operator.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_TJ_Text(System.Char[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes the given text inside the TJ array. Required to open TJ array.
            </summary>
            <param name="text">Char array that need to write.</param>
            <param name="startIndex">Zero based offset denoting starting position of the text.</param>
            <param name="length">The number of characters to draw.</param>
            <param name="rightToLeft">Specifies if the text is to be drawn right to left.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_TJ_SpaceLength(System.Int32)">
            <summary>
            Writes Space length in between two chars.
            </summary>
            <param name="spaceLength">Space length in between two chars.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_TJ_Close">
            <summary>
            Closes the opened TJ array.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_TJ(System.Char[],System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            Writes a PDF "TJ" operator to the page.
            </summary>
            <param name="textArray">The byte array of WINANSI text to draw.</param>
            <param name="start">Start position of text.</param>
            <param name="length">The number of characters to draw.</param>
            <param name="wordSpacing">Word spacing to use when drawn.</param>
            <param name="rightToLeft">Specifies if the text is to be drawn right to left.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tc(System.Single)">
            <summary>
            Writes a PDF "Tc" operator to the page.
            </summary>
            <param name="characterSpacing">The character spacing to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tw(System.Single)">
            <summary>
            Writes a PDF "Tw" operator to the page.
            </summary>
            <param name="wordSpacing">The word spacing to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tz(System.Single)">
            <summary>
            Writes a PDF "Tz" operator to the page.
            </summary>
            <param name="horizontalScaling">The horizontal spacing to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_TL(System.Single)">
            <summary>
            Writes a PDF "TL" operator to the page.
            </summary>
            <param name="leading">The leading to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tr(ceTe.DynamicPDF.TextRenderingMode)">
            <summary>
            Writes a PDF "Tr" operator to the page.
            </summary>
            <param name="renderingMode">The text render mode to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Ts(System.Single)">
            <summary>
            Writes a PDF "Ts" operator to the page.
            </summary>
            <param name="textRise">The text rise to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tf(ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Writes a PDF "Tf" operator to the page.
            </summary>
            <param name="font">The <see cref="T:ceTe.DynamicPDF.Font"/> to draw.</param>
            <param name="fontSize">The font size to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_d(ceTe.DynamicPDF.LineStyle)">
            <summary>
            Writes a PDF "d" operator to the page.
            </summary>
            <param name="lineStyle">The line style to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tm(System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "Tm" operator to the page.
            </summary>
            <param name="angle">The angle to draw.</param>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tm(System.Single,System.Single)">
            <summary>
            Writes a PDF "Tm" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tm(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "Tm" operator to the page.
            </summary>
            <param name="a">The A value to draw.</param>
            <param name="b">The B value to draw.</param>
            <param name="c">The C value to draw.</param>
            <param name="d">The D value to draw.</param>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tm(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "Tm" operator to the page.
            </summary>
            <param name="xX">The X X multiple to draw.</param>
            <param name="xY">The X Y multiple to draw.</param>
            <param name="yX">The Y X multiple to draw.</param>
            <param name="yY">The Y Y multiple to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_DQuote(System.Single,System.Single,System.Char[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes a PDF Double Quote (""") operator to the page.
            </summary>
            <param name="wordSpacing">Word spacing to draw.</param>
            <param name="characterSpacing">The character spacing to draw.</param>
            <param name="textArray">The byte array of WINANSI text to draw.</param>
            <param name="start">The start position of text.</param>
            <param name="length">The number of characters to draw.</param>
            <param name="rightToLeft">Specifies if the text is to be drawn right to left.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_m_(System.Single,System.Single)">
            <summary>
            Writes a PDF "m" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_l_(System.Single,System.Single)">
            <summary>
            Writes a PDF "l" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_c(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "c" operator to the page.
            </summary>
            <param name="x1">The X1 coordinate to draw.</param>
            <param name="y1">The Y1 coordinate to draw.</param>
            <param name="x2">The X2 coordinate to draw.</param>
            <param name="y2">The Y2 coordinate to draw.</param>
            <param name="x3">The X3 coordinate to draw.</param>
            <param name="y3">The Y3 coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_v(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "v" operator to the page.
            </summary>
            <param name="x2">The X2 coordinate to draw.</param>
            <param name="y2">The Y2 coordinate to draw.</param>
            <param name="x3">The X3 coordinate to draw.</param>
            <param name="y3">The Y3 coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_y(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "y" operator to the page.
            </summary>
            <param name="x1">The X1 coordinate to draw.</param>
            <param name="y1">The Y1 coordinate to draw.</param>
            <param name="x3">The X3 coordinate to draw.</param>
            <param name="y3">The Y3 coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_re(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "re" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
            <param name="width">The width to draw.</param>
            <param name="height">The height to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetLineStyle(ceTe.DynamicPDF.LineStyle)">
            <summary>
            Sets the line style for the page.
            </summary>
            <param name="lineStyle">The line style to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WritePoint(System.Single,System.Single)">
            <summary>
            Writes a point to the page adjusted to PDF coordinates.
            </summary>
            <param name="pointX">X coordinate of point.</param>
            <param name="pointY">Y coordinate of point.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WritePointX(System.Single)">
            <summary>
            Writes an X coordinate to the page adjusted to the PDF coordinate.
            </summary>
            <param name="pointX">X coordinate to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WritePointY(System.Single)">
            <summary>
            Writes an X coordinate to the page adjusted to the PDF coordinate.
            </summary>
            <param name="pointY">Y coordinate to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_w_(System.Single)">
            <summary>
            Writes a PDF "w" operator to the page.
            </summary>
            <param name="lineWidth">The line width to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_J(ceTe.DynamicPDF.LineCap)">
            <summary>
            Writes a PDF "J" operator to the page.
            </summary>
            <param name="lineCap">The line cap style to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_j_(ceTe.DynamicPDF.LineJoin)">
            <summary>
            Writes a PDF "j" operator to the page.
            </summary>
            <param name="lineJoin">The line join style to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_M(System.Single)">
            <summary>
            Writes a PDF "M" operator to the page.
            </summary>
            <param name="miterLimit">The miter limit to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Td_(System.Single,System.Single)">
            <summary>
            Writes a PDF "Td" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_TD(System.Single,System.Single)">
            <summary>
            Writes a PDF "TD" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Tx">
            <summary>
            Writes a PDF "Tx" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_G(ceTe.DynamicPDF.Grayscale)">
            <summary>
            Writes a PDF "G" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.Grayscale"/> color to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_g_(ceTe.DynamicPDF.Grayscale)">
            <summary>
            Writes a PDF "g" operator to the page.
            </summary>
            <param name="color">The <c ref="Grayscale"/> color to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_RG(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Writes a PDF "RG" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.RgbColor"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_rg_(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Writes a PDF "rg" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.RgbColor"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_K(ceTe.DynamicPDF.CmykColor)">
            <summary>
            Writes a PDF "K" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.CmykColor"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_k_(ceTe.DynamicPDF.CmykColor)">
            <summary>
            Writes a PDF "k" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.CmykColor"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_q_(System.Boolean)">
            <summary>
            Writes a PDF "q" operator to the page.
            </summary>
            <param name="storeState"><b>true</b> if the <see cref="T:ceTe.DynamicPDF.IO.PageWriterState"/> should be stored for later retrieval by a "Q" operator.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Q(System.Boolean)">
            <summary>
            Writes a PDF "G" operator to the page.
            </summary>
            <param name="restoreState"><b>true</b> if the <see cref="T:ceTe.DynamicPDF.IO.PageWriterState"/> should be restored from a previous "q" operator.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_q_">
            <summary>
            Writes a PDF "q" operator to the page. <see cref="T:ceTe.DynamicPDF.IO.PageWriterState"/> is not stored.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Q">
            <summary>
            Writes a PDF "Q" operator to the page. <see cref="T:ceTe.DynamicPDF.IO.PageWriterState"/> is not restored.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_cm(System.Single,System.Single)">
            <summary>
            Writes a PDF "cm" operator to the page.
            </summary>
            <param name="xOffset">The X offset to draw.</param>
            <param name="yOffset">The Y offset to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_cm(System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "cm" operator to the page.
            </summary>
            <param name="angle">The angle to draw.</param>
            <param name="xOffset">The X offset to draw.</param>
            <param name="yOffset">The Y offset to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_cm(System.Single)">
            <summary>
            Writes a PDF "cm" operator to the page.
            </summary>
            <param name="angle">The angle to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_cm(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "cm" operator to the page.
            </summary>
            <param name="xX">The X X multiple to draw.</param>
            <param name="xY">The X Y multiple to draw.</param>
            <param name="yX">The Y X multiple to draw.</param>
            <param name="yY">The Y Y multiple to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_cm(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "cm" operator to the page.
            </summary>
            <param name="a">The A value to draw.</param>
            <param name="b">The B value to draw.</param>
            <param name="c">The C value to draw.</param>
            <param name="d">The D value to draw.</param>
            <param name="e">The E value to draw.</param>
            <param name="f">The F value to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_SQuote(System.Char[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes a PDF Single Quote ("'") operator to the page.
            </summary>
            <param name="textArray">The byte array of WINANSI text to draw.</param>
            <param name="start">The start position of text.</param>
            <param name="length">The number of characters to draw.</param>
            <param name="rightToLeft">Specifies if the text is to be drawn right to left.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_h">
            <summary>
            Writes a PDF "h" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_S">
            <summary>
            Writes a PDF "S" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_s_">
            <summary>
            Writes a PDF "s" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_fx">
            <summary>
            Writes a PDF "f*" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_f">
            <summary>
            Writes a PDF "f" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_B">
            <summary>
            Writes a PDF "B" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_b_">
            <summary>
            Writes a PDF "b" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_Bx">
            <summary>
            Writes a PDF "B*" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_bx_">
            <summary>
            Writes a PDF "b*" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_n">
            <summary>
            Writes a PDF "n" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_d(System.Int32,System.Int32)">
            <summary>
            Writes a PDF "d" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.RequireLicense(System.Int32)">
            <summary>
            Specifies that a license is required.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.RequireLicense">
            <summary>
            Specifies that a license is required.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetLineWidth(System.Single)">
            <summary>
            Sets the line width for the page.
            </summary>
            <param name="lineWidth">The width of the line.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetCharacterSpacing(System.Single)">
            <summary>
            Sets the character spacing for text on the page.
            </summary>
            <param name="characterSpacing">The character spacing of text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetHorizontalScaling(System.Single)">
            <summary>
            Sets the horizontal scaling for text on the page.
            </summary>
            <param name="horizontalScaling">The horizontal scaling of text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetTextRenderingMode(ceTe.DynamicPDF.TextRenderingMode)">
            <summary>
            Sets text rendering mode for text on the page.
            </summary>
            <param name="textRenderingMode">The text rendering mode of text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetTextRise(System.Single)">
            <summary>
            Sets text rise for text on the page.
            </summary>
            <param name="textRise">The text rise of text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetWordSpacing(System.Single)">
            <summary>
            Sets the word spacing for text on the page.
            </summary>
            <param name="wordSpacing">The word spacing of text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetGraphicsMode">
            <summary>
            Sets the page to graphics mode.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetTextMode">
            <summary>
            Sets the page to text mode.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetTextDefaults">
            <summary>
            Sets the text properties render mode, character space, word space, horizontal scale, and text rise to the defaults.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetLeading(System.Single)">
            <summary>
            Sets the leading for text on the page.
            </summary>
            <param name="leading">The leading value to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetLineJoin(ceTe.DynamicPDF.LineJoin)">
            <summary>
            Sets the line join style for paths on the page.
            </summary>
            <param name="lineJoin">The line join style to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetLineCap(ceTe.DynamicPDF.LineCap)">
            <summary>
            Sets the line cap style for paths on the page.
            </summary>
            <param name="lineCap">The line cap style to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetMiterLimit(System.Single)">
            <summary>
            Sets the miterLimit for paths on the page.
            </summary>
            <param name="miterLimit">The miter limit to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetFont(ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Sets the font and font size for text on the page.
            </summary>
            <param name="font">The <see cref="T:ceTe.DynamicPDF.Font"/> to set.</param>
            <param name="fontSize">The font size to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetStrokeColor(ceTe.DynamicPDF.Color)">
            <summary>
            Sets the stoke color for the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.Color"/> to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.SetFillColor(ceTe.DynamicPDF.Color)">
            <summary>
            Sets the fill color for the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.Color"/> to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write(System.Byte[])">
            <summary>
            Writes a byte array to the page.
            </summary>
            <param name="data">The byte array to output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write(System.Byte[],System.Int32)">
            <summary>
            Writes a portion of a byte array to the page.
            </summary>
            <param name="data">The byte array to output.</param>
            <param name="length">The length to output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a portion of a byte array to the page.
            </summary>
            <param name="data">The byte array to output.</param>
            <param name="start">The start index of source.</param>
            <param name="length">The length to output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WriteSpace">
            <summary>
            Writes a space to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WritePair(System.Single,System.Single)">
            <summary>
            Writes a pair of numbers to the page.
            </summary>
            <param name="value1">First number to write.</param>
            <param name="value2">Second number to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WriteColorValue(System.Byte)">
            <summary>
            Writes an color value to the page.
            </summary>
            <param name="value">The color value to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write(System.Single)">
            <summary>
            Writes a floating point number to the page.
            </summary>
            <param name="value">Number to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write(System.Int32)">
            <summary>
            Writes an integer to the page.
            </summary>
            <param name="value">Number to write.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_BI">
            <summary>
            Writes a PDF "BI" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_ID">
            <summary>
            Writes a PDF "ID" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.Write_EI">
            <summary>
            Writes a PDF "EI" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WriteName(System.Byte[])">
            <summary>
            Writes a byte array to the page.
            </summary>
            <param name="name">Byte array to output to the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WriteName(System.Byte)">
            <summary>
            Writes a byte to the page.
            </summary>
            <param name="name">Byte to output to the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.OperatorWriter.WriteNewLine">
            <summary>
            Writes a new line to the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.OperatorWriter.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the Symbol font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.OperatorWriter.Dimensions">
            <summary>
            Gets the dimensions of the current area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.OperatorWriter.Document">
            <summary>
            Gets the <b>Document</b> object the page writer belongs to.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.OperatorWriter.DocumentWriter">
            <summary>
            Gets the <b>DocumentWriter</b> object the page writer is currently drawing to.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.MarkedContentTagType">
             <summary>
             Represents an marked content tag type.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.TagType">
             <summary>
             Base class from which tag type classes are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Paragraph">
            <summary>
            Gets the paragraph tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Heading">
            <summary>
            Gets the heading tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.HeadingLevel1">
            <summary>
            Gets the heading level 1 tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.HeadingLevel2">
            <summary>
            Gets the heading level 2 tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.HeadingLevel3">
            <summary>
            Gets the heading level 3 tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.HeadingLevel4">
            <summary>
            Gets the heading level 4 tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.HeadingLevel5">
            <summary>
            Gets the heading level 5 tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.HeadingLevel6">
            <summary>
            Gets the heading level 6 tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Figure">
            <summary>
            Gets the figure tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Table">
            <summary>
            Gets the table tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Document">
            <summary>
            Gets the document tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Part">
            <summary>
            Gets the part tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Article">
            <summary>
            Gets the article tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Section">
            <summary>
            Gets the section tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Division">
            <summary>
            Gets the division tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.BlockQuotation">
            <summary>
            Gets the block quotation tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Caption">
            <summary>
            Gets the caption tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableOfContent">
            <summary>
            Gets the table of contents tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableOfContentItem">
            <summary>
            Gets the table of contents item tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Index">
            <summary>
            Gets the index tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.NonStructuralElement">
            <summary>
            Gets the nonstructural element tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Private">
            <summary>
            Gets the private tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.List">
            <summary>
            Gets the list tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.ListItem">
            <summary>
            Gets the list item tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Label">
            <summary>
            Gets the label tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.ListBody">
            <summary>
            Gets the list body tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableRow">
            <summary>
            Gets the table row tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableHeader">
            <summary>
            Gets the table header  tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableDataCell">
            <summary>
            Gets the table data cell tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableHeaderRowGroup">
            <summary>
            Gets the table header row group tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableBodyRowGroup">
            <summary>
            Gets the table body row group tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.TableFooterRowGroup">
            <summary>
            Gets the table footer row group tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Span">
            <summary>
            Gets the span tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Quotation">
            <summary>
            Gets the quotation tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Note">
            <summary>
            Gets the note tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Reference">
            <summary>
            Gets the reference tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.BibliographyEntry">
            <summary>
            Gets the bibliography entry tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Code">
            <summary>
            Gets the code tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Link">
            <summary>
            Gets the link tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Annotation">
            <summary>
            Gets the annotation tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Ruby">
            <summary>
            Gets the ruby tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Warichu">
            <summary>
            Gets the warichu tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Formula">
            <summary>
            Gets the fromula tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Form">
            <summary>
            Gets the form tag type .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TagType.Html">
            <summary>
            Gets the HTML tag type.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.MarkedContentTagType.ToString">
            <summary>
            Gets the tag type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ExtractedImageData">
             <summary>
             Represents the extracted image from the document.
             </summary>
            ^Lic.Merger.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ExtractedImageData.ImageType">
            <summary>
            Gets the format of the image.(jpg or png)
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ExtractedImageData.Data">
            <summary>
            Gets data of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ExtractedImageType">
             <summary>
             Represents the format of the image
             </summary>
            ^Lic.Merger.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ExtractedImageType.Jpeg">
            <summary>
            Jpeg image.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ExtractedImageType.Png">
            <summary>
            Png image.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.TiffCompressionType.Uncompressed">
            <summary>
            Uncompressed.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.TiffCompressionType.Ccitt1D">
            <summary>
            Ccitt1D.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.TiffCompressionType.Group3Fax">
            <summary>
            Group3Fax.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.TiffCompressionType.Group4Fax">
            <summary>
            Group4Fax.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.TiffCompressionType.Lzw">
            <summary>
            Lzw.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.TiffCompressionType.PackBits">
            <summary>
            PackBits.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.TiffCompressionType.Jpeg">
            <summary>
            Jpeg.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImageInformation">
             <summary>
             Represents image's information of an image in the document.
             </summary>
            ^Lic.Merger.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImageInformation.GetImage">
             <summary>
             Returns the <see cref="T:ceTe.DynamicPDF.Merger.ExtractedImageType"/> object for the image extracted.
             </summary>
             <returns>A <see cref="T:ceTe.DynamicPDF.Merger.ExtractedImageType"/> object.</returns>
            ^Lic.Merger.Ent.Method
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImageInformation.GetImage(System.String)">
             <summary>
             Draws the image of type jpg or png at the given file path.
             </summary>
             <param name="filePath">File path to save the image.</param>
            ^Lic.Merger.Ent.Method
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImageInformation.Width">
            <summary>
            Gets width of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImageInformation.Height">
            <summary>
            Gets height of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImageInformation.HasTransperency">
            <summary>
            Gets boolean representing alpha channels presence in the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImageInformation.PixelFormat">
             <summary>
             Gets PixelFormat of the image, As <see cref="T:ceTe.DynamicPDF.Merger.PixelFormat"/> object.
             </summary>
            ^ImageInfo.Example1
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImageInformation.BitsPerComponent">
             <summary>
             Gets Bits Per Component number for a pixel of the image.
             </summary>
            ^ImageInfo.Example2
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PixelFormat">
            <summary>
            Specifies PixelFormat of image.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.PixelFormat.Mono">
            <summary>
            Monochrome image.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.PixelFormat.GrayScale">
            <summary>
            GrayScale image.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.PixelFormat.Rgb">
            <summary>
            Rgb image.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.PixelFormat.Indexed">
            <summary>
            Indexed image.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.PixelFormat.Cmyk">
            <summary>
            Cmyk image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.FontNotFoundException">
             <summary>
             The exception that is thrown for a FontNotFound Error.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.MergerException">
             <summary>
             The exception that is thrown for a DynamicPDF Merger error.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.FontNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.Forms.FontNotFoundException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Font">
             <summary>
             Base class from which all fonts are derived.
             </summary>
             <remarks>See the <a href="Fonts And Text.html">Fonts And Text</a> topic for more on fonts.</remarks>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Font.#ctor(ceTe.DynamicPDF.Text.Encoder,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Font"/> class.
            </summary>
            <param name="encoder">Specifies the encoder for the font.</param>
            <param name="uid">Specifies the unique id for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.#ctor(ceTe.DynamicPDF.Text.Encoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Font"/> class.
            </summary>
            <param name="encoder">Specifies the encoder for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetGlyphWidth(System.Char)">
            <summary>
            Returns the mwidth of a glyph.
            </summary>
            <param name="glyph">Glyph whose mwidth is to be returned.</param>
            <returns>mwidth of glyph.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetTextLines(System.Char[],System.Single,System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given character array.
            </summary>
            <param name="text">Character array containing the text.</param>
            <param name="width">Width to use when calculating the text lines.</param>
            <param name="height">Height to use when calculating the text lines.</param>
            <param name="fontSize">Font size to use when calculating the text lines.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> containing the text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetTextLines(System.Char[],System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given character array.
            </summary>
            <param name="text">Character array containing the text.</param>
            <param name="width">Width to use when calculating the text lines.</param>
            <param name="fontSize">Font size to use when calculating the text lines.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> containing the text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetTextWidth(System.Char[],System.Single)">
            <summary>
            Returns the width of the given text.
            </summary>
            <param name="text">Byte array or text whose width is returned.</param>
            <param name="fontSize">Font size of text.</param>
            <returns>Width of text in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetTextWidth(System.String,System.Single)">
            <summary>
            Returns the width of the given text.
            </summary>
            <param name="text">Text whose width is returned.</param>
            <param name="fontSize">Font size of text.</param>
            <returns>Width of text in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetDescender(System.Single)">
            <summary>
            Returns the descender of the font in points for the given font size.
            </summary>
            <param name="fontSize">Font size to use for the calculation.</param>
            <returns>The descender in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetAscender(System.Single)">
            <summary>
            Returns the ascender of the font in points for the given font size.
            </summary>
            <param name="fontSize">Font size to use for the calculation.</param>
            <returns>The ascender in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetLineGap(System.Single)">
            <summary>
            Returns the line gap of the font in points for the given font size.
            </summary>
            <param name="fontSize">Font size to use for the calculation.</param>
            <returns>The line gap in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetDefaultLeading(System.Single)">
            <summary>
            Returns the default leading of the font in points for the given font size.
            </summary>
            <param name="fontSize">Font size to use for the calculation.</param>
            <returns>The default leading in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetBaseLine(System.Single,System.Single)">
            <summary>
            Returns the baseline of the font in points for the given leading and font size.
            </summary>
            <param name="fontSize">Font size to use for the calculation.</param>
            <param name="leading">Leading to use for the calculation.</param>
            <returns>The baseline in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.HasKerning">
            <summary>
            Indicates whether the given font is having Kerning pairs or not.
            </summary>
            <returns>Bool indicating presence of kern pairs.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns kerning space between two chars.
            </summary>
            <param name="left">Char in left side of the pair.</param>
            <param name="right">Char in the right side of the pair.</param>
            <returns>Kerning space between the given chars.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.CanLoadSystemFont(System.Drawing.Font)">
            <summary>
            Checks whether the font can be loaded from the system fonts.
            </summary>
            <param name="font">Font of type System.Drawing.Font</param>
            <returns>Returns true if the provided font can be loaded. </returns>
            <remarks><font color="red">This method is not available for .NET standard and it will work only on windows platform.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.LoadSystemFont(System.Drawing.Font)">
            <summary>
            Load the Font from the system font if it is available.
            </summary>
            <param name="font">Font of type System.Drawing.Font</param>
            <returns>Returns <see cref="T:ceTe.DynamicPDF.Font"/> object if the provided font is loaded else null.</returns>
            <remarks><font color="red">This method is not available for .NET standard and it will work only on windows platform.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Font.LoadSystemFont(System.Drawing.Font,System.Boolean)">
            <summary>
            Load the Font from the system font if it is available.
            </summary>
            <param name="font">Font of type System.Drawing.Font</param>
            <param name="useCharacterShaping"></param>
            <returns></returns>
            <remarks><font color="red">This method is not available for .NET standard and it will work only on windows platform.</font></remarks>        
        </member>
        <member name="M:ceTe.DynamicPDF.Font.LoadSystemFont(System.String)">
            <summary>
            Load the Font from the system font if it is available.
            </summary>
            <param name="systemFontName">Name of the font.</param>
            <returns>Returns <see cref="T:ceTe.DynamicPDF.Font"/> object if the provided font is loaded else null.</returns>
            <remarks><font color="red">This method is not available for .NET standard and it will work only on windows platform.</font></remarks>        
        </member>
        <member name="M:ceTe.DynamicPDF.Font.LoadSystemFont(System.String,System.Boolean)">
            <summary>
            Load the Font from the system font if it is available.
            </summary>
            <param name="systemFontName">Name of the font.</param>
            <param name="useCharacterShaping"></param>
            <returns></returns>
            <remarks><font color="red">This method is not available for .NET standard and it will work only on windows platform.</font></remarks>        
        </member>
        <member name="M:ceTe.DynamicPDF.Font.CanLoadSystemFont(System.String)">
            <summary>
            Checks whether the Font can be loaded from the system fonts for the font name provided.
            </summary>
            <param name="systemFontName">Name of the font.</param>
            <returns>Returns true if the provided font can be loaded.</returns>
            <remarks><font color="red">NOTE: This method is obsolete and it is not available for .NET standard.</font></remarks>    
        </member>
        <member name="P:ceTe.DynamicPDF.Font.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.LineGap">
            <summary>
            Gets the line gap for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.LineBreaker">
            <summary>
            Gets the default line breaker for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.Encoder">
            <summary>
            Gets the encoder for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.Name">
            <summary>
            Gets the name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.ResourceType">
            <summary>
            Gets the resource type.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.TimesRoman">
            <summary>
            Gets the Times Roman core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.TimesBold">
            <summary>
            Gets the Times Bold core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.TimesItalic">
            <summary>
            Gets the Times Italic core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.TimesBoldItalic">
            <summary>
            Gets the Times Bold Italic core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.Helvetica">
            <summary>
            Gets the Helvetica core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.HelveticaBold">
            <summary>
            Gets the Helvetica Bold core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.HelveticaOblique">
            <summary>
            Gets the Helvetica Oblique core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.HelveticaBoldOblique">
            <summary>
            Gets the Helvetica Bold Oblique core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.Courier">
            <summary>
            Gets the Courier core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.CourierBold">
            <summary>
            Gets the Courier Bold core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.CourierOblique">
            <summary>
            Gets the Courier Oblique core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.CourierBoldOblique">
            <summary>
            Gets the Courier Bold Oblique core font with Latin 1 encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.Symbol">
            <summary>
            Gets the Symbol core font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.ZapfDingbats">
            <summary>
            Gets the Zapf Dingbats core font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.HeiseiKakuGothicW5">
            <summary>
            Gets the Heisei Kaku Gothic W5 Japanese font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.HeiseiMinchoW3">
            <summary>
            Gets the Heisei Mincho W3 Japanese font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.HanyangSystemsGothicMedium">
            <summary>
            Gets the Hanyang Systems Gothic Medium Korean font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.HanyangSystemsShinMyeongJoMedium">
            <summary>
            Gets the Hanyang Systems Shin MyeongJo Medium Korean font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.MonotypeHeiMedium">
            <summary>
            Gets the Monotype Hei Medium Chinese (traditional) font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.MonotypeSungLight">
            <summary>
            Gets the Monotype Sung Light Chinese (traditional) font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.SinoTypeSongLight">
            <summary>
            Gets the SinoType Song Light Chinese (simplified) font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Font.CeTeBullets">
            <summary>
            Gets the ceTe Bullets font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImportedActionType">
            <summary>
            Specifies an imported action type
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.GoTo">
            <summary>
            Go to a destination in the current document.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.GoToRemote">
            <summary>
            Go to a destination in another document.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.GoToEmbedded">
            <summary>
            Go to a destination in an embedded file.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Launch">
            <summary>
            Launch an application.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Thread">
            <summary>
            Thread.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.URI">
            <summary>
            Uniform resource identifier.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Sound">
            <summary>
            Sound.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Movie">
            <summary>
            Movie.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Hide">
            <summary>
            Hide.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Named">
            <summary>
            Named action.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.SubmitForm">
            <summary>
            Submit form.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.ResetForm">
            <summary>
            Reset form.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.ImportData">
            <summary>
            Import data.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.JavaScript">
            <summary>
            Java script.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.SetOCGState">
            <summary>
            Set OCG state.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Rendition">
            <summary>
            Rendition.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.Transition">
            <summary>
            Transition.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.ImportedActionType.GoTo3DView">
            <summary>
            Go to 3D view.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.StructureElement">
             <summary>
             Represents an structure element.
             </summary>
            ^StructureElement 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.StructureElement.#ctor(ceTe.DynamicPDF.TagType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.StructureElement"/> class.
            </summary>
            <param name="tag">Tag type of the structure element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.StructureElement.#ctor(ceTe.DynamicPDF.TagType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.StructureElement"/> class.
            </summary>
            <param name="tag">Tag type of the structure element.</param>
            <param name="includeDefaultAttributes">Specifies if default attributes need to be add.</param>/// 
        </member>
        <member name="M:ceTe.DynamicPDF.StructureElement.ToString">
            <summary>
            Gets the ID of the structure element.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.StructureElement.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the structure element to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the structure element output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.Parent">
            <summary>
            Gets or sets a value indicating parent structure element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.Order">
            <summary>
            Gets or sets a value indicating the order in its parent structure element or structure tree root.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.TagType">
            <summary>
            Gets a value indicating standard structure type or named structure type.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.Title">
            <summary>e
            Gets or sets a value indicating title of structure element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.Identifier">
            <summary>
            Gets or sets a value indicating identifier for the structure element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.Language">
            <summary>
            Gets or sets a value indicating natural language for all text in the structure element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.AlternateText">
            <summary>
            Gets or sets a value indicating alternate description of the structure element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.Abbreviation">
            <summary>
            Gets or sets a value indicating expandable form of an abbreviation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.ActualText">
            <summary>
            Gets or sets a value indicating the text that is exact replacement for the structure element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.Classes">
            <summary>
            Adds a AttributeClass to set of attribute classes having names.
            </summary>        
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.IncludeDefaultAttributes">
            <summary>
            Gets or sets a value indicating default attributes to be include.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.StructureElement.AttributeLists">
            <summary>
            Adds an AttributeObject to a set of attribute objects.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfOutline">
             <summary>
             Represents an imported outline.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutline.ChildOutlines">
             <summary>
             Gets a list of imported child outlines.
             </summary>
             <remarks>
             This property will be null if there are no child outlines.
             </remarks>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutline.Text">
             <summary>
             Get the text of the imported outline.
             </summary>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutline.Style">
             <summary>
             Gets the text style of the imported outline.
             </summary>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutline.Expanded">
             <summary>
             Gets a value indicating if the child outline is expanded by default.
             </summary>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutline.Color">
             <summary>
             Gets the color of the imported outline.
             </summary>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutline.Action">
             <summary>
             Gets the action of the imported outline.
             </summary>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutline.TargetPageNumber">
             <summary>
             Gets the target page number of the imported outlines action.
             </summary>
             <remarks>
             This will return a value of -1 if the target page number is now known. The target page
             number is only known for imported outline actions that use a direct reference to a page.
             </remarks>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfOutlineList">
             <summary>
             Represents a list of outlines from an imported PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutlineList.Item(System.Int32)">
             <summary>
             Gets an imported outline by index.
             </summary>
             <param name="index">Index of the outline to return.</param>
             <returns>The <see ref="PdfOutline"/> at the given index.</returns>
            ^Lic.Merger.Std.Indexer
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfOutlineList.Count">
             <summary>
             Gets the number of imported outlines in the list.
             </summary>
            ^Lic.Merger.Std.Prop
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfParsingException">
             <summary>
             The exception that is thrown for a PDF parsing error.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfSecurityException">
             <summary>
             The exception that is thrown for a PDF security error.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="T:ceTe.DynamicPDF.NamedTagType">
             <summary>
             Represents an named tag type.
             </summary>
            ^NamedTagType
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.NamedTagType.#ctor(System.String,ceTe.DynamicPDF.StandardTagType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.NamedTagType"/> class.
            </summary>
            <param name="customTagName">Custom name of the tag.</param>
            <param name="standardTagType"> Standard name of the tag.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.NamedTagType.ToString">
            <summary>
            Gets the name of the tag.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.NamedTagType.Name">
            <summary>
            Gets the name of the tag.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.NamedTagType.TagType">
            <summary>
            Gets the standard name of the tag.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.OutputIntentVersion">
            <summary>
            Specifies an output intent version.
            </summary>	
        </member>
        <member name="F:ceTe.DynamicPDF.OutputIntentVersion.PDF_X">
            <summary>
             PDF/X Version
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.OutputIntentVersion.PDF_A">
            <summary>
             PDF/A Version
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost">
             <summary>
             Represents an Australia Post barcode.
             </summary>
             <remarks>This class can be used to place an Australia Post barcode on a page.</remarks>
            ^AustraliaPost
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode">
             <summary>
             Base class from which barcode page elements that display text are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.BarCode">
             <summary>
             Base class from which barcode page elements are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.RotatingPageElement">
             <summary>
             Base class from which rotating page elements are derived.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.TaggablePageElement">
            <summary>
            Base class from which taggable  page elements are derived.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElement">
             <summary>
             Base class from which all page elements are derived.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElement"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElement"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> containing the data.</param>
            <param name="context">The source of the serialization.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElement.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the page element to the given <b>PageWriter</b> class.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> class to receive the page elements output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElement.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object. 
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data.</param>
            <param name="context">The destination for this serialization.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElement.ID">
            <summary>
            Gets or sets the ID of the page element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElement.RelativeTo">
             <summary>
             Gets and sets placement of the page element on the page.
             </summary>
            ^PageElement
        </member>
        <member name="P:ceTe.DynamicPDF.PageElement.IgnoreMargins">
             <summary>
             Gets or sets ignore margin property. Setting false will consider the margin while placing the page element based on the RelativeTo property.
             </summary>
            ^PageElement.Example1
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TaggablePageElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TaggablePageElement"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TaggablePageElement.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the taggable page element to the given <b>PageWriter</b> class.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> class to receive the taggable page elements output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TaggablePageElement.Tag">
             <summary>
             Gets or sets the tag of the taggable element.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TaggablePageElement.TagOrder">
            <summary>
            Gets or sets the tag order of the taggable element.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.ICoordinate">
            <summary>
            Represents a contract requiring an X and Y coordinate.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ICoordinate.X">
            <summary>
            Gets or sets the X coordinate.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ICoordinate.Y">
            <summary>
            Gets or sets the Y coordinate.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RotatingPageElement.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.RotatingPageElement"/> class.
            </summary>
            <param name="x">The X coordinate of the rotating page element.</param>
            <param name="y">The Y coordinate of the rotating page element.</param>
            <param name="height">The height of the rotating page element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RotatingPageElement.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.RotatingPageElement"/> class.
            </summary>
            <param name="x">The X coordinate of the rotating page element.</param>
            <param name="y">The Y coordinate of the rotating page element.</param>
            <param name="height">The height of the rotating page element.</param>
            <param name="angle">The angle of the rotating page element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RotatingPageElement.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the rotated page element to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RotatingPageElement.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the page element to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.RotatingPageElement.Angle">
            <summary>
            Gets or sets the heights of the angle element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.RotatingPageElement.X">
            <summary>
            Gets or sets the X coordinate of the page element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.RotatingPageElement.Y">
            <summary>
            Gets or sets the Y coordinate of the page element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.RotatingPageElement.Height">
            <summary>
            Gets or sets the heights of the page element.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.BarCode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the rotated page element to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.PixelsPerXDimension">
            <summary>
            Gets or Sets the pixels per XDimension
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.Value">
            <summary>
            Gets or sets the value of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.XDimension">
            <summary>
            Gets or sets the XDimension of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.XDimensionsPerInch">
            <summary>
            Gets or sets the XDimensionsPerInch of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.XDimensionsPerCentiMeter">
            <summary>
            Gets or sets the XDimensionsPerCentiMeter of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.XDimensionMils">
            <summary>
            Gets or sets the XDimensionMils of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.XDimensionMilliMeters">
            <summary>
            Gets or sets the XDimensionMilliMeters of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.BarCode.Color">
            <summary>
            Gets or sets the Color of the barcode.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.ShowText">
            <summary>
            Gets or sets a value indicating if the value should be placed as text below the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.TextColor">
            <summary>
            Gets or set the color of the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.Font">
            <summary>
            Gets or sets the font to use when displaying the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.FontSize">
            <summary>
            Gets or sets the font size to use when displaying the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.TextBarCode.TextAlign">
            <summary>
            Gets or sets the alignment of the text.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost.#ctor(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost.ShowTextAbove">
            <summary>
            Gets or sets a value indicating if the value should be placed as text above the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPost.CustomerDataEncoding">
            <summary>
            Gets or sets an encoding to encode customer data.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPostEncodingType">
             <summary>
             Specifies the encoding table to be used to encode the Customer data.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPostEncodingType.N">
            <summary>
            N encoding table
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPostEncodingType.C">
            <summary>
            C encoding table
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AustraliaPostEncodingType.Custom">
            <summary>
            Custom encoding, customer data will be in bar states format (0, 1, 2 and 3 representing the bar states)
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec">
             <summary>
             Represents an Aztec barcode.
             </summary>
             <remarks>
             With some of the .Net runtimes (example: .Net Core 2.0) the ECI values 20, 28, 29 and 30 will give the error "No data is available 
             for encoding 'code page number'. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.". 
             To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
             </remarks>
            ^Aztec.Example1
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode">
             <summary>
             The base class for 2 dimentional barcodes (Pdf417, MacroPdf417, DataMatrixBarcode and QrCode).
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the PDF417 barcode to the given <b>PageWriter</b> class.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> class to receive the PDF417 barcode's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.GetSymbolHeight">
            <summary>
            Returns the height required to display the full barcode.
            </summary>
            <returns>A value representing the required height.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.PixelsPerXDimension">
            <summary>
            Gets or Sets the pixels per XDimension
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.Color">
            <summary>
            Gets or sets the Color for the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.X">
            <summary>
            Gets or sets the X coordinate of the  barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.Y">
            <summary>
            Gets or sets the Y coordinate of the  barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.Angle">
            <summary>
            Gets or sets the angle of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.XDimension">
            <summary>
            Gets or sets the xDimension of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.XDimensionsPerInch">
            <summary>
            Gets or sets the XDimensionsPerInch of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.XDimensionsPerCentiMeter">
            <summary>
            Gets or sets the XDimensionsPerCentiMeter of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.XDimensionMils">
            <summary>
            Gets or sets the XDimensionMils of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Dim2Barcode.XDimensionMilliMeters">
            <summary>
            Gets or sets the XDimensionMilliMeters of the barcode.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize"/> of the barcode.</param>
            <param name="xDimension">The xDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize"/> of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.#ctor(System.Byte[],System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize"/> of the barcode.</param>
            <param name="xDimension">The xDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.#ctor(System.Byte[],System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize"/> of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the Aztec barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the Aztec barcode output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.GetOverflowAztec">
             <summary>
             Gets a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> class.
             </summary>
             <returns>Returns an <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> object.</returns>
             <remarks>This method returns a new <b>Aztec</b> object that contains the remaining data that did not fit.</remarks>
            ^Aztec.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.GetOverflowAztec(System.Single,System.Single)">
             <summary>
             Gets a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> class.
             </summary>
             <param name="x">The X coordinate of the aztec barcode.</param>
             <param name="y">The Y coordinate of the aztec barcode.</param>
             <returns>Returns an <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Aztec"/> object.</returns>
             <remarks>This method returns a new <b>Aztec</b> object that contains the remaining data that did not fit.</remarks>
            ^Aztec.Example3
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.GetSymbolWidth">
            <summary>
            Returns the Width required to display the aztec barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.GetSymbolHeight">
            <summary>
            Returns the Height required to display the aztec barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.ErrorCorrection">
            <summary>
            Gets or Sets the error correction value.
            </summary>
            <remarks>Error correction value may be between 5% to 95%.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.AllowStructuredAppend">
            <summary>
            Gets or Sets a boolean indicating whether to allow structured append of the overflow barcodes.
            </summary>
            <remarks>If set to <b>true</b>, <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.MessageID"/> and <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.Size"/> should be set to a predefined value.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.MessageID">
            <summary>
            Gets or Sets the message id for the overflow barcodes.
            </summary>
            <remarks>MessageID for the overflow barcodes. Default MessageID is 'A'. This is used only when <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.AllowStructuredAppend"/> is <b>true</b>.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.Size">
            <summary>
            Gets the barcode size, <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.Value">
            <summary>
            Gets the barocode value only if the string value is set.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.IsReaderInitializationSymbol">
            <summary>
            Gets or Sets a boolean representing if the barcode is a reader initialization symbol.
            </summary>
            <remarks>Setting <b>true</b> will mark the symbol as reader initialization symbol
            and the size of the symbol should be one of the following, R15xC15 Compact, R19xC19, R23xC23, R27xC27, R31xC31, R37xC37, R41xC41, R45xC45, R49xC49, R53xC53, R57xC57, R61xC61, R67xC67, R71xC71, R75xC75,
            R79xC79, R83xC83, R87xC87, R91xC91, R95xC95, R101xC101, R105xC105, R109xC109, however it is recommended to set Auto.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Aztec.ProcessTilde">
            <summary>
            Gets or Sets a boolean indicating whether to process tilde symbol in the input.
            </summary>
            <remarks>
            Setting <b>true</b> will check for ~ character and processes it for FNC1 or ECI characters.
            With some of the .Net runtimes (example: .Net Core 2.0), the ECI values 20, 28, 29 and 30 will give the error "No data is available 
            for encoding 'code page number'. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.". 
            To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize">
             <summary>
             Represents Aztec symbol sizes.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.Auto">
            <summary>
            Size auto.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.Full">
            <summary>
            Full size Aztec.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.Compact">
            <summary>
            Compact size Aztec.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.Rune">
            <summary>
            Aztec Runes.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R15xC15Compact">
            <summary>
            15 rows by 15 columns, Compact size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R19xC19Compact">
            <summary>
            19 rows by 19 columns, Compact size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R19xC19">
            <summary>
            19 rows by 19 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R23xC23Compact">
            <summary>
            23 rows by 23 columns, Compact size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R23xC23">
            <summary>
            23 rows by 23 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R27xC27Compact">
            <summary>
            27 rows by 27 columns, Compact size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R27xC27">
            <summary>
            27 rows by 27 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R31xC31">
            <summary>
            31 rows by 31 Column.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R37xC37">
            <summary>
            37 rows by 37 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R41xC41">
            <summary>
            41 rows by 41 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R45xC45">
            <summary>
            45 rows by 45 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R49xC49">
            <summary>
            49 rows by 49 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R53xC53">
            <summary>
            53 rows by 53 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R57xC57">
            <summary>
            57 rows by 57 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R61xC61">
            <summary>
            61 rows by 61 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R67xC67">
            <summary>
            67 rows by 67 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R71xC71">
            <summary>
            71 rows by 71 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R75xC75">
            <summary>
            75 rows by 75 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R79xC79">
            <summary>
            79 rows by 79 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R83xC83">
            <summary>
            83 rows by 83 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R87xC87">
            <summary>
            87 rows by 87 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R91xC91">
            <summary>
            91 rows by 91 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R95xC95">
            <summary>
            95 rows by 95 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R101xC101">
            <summary>
            101 rows by 101 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R105xC105">
            <summary>
            105 rows by 105 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R109xC109">
            <summary>
            109 rows by 109 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R113xC113">
            <summary>
            113 rows by 113 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R117xC117">
            <summary>
            117 rows by 117 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R121xC121">
            <summary>
            121 rows by 121 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R125xC125">
            <summary>
            125 rows by 125 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R131xC131">
            <summary>
            131 rows by 131 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R135xC135">
            <summary>
            135 rows by 135 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R139xC139">
            <summary>
            139 rows by 139 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R143xC143">
            <summary>
            143 rows by 143 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R147xC147">
            <summary>
            147 rows by 147 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.AztecSymbolSize.R151xC151">
            <summary>
            151 rows by 151 columns.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.BarCodeException">
             <summary>
             The exception that is thrown for a bar coding error.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.GeneratorException">
             <summary>
             The exception that is thrown if issues are there while creating a PDF.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.GeneratorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.GeneratorException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.BarCodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.BarCodeException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Code11">
             <summary>
             Represents a Code 11 barcode.
             </summary>
             <remarks>This class can be used to place a Code 11 barcode on a page.</remarks>
            ^Code11
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code11"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code11"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code11"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code11"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code11"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of the barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code11"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code11.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Code93">
             <summary>
             Represents a Code93 barcode.
             </summary>
             <remarks>This class can be used to place a Code93 barcode on a page.</remarks>
            ^Code93
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code93"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code93"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code93"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code93"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code93"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code93"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code93.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode">
             <summary>
             Represents a Data Matrix  barcode.
             </summary>
             <remarks>
             With some of the .Net runtimes (example: .Net Core 2.0), the ECI values 20, 28, 29 and 30 will give the error "No data is available 
             for encoding 'code page number'. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.". 
             To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
             </remarks>
            ^DataMatrixBarcode
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.Byte[],System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="dataMatrixSymbolSize">The symbol size of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.Byte[],System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="dataMatrixSymbolSize">The symbol size of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="dataMatrixSymbolSize">The symbol size of the barcode.</param>
            <param name="dataMatrixEncodingType">The encoding type of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.Byte[],System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="dataMatrixSymbolSize">The symbol size of the barcode.</param>
            <param name="dataMatrixEncodingType">The encoding type of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.Byte[],System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="dataMatrixSymbolSize">The symbol size of the barcode.</param>
            <param name="dataMatrixEncodingType">The encoding type of the barcode.</param>
            <param name="dataMatrixFunctionCharacter">The function character of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType,ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="dataMatrixSymbolSize">The symbol size of the barcode.</param>
            <param name="dataMatrixEncodingType">The encoding type of the barcode.</param>
            <param name="dataMatrixFunctionCharacter">The function character of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the datamatrix barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the datamatrix barcode output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.GetOverFlowDataMatrixBarcode(System.Single,System.Single)">
            <summary>
            Gets a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <param name="x">The X coordinate of the data matrix barcode.</param>
            <param name="y">The Y coordinate of the data matrix barcode.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> object.</returns>
            <remarks>This method returns a new <b>DataMatrixBarcode</b> object that contains the remaining data that did not fit.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.GetOverFlowDataMatrixBarcode">
            <summary>
            Gets a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> class.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode"/> object.</returns>
            <remarks>This method returns a new <b>DataMatrixBarcode</b> object that contains the remaining data that did not fit.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.GetSymbolHeight">
            <summary>
            Returns the height required to display the Data Matrix barcode.
            </summary>
            <returns>A value representing the required height.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.GetSymbolWidth">
            <summary>
            Returns the Width required to display the Data Matrix barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixBarcode.ProcessTilde">
            <summary>
            Gets or sets whether to process tilde character.
            </summary>
            <remarks>
            Setting <b>true</b> will check for ~ character and processes it for FNC1 or ECI characters.
            With some of the .Net runtimes (example: .Net Core 2.0), the ECI values 20, 28, 29 and 30 will give the error "No data is available 
            for encoding 'code page number'. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.". 
            To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType">
             <summary>
             Specifies EncodingType.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.Auto">
            <summary>
            Calculates Encoding based on Value.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.AutoAscii">
            <summary>
            Calculates ASCII Encoding based on Value.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.Ascii">
            <summary>
            ASCII Encoding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.ExtendedAscii">
            <summary>
            Extended ASCII Encoding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.DoubleDigit">
            <summary>
            Double digit Encoding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.C40">
            <summary>
            C40 Encoding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.Text">
            <summary>
            Text Encoding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.AnsiX12">
            <summary>
            ANSI X12 Encoding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.Edifact">
            <summary>
            EDIFACT Encoding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixEncodingType.Base256">
            <summary>
            Base256 Encoding.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter">
             <summary>
             Specifies the Function Character.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter.Macro05">
            <summary>
            Macro 05 Character.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter.Macro06">
            <summary>
            Macro 06 Character.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter.ReaderProgramming">
            <summary>
            ReaderProgramming Character.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter.FNC1">
            <summary>
            FNC1 Character.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixFunctionCharacter.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize">
             <summary>
             Specifies the symbol size.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.Auto">
            <summary>
            Calculates symbol size based on the value.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R10xC10">
            <summary>
            10 rows by 10 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R12xC12">
            <summary>
            12 rows by 12 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R14xC14">
            <summary>
            14 rows by 14 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R16xC16">
            <summary>
            16 rows by 16 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R18xC18">
            <summary>
            18 rows by 18 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R20xC20">
            <summary>
            20 rows by 20 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R22xC22">
            <summary>
            22 rows by 22 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R24xC24">
            <summary>
            24 rows by 24 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R26xC26">
            <summary>
            26 rows by 26 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R32xC32">
            <summary>
            32 rows by 32 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R36xC36">
            <summary>
            36 rows by 36 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R40xC40">
            <summary>
            40 rows by 40 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R44xC44">
            <summary>
            44 rows by 44 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R48xC48">
            <summary>
            48 rows by 48 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R52xC52">
            <summary>
            52 rows by 52 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R64xC64">
            <summary>
            64 rows by 64 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R72xC72">
            <summary>
            72 rows by 72 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R80xC80">
            <summary>
            80 rows by 80 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R88xC88">
            <summary>
            88 rows by 88 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R96xC96">
            <summary>
            96 rows by 96 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R104xC104">
            <summary>
            104 rows by 104 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R120xC120">
            <summary>
            120 rows by 120 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R132xC132">
            <summary>
            132 rows by 132 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R144xC144">
            <summary>
            144 rows by 144 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R8xC18">
            <summary>
            8 rows by 18 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R8xC32">
            <summary>
            8 rows by 32 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R12xC26">
            <summary>
            12 rows by 26 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R12xC36">
            <summary>
            12 rows by 36 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R16xC36">
            <summary>
            16 rows by 36 columns.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.DataMatrixSymbolSize.R16xC48">
            <summary>
            16 rows by 48 columns.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode">
             <summary>
             Represents a Deutsche Post Identcode barcode.
             </summary> 
            ^DeutschePostIdentcode
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostIdentcode.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode">
             <summary>
             Represents a Deutsche Post Leitcode barcode.
             </summary>
            ^DeutschePostLeitcode
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.DeutschePostLeitcode.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean14">
             <summary>
             Represents an Ean 14 barcode.
             </summary>
             <remarks>This class can be used to place an Ean 14 barcode on a page.</remarks>
            ^Ean14
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean14.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.ExcessDataBarCodeException">
             <summary>
             The exception is thrown when data exceeds capacity of barcode.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.ExcessDataBarCodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.ExcessDataBarCodeException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar">
             <summary>
             Represents a GS1DataBar barcode.
             </summary>
             <remarks>This class can be used to place a GS1DataBar barcode on a page.</remarks>
            ^GS1DataBar
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="gs1type">The GS1DataBarType of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="gs1type">The GS1DataBarType of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="gs1type">The GS1DataBarType of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="gs1type">The GS1DataBarType of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="gs1type">The GS1DataBarType of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="gs1type">The GS1DataBarType of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBar.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType">
             <summary>
             Represents GS1 DataBar types.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType.Omnidirectional">
            <summary>
            Omnidirectional GS1 DataBar type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType.Limited">
            <summary>
            Limited GS1 DataBar type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.GS1DataBarType.Expanded">
            <summary>
            Expanded GS1 DataBar type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Iata25">
             <summary>
             Represents an IATA 2 of 5 barcode.
             </summary>
             <remarks>This class can be used to place an IATA 2 of 5 barcode on a page.</remarks>
            ^Iata25
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Iata25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Iata25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Iata25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Iata25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Iata25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Iata25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Iata25.IncludeCheckDigit">
            <summary>
            Gets or sets a value indicating if the check digit should be added to the value.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode">
             <summary>
             Represents a Intelligent Mail  barcode.
             </summary>
             <remarks>This class can be used to place a Intelligent Mail barcode on a page.</remarks>
            ^IntelligentMailBarCode
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode.#ctor(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode.ShowTextAbove">
            <summary>
            Gets or sets a value indicating if the value should be placed as text above or below the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode.MailerIDLength">
            <summary>
            Gets or sets a value indicating the length of mailer ID.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IntelligentMailBarCode.SymbolHeight">
            <summary>
            Gets the height of the barcode excluding the text height.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidFormatBarCodeException">
             <summary>
             The exception that is thrown when an invalid data format is specified(ex: wrong ECI number format).
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.InvalidFormatBarCodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidFormatBarCodeException"/> class.
            </summary>
            <param name="message">A string that describes the error.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.InvalidFormatBarCodeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidFormatBarCodeException"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidSizeBarCodeException">
             <summary>
             The exception that is thrown when an invalid barcode size specified or the given size is not sufficient for the data.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.InvalidSizeBarCodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidSizeBarCodeException"/> class.
            </summary>
            <param name="message">A string that describes the error.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.InvalidSizeBarCodeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidSizeBarCodeException"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidValueBarCodeException">
             <summary>
             The exception that is thrown when an invalid barcode value exists.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.InvalidValueBarCodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidValueBarCodeException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.InvalidValueBarCodeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.InvalidValueBarCodeException"/> class.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Isbn">
             <summary>
             Represents an ISBN barcode.
             </summary>
             <remarks>This class can be used to place an ISBN barcode on a page.</remarks>
            ^Isbn
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcBase">
             <summary>
             Base class from which UPC, EAN, and JAN barcode page elements are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcBase.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcBase"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcBase.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcBase"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcBase.SetScale(System.Single)">
            <summary>
            Sets the scale of the barcode.
            </summary>
            <param name="scale">The scale to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Isbn.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Isbn"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Isbn.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Isbn"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Isbn.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Isbn.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Isbn.ShowText">
            <summary>
            Gets or sets a value indicating if the ISBN value should be placed as text above the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2">
             <summary>
             Represents an ISBN, 2 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an ISBN, 2 digit supplement barcode on a page.</remarks>
            ^IsbnSup2
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue">The supplemental value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup2.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5">
             <summary>
             Represents an ISBN, 5 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an ISBN, 5 digit supplement barcode on a page.</remarks>
            ^IsbnSup5
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue">The supplemental value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IsbnSup5.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ismn">
             <summary>
             Represents an ISMN barcode.
             </summary>
             <remarks>This class can be used to place an ISMN barcode on a page.</remarks>
            ^Ismn
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ismn.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ismn"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ismn.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ismn"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ismn.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ismn.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Ismn.ShowText">
            <summary>
            Gets or sets a value indicating if the ISMN value should be placed as text above the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2">
             <summary>
             Represents an ISMN, 2 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an ISMN, 2 digit supplement barcode on a page.</remarks>
            ^IsmnSup2
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue">The supplemental value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup2.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5">
             <summary>
             Represents an ISMN, 5 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an ISMN, 5 digit supplement barcode on a page.</remarks>
            ^IsmnSup5
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue">The supplemental value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IsmnSup5.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Issn">
             <summary>
             Represents an ISSN barcode.
             </summary>
             <remarks>This class can be used to place an ISSN barcode on a page.</remarks>
            ^Issn
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Issn.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Issn"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Issn.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Issn"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Issn.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Issn.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Issn.ShowText">
            <summary>
            Gets or sets a value indicating if the ISSN value should be placed as text above the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2">
             <summary>
             Represents an ISSN, 2 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an ISSN, 2 digit supplement barcode on a page.</remarks>
            ^IssnSup2
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue">The supplemental value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup2.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5">
             <summary>
             Represents an ISSN, 5 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an ISSN, 5 digit supplement barcode on a page.</remarks>
            ^IssnSup5
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue">The supplemental value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.IssnSup5.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Itf14">
             <summary>
             Represents an ITF 14 barcode.
             </summary>
             <remarks>This class can be used to place an ITF 14 barcode on a page.</remarks>
            ^Itf14
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Itf14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Itf14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Itf14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Itf14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Itf14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Itf14"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.BearerBarWidthMultiple">
            <summary>
            Gets or sets a value to be multiplied by Xdimension for the width of Bearer Bar.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Itf14.ShowVerticalBearerBars">
            <summary>
            Gets or sets a value indicating if the vertical bearer bars should be displayed.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Kix">
             <summary>
             Represents a Kix(Royal TNT Post) barcode.
             </summary>
             <remarks>This class can be used to place a Kix(Royal TNT Post) barcode on a page.</remarks>
            ^Kix
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Kix.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Kix"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Kix.#ctor(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Kix"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Kix.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Kix.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417">
             <summary>
             Represents a MacroPdf417 barcode.
             </summary>
             <remarks>
             Class can be used to generate more than one PDF417 barcode symbols by taking input
             from the file.
             </remarks>
            ^MacroPdf417.Example1
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417">
             <summary>
             Represents Pdf417 barcode.
             </summary>
             <remarks>
             This class can be used to generate Pdf417 barcode symbol.
            	</remarks>
            ^Pdf417
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.#ctor(System.String,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417"/> class.
            </summary>
            <param name="value">String to be encoded.</param>
            <param name="x">The X coordinate of the PDF417 barcode.</param>
            <param name="y">The Y coordinate of the PDF417 barcode.</param>
            <param name="columns">Columns of the PDF417 barcode.</param>
            <param name="xDimension">The XDimension of the PDF417 barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.#ctor(System.Byte[],System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417"/> class.
            </summary>
            <param name="values">Byte array to be encoded.</param>
            <param name="x">The X coordinate of the PDF417 barcode.</param>
            <param name="y">The Y coordinate of the PDF417 barcode.</param>
            <param name="columns">Columns of the PDF417 barcode.</param>
            <param name="xDimension">The XDimension of the PDF417 barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.GetSymbolWidth">
            <summary>
            Returns the width required to display the PDF417 barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.GetSymbolHeight">
            <summary>
            Returns the height required to display the PDF417 barcode.
            </summary>
            <returns>A value representing the required height.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the PDF417 to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the PDF417's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.Value">
            <summary>
            Gets or sets the value of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.YDimension">
            <summary>
            Gets or sets the yDimension of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.YDimensionsPerInch">
            <summary>
            Gets or sets the YDimensionsPerInch of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.YDimensionsPerCentiMeter">
            <summary>
            Gets or sets the YDimensionsPerCentiMeter of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.YDimensionMils">
            <summary>
            Gets or sets the YDimensionMils of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.YDimensionMilliMeters">
            <summary>
            Gets or sets the YDimensionMilliMeters of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.CompactPdf417">
            <summary>
            Gets or sets the Compact Pdf417.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.Compaction">
            <summary>
            Gets or sets the type of compaction.
            </summary>
            <returns>Returns a <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.Compaction"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.ErrorCorrection">
            <summary>
            Gets or sets the error correction level for the PDF417 barcode.
            </summary>
            <returns>Returns a <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Pdf417.ErrorCorrection"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.#ctor(System.String,System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> class.
            </summary>
            <param name="value">String to be encoded.</param>
            <param name="x">The X coordinate of the macro PDF417 barcode.</param>
            <param name="y">The Y coordinate of the macro PDF417 barcode.</param>
            <param name="columns">Columns of the macro PDF417 barcode.</param>
            <param name="xDimension">The XDimension of the macro PDF417 barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.#ctor(System.Byte[],System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> class.
            </summary>
            <param name="values">Byte array to be encoded.</param>
            <param name="x">The X coordinate of the macro PDF417 barcode.</param>
            <param name="y">The Y coordinate of the macro PDF417 barcode.</param>
            <param name="columns">Columns of the macro PDF417 barcode.</param>
            <param name="xDimension">The XDimension of the macro PDF417 barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.#ctor(System.Byte[],System.Single,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> class.
            </summary>
            <param name="values">Byte array to be encoded.</param>
            <param name="x">The X coordinate of the macro PDF417 barcode.</param>
            <param name="y">The Y coordinate of the macro PDF417 barcode.</param>
            <param name="columns">Columns of the macro PDF417 barcode.</param>
            <param name="rows">Rows of the macro PDF417 barcode.</param>
            <param name="xDimension">The XDimension of the macro PDF417 barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.#ctor(System.String,System.Single,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> class.
            </summary>
            <param name="value">String to be encoded.</param>
            <param name="x">The X coordinate of the macro PDF417 barcode.</param>
            <param name="y">The Y coordinate of the macro PDF417 barcode.</param>
            <param name="columns">Columns of the macro PDF417 barcode.</param>
            <param name="rows">Rows of the macro PDF417 barcode.</param>
            <param name="xDimension">The XDimension of the macro PDF417 barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.SetFileID(System.Int32)">
            <summary>
            Sets the file ID for the macro PDF417 barcode.
            </summary>
            <param name="fileId">The file ID of the macro PDF417 barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.SetFileID(System.Int32[])">
            <summary>
            Sets the file ID using an array of base 900 numbers (0 to 899).
            </summary>
            <param name="fileIdArray">The file ID of the macro PDF417 barcode provided as an array of base 900 numbers (0 to 899).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.GetSymbolWidth">
            <summary>
            Returns the width required to display the macro PDF417 barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.GetSymbolHeight">
            <summary>
            Returns the height required to display the PDF417 barcode.
            </summary>
            <returns>A value representing the required height.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the macro PDF417 to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the macro PDF417's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.GetOverflowMacroPdf417">
             <summary>
             Gets a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> class.
             </summary>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> object.</returns>
             <remarks>This method returns a new <b>MacroPdf417</b> object that contains the remaining data that did not fit.</remarks>
            ^MacroPdf417.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.GetOverflowMacroPdf417(System.Single,System.Single)">
             <summary>
             Gets a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> class.
             </summary>
             <param name="x">The X coordinate of the macro PDF417 barcode.</param>
             <param name="y">The Y coordinate of the macro PDF417 barcode.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417"/> object.</returns>
             <remarks>This method returns a new <b>MacroPdf417</b> object that contains the remaining data that did not fit.</remarks>
            ^MacroPdf417.Example3
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.FileName">
            <summary>
            Gets or sets included file name in the macro PDF417 barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.Sender">
            <summary>
            Gets or sets included sender in the macro PDF417 barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.Address">
            <summary>
            Gets or sets included address in the macro PDF417 barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.IncludeFileSize">
            <summary>
            Specifies whether file size should be included in macro PDF417 barcode or not.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.IncludeCheckSum">
            <summary>
            Specifies whether check sum should be included in macro PDF417 barcode or not.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.IncludeTimeStamp">
            <summary>
            Specifies whether time stamp should be included in macro PDF417 barcode or not.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MacroPdf417.IncludeSegmentCount">
            <summary>
            Specifies whether to include segment count in MacroPDF417 barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode">
             <summary>
             Represents a MSI Barcode (also known as Modified Plessey).
             </summary>
            ^MsiBarcode
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of the barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcode.AppendCheckDigit">
            <summary>
            Gets or sets a value specifying if the check digit should calculated.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcodeCheckDigitMode">
            <summary>
            MSI Barcode check digit modes.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcodeCheckDigitMode.None">
            <summary>
            No check digit.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcodeCheckDigitMode.Mod10">
            <summary>
            check digit of mod 10.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcodeCheckDigitMode.Mod11">
            <summary>
            check digit of mod 11.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcodeCheckDigitMode.Mod1010">
            <summary>
            check digit of mod 1010.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.MsiBarcodeCheckDigitMode.Mod1110">
            <summary>
            check digit of mod 1110.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode">
             <summary>
             Represents a QR code.
             </summary>
             <remarks>
             With some of the .Net runtimes (example: .Net Core 2.0), the Kanchi encoding will give the error 
             "No data is available for encoding 932. For information on defining a custom encoding, 
             see the documentation for the Encoding.RegisterProvider method.". To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
             </remarks>
            ^QrCode
            ^Lic.Generator.Ent
             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="xDimension">The XDimension of QR code.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="xDimension">The XDimension of QR code.</param>
            <param name="encoding">The encoding of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="xDimension">The XDimension of QR code.</param>
            <param name="encoding">The encoding of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding"/>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="encoding">The encoding type of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="encoding">The encoding type of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding"/>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="encoding">The encoding type of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding"/>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
            <param name="version">The version of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="text">The text of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="xDimension">The XDimension of QR code.</param>
            <param name="encoding">The encoding of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding"/>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
            <param name="version">The version of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.Byte[],System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="value">The value of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.Byte[],System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="value">The value of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="xDimension">The XDimension of QR code.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.Byte[],System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="value">The value of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="xDimension">The XDimension of the QR code.</param>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.Byte[],System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="value">The value of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.Byte[],System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="value">The value of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
            <param name="version">The version of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.#ctor(System.Byte[],System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel,ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCode"/> class.
            </summary>
            <param name="value">The value of the QR code.</param>
            <param name="x">The X coordinate of the QR code.</param>
            <param name="y">The Y coordinate of the QR code.</param>
            <param name="xDimension">The XDimension of QR code</param>
            <param name="errorCorrectionLevel">The error correction level of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel"/>
            <param name="version">The version of QR code.</param><see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion"/>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws QR code to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the QR code output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.GetSymbolWidth">
            <summary>
            Returns the width required to display the QR code.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.GetSymbolHeight">
            <summary>
            Returns the height required to display the QR code.
            </summary>
            <returns>A value representing the required height.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.Version">
            <summary>
            Gets the QR code version.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.QrCode.Fnc1">
            <summary>
            Gets or sets FNC1 mode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding">
             <summary>
             The type of encoding mode to use.
             </summary>
             <remarks>
             With some of the .Net runtimes (example: .Net Core 2.0), the Kanchi encoding will give the error 
             "No data is available for encoding 932. For information on defining a custom encoding, 
             see the documentation for the Encoding.RegisterProvider method.". To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
             </remarks>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding.Numeric">
            <summary>
            Encoding mode Numeric. Allows digits 0-9.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding.Alphanumeric">
            <summary>
            Encoding mode Alphanumeric. Allows digits 0-9, upper case letters (no lower case) and the following special characters: space,$,%,*,+,-,.,/,:.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding.Byte">
            <summary>
            Encoding mode Byte. Allows all types of characters.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding.Kanji">
            <summary>
            Encoding mode Kanji. Allows only Kanji characters.
            </summary>
            <remarks>
            With some of the .Net runtimes (example: .Net Core 2.0), the Kanchi encoding will give the error 
            "No data is available for encoding 932. For information on defining a custom encoding, 
            see the documentation for the Encoding.RegisterProvider method.". To resolve this issue refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
            </remarks>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeEncoding.Auto">
            <summary>
            Encoding mode Auto. Automatically selects the encoding mode depending on the content.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeException">
             <summary>
             The exception that is thrown for a QR code error.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeFnc1">
             <summary>
             The type of FNC1 mode to use.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeFnc1.Gs1">
            <summary>
            FNC1 Gs1.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeFnc1.Industry">
            <summary>
            FNC1 Industry.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeFnc1.None">
            <summary>
            FNC1 None.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion">
             <summary>
             The QR code version to use.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version1">
            <summary>
            QR code Version 1.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version2">
            <summary>
            QR code Version 2.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version3">
            <summary>
            QR code Version 3.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version4">
            <summary>
            QR code Version 4.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version5">
            <summary>
            QR code Version 5.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version6">
            <summary>
            QR code Version 6.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version7">
            <summary>
            QR code Version 7.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version8">
            <summary>
            QR code Version 8.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version9">
            <summary>
            QR code Version 9.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version10">
            <summary>
            QR code Version 10.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version11">
            <summary>
            QR code Version 11.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version12">
            <summary>
            QR code Version 12.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version13">
            <summary>
            QR code Version 13.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version14">
            <summary>
            QR code Version 14.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version15">
            <summary>
            QR code Version 15.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version16">
            <summary>
            QR code Version 16.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version17">
            <summary>
            QR code Version 17.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version18">
            <summary>
            QR code Version 18.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version19">
            <summary>
            QR code Version 19.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version20">
            <summary>
            QR code Version 20.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version21">
            <summary>
            QR code Version 21.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version22">
            <summary>
            QR code Version 22.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version23">
            <summary>
            QR code Version 23.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version24">
            <summary>
            QR code Version 24.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version25">
            <summary>
            QR code Version 25.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version26">
            <summary>
            QR code Version 26.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version27">
            <summary>
            QR code Version 27.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version28">
            <summary>
            QR code Version 28.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version29">
            <summary>
            QR code Version 29.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version30">
            <summary>
            QR code Version 30.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version31">
            <summary>
            QR code Version 31.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version32">
            <summary>
            QR code Version 32.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version33">
            <summary>
            QR code Version 33.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version34">
            <summary>
            QR code Version 34.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version35">
            <summary>
            QR code Version 35.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version36">
            <summary>
            QR code Version 36.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version37">
            <summary>
            QR code Version 37.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version38">
            <summary>
            QR code Version 38.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version39">
            <summary>
            QR code Version 39.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Version40">
            <summary>
            QR code Version 40.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeVersion.Auto">
            <summary>
            Default Version Auto.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel">
             <summary>
             The level of error correction to use in the QR code.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel.L">
            <summary>
            Allows recovery of up to 7% data loss.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel.M">
            <summary>
            Allows recovery of up to 15% data loss.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel.Q">
            <summary>
            Allows recovery of up to 25% data loss.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.QrCodeErrorCorrectionLevel.H">
            <summary>
            Allows recovery of up to 30% data loss.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc">
             <summary>
             Represents a RM4SCC(Royal Mail) barcode.
             </summary>
            ^Rm4scc
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc.#ctor(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="showText"><b>true</b> to display value of the barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc.ShowTextAbove">
            <summary>
            Gets or sets a value indicating if the value should be placed as text above or below the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Rm4scc.SymbolHeight">
            <summary>
            Gets the height of the barcode excluding the text height.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.SingaporePost">
             <summary>
             Represents a Singapore Post barcode.
             </summary>
             <remarks>This class can be used to place a Singapore Post barcode on a page.</remarks>
            ^SingaporePost
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.SingaporePost.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.SingaporePost"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.SingaporePost.#ctor(System.String,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.SingaporePost"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.SingaporePost.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.SingaporePost.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar">
             <summary>
             Represents a StackedGS1DataBar barcode.
             </summary>
             <remarks>This class can be used to place a StackedGS1DataBar barcode on a page.</remarks>
            ^StackedGS1DataBar
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="rowHeight">The row height of the barcode.</param>
            <param name="gs1type">The StackedGS1DataBarType of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="rowHeight">The row height of the barcode.</param>
            <param name="gs1type">The StackedGS1DataBarType of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="rowHeight">The row height of the barcode.</param>
            <param name="gs1type">The StackedGS1DataBarType of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="rowHeight">The row height of the barcode.</param>
            <param name="gs1type">The StackedGS1DataBarType of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="rowHeight">The row height of the barcode.</param>
            <param name="gs1type">The StackedGS1DataBarType of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="rowHeight">The row height of the barcode.</param>
            <param name="gs1type">The StackedGS1DataBarType of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.GetSymbolHeight">
            <summary>
            Returns the height required to display the full barcode.
            </summary>
            <returns>A value representing the required height.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the StackedGS1DataBar barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the StackedGS1DataBar barcode's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.PixelsPerXDimension">
            <summary>
            Gets or Sets the number of Pixels to write per xDimension
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.X">
            <summary>
            Gets or sets the X coordinate of the  barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.Y">
            <summary>
            Gets or sets the Y coordinate of the  barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.Angle">
            <summary>
            Gets or sets the angle of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.XDimension">
            <summary>
            Gets or sets the xDimension of the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.ExpandedStackedSegmentCount">
            <summary>
            Gets or Sets the segment count of the Expanded Stacked barcode.
            </summary>
            <remarks>This is used only for the ExpandedStacked Gs1DataBar type.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.RowCount">
            <summary>
            Gets the row count.
            </summary>
            <remarks>Linear barcode symbol structure is considered as a Row, Seperator patterns count is excluded if present.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.RowHeight">
            <summary>
            Gets or Sets the row height of the Barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.ShowText">
            <summary>
            Gets or Sets a boolean indicating whether the text to be displayed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.TextColor">
            <summary>
            Gets or set the color of the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.Color">
            <summary>
            Gets or sets the color for the barcode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.Font">
            <summary>
            Gets or sets the font to use when displaying the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.TextAlign">
            <summary>
            Gets or sets the alignment to use when displaying the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBar.FontSize">
            <summary>
            Gets or sets the font size to use when displaying the text.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType">
             <summary>
             Represents Stacked GS1 DataBar types.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType.Stacked">
            <summary>
            Stacked type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType.StackedOmnidirectional">
            <summary>
            Stacked Omnidirectional type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.StackedGS1DataBarType.ExpandedStacked">
            <summary>
            Expanded stacked type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Border">
            <summary>
            Represents a border with color, width and line style.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Border.Width">
            <summary>
            Gets or sets the width of the border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Border.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Border.Color"/> of the border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Border.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Border.LineStyle"/> of the border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Border.Top">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellBorderStyle"/> object for the top border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Border.Bottom">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellBorderStyle"/> object for the bottom border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Border.Left">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellBorderStyle"/> object for the left border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Border.Right">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellBorderStyle"/> object for the right border.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Cell2">
             <summary>
             Represents a cell in the Table
             </summary>
            ^Cell
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Splittable">
            <summary>
            Gets or sets a value specifying whether the cell can be splittable.
            </summary>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Text">
            <summary>
            Gets or sets the text to be displayed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Element">
            <summary>
            Gets or sets the page element contained in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Padding">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object to use for the cell. 
            </summary>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Border">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Cell2.Border"/> object to use for the cell. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.FontSize">
            <summary>
            Gets or sets the font size to use for the text in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Cell2.Font"/> object to use for the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Row">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> that the cell is contained in.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.ColumnIndex">
            <summary>
            Gets the index of the <see cref="T:ceTe.DynamicPDF.PageElements.Column2"/> in which the cell begins.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.ColumnSpan">
            <summary>
            Gets or sets the number of columns that the cell spans.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.RowSpan">
            <summary>
            Gets or sets the number of rows that the cell spans.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Width">
            <summary>
            Gets the width of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Height">
            <summary>
            Gets the height of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the background of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration to use for the horizontal alignment of the text in the cell.
            Justify and FullJustify are applicable only for text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Cell2.VAlign"/> enumeration to use for the vertical alignment of the text in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.AutoLeading">
            <summary>
            Gets or sets whether the leading of the cell should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.PageElements.Cell2.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Leading">
            <summary>
            Gets or sets the leading for the text of the cell.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.PageElements.Cell2.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indent for the paragraphs of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.RightToLeft">
            <summary>
            Gets or sets a value specifying whether the text in the cell will be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Underline">
            <summary>
            Gets or sets a value specifying whether the text in the cell will be underlined. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.Tag">
             <summary>
             Gets or sets the structure element of the cell.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2.TagOrder">
            <summary>
            Gets or sets the structure element order of the cell.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.CellDefault">
            <summary>
            Represents the default value of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.CellDefault.Font"/> object to use for the row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.FontSize">
            <summary>
            Gets or sets the font size to use for the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration to use for the horizontal alignment of each cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.CellDefault.VAlign"/> enumeration to use for the vertical alignment of each cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the background of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.AutoLeading">
            <summary>
            Gets or sets whether the leading of the cell should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.PageElements.CellDefault.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.Leading">
            <summary>
            Gets or sets the leading for the text of the cell.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.PageElements.CellDefault.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indent for the paragraphs of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.RightToLeft">
            <summary>
            Gets or sets a value specifying whether the text in the cell will be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.Underline">
            <summary>
            Gets or sets a value specifying whether the text in the cell will be underlined. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.Padding">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object for the cells.  
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellDefault.Border">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.CellDefault.Border"/> object for the cells.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Cell2List">
             <summary>
             Represents a list of cells.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example1
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String,System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example2 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String,ceTe.DynamicPDF.Font,System.Nullable{System.Single})">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <param name="font">Font for the text in the cell.</param>
             <param name="fontSize">Font size for the text in the cell.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example3 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String,ceTe.DynamicPDF.Font,System.Nullable{System.Single},System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <param name="font">Font for the text in the cell.</param>
             <param name="fontSize">Font size for the text in the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example4 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String,ceTe.DynamicPDF.Font,System.Nullable{System.Single},System.Int32,System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <param name="font">Font for the text in the cell.</param>
             <param name="fontSize">Font size for the text in the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <param name="rowSpan">Number of rows that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example5 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String,System.Int32,System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <param name="rowSpan">Number of rows that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example6 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String,ceTe.DynamicPDF.Font,System.Nullable{System.Single},ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <param name="font">Font for the text in the cell.</param>
             <param name="fontSize">Font size for the text in the cell.</param>
             <param name="textColor">Color for the text in the cell.</param>
             <param name="backColor">Background color for the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example7 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(System.String,ceTe.DynamicPDF.Font,System.Nullable{System.Single},ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Int32,System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/>.
             </summary>
             <param name="text">Text to be displayed in the cell.</param>
             <param name="font">Font for the text in the cell.</param>
             <param name="fontSize">Font size for the text in the cell.</param>
             <param name="textColor">Color for the text in the cell.</param>
             <param name="backColor">Background color for the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <param name="rowSpan">Number of rows that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any text to a cell in a table.</remarks>
            ^Cell2List.Example8 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(ceTe.DynamicPDF.PageElement)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/> with the specified page element.
             </summary>
             <param name="element">Page element to be displayed in the cell.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any page element to the table.  Note that a page element should only be added to the cell directly if that page element impliments <see cref="T:ceTe.DynamicPDF.PageElements.IArea"/>.  If the page element does not impliment IArea then it is recommended you place your page element(s) in an <see cref="T:ceTe.DynamicPDF.PageElements.AreaGroup"/>.  This will assuree that the row will adjust to the height of the page element as needed.</remarks>
            ^Cell2List.Example9
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(ceTe.DynamicPDF.PageElement,System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/> with the specified page element.
             </summary>
             <param name="element">Page element to be displayed in the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any page element to the table.  Note that a page element should only be added to the cell directly if that page element impliments <see cref="T:ceTe.DynamicPDF.PageElements.IArea"/>.  If the page element does not impliment IArea then it is recommended you place your page element(s) in an <see cref="T:ceTe.DynamicPDF.PageElements.AreaGroup"/>.  This will assuree that the row will adjust to the height of the page element as needed.</remarks>
            ^Cell2List.Example10 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.Add(ceTe.DynamicPDF.PageElement,System.Int32,System.Int32)">
             <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/> with the specified page element.
             </summary>
             <param name="element">Page element to be displayed in the cell.</param>
             <param name="colSpan">Number of columns that the cell will span.</param>
             <param name="rowSpan">Number of rows that the cell will span.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> object.</returns>
             <remarks>This method is used to add any page element to the table.  Note that a page element should only be added to the cell directly if that page element impliments <see cref="T:ceTe.DynamicPDF.PageElements.IArea"/>.  If the page element does not impliment IArea then it is recommended you place your page element(s) in an <see cref="T:ceTe.DynamicPDF.PageElements.AreaGroup"/>.  This will assuree that the row will adjust to the height of the page element as needed.</remarks>
            ^Cell2List.Example11 
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Cell2List.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/>.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2List.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell2List.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel">
             <summary>
             Represents the Data label position.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel">
             <summary>
             This class represents the PercentageDataLabel.
             </summary>
            ^PercentageDataLabel
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel">
             <summary>
             The base class from which data labels are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Font"/> object to use for the font of the XYDataLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.FontSize">
            <summary>
            Gets or sets the FontSize of the XYDataLabel. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Width">
            <summary>
            Gets or sets the width of the data label. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Align">
            <summary>
            Gets or sets the alignment of the data label. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Position">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition"/> object to use for the position of the data label. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Padding">
            <summary>
            Gets or sets the space between the x and y intersection point and data label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Angle">
            <summary>
            Gets or sets the angle of the data label. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.WrapText">
            <summary>
            Gets or sets the text wrapping of the data label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Color"/> object to use for the color of the XYDataLabel. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Suffix">
            <summary>
            Gets or sets the suffix of the XYDataLabel. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Prefix">
            <summary>
            Gets or sets the prefix of the XYDataLabel. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Seperator">
            <summary>
            Gets or sets the separator of the XYDataLabel.  
            </summary>
            <remarks><font color="red">NOTE: This property is obsolete.</font>Use Separator property instead.</remarks> 
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYDataLabel.Separator">
            <summary>
            Gets or sets the separator of the XYDataLabel.  
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showPosition">Visible status for the position of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showPercentage">Visible status of the series value in percentage.</param>
            <param name="showPosition">Visible status for the position of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.#ctor(ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> class. 
            </summary>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/>of the percentage data label.</param>
            <param name="fontSize">Size of the percentage data label.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the percentage data label.</param>
            <param name="showValue">Visible status of the series value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.ShowValue">
            <summary>
            Gets or sets visible status of the series value. By default it is false. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.ShowPercentage">
            <summary>
            Gets or sets visible status of the series value as a percentage. By default it is false.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.ShowPosition">
            <summary>
            Gets or sets visible status for the position of the series value. By default it is false.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel.ShowSeries">
            <summary>
            Gets or sets visible status of the series name. By default it is false.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showPosition">Visible status for the position of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showPercentage">Visible status of the series value in percentage.</param>
            <param name="showPosition">Visible status for the position of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel.#ctor(ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> class. 
            </summary>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/>of the percentage data label.</param>
            <param name="fontSize">Size of the percentage data label.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the percentage data label.</param>
            <param name="showValue">Visible status of the series value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel.Location">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.DataLabelLocation"/> object to use for the location of the data label. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel">
             <summary>
             Represents the Data label position.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel">
             <summary>
             This class represents the ValuePositionDataLabel.
             </summary>
            ^ValuePositionDataLabel
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value</param>
            <param name="showPosition">Visible status for the position of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel.#ctor(ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> class. 
            </summary>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/>of the value position data label.</param>
            <param name="fontSize">Size of the value position data label.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/>of the value position data label.</param>
            <param name="showValue">Visible status of the series value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel.ShowValue">
            <summary>
            Gets or sets visible status of the SeriesValue. By default it is false.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel.ShowPosition">
            <summary>
            Gets or sets visible status for the position of the SeriesValue. By default it is false. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel.ShowSeries">
            <summary>
            Gets or sets visible status of the SeriesName. By default it is false. 
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the series value</param>
            <param name="showPosition">Visible status for the position of the series value.</param>
            <param name="showSeries">Visible status of the series name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel.#ctor(ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> class. 
            </summary>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/>of the value position data label.</param>
            <param name="fontSize">Size of the value position data label.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/>of the value position data label.</param>
            <param name="showValue">Visible status of the series value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel.Location">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.DataLabelLocation"/> object to use for the location of the data label. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.DataLabelAlign">
            <summary>
            Specifies alignment of the data label text.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelAlign.Left">
            <summary>
            Align left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelAlign.Center">
            <summary>
            Align center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelAlign.Right">
            <summary>
            Align right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelAlign.Justify">
            <summary>
            Align justify.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelAlign.Auto">
            <summary>
            Align Auto.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.DataLabelLocation">
             <summary>
             Represents the Bar column charts data label location.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelLocation.End">
            <summary>
            Location End of the value.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelLocation.Middle">
            <summary>
            Location Middle of the value.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelLocation.Base">
            <summary>
            Location Base of the value.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelLocation.Default">
            <summary>
            Location Base of the value.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition">
             <summary>
             Represents the data label position.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition.Left">
            <summary>
            Left Places the data label in the left side of the x and y intersection point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition.Right">
            <summary>
            Right Places the data label in the right side of the x and y intersection point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition.Above">
            <summary>
            Above Places the data label in the top of the x and y intersection point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition.Below">
            <summary>
            Below Places the data label in the bottom of the x and y intersection point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition.Center">
            <summary>
            Center Places the data label in the center of the x and y intersection point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DataLabelPosition.Auto">
            <summary>
            Center Places the data label in the center of the x and y intersection point.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.LayOut">
             <summary>
             Represents the layout.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LayOut.Horizontal">
            <summary>
            Horizontal layout.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LayOut.Vertical">
            <summary>
            Vertical layout.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement">
             <summary>
             Represents the placement of the legend.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.TopCenter">
            <summary>
            Legend placement top center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.TopRight">
            <summary>
            Legend placement top right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.TopLeft">
            <summary>
            Legend placement top left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.LeftCenter">
            <summary>
            Legend placement left center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.RightCenter">
            <summary>
            Legend placement right center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.BottomCenter">
            <summary>
            Legend placement bottom center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.BottomLeft">
            <summary>
            Legend placement bottom left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.LegendPlacement.BottomRight">
            <summary>
            Legend placement bottom right.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.CellBorderStyle">
            <summary>
            Represents the style of the border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellBorderStyle.Width">
            <summary>
            Gets or sets the width of the border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellBorderStyle.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.CellBorderStyle.Color"/> of the border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellBorderStyle.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.CellBorderStyle.LineStyle"/> of the border.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.SeriesBase">
             <summary>
             The base class from which all the Series are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.PlotAreaElement">
             <summary>
             Base class from which series and series elements are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotAreaElement.Legend">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.PlotAreaElement.Legend"/> object of the PlotAreaElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotAreaElement.PlotArea">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.PlotAreaElement.PlotArea"/> object of the PlotAreaElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.SeriesBase.DrawBehindAxis">
            <summary>
            Gets or sets the position of the Series either below or above the axis. By default it is true.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList">
             <summary>
             This class represents the XAxisList of the plot area.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList"/> object.
            </summary>
            <param name="xAxis">The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis"/> to be displayed in the plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis"/> at the given index.
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.Count">
            <summary>
            Gets the number of elements actually contained in the XAxis List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.DefaultNumericAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.NumericXAxis"/> object to use for the default numeric xAxis of the plot area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.DefaultIndexedAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.IndexedXAxis"/> object to use for the default indexed xAxis of the plot area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.DefaultDateTimeAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.DateTimeXAxis"/> object to use for the default dateTime xAxis of the plot area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.DefaultPercentageAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList.PercentageXAxis"/> object to use for the default percentage xAxis of the plot area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList">
             <summary>
             This class represents the YAxisList of the plot area.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis"/> to be displayed in the plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis"/> at the given index. 
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.Count">
            <summary>
            Gets the number of elements actually contained in the yAxis llist.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.DefaultNumericAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.NumericYAxis"/> object to use for the default numeric yAxis of the plot area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.DefaultIndexedAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.IndexedYAxis"/> object to use for the default indexed yAxis of the plot area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.DefaultDateTimeAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.DateTimeYAxis"/> object to use for the default dateTime yAxis of the plot area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.DefaultPercentageAxis">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList.PercentageYAxis"/> object to use for the default percentage yAxis of the plot area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Column2">
             <summary>
             Represents a column in a table.
             </summary>
            ^Column
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Column2.Width">
            <summary>
            Gets the width of the column.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Column2.CellDefault">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Column2.CellDefault"/> object of the cells in the column.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Column2List">
             <summary>
             Represents a list of columns in a table.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Column2List.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Column2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Column2List"/>
            </summary>
            <param name="width">Width of the column to be added.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Column2"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Column2List.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.PageElements.Column2List"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.PageElements.Column2List"/>.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Column2List.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:ceTe.DynamicPDF.PageElements.Column2List"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Column2List.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Column2"/> at the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.BorderThickness">
            <summary>
            Specifies the thickness of the border for FormFields. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.BorderThickness.Thin">
            <summary>
            BorderThickness as thin.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.BorderThickness.Medium">
            <summary>
            BorderThickness as medium.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.BorderThickness.Thick">
            <summary>
            BorderThickness as Thick.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.ChoiceItem">
            <summary>
            Represents the Item details for choice field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceItem.ItemName">
            <summary>
            Gets the ItemName of the item in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceItem.ExportValue">
            <summary>
            Gets or Sets the ExportValue of the item in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceItem.Selected">
            <summary>
            Gets or Sets the item is selected.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceItem.Default">
            <summary>
            Gets the item is default selected.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList">
             <summary>
             Represents the ChoiceItemList which holds the item of choice field of interactive forms.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Add(System.String)">
            <summary>
            Adds the item to the list. No duplicate items are allowed.
            </summary>
            <param name="itemName">ItemName to be added to the list.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Add(System.String,System.String)">
            <summary>
            Adds the item to the list. No duplicate items are allowed.
            </summary>
            <param name="itemName">ItemName to be added to the list.</param>
            <param name="exportValue">ExportValue for the item.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Add(System.String,System.Boolean)">
            <summary>
            Adds the item to the list. No duplicate items are allowed.
            </summary>
            <param name="itemName">ItemName to be added to the list.</param>
            <param name="selected">The item to be selected.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Add(System.String,System.String,System.Boolean)">
            <summary>
            Adds the item to the list. No duplicate items are allowed.
            </summary>
            <param name="itemName">ItemName to be added to the list.</param>
            <param name="exportValue">ExportValue for the item.</param>
            <param name="selected">The item to be selected.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Remove(System.Int32)">
            <summary>
            Removes the item from the list.
            </summary>
            <param name="index">Item index to be removed from the list.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Count">
            <summary>
            Gets the number of items available in the item list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.ChoiceItem"/> from the list with a given index.
            </summary>
            /// <param name="index">Item index in the list.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceItemList.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.ChoiceItem"/> from the list with the given item name.
            </summary>
            <param name="itemName">Item name in the list.</param>
            <returns></returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.SignatureField">
             <summary>
             Base class representing a signature field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormField">
             <summary>
             Represents a PDF form field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormField.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the form field to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the form field's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormField.DrawDictionary(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the form field's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.IsAnnotation">
            <summary>
            Gets or sets a value indicating if the form field is an annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.HasValue">
            <summary>
            Gets a value indicating if the form field has a value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Value">
            <summary>
            Gets or sets the value of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.InheritsName">
            <summary>
            Gets a value indicating if the form field inherits its name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.InheritsValue">
            <summary>
            Gets a value indicating if the form field inherits its value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.IsReadOnly">
            <summary>
            Gets or sets a value indicating if the form field is read only.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.ChildFields">
            <summary>
            Gets a collection of child form fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Flags">
            <summary>
            <font color="red">Obsolete.</font> Gets flag status of a form field.
            </summary>
            <remarks><font color="red">NOTE: This property is obsolete.</font> Instead use relevant flag name properties present on the PdfFormField class.</remarks>        
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.HasChildFields">
            <summary>
            Gets a value indicating if there are child form fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.FullName">
            <summary>
            Gets the full name of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Name">
            <summary>
            Gets or sets the name of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.AlternateName">
            <summary>
            Gets or sets the alternate name of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.MappingName">
            <summary>
            Gets or sets the mapping name of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Parent">
            <summary>
            Gets the parent form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Form">
            <summary>
            Gets the form containing this form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.BorderStyle">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.Forms.FormField.BorderStyle"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.BorderColor">
            <summary>
            Gets the border color of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.BackgroundColor">
            <summary>
            Gets the background color of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.TextColor">
            <summary>
            Gets the color of the text for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Rotate">
            <summary>
            Gets the angle of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.FontSize">
            <summary>
            Gets or Sets the font size for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.UseSubstituteFont">
            <summary>
            Gets or Sets whether to use SubstituteFont if the Font assigned is not found.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.Output">
            <summary>
            Gets or Sets output options for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormField.ResourceType">
            <summary>
            Gets the resource type.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.SignatureField.DrawDictionary(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the signature field's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.Signature">
             <summary>
             Represents a Signature form field.
             </summary>
             <remarks>
             <font color="red"><b>NOTE:</b> This class required the .NET Framework 2.0 or greater.</font><p/>
             The signature can be of visible or invisible. Use this constructor to create a visible signature field. For creating a invisible field refer
             <see cref="M:ceTe.DynamicPDF.Document.Sign(System.String,ceTe.DynamicPDF.Certificate)"/>. A signature field that does not have corresponding entry at <see cref="M:ceTe.DynamicPDF.Document.Sign(System.String,ceTe.DynamicPDF.Certificate)"/> will behave as empty 
             signature field and can be signed later. <br/> The visible signature field is divided into three panels.     
             <list type="bullet">
             		<item>
             			<term>Left or Top Panel</term>
             			<description>By default this panel holds the subject name of the given certificate.</description>
             		</item>
             		<item>
             			<term>Right or Bottom Panel</term>
             			<description>This panel is set to hold information related with certificate and the signer.</description>
             		</item>
             		<item>
             			<term>Full Panel</term>
             			<description>This panel constitutes complete area of the signature. It does not hold any default values, but can be used to show 
             up full area text or image.</description>
             		</item>
             	</list>
             </remarks>
            ^Signature
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.FormElement">
             <summary>
             Class represents the base class for all the form field page elements.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.FormElement.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.FormElement"/>.
            </summary>
            <param name="name"> Name of a form field. </param>
            <param name="x"> X coordinate of a form field. </param>
            <param name="y"> Y coordinate of a form field. </param>
            <param name="width"> Width of a form field. </param>
            <param name="height"> Height of a form field. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.X">
            <summary>
            Gets or Sets the X coordinate of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Y">
            <summary>
            Gets or Sets the Y coordinate of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Width">
            <summary>
            Gets or Sets the width of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Height">
            <summary>
            Gets or Sets the height of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Rotate">
            <summary>
            Gets or Sets the angle of a form field.
            Rotation angle should be multiple of 90, default is 0.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Name">
            <summary>
            Gets or Sets the name of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.ToolTip">
            <summary>
            Gets or Sets an alternate field name, of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.MappingName">
            <summary>
            Gets or Sets an mapping name, of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.TextColor">
            <summary>
            Gets or Sets the color of the text for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.ReadOnly">
            <summary>
            Gets or Sets the read only property status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.BorderStyle">
            <summary>
            Gets or Sets the <see cref="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.BorderStyle"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.BorderColor">
            <summary>
            Gets or Sets the border color of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.BackgroundColor">
            <summary>
            Gets or Sets the fill/background color of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Visible">
            <summary>
            Gets or Sets the form field visible on Pdf. By default its true.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Printable">
            <summary>
            Gets or Sets the form field printable on Pdf. By default its true.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.ReaderEvents">
            <summary>
            Gets the reader events of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Tag">
             <summary>
             Gets or sets the structure element of the form element.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.FormElement.Output">
            <summary>
            Gets or sets output options for the field.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.Signature.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the signature.
            </summary>
            <remarks>
            <font color="red"><b>NOTE:</b> This class required the .NET Framework 2.0 or greater.</font><p/>
            Assigning zero to x,y,height and width will make the signature as invisible although required resources will be added. This method 
            is not recommended and advised to call <see cref="M:ceTe.DynamicPDF.Document.Sign(System.String,ceTe.DynamicPDF.Certificate)"/> directly without adding any signature field with corresponding name.
            </remarks>
            <param name="name">Name of a signature field.</param>
            <param name="x">X coordinate of a signature.</param>
            <param name="y">Y coordinate of a signature.</param>
            <param name="width">Width of a signature.</param>
            <param name="height">Height of a signature.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.Signature.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the signature to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the signature's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.Signature.HideAllText">
            <summary>
            Hides all text visibility in all the panels.
            </summary>
            <remarks>
            Sets the custom text in all panels to null if any set.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Signature.PanelLayout">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanelLayout"/> specifying how the panels should be laidout.
            </summary>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Signature.LeftPanel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel"/> for the left panel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Signature.RightPanel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel"/> for the right panel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Signature.FullPanel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel"/> for the full panel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Signature.Reason">
            <summary>
            Gets or sets a value indicating the reason of signing the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Signature.Location">
            <summary>
            Gets or sets a value indicating the location of signing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Signature.Font">
            <summary>
            Gets or sets <see cref="P:ceTe.DynamicPDF.PageElements.Forms.Signature.Font"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel">
            <summary>
            Represents a panel in the visible signature.
            </summary>
            <remarks>
            <font color="red"><b>NOTE:</b> This class required the .NET Framework 2.0 or greater.</font>
            Visible signature area will be divides in to three panels. Left or Top panel, Right or Bottom Panel and Full panel.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.HideAllText">
            <summary>
            Hides all text visibility for the panel. <see cref="M:ceTe.DynamicPDF.PageElements.Forms.Signature.HideAllText"/> for hiding all the text in all the panels.
            </summary>
            <remarks>
            Custom message string will also set to null.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.SetImage(System.String)">
            <summary>
            Sets the image to the panel.
            </summary>
            <param name="filePath">Full path of the image file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.SetImage(System.Byte[])">
            <summary>
            Sets the image to the panel.
            </summary>
            <param name="data">Byte array containing a valid image data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.SetImage(System.IO.Stream)">
            <summary>
            Sets the image to the panel.
            </summary>
            <param name="stream">Stream containing the image data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.SetImage(ceTe.DynamicPDF.Imaging.ImageData)">
            <summary>
            Sets the image to the panel.
            </summary>
            <param name="imageData">Instance of ImageData.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ShowLabels">
            <summary>
            Gets or sets a value indicating if the signature information should include a label.
            </summary>
            <remarks>
            Default is true. Disabling this option will cause a new line for each information item.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.TextRightToLeft">
            <summary>
            Gets or sets a value indicating if text should be displayed right to left.
            </summary>
            <remarks>
            Default is false.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ShowDistinguishedName">
            <summary>
            Gets or sets a value indicating if the distinguished name (Certificate Subject) should be displayed.
            </summary>
            <remarks>
            Default - true[only for Right or Bottom]. Label for this information is DN.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ShowSubjectName">
            <summary>
            Gets or sets a value indicating if the Subject Name from the certificate should be displayed.
            </summary>
            <remarks>
            Default - true[only for Left or Top]. There is no label for this.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ShowDate">
            <summary>
            Gets or sets a value indicating if the full date of signing should be displayed.
            </summary>
            <remarks>
            Default - true[only for the right or bottom panel].
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ShowDigitallySignedBy">
            <summary>
            Gets or sets a value indicating if 'Digitally Signed By {Subject name}' should be displayed.
            </summary>
            <remarks>
            Default - true[only for the right or bottom panel].
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ShowReason">
            <summary>
            Gets or sets a value indicating if the reason.
            </summary>
            <remarks>
            Default - true[only for the right or bottom panel]. It also requires <see cref="P:ceTe.DynamicPDF.PageElements.Forms.Signature.Reason"/> should be set.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ShowLocation">
            <summary>
            Gets or sets a value indicating display of location.
            </summary>
            <remarks>
            Default - true[only for the right or bottom panel]. It also requires <see cref="P:ceTe.DynamicPDF.PageElements.Forms.Signature.Location"/> should be set.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.KeepImagePropotional">
            <summary>
            Gets or sets a value for maintaining image proportion when <see cref="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.FitImage"/> is set to true.
            </summary>
            <remarks><font color="red">NOTE: This property is obsolete.</font>Use KeepImageProportional property instead.</remarks> 
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.KeepImageProportional">
            <summary>
            Gets or sets a value for maintaining image proportion when <see cref="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.FitImage"/> is set to true.
            </summary>
            <remarks>
            Default is true.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.FitImage">
            <summary>
            Gets or sets a value for resizing the given image to get fit with the panel area.
            </summary>
            <remarks>
            Default is true.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.FontSize">
            <summary>
            Gets or sets a int indicating the font size.
            </summary>
            <remarks>
            By assigning a value more than zero, will override automatic font size adjustment to make the best fit of text in the panel.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.CustomMessage">
            <summary>
            Gets or sets a string for the custom message.
            </summary>
            <remarks>
            Will be get append at the end of the message relevant to the panel.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.TextAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.TextAlign"/> enum that specifies the text align inside the panel.
            </summary>
            <remarks>
            Default will be left align.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.ImageData">
            <summary>
            Gets or sets <see cref="T:ceTe.DynamicPDF.Imaging.ImageData"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel.TextColor">
            <summary>
            Gets or sets text color.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanelLayout">
             <summary>
             Specifies the panel layout in the signature field.
             </summary>
             <remarks>
             <font color="red"><b>NOTE:</b> This enumeration required the .NET Framework 2.0 or greater.</font>
             </remarks>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.SignaturePanelLayout.Auto">
            <summary>
            Automatically decided based on the signature field height and width.
            </summary>
            <remarks>
            This will makes the panel as LeftAndRight if the signature fields width is higher than or equal to the height else TopAndBottom.
            </remarks>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.SignaturePanelLayout.LeftAndRight">
            <summary>
            Sets the panels at Left and Right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.SignaturePanelLayout.TopAndBottom">
            <summary>
            Sets the panels at Top and Bottom.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser">
            <summary>
            Summary description for CssParser.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.ReadPropertyName">
            		  skip any extra spaces and characters,
            		  read untill the ':' this char is not found,
            		  Generate hashcode.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.IsNotSelectorEnd">
            			skip any extra spaces and chars.
            			check the char '{' is found or not.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.IsEnd">
                        skip any extra spaces and chars.
                        check the char '}' is found or not.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.SkipComments">
                        assign postion to tempposition.
                        read the char untill '{' is not found.
                        count the selectors based on the ',' this char.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.ReadString">
            		 read char by char untill any space or ';' or '}' char is not found.
            		 skip any extra spaces and chars.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.ReadFontString">
                      read char by char untill any ';' or ',' or '} char is not found'
                      skip single or double quotes and also skip any extra spaces and chars.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.ReadUrlString">
            		 read char by char between '(' and ')'.
            		 skip any spaces and chars.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.ReadPositionValue">
            			skip any extra spaces and chars.
            			char is number, read char by char then return as string.
            			char is not a number, read char by char untill any space or ';' or '}' char is not found, then return string.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.DetermineWord">
            		 skip the position char is equal to ':' this char, and also skip any extra spaces and chars.
            		 check the char is greater than space and is not equal to ';' this char.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.IsPositiveNumber">
            		 skip the position char is equal to ':' this char, and also skip any extra spaces and chars.
            		 check the position of char is equal to number.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.IsNegativeNumber">
            		 skip the position char is equal to ':' this char, and also skip any extra spaces and chars.
            		 check the position and position + 1 is equal to '-' and number respectively.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.CSS.CssParser.IsNext">
            		 skip any extra spaces and chars.
            		 check the position of char is equal to uppercase char or lowercase char or any number or '#' or '-'.
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea">
             <summary>
             Represents a HTML Area page element.
             </summary>
             <remarks> With some of the .Net runtimes (example: .Net Core 2.0), HTML Area will give the error "No data is available for encoding 1252. 
             For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.".
             To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a> 
             </remarks>
            ^HtmlArea.Example1
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.IArea">
            <summary>
            Represents a contract defining an area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IArea.Width">
            <summary>
            Gets or sets the width of the area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IArea.Height">
            <summary>
            Gets or sets the height of the area.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.#ctor(System.Uri,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> class.
            </summary>
            <param name="uri">Physical file path of the HTML Area.</param>
            <param name="x">X coordinate of the HTML Area.</param>
            <param name="y">Y coordinate of the HTML Area.</param>
            <param name="width">Width of the HTML Area.</param>
            <param name="height">Height of the HTML Area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.#ctor(System.Uri,System.Single,System.Single,System.Uri,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> class.
            </summary>
            <param name="uri">Physical file path of the HTML Area.</param>
            <param name="x">X coordinate of the HTML Area.</param>
            <param name="y">Y coordinate of the HTML Area.</param>
            <param name="baseHref">Basehref of the HTML Area.</param>
            <param name="width">Width of the HTML Area.</param>
            <param name="height">Height of the HTML Area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.#ctor(System.IO.Stream,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the HTML data.</param>
            <param name="x">X coordinate of the HTML Area.</param>
            <param name="y">Y coordinate of the HTML Area.</param>
            <param name="width">Width of the HTML Area.</param>
            <param name="height">Height of the HTML Area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.#ctor(System.IO.Stream,System.Single,System.Single,System.Uri,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the HTML data.</param>
            <param name="x">X coordinate of the HTML Area.</param>
            <param name="y">Y coordinate of the HTML Area.</param>
            <param name="baseHref">Basehref of the HTML Area.</param>
            <param name="width">Width of the HTML Area.</param>
            <param name="height">Height of the HTML Area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> class.
            </summary>
            <param name="text">Text to display in the HTML Area.</param>
            <param name="x">X coordinate of the HTML Area.</param>
            <param name="y">Y coordinate of the HTML Area.</param>
            <param name="width">Width of the HTML Area.</param>
            <param name="height">Height of the HTML Area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.#ctor(System.String,System.Single,System.Single,System.Uri,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> class.
            </summary>
            <param name="text">Text to display in the HTML Area.</param>
            <param name="x">X coordinate of the HTML Area.</param>
            <param name="y">Y coordinate of the HTML Area.</param>
            <param name="baseHref">Basehref of the HTML Area.</param>
            <param name="width">Width of the HTML Area.</param>
            <param name="height">Height of the HTML Area.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the HTML area to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the HTML area's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.GetOverflowHtmlArea(System.Single,System.Single,System.Single)">
             <summary>
             Returns a new <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> object containing the overflow html area.
             </summary>
             <param name="x">X coordinate of the new object.</param>
             <param name="y">Y coordinate of the new object.</param>
             <param name="height">Height of the new object.</param>
             <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> if there is overflow html area; otherwise, <b>null</b>.</returns>
             <remarks>This method returns a new <b>HTML area</b> object that contains the remaining html area that did not fit.</remarks>
            ^HtmlArea.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.GetOverflowHtmlArea">
             <summary>
             Returns a new <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> object containing the overflow html area.
             </summary>
             <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> if there is overflow html area; otherwise, <b>null</b>.</returns>
             <remarks>This method returns a new <b>HTML area</b> object that contains the remaining html area that did not fit.</remarks>
            ^HtmlArea.Example3
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlArea.GetRequiredHeight">
            <summary>
            Returns the height required to fit html file.
            </summary>
            <returns>The required height to display html file.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.HtmlArea.Height">
            <summary>
            Gets or sets the height of the HTML area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.HtmlArea.Width">
            <summary>
            Gets or sets the width of the HTML area.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.PageElements.Html.HtmlArea.FontSelecting">
             <summary>
             Occurs when the <see cref="T:ceTe.DynamicPDF.Font"/> is being selected to write the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> text. This can be used to change the font and related properties of the text.
             </summary>
            ^HtmlArea.Example4
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Html.HtmlAreaFontSelecting">
            <summary>
            Represents the method that will handle the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlAreaFontSelecting"/> event of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.PageElements.Html.FontSelectingEventArgs"/>.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding">
             <summary>
             Represents a HTML Area element padding.
             </summary>
             <remarks>This class can be used to place padding on a HTML Area.</remarks>
            ^HtmlAreaPadding
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding"/> class.
            </summary>
            <param name="padding">Padding of the four sides of HTML Area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding"/> class.
            </summary>
            <param name="top">top padding of the HTML Area.</param>
            <param name="right">right padding of the HTML Area.</param>
            <param name="bottom">bottom padding of the HTML Area.</param>
            <param name="left">left padding of the HTML Area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding.Top">
            <summary>
            Gets or Sets the top padding of the HTML Area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding.Right">
            <summary>
            Gets or Sets the right padding of the HTML Area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding.Bottom">
            <summary>
            Gets or Sets the bottom padding of the HTML Area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding.Left">
            <summary>
            Gets or Sets the left padding of the HTML Area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Html.HtmlParsingException">
             <summary>
             The exception that is thrown for a HtmlArea Parsing error.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.HtmlParsingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlParsingException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.IAnnotation">
            <summary>
            Defines an annotation.
            </summary>
            <remarks>
            <list type="table">
            <listheader>
            <term>Class</term>
            <description>Description</description>
            </listheader>
            <item>
            <term><see cref="T:ceTe.DynamicPDF.PageElements.Link"/></term>
            <description>Represents a link with a destination or action.</description>
            </item>
            <item>
            <term><see cref="T:ceTe.DynamicPDF.PageElements.Note"/></term>
            <description>Represents a note annotation.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.IAnnotation.DrawAnnotation(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the annotation to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the annotation's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.Layout.ShareCollapseBorder.ShareTableBorderCollapseValue">
            1.Table width = first row width (or) sum of the cells width in the first row.  
            2.The top border width of the table is equal to half of the maximum collapsed top border.
            3.The bottom border width is equal to half of the maximum collapsed bottom border. 
            4.Any borders that spill out of the table width(either left side or right side) are considered as table overflow.
            5.Table Height = sum of all rows height + half of the maximum border width in the first row + half of maximum border width in the last row
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Html.Layout.ShareCollapseBorder.ShareCollapsedBorderWidth">
             share the table border width using border-conflict rules (according to the priority a specific border will taken to share between two cells as a single outer border).  
             1.Borders with the 'border-style' of 'hidden' take precedence over all other conflicting borders
             2.If none of the styles are 'hidden' and at least one of them is not 'none', then narrow borders are discarded in favor of wider ones
             3.If several have the same 'border-width' then styles are preferred in this order: 'double', 'solid', 'dashed', 'dotted', 'ridge', 'outset', 'groove', and the lowest: 'inset'. 
             4.If border styles differ only in color, then a style set on a cell wins over one on a row, which wins over a row group, column, column group and, lastly, 
             table. When two elements of the same type conflict, then the one further to the left (if the table's 'direction' is 'ltr'; right, if it is 'rtl') and further to the top wins.
            
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Row2">
             <summary>
             Represents a row in a table.
             </summary>
            ^Row
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2.CellDefault">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Row2.CellDefault"/> object of the cells in the row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2.Height">
            <summary>
            Gets or sets the minimum height of the row.
            </summary>
            <remarks>If no height is specified for a Row this value will return -1.  A -1 signifies that the height will automatically adjust to the height of the text.</remarks>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2.Cells">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/> containing all the cells in that row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2.ActualRowHeight">
            <summary>
            Gets the actual height of the row as it will be displayed.  This is different than the Height property.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2.Tag">
             <summary>
             Gets or sets the structure element of the row.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2.TagOrder">
            <summary>
            Gets or sets the structure element order of the row.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Polygon">
             <summary>
             Represents a polygon page element. This class can be used to place any type of polygon of any size or color on a page.
             </summary>
            ^Polygon
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderColor">Border color of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderWidth">Border width of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderWidth">Border width of the polygon.</param>
            <param name="borderColor">Border color of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderWidth">Border width of the polygon.</param>
            <param name="borderStyle">Border style of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderWidth">Border width of the polygon.</param>
            <param name="borderColor">Border color of the polygon.</param>
            <param name="borderStyle">Border style of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderWidth">Border width of the polygon.</param>
            <param name="borderColor">Border color of the polygon.</param>
            <param name="fillColor">Fill color of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
            
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderColor">Border color of the polygon.</param>
            <param name="fillColor">Fill color of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.#ctor(System.Single[],System.Single[],ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Polygon"/> class.
            </summary>
            <param name="xCoordinates">X coordinates of the polygon.</param>
            <param name="yCoordinates">Y coordinates of the polygon.</param>
            <param name="borderColor">Border color of the polygon.</param>
            <param name="fillColor">Fill color of the polygon.</param>
            <param name="borderWidth">Border width of the polygon.</param>
            <param name="borderStyle">Border style of the polygon.</param>
            <remarks>Minimum three coordinates required to draw the polygon.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Polygon.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
             Draws the polygon to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the polygon's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Polygon.BorderStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> object used to specify the border style of the polygon.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Polygon.XCoordinates">
            <summary>
            Gets or sets x-coordinates of the polygon.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Polygon.YCoordinates">
            <summary>
            Gets or sets y-coordinates of the polygon.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Polygon.BorderWidth">
            <summary>
            Gets or sets the border width of the polygon.
            </summary>
            <remarks>To force the borders not to appear set the border width to any value 0 or less.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Polygon.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the border of the polygon.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Polygon.FillColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the fill of the polygon.
            </summary>
            <remarks>To force no color to appear in the polygon (only borders) set the fill color to null (Nothing in Visual Basic).</remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Row2List">
             <summary>
             Represents a list of Rows in a table.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Row2List.Add">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Row2List.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
            <param name="height">Height of the row to be added.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Row2List.Add(ceTe.DynamicPDF.Font,System.Nullable{System.Single})">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
            <param name="font">Font for the text in the row.</param>
            <param name="fontSize">Font size for the text in the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Row2List.Add(System.Single,ceTe.DynamicPDF.Font,System.Nullable{System.Single})">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
            <param name="height">Height of the row to be added.</param>
            <param name="font">Font for the text in the row.</param>
            <param name="fontSize">Font size for the text in the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Row2List.Add(ceTe.DynamicPDF.Font,System.Nullable{System.Single},ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
            <param name="font">Font for the text in the row.</param>
            <param name="fontSize">Font size for the text in the row.</param>
            <param name="textColor">Color for the text in the row.</param>
            <param name="backColor">Background color for the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Row2List.Add(System.Single,ceTe.DynamicPDF.Font,System.Nullable{System.Single},ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
            <param name="height">Height of the row to be added.</param>
            <param name="font">Font for the text in the row.</param>
            <param name="fontSize">Font size for the text in the row.</param>
            <param name="textColor">Color for the text in the row.</param>
            <param name="backColor">Background color for the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Row2List.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2List.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row2List.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Table2">
             <summary>
             Represents a table with rows, columns and cells.
             </summary>
             <remarks>This class can be used to create tables.  A table must contain at least one Column and one Row with at least one 
             Cell in that Row.  Formatting of each cell in the table is done in a hierarchical manner in that a Cell's formatting take 
             precedent over a Row's formatting which in term takes precedent over a Column's formatting which in term takes precedent 
             over a Table's formatting . Using the AdvancedTables GetOverflowColumns and GetOverflowRows methods you can allow your table to easily 
             flow onto other pages.   See the <a href="Tables.html">Tables</a> topic for more on tables.</remarks>
            ^Table.Example1
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> class.
            </summary>
            <param name="x">X coordinate of the table.</param>
            <param name="y">Y coordinate of the table.</param>
            <param name="width">Width of the table.</param>
            <param name="height">Height of the table.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> class.
            </summary>
            <param name="x">X coordinate of the table.</param>
            <param name="y">Y coordinate of the table.</param>
            <param name="width">Width of the table.</param>
            <param name="height">Height of the table.</param>
            <param name="font">Font for the text in the table.</param>
            <param name="fontSize">Font size for the text in the table.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Nullable{System.Single},ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> class.
            </summary>
            <param name="x">X coordinate of the table.</param>
            <param name="y">Y coordinate of the table.</param>
            <param name="width">Width of the table.</param>
            <param name="height">Height of the table.</param>
            <param name="font">Font for the text in the table.</param>
            <param name="fontSize">Font size for the text in the table.</param>
            <param name="textColor">Color of the text in the table.</param>
            <param name="backColor">Background color of the table.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetOverflowRows">
             <summary>
             Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object containing the overflow rows.
             </summary>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object.</returns>
             <remarks>This method returns a new <b>Table2</b> object that contains the remaining rows that did not fit.</remarks>
            ^Table.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetOverflowRows(System.Single,System.Single)">
             <summary>
             Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object containing the overflow rows.
             </summary>
             <param name="x">X coordinate of the new table.</param>
             <param name="y">Y coordinate of the new table.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object.</returns>
             <remarks>This method returns a new <b>Table2</b> object that contains the remaining rows that did not fit.  This new table will be assigned the specified values for x and y.</remarks>
            ^Table.Example3
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetOverflowRows(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object containing the overflow rows.
             </summary>
             <param name="x">X coordinate of the new table.</param>
             <param name="y">Y coordinate of the new table.</param>
             <param name="width">Width of the new table.</param>
             <param name="height">Height of the new table.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object.</returns>
             <remarks>This method returns a new <b>Table2</b> object that contains the remaining rows that did not fit.  This new table will be assigned the specified values for x, y, height and width.</remarks>
            ^Table.Example4
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetOverflowColumns">
             <summary>
             Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object containing the overflow columns.
             </summary>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object.</returns>
             <remarks>This method returns a new <b>Table2</b> object that contains the remaining columns that did not fit.</remarks>
            ^Table.Example5
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetOverflowColumns(System.Single,System.Single)">
             <summary>
             Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object containing the overflow columns.
             </summary>
             <param name="x">X coordinate of the new table.</param>
             <param name="y">Y coordinate of the new table.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object.</returns>
             <remarks>This method returns a new <b>Table2</b> object that contains the remaining columns that did not fit.  This new table will be assigned the specified values for x and y.</remarks>
            ^Table.Example6
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetOverflowColumns(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object containing the overflow columns.
             </summary>
             <param name="x">X coordinate of the new table.</param>
             <param name="y">Y coordinate of the new table.</param>
             <param name="width">Width of the new table.</param>
             <param name="height">Height of the new table.</param>
             <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> object.</returns>
             <remarks>This method returns a new <b>Table2</b> object that contains the remaining columns that did not fit.  This new table will be assigned the specified values for x, y, height and width.</remarks>
            ^Table.Example7
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetVisibleWidth">
            <summary>
            Returns the width of the table that will be seen on the page.
            </summary>
            <returns>The width of all visible text of the table. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetVisibleHeight">
            <summary>
            Returns the height of the table that will be seen on the page.
            </summary>
            <returns>The height of all visible text of the table.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetRequiredWidth">
            <summary>
            Returns the width required to horizontally fit the entire table (all the columns) on the page.
            </summary>
            <returns>The width to fit the entire table on the page horizontally.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetRequiredHeight">
            <summary>
            Returns the height required to vertically fit the entire table on the page.
            </summary>
            <returns>The height to fit the entire table on the page vertically.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.HasOverflowRows">
            <summary>
            Returns a value indicating if there are rows remaining that will not be drawn to the table.
            </summary>
            <returns>Value indication whether or not overflow rows exists.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.HasOverflowColumns">
            <summary>
            Returns a value indicating if there are columns remaining that will not be drawn to the table.
            </summary>
            <returns>Value indication whether or not overflow columns exists.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetVisibleRowCount">
            <summary>
            Returns the number of rows that will be displayed in the current table.
            </summary>
            <returns>The number are rows that will display.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.GetVisibleColumnCount">
            <summary>
            Returns the number of columns that will be displayed in the current table.
            </summary>
            <returns>The number are columns that will display.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.SetOverflowTableHeaderRowTags(ceTe.DynamicPDF.Tag[])">
            <summary>
            Sets the tags for the overflow table header rows.
            </summary>
            <param name="overflowTableHeaderRowTags">Structure element array of the overflow table header rows.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.SetOverflowTableHeaderRowCellsTags(ceTe.DynamicPDF.Tag[])">
            <summary>
            Sets the tags for the overflow table header rows each cell.
            </summary>
            <param name="overflowTableHeaderRowCellsTags">Structure element array of the overflow table header row cells.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.SetOverflowTableHeaderColumnCellsTags(ceTe.DynamicPDF.Tag[])">
            <summary>
            Sets the tags for the overflow table header columns each cell.
            </summary>
            <param name="overflowTableHeaderColumnCellsTags">Structure element array of the overflow table header column cells.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table2.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the table to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the table's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.VisibleStartRow">
            <summary>
            Returns the table starting row number.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.VisibleStartColumn">
            <summary>
            Returns the table starting column number.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.Width">
            <summary>
            Gets or sets the width of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.Height">
            <summary>
            Gets or sets the height of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.Rows">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/> object contained in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.Columns">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Column2List"/> object contained in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.CellDefault">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Table2.CellDefault"/> object of the cells in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.RepeatRowHeaderCount">
            <summary>
            Gets or sets the number of columns that will be repeated as the row header.  This number is only considered if RepeatColumnHeader is set to true.  This is set to 1 by default.
            </summary>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.RepeatColumnHeaderCount">
            <summary>
            Gets or sets the number of initial rows in the table that should also be drawn as the first rows on all subsequent row overflow tables.  This is set to 0 by default.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.CellSpacing">
            <summary>
            Gets or sets the cellSpacing for the cells in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.Border">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Table2.Border"/> object to use for the border of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table2.BackgroundColor">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the background of the table.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageReaderEvents">
             <summary>
             Represents page reader events.
             </summary>
            ^PageReaderEvents
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageReaderEvents.Open">
            <summary>
            Gets or sets page open event actions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageReaderEvents.Close">
            <summary>
            Gets or sets page close event actions.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.CellPadding">
            <summary>
            Represents the cell padding.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.#ctor(System.Nullable{System.Single})">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> class.
            </summary>
            <param name="value">padding value for all sides of the cell.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.GetHashCode">
            <summary>
            Returns hash code for this instance.
            </summary>
            <remarks> The returned hash code is formed by combining the value of padding along with top, bottom, left and right if set separately.</remarks>
            <returns> Hash code value.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.Equals(System.Object)">
            <summary>
            Determines whether the given instance has padding values equal with the specified object.
            </summary>
            <param name="obj"> Instance to compare.</param>
            <returns> True if the padding values are equal for all four sides.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.Equals(ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Determines whether the given instance has padding values equal with the specified instance.
            </summary>
            <param name="padding"> Instance to compare.</param>
            <returns> True if the padding values are equal for all four sides.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Equality(ceTe.DynamicPDF.PageElements.CellPadding,ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a value indicating if the instances are equal or not.
            </summary>
            <returns>Value indicates whether or not the instances are equal.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Inequality(ceTe.DynamicPDF.PageElements.CellPadding,ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a value indicating if the instances are equal or not.
            </summary>
            <returns>Value indicates whether or not the instances are not equal.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Addition(ceTe.DynamicPDF.PageElements.CellPadding,ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object containing the added value of two instances.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Subtraction(ceTe.DynamicPDF.PageElements.CellPadding,ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object containing the subtracted value of two instances.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_UnaryNegation(ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object containing the negation value of the given instance.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Increment(ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object containing the incremented value of the given instance.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Decrement(ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object containing the decremented value of the given instance.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Multiply(ceTe.DynamicPDF.PageElements.CellPadding,ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object containing the multiplied value of two instances.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Division(ceTe.DynamicPDF.PageElements.CellPadding,ceTe.DynamicPDF.PageElements.CellPadding)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object containing the divided value of two instances.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellPadding.op_Implicit(System.Nullable{System.Single})~ceTe.DynamicPDF.PageElements.CellPadding">
            <summary>
            Returns a value which is implicitly converted from the float value to <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> instance.
            </summary>
            <returns>Implicitly converted from the float value to <see cref="T:ceTe.DynamicPDF.PageElements.CellPadding"/> instance.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellPadding.Value">
            <summary>
            Gets or sets the value of the cell padding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellPadding.Top">
            <summary>
            Gets or sets the top padding value for the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellPadding.Bottom">
            <summary>
            Gets or sets the bottom padding value for the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellPadding.Left">
            <summary>
            Gets or sets the left padding value for the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellPadding.Right">
            <summary>
            Gets or sets the right padding value for the cell.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Cryptography.RC4128Security">
             <summary>
             Represents RC4 128 bit PDF document security.
             </summary>
             <remarks>
             RC4 128 bit PDF security, with UseCryptFilter property set to false is compatible with PDF version 1.4 or higher and can be read
             with Adobe Acrobat Reader version 5 or higher. By default UseCryptFilter property is false. RC4 128 bit PDF security with crypt filter 
             is compatible with PDF version 1.5 or higher and can be read with Adobe Acrobat Reader version 6 and higher. 
             Older readers will not be able to read document encrypted with this security.
             For more details on RC4 128 bit security take a look at the <a href="Security.html">Security</a> topic.
             </remarks>
            ^RC4128Security.Example1
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC4128Security.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.RC4128Security"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC4128Security.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.RC4128Security"/> class.
            </summary>
            <param name="ownerPassword">The owner password to open the document.</param>
            <param name="userPassword">The user password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC4128Security.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Cryptography.RC4128Security"/> class.
            </summary>
            <param name="password">The owner password to open the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC4128Security.GetEncrypter(System.Byte[])">
            <summary>
            Gets a 128 bit <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object to be used for encrypting the document.
            </summary>
            <param name="id">ID of the current PDF document.</param>
            <returns>An <see cref="T:ceTe.DynamicPDF.IO.Encrypter"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Cryptography.RC4128Security.Draw(ceTe.DynamicPDF.IO.DocumentWriter,ceTe.DynamicPDF.IO.Encrypter)">
            <summary>
            Draws the encrypter dictionary to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
            <param name="encrypter"><see cref="T:ceTe.DynamicPDF.IO.Encrypter"/> object used to encrypt the document.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.RC4128Security.AllowFormFilling">
            <summary>
            Gets or sets if form filling should be allowed by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.RC4128Security.AllowAccessibility">
            <summary>
            Gets or sets if accessibility programs should be able to read
            the documents text and images for the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.RC4128Security.AllowDocumentAssembly">
            <summary>
            Gets or sets if the document can be assembled and manipulated by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.RC4128Security.AllowHighResolutionPrinting">
            <summary>
            Gets or sets if the document can be printed at a high resolution by the user.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.RC4128Security.EncryptMetadata">
             <summary>
             Gets or sets if the document metadata to be encrypted. Valid only when UseCryptFilter property is true.
             </summary>
            ^RC4128Security.Example2
        </member>
        <member name="P:ceTe.DynamicPDF.Cryptography.RC4128Security.UseCryptFilter">
            <summary>
            Gets or sets if the encryption should be done with crypt filters.
            </summary>
            <remarks>
            The default value is false. If set to true RC4 128 bit encryption is compatible with 
            PDF version 1.5 or higher and can be read with Adobe Acrobat Reader version 6 or higher.
            Without crypt filter RC4 128 bit encryption is compatible with 
            PDF version 1.4 or higher and can be read with Adobe Acrobat Reader version 5 or higher.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.EnumerableRecordSet">
            <summary>
            Represents a record set based on a list of objects.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet">
            <summary>
            Represents the base class for which all record sets are derived.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSet.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSet.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given field number.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSet.Id">
            <summary>
            Gets the ID for the query.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSet.Query">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSet.Query"/> for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSet.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> contains data.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.EnumerableRecordSet.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.EnumerableRecordSet"/> class.
            </summary>
            <param name="enumerable">A list of objects that implements the <see cref="T:System.Collections.IEnumerable"/> interface.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.EnumerableRecordSet.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.EnumerableRecordSet.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given field number.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.EnumerableRecordSet.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> contains data.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DocumentLayoutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report">Report's</see> ReportLaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayoutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.DocumentLayoutEventArgs.LayoutWriter"/> argument of the Report's LaidOut Event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DocumentLayoutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.DocumentLayout.DocumentLayingOut"/> and <see cref="E:ceTe.DynamicPDF.ReportWriter.DocumentLayout.DocumentLaidOut"/> events of <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayoutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.FixedPage">
            <summary>
            Represents a fixed page.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPart">
            <summary>
            Represents a part of Document.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPart.DocumentLayout">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPart.DocumentLayout"/> object of the report.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.FixedPage.PageLayingOut">
            <summary>
            Occurs before the fixed page is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.FixedPage.PageLaidOut">
            <summary>
            Occurs after the fixed page has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.FixedPage.Id">
            <summary>
            Gets the ID of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.FixedPage.Template">
            <summary>
            Gets or sets the PDF page to use as the template of the fixed page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter">
            <summary>
            Represents a writer classs for a layout.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter.RecordSets">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSetStack"/> for the layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter.Document">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter.Document"/> for the layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter.Parameters">
            <summary>
            Gets or sets the parameters of the layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter.DocumentLayout">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter.DocumentLayout"/> of the layout. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Page">
             <summary>
             Represents a page.
             </summary>
             <remarks>This class can be used to create pages to add to your <see cref="T:ceTe.DynamicPDF.Document"/>.</remarks>
            ^Page
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor(ceTe.DynamicPDF.PageSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageSize"/> representing the dimensions of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageSize"/> representing the dimensions of the page.</param>
            <param name="orientation">The <see cref="T:ceTe.DynamicPDF.PageOrientation"/> of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor(ceTe.DynamicPDF.PageSize,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageSize"/> representing the dimensions of the page.</param>
            <param name="margins">The  margins of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageSize"/> representing the dimensions of the page.</param>
            <param name="orientation">The <see cref="T:ceTe.DynamicPDF.PageOrientation"/> of the page.</param>
            <param name="margins">The margins of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
            <param name="width">The width of the page.</param>
            <param name="height">The height of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
            <param name="width">The width of the page.</param>
            <param name="height">The height of the page.</param>
            <param name="margins">The margins of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Page.#ctor(ceTe.DynamicPDF.PageDimensions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Page"/> class.
            </summary>
            <param name="dimensions">The <see cref="T:ceTe.DynamicPDF.PageDimensions"/> of the page.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Page.Elements">
            <summary>
            Gets a collection of page elements.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Page.UnderlyingElements">
            <summary>
            Gets a collection of page elements that will appear beneath (behind) the page elements from the <see cref="P:ceTe.DynamicPDF.Page.Elements"/> property.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Page.Dimensions">
            <summary>
            Gets or sets the dimensions of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Page.Rotate">
            <summary>
            Gets or sets the rotation of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Page.ApplyDocumentTemplate">
            <summary>
            Gets or sets a value indicating if this page uses the documents template.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Page.ApplySectionTemplate">
            <summary>
            Gets or sets a value indicating if this page uses the sections template.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Page.ReaderEvents">
            <summary>
            Gets the reader events of the page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.FormattedTextArea">
             <summary>
             Represents an area of formatted text.
             </summary>
             <remarks>This class can be used to place formatted text onto an area of the page.  
             For a complete list of supported font tags take a look at the <a href="Formatted Text Area Formatting.html">Formatted TextArea Formatting</a> topic.
              See the <a href="Text Continuation.html">Text Continuation</a> topic for more on text continuation.</remarks>
            ^FormattedTextArea.Example1
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.FontFamily,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> class.
            </summary>
            <param name="text">Text to display in the formatted text area.</param>
            <param name="x">X coordinate of the formatted text area.</param>
            <param name="y">Y coordinate of the formatted text area.</param>
            <param name="width">Width of the formatted text area.</param>
            <param name="height">Height of the formatted text area.</param>
            <param name="fontFamily">Initial <see cref="T:ceTe.DynamicPDF.FontFamily"/> of the formatted text area.</param>
            <param name="fontSize">Initial font size of the formatted text area.</param>
            <param name="preserveWhitespace">Specifies if white space should be preserved.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> class.
            </summary>
            <param name="text">Text to display in the formatted text area.</param>
            <param name="x">X coordinate of the formatted text area.</param>
            <param name="y">Y coordinate of the formatted text area.</param>
            <param name="width">Width of the formatted text area.</param>
            <param name="height">Height of the formatted text area.</param>
            <param name="style">Initial <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle"/> of the formatted text area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the text area to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the formatted text area's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.GetOverflowFormattedTextArea">
             <summary>
             Returns a new <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> object containing the overflow text.
             </summary>
             <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> if there is overflow text; otherwise, <b>null</b>.</returns>
             <remarks>This method returns a new <b>FormattedTextArea</b> object that contains the remaining text that did not fit.</remarks>
            ^FormattedTextArea.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.GetOverflowFormattedTextArea(System.Single,System.Single)">
             <summary>
             Returns a new <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> object containing the overflow text.
             </summary>
             <param name="x">X coordinate of the new object.</param>
             <param name="y">Y coordinate of the new object.</param>
             <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> if there is overflow text; otherwise, <b>null</b>.</returns>
             <remarks>This method returns a new <b>FormattedTextArea</b> object that contains the remaining text that did not fit.</remarks>
            ^FormattedTextArea.Example3
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.GetOverflowFormattedTextArea(System.Single,System.Single,System.Single)">
             <summary>
             Returns a new <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> object containing the overflow text.
             </summary>
             <param name="x">X coordinate of the new object.</param>
             <param name="y">Y coordinate of the new object.</param>
             <param name="height">Height of the new object.</param>
             <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> if there is overflow text; otherwise, <b>null</b>.</returns>
             <remarks>This method returns a new <b>FormattedTextArea</b> object that contains the remaining text that did not fit.</remarks>
            ^FormattedTextArea.Example4
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.GetRequiredHeight">
            <summary>
            Returns the required height to fit all of the text of the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/>.
            </summary>
            <returns>Height required to fit all text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextArea.HasOverflowText">
            <summary>
            Returns a value specifying if there is text that did not fit in the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/>.
            </summary>
            <returns><b>True</b> if the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/> has overflow text.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.FormattedTextArea.FontFaces">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Text.FontFamilyList"/> used by the formatted text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.FormattedTextArea.VAlign">
            <summary>
            Gets or sets a value indicating the vertical alignment of the formatted text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.FormattedTextArea.Width">
            <summary>
            Gets or sets the width of the formatted text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.FormattedTextArea.Height">
            <summary>
            Gets or sets the height of the formatted text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.FormattedTextArea.Text">
            <summary>
            Gets or sets the text for the formatted text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.FormattedTextArea.Style">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle"/> object used to specify the initial style of the formatted text area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.PageNumberingLabel">
             <summary>
             Represents a page numbering label page element.
             </summary>
             <remarks>
             This class can be used to add page and section numbering to a PDF document. A document can be broken up into
             sections using the <see cref="P:ceTe.DynamicPDF.Document.Sections"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class. The following
             tokens can be used within the text of a PageNumberingLabel. They will be replaced with the appropriate value
             when the PDF is output.
             <list type="table">
             <listheader>
             <term>Token</term>
             <description>Description</description>
             </listheader>
             <item>
             <term>CP</term>
             <description>Current page. The default numbering style is numeric. The current page can be offset using the is
             offset by the <see cref="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.PageOffset"/> property.</description>
             </item>
             <item>
             <term>TP</term>
             <description>Total pages. The default numbering style is numeric. The total pages can be offset using the is
             offset by the <see cref="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.PageTotalOffset"/> property.</description>
             </item>
             <item>
             <term>SP</term>
             <description>Section page. The default numbering style is the numbering style used by the section. The total
             pages can be offset using the is offset by the <see cref="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.PageTotalOffset"/> property.</description>
             </item>
             <item>
             <term>ST</term>
             <description>Section Total. The default numbering style is the numbering style used by the section. The total
             pages can be offset using the is offset by the <see cref="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.PageTotalOffset"/> property.</description>
             </item>
             <item>
             <term>PR</term>
             <description>Prefix. The sections prefix.</description>
             </item>
             </list>
             <p/>
             All tokens except the /%/%PR/%/% token can also contain a numbering style specifier. The numbering style specifier
             is placed in parenthesis after the token. If no numbering style specifier is given, then the current sections
             numbering specifier is used. If there are no document sections or the current section does not have a numbering
             specifier, numeric numbering is used.
             <list type="table">
             <listheader>
             <term>Numbering Style</term>
             <description>Description</description>
             </listheader>
             <item>
             <term>1</term>
             <description>Numeric. Arabic numbers are used: 1, 2, 3, etc. Example: "/%/%CP(1)/%/%"</description>
             </item>
             <item>
             <term>i</term>
             <description>Lower Case Roman Numerals. Lower case roman numerals are used: i, ii, iii, etc.
             Example: "/%/%CP(i)/%/%".</description>
             </item>
             <item>
             <term>I</term>
             <description>Upper Case Roman Numerals. Upper case roman numerals are used: I, II, III, etc.
             Example: "/%/%CP(I)/%/%".</description>
             </item>
             <item>
             <term>a</term>
             <description>Lower Latin Letters. Lower case Latin letters are used: a, b, c, etc. After z, aa is used
             followed by bb, cc, etc. Example: "/%/%CP(a)/%/%".</description>
             </item>
             <item>
             <term>A</term>
             <description>Upper Latin Letters. Upper case Latin letters are used: A, B, C, etc. After Z, AA is used
             followed by BB, CC, etc. Example: "/%/%CP(A)/%/%".</description>
             </item>
             <item>
             <term>b</term>
             <description>Lower Latin Letters. Lower case Latin letters are used: a, b, c, etc. After z, aa is used
             followed by ab, ac, etc. Example: "/%/%CP(b)/%/%".</description>
             </item>
             <item>
             <term>B</term>
             <description>Lower Latin Letters. Lower case Latin letters are used: A, B, C, etc. After Z, AA is used
             followed by AB, AC, etc. Example: "/%/%CP(B)/%/%".</description>
             </item>
             </list>
             <p/>
             There should be no spaces within a token, only the token and optional numbering style specifier. This
             token is <b>invalid</b> /%/%CP ( i )/%/% because of the extra spaces.<p/>Here are some examples of valid tokens:
             <ul style="margin-top: 0px;">
             <li>/%/%SP/%/%</li>
             <li>/%/%SP(I)/%/%</li>
             <li>/%/%PR/%/%</li>
             <li>/%/%ST(B)/%/%</li>
             </ul>
             </remarks>
            ^PageNumberingLabel
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.PageNumberingLabel.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.PageNumberingLabel"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.PageNumberingLabel.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.PageNumberingLabel"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.PageNumberingLabel.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.PageNumberingLabel"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.PageNumberingLabel.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.PageNumberingLabel"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
            <param name="align">Alignment of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.PageNumberingLabel.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.PageNumberingLabel"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
            <param name="textColor">Color of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.PageNumberingLabel.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.PageNumberingLabel"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
            <param name="align">Alignment of the text of the label.</param>
            <param name="textColor">Color of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.PageNumberingLabel.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the label to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the label's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.Align">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.Align"/> enumeration that specifies the text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.VAlign"/> enumeration that specifies the vertical text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.Underline">
            <summary>
            Gets or sets a value indicating if the label is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.Text">
            <summary>
            Gets or sets the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.Font"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.FontSize">
            <summary>
            Gets or sets the font size for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.Width">
            <summary>
            Gets or sets the width or the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.PageTotalOffset">
            <summary>
            Gets or sets the page total offset for page numbering.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.PageOffset">
            <summary>
            Gets or sets the page offset for page numbering.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.NumberingLength">
            <summary>
            Gets or sets the length of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.PageNumberingLabel.NumberingPaddingCharacter">
            <summary>
            Gets or sets the padding character of the page numbering label.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Label">
             <summary>
             Represents a label page element.
             </summary>
             <remarks>This class can be used to place labels of text on a page.</remarks>
            ^Label
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Label.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Label.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Label.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Label.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
            <param name="align">Alignment of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Label.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
            <param name="textColor">Color of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Label.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> class.
            </summary>
            <param name="text">Text to display in the label.</param>
            <param name="x">X coordinate of the label.</param>
            <param name="y">Y coordinate of the label.</param>
            <param name="width">Width of the label.</param>
            <param name="height">Height of the label.</param>
            <param name="font">Font for the text of the label.</param>
            <param name="fontSize">Font size of the text of the label.</param>
            <param name="align">Alignment of the text of the label.</param>
            <param name="textColor">Color of the text of the label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Label.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the label to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the label's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.Align">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Label.Align"/> enumeration that specifies the text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Label.VAlign"/> enumeration that specifies the vertical text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.Underline">
            <summary>
            Gets or sets a value indicating if the label is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.RightToLeft">
            <summary>
            Gets or sets a value indicating if text should be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.Text">
            <summary>
            Gets or sets the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.TextOutlineWidth">
            <summary>
            Gets or sets the line width to use for the text outline of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.Strikethrough">
            <summary>
            Gets or sets the strike through to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Label.Font"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.FontSize">
            <summary>
            Gets or sets the font size for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.Width">
            <summary>
            Gets or sets the width or the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Label.Height">
            <summary>
            Gets or sets the height or the label.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.SoftBreak">
            <summary>
            Summary description for SoftBreak.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElement">
            <summary>
            Base class from which all report elements are derived.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SoftBreak.Y">
            <summary>
            Gets or sets the Y coordinate of the softbreak.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Resources.Resource1">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78_RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78ms_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._78ms_RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._83pv_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._90ms_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._90ms_RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._90msp_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._90msp_RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._90pv_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1._90pv_RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Add_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Add_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Add_RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Add_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_0">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_3">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_4">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_5">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_6">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_CNS1_UCS2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_GB1_0">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_GB1_1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_GB1_2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_GB1_3">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_GB1_4">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_GB1_5">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_GB1_UCS2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_0">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_3">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_4">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_5">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_6">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan1_UCS2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Japan2_0">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Korea1_0">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Korea1_1">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Korea1_2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Adobe_Korea1_UCS2">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.B5pc_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.B5pc_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.CNS_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.CNS_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.CNS1_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.CNS1_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.CNS2_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.CNS2_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.DejaVuSans">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.ETen_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.ETen_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.ETenms_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.ETenms_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.ETHK_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.ETHK_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Ext_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Ext_RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Ext_RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Ext_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GB_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GB_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GB_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GB_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBK_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBK_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBK2K_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBK2K_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBKp_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBKp_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBpc_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBpc_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBT_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBT_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBT_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBT_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBTpc_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.GBTpc_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Hankaku">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Hiragana">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKdla_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKdla_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKdlb_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKdlb_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKgccs_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKgccs_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKm314_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKm314_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKm471_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKm471_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKscs_B5_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.HKscs_B5_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Hojo_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Hojo_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Hojo_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Hojo_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Katakana">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSC_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSC_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSC_Johab_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSC_Johab_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSCms_UHC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSCms_UHC_HW_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSCms_UHC_HW_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSCms_UHC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSCpc_EUC_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.KSCpc_EUC_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationMono_Bold">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationMono_BoldItalic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationMono_Italic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationMono_Regular">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSans_Bold">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSans_BoldItalic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSans_Italic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSans_Regular">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSerif_Bold">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSerif_BoldItalic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSerif_Italic">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.LiberationSerif_Regular">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.NWP_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.NWP_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.RKSJ_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.RKSJ_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.Roman">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.sRGBColorSpaceProfile">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UCS2_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UCS2_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UTF16_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UTF16_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UTF8_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniCNS_UTF8_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UCS2_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UCS2_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UTF16_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UTF16_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UTF8_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniGB_UTF8_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UCS2_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UCS2_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UTF16_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UTF16_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UTF8_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniHojo_UTF8_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UCS2_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UCS2_HW_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UCS2_HW_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UCS2_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UTF16_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UTF16_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UTF8_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS_UTF8_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS2004_UTF16_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS2004_UTF16_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS2004_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS2004_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS2004_UTF8_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJIS2004_UTF8_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJISPro_UCS2_HW_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJISPro_UCS2_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJISPro_UTF8_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJISX0213_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJISX0213_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJISX02132004_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniJISX02132004_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UCS2_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UCS2_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UTF16_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UTF16_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UTF32_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UTF32_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UTF8_H">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.UniKS_UTF8_V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.V">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Resources.Resource1.WP_Symbol">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.StandardTagType">
             <summary>
             Represents a standard tag type.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.StandardTagType.ToString">
            <summary>
            Gets the tag type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.SingleByteEncoder">
             <summary>
             Base class from which single byte encoders are derived.
             </summary>
             <remarks>See the <a href="Text Encodings.html">Text Encodings</a> topic for more details on this.</remarks>
            ^SingleByteEncoder 
            ^Lic.Generator.Comm
        </member>
        <member name="T:ceTe.DynamicPDF.Text.Encoder">
             <summary>
             Base class from which encoders are derived.
             </summary>
             <remarks>This class contains the static properties from which all encodings are accessed.  See the <a href="Text Encodings.html">Text Encodings</a> topic for more details on this.</remarks>
            ^Encoder
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Encoder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.Encoder"/> class.
            </summary>
            <param name="spaceIs0x20"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Encoder.Encode(ceTe.DynamicPDF.IO.FontSubsetter,System.Char[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Encodes the specified text. 
            </summary>
            <param name="subsetter"><see cref="T:ceTe.DynamicPDF.IO.FontSubsetter"/> to use while encoding the text.</param>
            <param name="text">Text array to use for the encoding.</param>
            <param name="start">Start index in the text array.</param>
            <param name="length">Length of text to encode.</param>
            <param name="rightToLeft">Specifies if the text should be encoded right to left.</param>
            <returns>The encoded text as a byte array.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Encoder.DrawEncoding(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the encoding to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the encoding's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.SpaceIs0x20">
            <summary>
            Gets a value indicating if the encoder uses a single byte 0x20 value for spaces.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.CentralEurope">
            <summary>
            Gets the central Europe encoder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.Latin1">
            <summary>
            Gets the Latin 1 encoder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.Turkish">
            <summary>
            Gets the Turkish encoder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.Baltic">
            <summary>
            Gets the Baltic encoder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.Latin2">
            <summary>
            Gets the Latin 2 (WINANSI) encoder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.Latin9">
            <summary>
            Gets the Latin 9 encoder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Encoder.Unicode">
            <summary>
            Gets the Unicode encoder.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.SingleByteEncoder.Encode(System.Char)">
            <summary>
            Encodes a single character.
            </summary>
            <param name="character">Character to encode.</param>
            <returns>The encoded character.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.SingleByteEncoder.Decode(System.Byte)">
            <summary>
            Decodes a single character.
            </summary>
            <param name="character">The character to decode.</param>
            <returns>The decoded character.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.SingleByteEncoder.Encode(ceTe.DynamicPDF.IO.FontSubsetter,System.Char[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Encodes the specified text. 
            </summary>
            <param name="subsetter"><see cref="T:ceTe.DynamicPDF.IO.FontSubsetter"/> to use while encoding the text.</param>
            <param name="text">Text array to use for the encoding.</param>
            <param name="start">Start index in the text array.</param>
            <param name="length">Length of text to encode.</param>
            <param name="rightToLeft">Specifies if the text should be encoded right to left.</param>
            <returns>The encoded text as a byte array.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SingleByteEncoder.IsBuiltInEncoding">
            <summary>
            Gets a value specifying if the encoding is built-in to PDF.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.MacRomanEncoder.Encode(System.Char)">
            <summary>
            Encodes a single character.
            </summary>
            <param name="character">Character to encode.</param>
            <returns>The encoded character.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.UnitConverter">
             <summary>
             Utility for converting to and from typesetting points.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.UnitConverter.PointsToInches(System.Single)">
            <summary>
            Converts from typesetting points to inches.
            </summary>
            <param name="size">Size in points.</param>
            <returns>The size in inches.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.UnitConverter.PointsToMillimeters(System.Single)">
            <summary>
            Converts from typesetting points to millimeters.
            </summary>
            <param name="size">Size in points.</param>
            <returns>The size in typesetting points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.UnitConverter.InchesToPoints(System.Single)">
            <summary>
            Converts from inches to typesetting points.
            </summary>
            <param name="size">Size in inches.</param>
            <returns>The size in inches.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.UnitConverter.MillimetersToPoints(System.Single)">
            <summary>
            Converts from millimeters to typesetting points.
            </summary>
            <param name="size">Size in millimeters.</param>
            <returns>The size in typesetting points.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.TagOptions">
             <summary>
             Represents an tag options.
             </summary>
            ^TagOptions 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.TagOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.TagOptions"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.TagOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.TagOptions"/> class.
            </summary>
            <param name="layoutAttributes">Specifies if layout attributes is required.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.TagOptions.IncludeLayoutAttributes">
            <summary>
            Gets or sets a value indicating layout attributes to be include.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.TimestampException">
            <summary>
            The exception that is thrown for a Time stamping error.
            </summary>
            <remarks><font color="red">This class is not available for .NET standard.</font></remarks>    
        </member>
        <member name="M:ceTe.DynamicPDF.TimestampException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.TimestampException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.TimestampServer">
             <summary>
             Represents a class which contains the Timestamp Server details.
             </summary>
            ^TimestampServer
             <remarks><font color="red">This class is not available for .NET standard.</font></remarks>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.TimestampServer.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.TimestampServer"/> class.
            </summary>
            <param name="tsUrl">Web Url of TSA.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.TimestampServer.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.TimestampServer"/> class.
            </summary>
            <param name="tsUrl">Web Url of TSA.</param>
            <param name="userName">UserName to use for the connection.</param>
            <param name="password">Password to use for the connection.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.TimestampServer.Url">
            <summary>
            Gets or Sets the Url of the TSA.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TimestampServer.UserName">
            <summary>
            Gets or Sets the UserName to use for the connection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TimestampServer.Password">
            <summary>
            Gets or Sets the Password to use for the connection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TimestampServer.Timeout">
            <summary>
            Gets or Sets the Timeout for the connection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.TimestampServer.HashAlgorithmOid">
            <summary>
            Get or Sets the oid of the hash algorithm to be used.
            </summary>
            <remarks>
            The deault value "2.16.840.1.101.3.4.2.1" indicates SHA-256 hash algorithm. Setting incorrect oid value will raise exception.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.AlternateRow">
            <summary>
            Specifies the type of alternating row to display
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font> Use LayoutEngine namespace enums instead.</remarks>           
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.AlternateRow.All">
            <summary>
            Display on every row.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.AlternateRow.Even">
            <summary>
            Display on only even rows.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.AlternateRow.Odd">
            <summary>
            Display on only odd rows.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DetailReportPart">
            <summary>
            Represents the detail of a report.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportPart">
            <summary>
            Represents a part of a report.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPart.HasElements">
            <summary>
            Gets a value indicating whether the report part contains elements.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPart.Elements">
            <summary>
            Gets a list of report elements.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPart.Height">
            <summary>
            Gets or sets the height of the report part.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPart.Id">
            <summary>
            Gets or sets a unique ID for the report part.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DetailReportPart.AutoSplit">
            <summary>
            Gets or sets a value indicating whether the report's detail can be split.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DetailSubReportPart">
            <summary>
            Represents the detail of a subreport.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DetailSubReportPart.AutoSplit">
            <summary>
            Gets or sets a value indicating whether the sub report's detail can be split.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.Query">Query's</see> ClosingRecordSet event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.#ctor(ceTe.DynamicPDF.ReportWriter.Data.RecordSet,ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs"/> class.
            </summary>
            <param name="recordSet">The <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.RecordSet"/> to use for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs"/>.</param>
            <param name="layoutWriter">The <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.LayoutWriter"/> to use for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs"/>.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.LayoutWriter"/> argument of the Query's ClosingRecordSet Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.RecordSet">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.RecordSet"/> argument of the Query's ClosingRecordSet Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs.Closed">
            <summary>
            Gets or sets a value indicating whether the connection and record set is already closed.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.Data.Query.ClosingRecordSet"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.Query"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.ClosingRecordSetEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet">
            <summary>
            Represents a record set based off of a data reader
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet.#ctor(System.Data.IDbConnection,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet"/> class.
            </summary>
            <param name="connection">Database connection used to create the data reader.</param>
            <param name="reader">The data reader for the record set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given field number.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet"/> contains data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet.Connection">
            <summary>
            Gets the database connection of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet.DataReader">
            <summary>
            Gets the <see cref="T:System.Data.IDataReader"/> of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataReaderRecordSet"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet">
            <summary>
            Represents a record set based off of a data table
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet"/> class.
            </summary>
            <param name="dataTable">The data table for the record set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet.#ctor(System.Data.IDbConnection,System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet"/> class.
            </summary>
            <param name="connection">Database connection used to create the data table.</param>
            <param name="dataTable">The data table for the record set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given field number.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet"/> contains data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet.Connection">
            <summary>
            Gets the database connection of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.DataTableRecordSet"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.EventDrivenQuery">
            <summary>
            Represents a event driven query.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.Query">
            <summary>
            Base class from which all queries are derived.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.Query.GetRecordSet(ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Abstract. Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> of the query.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter"/> of the query.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> object.</returns>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.Data.Query.OpeningRecordSet">
            <summary>
            Occurs when the record set is opening.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.Data.Query.ClosingRecordSet">
            <summary>
            Occurs when the record set is closing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.Query.Id">
            <summary>
            Gets the unique ID for the query.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.EventDrivenQuery.GetRecordSet(ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.EventDrivenQuery"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter"/> of the query.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.EventDrivenQuery.Statement">
            <summary>
            Gets or sets the Sql statement of query.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.EventDrivenQuery.ConnectionString">
            <summary>
            Gets or sets the connection string of the query.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.GroupByQuery">
            <summary>
            Represents a groupby query.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.GroupByQuery.GetRecordSet(ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.GroupByQuery"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter"/> of the query.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.Query">Query's</see> OpeningRecordSet event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs.#ctor(ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs"/> class.
            </summary>
            <param name="layoutWriter">The <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs.LayoutWriter"/> to use for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs"/>.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs.LayoutWriter"/> argument of the Query's OpeningRecordSet Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs.RecordSet">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs.RecordSet"/> argument of the Query's OpeningRecordSet Event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.Data.Query.OpeningRecordSet"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.Query"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.OpeningRecordSetEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.ParameterType">
            <summary>
            Specifies the type of parameter.
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font> Use LayoutEngine namespace enums instead.</remarks>           
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.BigInt">
            <summary>
            BigInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Bit">
            <summary>
            Bit parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Boolean">
            <summary>
            Boolean parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Bstr">
            <summary>
            Bstr parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Byte">
            <summary>
            Byte parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Char">
            <summary>
            Char parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Currency">
            <summary>
            Currency parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Date">
            <summary>
            Date parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.DateTime">
            <summary>
            DateTime parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.DBDate">
            <summary>
            DBDate parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.DBTime">
            <summary>
            DBTime parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.DBTimestamp">
            <summary>
            DBTimestamp parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Decimal">
            <summary>
            Decimal parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Double">
            <summary>
            Double parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Filetime">
            <summary>
            File time parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Float">
            <summary>
            Float parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Guid">
            <summary>
            Guid parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Int">
            <summary>
            Int parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Int16">
            <summary>
            Int16 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Int32">
            <summary>
            Int32 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Integer">
            <summary>
            Integer parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.IntervalDayToSecond">
            <summary>
            IntervalDayToSecond parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.IntervalYearToMonth">
            <summary>
            IntervalYearToMonth parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.LongVarChar">
            <summary>
            LongVarChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.LongVarWChar">
            <summary>
            LongVarWChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Money">
            <summary>
            Money parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.NChar">
            <summary>
            NChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.NText">
            <summary>
            NText parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Number">
            <summary>
            Number parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Numeric">
            <summary>
            Numeric parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.NVarChar">
            <summary>
            NVarChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Real">
            <summary>
            Real parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.RowId">
            <summary>
            RowId parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.SByte">
            <summary>
            SByte parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Single">
            <summary>
            Single parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.SmallDateTime">
            <summary>
            SmallDateTime parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.SmallInt">
            <summary>
            SmallInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.SmallMoney">
            <summary>
            SmallMoney parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Text">
            <summary>
            Text parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Time">
            <summary>
            Time parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.Timestamp">
            <summary>
            Timestamp parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.TimestampLocal">
            <summary>
            TimestampLocal parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.TimestampWithTZ">
            <summary>
            TimestampWithTZ parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.TinyInt">
            <summary>
            TinyInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.UInt16">
            <summary>
            UInt16 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.UInt32">
            <summary>
            UInt32 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.UniqueIdentifier">
            <summary>
            UniqueIdentifier parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.UnsignedBigInt">
            <summary>
            UnsignedBigInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.UnsignedInt">
            <summary>
            UnsignedInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.UnsignedSmallInt">
            <summary>
            UnsignedSmallInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.UnsignedTinyInt">
            <summary>
            UnsignedTinyInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.VarChar">
            <summary>
            VarChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.VarNumeric">
            <summary>
            VarNumeric parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.VarWChar">
            <summary>
            VarWChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.WChar">
            <summary>
            WChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ParameterType.RefCursor">
            <summary>
            RefCursor parameter type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.ProviderType">
            <summary>
            Specifies the type of database provider.
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font> Use LayoutEngine namespace enums instead.</remarks>           
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ProviderType.MsSql">
            <summary>
            Microsoft SQL provider type. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ProviderType.Odbc">
            <summary>
            ODBC provider type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ProviderType.OleDb">
            <summary>
            OLE-DB provider type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.Data.ProviderType.Oracle">
            <summary>
            Oracle provider type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSetStack">
            <summary>
            Represents a recordset stack.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSetStack.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> with the given ID.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.RecordSetStack.Current">
            <summary>
            Gets the current <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/>
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.ReferenceQuery">
            <summary>
            Represents a reference query.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.ReferenceQuery.GetRecordSet(ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.ReferenceQuery"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter"/> of the query.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.SqlQuery">
            <summary>
            Represents a SQL query.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.SqlQuery.GetRecordSet(ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.SqlQuery"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter"/> of the query.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.SqlQuery.Sql">
            <summary>
            Gets or sets the SQL statement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.SqlQuery.ConnectionString">
            <summary>
            Gets or sets the connection string of the query.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.SqlQuery.ProviderType">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.SqlQuery.ProviderType"/> of the query.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Data.StoredProcedureQuery">
            <summary>
            Represents a stored procedure query.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Data.StoredProcedureQuery.GetRecordSet(ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.StoredProcedureQuery"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.ReportWriter.IO.LayoutWriter"/> of the query.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.ReportWriter.Data.RecordSet"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.StoredProcedureQuery.ConnectionString">
            <summary>
            Gets or sets the connection string of the query.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Data.StoredProcedureQuery.ProviderType">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Data.StoredProcedureQuery.ProviderType"/> of the query.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout">
            <summary>
            Represents a Document based on the supplied DPLX file.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/> class.
            </summary>
            <param name="filePath">The physical file path of the DPLX file to use.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.#ctor(ceTe.DynamicPDF.ReportWriter.DplxFile)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/> class.
            </summary>
            <param name="dplx">The <see cref="T:ceTe.DynamicPDF.ReportWriter.DplxFile"/> to use to create the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/> class.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.GetElementById(System.String)">
            <summary>
            Returns the <see cref="T:System.Object"/> that matches the supplied id.
            </summary>
            <param name="id">The id of the object to retrieve.</param>
            <returns>The element with the supplied id.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.GetReportElementById(System.String)">
            <summary>
            Returns the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElement"/> that matches the supplied id.
            </summary>
            <param name="id">The id of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElement"/> to retrieve.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElement"/> with the supplied id.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.GetReportPartById(System.String)">
            <summary>
            Returns the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportPart"/> that matches the supplied id.
            </summary>
            <param name="id">The id of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportPart"/> to retrieve.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportPart"/> with the supplied id.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.GetQueryById(System.String)">
            <summary>
            Returns the <see cref="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Query"/> that matches the supplied id. 
            </summary>
            <param name="id">The id of the <see cref="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Query"/> to retrieve.</param>
            <returns>The <see cref="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Query"/> with the supplied id.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Run">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.Document"/> object that contians the report as defined in the DPLX file.
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.Document"/> object containing just created.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Run(ceTe.DynamicPDF.ReportWriter.ParameterDictionary)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.Document"/> object that contians the report as defined in the DPLX file.
            </summary>
            <param name="parameters">The <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/> to use for creating the report.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Document"/> object containing just created.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Run(ceTe.DynamicPDF.Document)">
            <summary>
            Appends the report to the given <see cref="T:ceTe.DynamicPDF.Document"/> object.
            </summary>
            <param name="document"><see cref="T:ceTe.DynamicPDF.Document"/> object to which the report is appended.</param>
            <remarks>NOTE: The documents metadata (title, author etc.) will not be overwritten.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Run(ceTe.DynamicPDF.ReportWriter.ParameterDictionary,ceTe.DynamicPDF.Document)">
            <summary>
            Appends the report to the given <see cref="T:ceTe.DynamicPDF.Document"/> object.
            </summary>
            <param name="parameters">The <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/> to use for creating the report.</param>
            <param name="document"><see cref="T:ceTe.DynamicPDF.Document"/> object to which the report is appended.</param>
            <remarks>NOTE: The documents metadata (title, author etc.) will not be overwritten.</remarks>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.DocumentLayout.DocumentLayingOut">
            <summary>
            Occurs before the document`s pages are laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.DocumentLayout.DocumentLaidOut">
            <summary>
            Occurs after the document`s pages are laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.FormatProvider">
            <summary>
            Gets or sets the <see cref="T:System.IFormatProvider"/> of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.LayoutParts">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPartList"/> of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.BasePhysicalPath">
            <summary>
            Gets or sets the base physical path of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.AppSettings">
            <summary>
            Gets the static application settings <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/> of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.ConnectionStrings">
            <summary>
            Gets the static connection string <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/> of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Fonts">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.FontList"/> object of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.FontFamilies">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.FontFamilyList"/> object of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Id">
            <summary>
            Gets or sets the ID of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Author">
            <summary>
            Gets or sets the author of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Keywords">
            <summary>
            Gets or sets the keywords of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Title">
            <summary>
            Gets or sets the title of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Subject">
            <summary>
            Gets or sets the subject of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayout.Tag">
            <summary>
            Gets or sets a value indicating whether document is tagged.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPartList">
            <summary>
            Represents a list of reports and fixed pages.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPartList.Count">
            <summary>
            Gets the total number of reports.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPartList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.DocumentLayoutPart"/> for the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DplxFile">
            <summary>
            Represents a DPLX file for reuse.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DplxFile"/> class.
            </summary>
            <param name="filePath">The file path to the DPLX file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxFile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DplxFile"/> class.
            </summary>
            <param name="stream">The <b>Stream</b> object containing DPLX file data.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxFile.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DplxFile"/> class.
            </summary>
            <param name="byteArray">The <b>byteArray</b> object containing DPLX file data in the form of byte[].</param>        
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DplxParseException">
            <summary>
            The exception that is thrown for an error encountered when parsing the DPLX file.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DplxParseException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.DplxWebForm">
            <summary>
            Represents an .aspx file that has a corresponding DPLX with the same name used in Web application.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdfToWeb">
            <summary>
            Creates the PDF and outputs it to the current ASPX page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdfToWeb(System.String)">
            <summary>
            Creates the PDF and streams it to the current ASPX page.
            </summary>
            <param name="downloadAsFileName">Specifies the file name of the document if it is downloaded.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdfToWeb(System.Boolean)">
            <summary>
            Creates the PDF and streams it to the current ASPX page.
            </summary>
            <param name="allowBrowserCaching">Specifies if the browser should be allowed to cache the PDF document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdfToWeb(System.String,System.Boolean)">
            <summary>
            Creates the PDF and streams it to the current ASPX page.
            </summary>
            <param name="downloadAsFileName">Specifies the file name of the document if it is downloaded.</param>
            <param name="forceDownload">Specifies if the Save As dialog should appear.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdfToWeb(System.Boolean,System.String,System.Boolean)">
            <summary>
            Creates the PDF and streams it to the current ASPX page.
            </summary>
            <param name="allowBrowserCaching">Specifies if the browser should be allowed to cache the PDF document.</param>
            <param name="downloadAsFileName">Specifies the file name of the document if it is downloaded.</param>
            <param name="forceDownload">Specifies if the Save As dialog should appear.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdf">
            <summary>
            Creates the PDF and outputs it to a byte array.
            </summary>
            <returns>The PDF as a byte array.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdf(System.String)">
            <summary>
            Creates the PDF and outputs it to a file.
            </summary>
            <param name="filePath">File path to save the PDF to.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DrawPdf(System.IO.Stream)">
            <summary>
            Creates the PDF and outputs it to a <see cref="T:System.IO.Stream"/> object.
            </summary>
            <param name="stream">Stream object that receives the PDF output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DocumentLayout">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.DplxWebForm.DocumentLayout"/> of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DplxWebForm"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.DplxWebForm.Parameters">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/> of the <see cref="T:ceTe.DynamicPDF.ReportWriter.DplxWebForm"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.SymbolType">
            <summary>
            Specifies symbol type.
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font> Use LayoutEngine namespace enums instead.</remarks>           
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.Check1">
            <summary>
            Check1
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.Check2">
            <summary>
            Check2
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.X1">
            <summary>
            X1
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.X2">
            <summary>
            X2
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.X3">
            <summary>
            X3
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.X4">
            <summary>
            X4
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ReportWriter.SymbolType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.FontFamilyList">
            <summary>
            Represents a list of font families.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.FontFamilyList.Add(ceTe.DynamicPDF.FontFamily)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.FontFamily"/> to the <see cref="T:ceTe.DynamicPDF.ReportWriter.FontFamilyList"/>.
            </summary>
            <param name="FontFamily">The <see cref="T:ceTe.DynamicPDF.FontFamily"/> to add.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.FontFamilyList.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.FontFamily"/> with the specified name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.FontList">
            <summary>
            Represents a list of fonts.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.FontList.Add(ceTe.DynamicPDF.Font)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.Font"/> to the <see cref="T:ceTe.DynamicPDF.ReportWriter.FontList"/>.
            </summary>
            <param name="font">The <see cref="T:ceTe.DynamicPDF.Font"/> to add.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.FontList.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Font"/> with the specified name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Line">
             <summary>
             Represents a line page element.
             </summary>
             <remarks>This class can be used to place lines of different length, width, color and patterns on a page.</remarks>
            ^Line
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Line.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Line"/> class.
            </summary>
            <param name="x1">X1 coordinate of the line.</param>
            <param name="y1">Y1 coordinate of the line.</param>
            <param name="x2">X2 coordinate of the line.</param>
            <param name="y2">Y2 coordinate of the line.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Line.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Line"/> class.
            </summary>
            <param name="x1">X1 coordinate of the line.</param>
            <param name="y1">Y1 coordinate of the line.</param>
            <param name="x2">X2 coordinate of the line.</param>
            <param name="y2">Y2 coordinate of the line.</param>
            <param name="width">Width of the line.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Line.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Line"/> class.
            </summary>
            <param name="x1">X1 coordinate of the line.</param>
            <param name="y1">Y1 coordinate of the line.</param>
            <param name="x2">X2 coordinate of the line.</param>
            <param name="y2">Y2 coordinate of the line.</param>
            <param name="color">Color of the line.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Line.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Line"/> class.
            </summary>
            <param name="x1">X1 coordinate of the line.</param>
            <param name="y1">Y1 coordinate of the line.</param>
            <param name="x2">X2 coordinate of the line.</param>
            <param name="y2">Y2 coordinate of the line.</param>
            <param name="width">Width of the line.</param>
            <param name="color">Color of the line.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Line.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Line"/> class.
            </summary>
            <param name="x1">X1 coordinate of the line.</param>
            <param name="y1">Y1 coordinate of the line.</param>
            <param name="x2">X2 coordinate of the line.</param>
            <param name="y2">Y2 coordinate of the line.</param>
            <param name="width">Width of the line.</param>
            <param name="color">Color of the line.</param>
            <param name="style">Style of the line.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Line.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the line to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the line's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.Style">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> object to use for the style of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.Cap">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineCap"/> enumeration used to specify the line cap style of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.Width">
            <summary>
            Gets or sets the width of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Line.Color"/> object to use for the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.X1">
            <summary>
            Gets or sets the X1 coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.Y1">
            <summary>
            Gets or sets the Y1 coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.X2">
            <summary>
            Gets or sets the X2 coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Line.Y2">
            <summary>
            Gets or sets the Y2 coordinate of the line.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Rectangle">
             <summary>
             Represents a rectangle page element.
             </summary>
             <remarks>This class can be used to place rectangles of any size or color on a page.</remarks>
            ^Rectangle
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderColor">Color of the border of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderWidth">Width of the border of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderWidth">Width of the border of the rectangle.</param>
            <param name="fillColor">Color of the fill of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderColor">Color of the border of the rectangle.</param>
            <param name="borderWidth">Width of the border of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderWidth">Width of the border of the rectangle.</param>
            <param name="borderStyle">Style of the border of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderColor">Color of the border of the rectangle.</param>
            <param name="borderWidth">Width of the border of the rectangle.</param>
            <param name="borderStyle">Style of the border of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderColor">Color of the border of the rectangle.</param>
            <param name="fillColor">Color of the fill of the rectangle.</param>
            <param name="borderWidth">Width of the border of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderColor">Color of the border of the rectangle.</param>
            <param name="fillColor">Color of the fill of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Rectangle"/> class.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <param name="borderColor">Color of the border of the rectangle.</param>
            <param name="fillColor">Color of the fill of the rectangle.</param>
            <param name="borderWidth">Width of the border of the rectangle.</param>
            <param name="borderStyle">Style of the border of the rectangle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Rectangle.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the rectangle to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the rectangle's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Rectangle.BorderStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> object used to specify the border style of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Rectangle.CornerRadius">
            <summary>
            Gets or sets the corner radius of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Rectangle.BorderWidth">
            <summary>
            Gets or sets the border width of the rectangle.
            </summary>
            <remarks>To force the borders not to appear set the border width to any value 0 or less.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Rectangle.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the border of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Rectangle.FillColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the fill of the rectangle.
            </summary>
            <remarks>To force no color to appear in the rectangle (only borders) set the fill color to null (Nothing in Visual Basic).</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Rectangle.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea">
            <summary>
            Represents a text area.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the rotated page element to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration that specifies the text alignment of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.VAlign"/> enumeration that specifies the vertical text alignment of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.Underline">
            <summary>
            Gets or sets a value indicating if the report text area is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.RightToLeft">
            <summary>
            Gets or sets a value indicating if text should be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.TextOutlineWidth">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.Font"/> object used to specify the font of the text for the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.FontSize">
            <summary>
            Gets or sets the font size for the text of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.Leading">
            <summary>
            Gets or sets the leading for the text of the report text area.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.AutoLeading">
            <summary>
            Gets or sets a value indicating whether the leading of the report text area should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indenting for the paragraphs of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea.CleanParagraphBreaks">
            <summary>
            Gets or sets the clean paragraph breaks for the paragraphs of the report text area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventArgs.FixedPage">FixedPage's</see> PageLaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventArgs.LayoutWriter"/> argument of the FixedPage's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventArgs.FixedPage">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventArgs.FixedPage"/> of the FixedPage's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.FixedPage.PageLaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.FixedPage"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.PageLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.FixedPage">FixedPage's</see> PageLayingOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventArgs.LayoutWriter"/> argument of the PageLayingOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventArgs.Layout">
            <summary>
            Gets or sets a value indicating whether the element should be layed out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventArgs.Page">
            <summary>
            Gets the new <see cref="P:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventArgs.Page"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.FixedPage.PageLayingOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.FixedPage"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.PageLayingOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report">Report's</see> ReportLaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportLaidOutEventArgs.LayoutWriter"/> argument of the Report's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportLaidOutEventArgs.StartPageNumber">
            <summary>
            Gets the page number of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report">Report's</see> first page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportLaidOutEventArgs.PageCount">
            <summary>
            Gets the number of pages of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report">Report</see>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.Report.ReportLaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs.Report">Report's</see> ReportLayingOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs.LayoutWriter"/> argument of the Report's ReportLayingOut event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs.Report">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs.Report"/> argument of the Report's ReportLayingOut event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs.Layout">
            <summary>
            Gets or sets a value indicating whether the report should be layed out.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.Report.ReportLayingOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportLayingOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report">Report's</see> ReportPageLaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.IO.ReportPartWriter"/> argument of the Report's ReportPageLaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventArgs.Page">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventArgs.Page"/> argument of the Report's ReportPageLaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventArgs.Header">
            <summary>
            Gets the header of <see cref="T:ceTe.DynamicPDF.PageElements.ContentArea"/> type.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventArgs.Footer">
            <summary>
            Gets the footer of <see cref="T:ceTe.DynamicPDF.PageElements.ContentArea"/> type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.Report.ReportPageLaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportPageLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportPageLayingOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report">Report's</see> ReportPageLayingOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportPageLayingOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportPageLayingOutEventArgs.LayoutWriter"/> argument of the Report's ReportPageLayingOut Event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportPageLayingOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.Report.ReportPageLayingOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.Report"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportPageLayingOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary">
            <summary>
            Represents a dictionary of parameters.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.ParameterDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.ParameterDictionary.Add(System.String,System.Object)">
            <summary>
            Adds the provided key-value entry to the <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/>.
            </summary>
            <param name="key"><b>String</b> to be added as the key to the <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/>.</param>
            <param name="value"><see cref="T:System.Object"/> value to be added to the <see cref="T:ceTe.DynamicPDF.ReportWriter.ParameterDictionary"/>.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ParameterDictionary.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> corresponding to the provided key.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.Report">
            <summary>
            Represents a report.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.Report.ReportPageLayingOut">
            <summary>
            Occurs before the report`s page is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.Report.ReportPageLaidOut">
            <summary>
            Occurs after the report`s page has been laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.Report.ReportLayingOut">
            <summary>
            Occurs before the report is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.Report.ReportLaidOut">
            <summary>
            Occurs after the report has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Report.Id">
            <summary>
            Gets the ID of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Report.Header">
            <summary>
            Gets the header of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Report.Footer">
            <summary>
            Gets the footer of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Report.Detail">
            <summary>
            Gets the detail of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Report.Query">
            <summary>
            Gets or sets the query of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.Report.Template">
            <summary>
            Gets or sets the PDF page to use as the template of the report.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElementList">
            <summary>
            Represents a list of report elements.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.ReportElementList.Add(ceTe.DynamicPDF.ReportWriter.ReportElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElement"/> to the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElementList"/>.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElement"/> to add.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElementList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElement"/> at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElementList.Count">
            <summary>
            Gets the number of report elements contained in the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElementList"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.ContentGroup">
            <summary>
            Represents a group of report elements.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ContentGroup.Height">
            <summary>
            Gets or sets the height of the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ContentGroup.Elements">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElementList"/> of elements in the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ContentGroup.Width">
            <summary>
            Gets or sets the width of the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ContentGroup.X">
            <summary>
            Gets or sets the X coordinate of the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ContentGroup.Y">
            <summary>
            Gets or sets the Y coordinate of the content group.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea">
            <summary>
            Represents an area for a formatted record.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.LayingOut">
            <summary>
            Occurs before the formatted text area is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.LaidOut">
            <summary>
            Occurs after the formatted text area has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.Text">
            <summary>
            Gets or sets the text for the formatted record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.Splittable">
            <summary>
            Gets or sets a value indicating if the formatted record area is splittable.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.Expandable">
            <summary>
            Gets or sets a value indicating if the formatted record area is expandable.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.X">
            <summary>
            Gets or sets the X coordinate of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.Y">
            <summary>
            Gets or sets the Y coordinate of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.Width">
            <summary>
            Gets or sets the width of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.Height">
            <summary>
            Gets or sets the height of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.InitialStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle"/> object used to specify the initial style of the formatted record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.VAlign">
            <summary>
            Gets or sets a value indicating the vertical alignment of the formatted record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea.Angle">
            <summary>
            Gets or sets a value indicating the angle of the formatted record area.
            </summary>
            
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordAreaLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea">FormattedRecordArea's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordAreaLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordAreaLaidOutEventArgs.LayoutWriter"/> argument of the FormattedRecordArea's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordAreaLaidOutEventArgs.FormattedTextArea">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordAreaLaidOutEventArgs.FormattedTextArea"/> element of the FormattedRecordArea's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordAreaLaidOutEventHandler">
            <summary>
            Represents the method that will handle the formatted record area LaidOut event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordArea"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.FormattedRecordAreaLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Image">
            <summary>
            Represents an image report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.LayingOut">
            <summary>
            Occurs before the image is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.LaidOut">
            <summary>
            Occurs after the image has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.Angle">
            <summary>
            Gets or sets the angle of the image in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.Height">
            <summary>
            Gets or sets the height of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.Width">
            <summary>
            Gets or sets the width of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.X">
            <summary>
            Gets or sets the X coordinate of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.Y">
            <summary>
            Gets or sets the Y coordinate of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.ImageData">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.ImageData"/> of the Image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.AlternateText">
            <summary>
            Gets or sets the alternate text of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventArgs.Image">Image's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventArgs.LayoutWriter"/> argument of the Image's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventArgs.Image">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventArgs.Image"/> element of the Image's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Image.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Image"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.ImageLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Label">
            <summary>
            Represents a label report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.LayingOut">
            <summary>
            Occurs before the label is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.LaidOut">
            <summary>
            Occurs after the label has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Align">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Align"/> enumeration that specifies the text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Font"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.FontSize">
            <summary>
            Gets or sets the font size for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Text">
            <summary>
            Gets or sets the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Underline">
            <summary>
            Gets or sets a value indicating if the label is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.VAlign"/> enumeration that specifies the vertical text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Angle">
            <summary>
            Gets or sets the angle of the label in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Height">
            <summary>
            Gets or sets the height of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Width">
            <summary>
            Gets or sets the width of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.X">
            <summary>
            Gets or sets the X coordinate of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.Y">
            <summary>
            Gets or sets the Y coordinate of the label.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventArgs.Label">Label's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventArgs.LayoutWriter"/> argument of the Label's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventArgs.Label">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventArgs.Label"/> element of the Label's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Label.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Label"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LabelLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LayingOutEventArgs">
            <summary>
            Provides data for the LayingOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LayingOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LayingOutEventArgs.LayoutWriter"/> argument of the LayingOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LayingOutEventArgs.Layout">
            <summary>
            Gets or sets a value indicating whether the element should be layed out.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LayingOutEventHandler">
            <summary>
            Represents the method that will handle the LayingOut event.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LayingOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Line">
            <summary>
            Represents a line report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.LayingOut">
            <summary>
            Occurs before the line is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.LaidOut">
            <summary>
            Occurs after the line has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.X1">
            <summary>
            Gets or sets the first X coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.X2">
            <summary>
            Gets or sets the second X coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.Y1">
            <summary>
            Gets or sets the first Y coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.Y2">
            <summary>
            Gets or sets the second Y coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.Width">
            <summary>
            Gets or sets the width of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.Cap">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineCap"/> enumeration used to specify the line cap style of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.Color"/> object to use for the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.LineStyle"/> object to use for the style of the line.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventArgs.Line">Line's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventArgs.LayoutWriter"/> argument of the Line's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventArgs.Line">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventArgs.Line"/> element of the Line's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Line.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Line"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.LineLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.NoSplitZone">
            <summary>
            Summary description for NoSplitZone.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.NoSplitZone.Top">
            <summary>
            Gets or sets the top Y coordinate of the nosplitzone.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.NoSplitZone.Bottom">
            <summary>
            Gets or sets the bottom Y coordinate of the nosplitzone.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PageBreak">
            <summary>
            Summary description for PageBreak.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageBreak.Y">
            <summary>
            Gets or sets the Y coordinate of the pagebreak.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel">
            <summary>
            Represents a page numbering report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.LayingOut">
            <summary>
            Occurs before the page numbering label is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.LaidOut">
            <summary>
            Occurs after the page numbering label has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Align">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Align"/> enumeration that specifies the text alignment of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Font"/> object to use for the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.FontSize">
            <summary>
            Gets or sets the font size for the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Text">
            <summary>
            Gets or sets the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Underline">
            <summary>
            Gets or sets a value indicating if the page numbering label is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.VAlign"/> enumeration that specifies the vertical text alignment of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Angle">
            <summary>
            Gets or sets the angle of the page numbering label in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Height">
            <summary>
            Gets or sets the height of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Width">
            <summary>
            Gets or sets the width of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.X">
            <summary>
            Gets or sets the X coordinate of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.Y">
            <summary>
            Gets or sets the Y coordinate of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.PageTotalOffset">
            <summary>
            Gets or sets the page total offset for page numbering.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.PageOffset">
            <summary>
            Gets or sets the page offset for page numbering.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventArgs.PageNumberingLabel">PageNumberingLabel's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventArgs.LayoutWriter"/> argument of the PageNumberingLabel's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventArgs.PageNumberingLabel">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventArgs.PageNumberingLabel"/> element of the PageNumberingLabel's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabel"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PageNumberingLabelLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder">
            <summary>
            Represents a place holder report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder.LaidOut">
            <summary>
            Occurs after the place holder has been laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder.LayingOut">
            <summary>
            Occurs before the place holder is laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder.X">
            <summary>
            Gets or sets the X coordinate of the place holder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder.Y">
            <summary>
            Gets or sets the Y coordinate of the place holder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder.Width">
            <summary>
            Gets or sets the width of the place holder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder.Height">
            <summary>
            Gets or sets the height of the place holder.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolderLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder">PlaceHolder's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolderLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolderLaidOutEventArgs.LayoutWriter"/> argument of the PlaceHolder's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolderLaidOutEventArgs.ContentArea">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolderLaidOutEventArgs.ContentArea"/> argument of the PlaceHolder's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolderLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolder"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.PlaceHolderLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea">
            <summary>
            Represents a record area report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.LayingOut">
            <summary>
            Occurs before the record area is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.LaidOut">
            <summary>
            Occurs after the record area has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration that specifies the text alignment of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.AutoLeading">
            <summary>
            Gets or sets a value indicating whether the leading of the record area should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.CleanParagraphBreaks">
            <summary>
            Gets or sets the clean paragraph breaks for the paragraphs of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Expandable">
            <summary>
            Gets or sets a value indicating whether the record area will expand if all the text is not visible.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Splittable">
            <summary>
            Gets or sets a value indicating whether the text within the record area will split if the record area reaches the end of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Font"/> object used to specify the font of the text for the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.FontSize">
            <summary>
            Gets or sets the font size for the text of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Leading">
            <summary>
            Gets or sets the leading for the text of the record area.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indenting for the paragraphs of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Text">
            <summary>
            Gets or sets the text of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.TextOutlineWidth">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Underline">
            <summary>
            Gets or sets a value indicating if the record area is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.VAlign"/> enumeration that specifies the vertical text alignment of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Angle">
            <summary>
            Gets or sets the angle of the record area in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Height">
            <summary>
            Gets or sets the height of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Width">
            <summary>
            Gets or sets the width of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.X">
            <summary>
            Gets or sets the X coordinate of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.Y">
            <summary>
            Gets or sets the Y coordinate of the record area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordAreaLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea">RecordArea's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordAreaLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordAreaLaidOutEventArgs.LayoutWriter"/> argument of the RecordArea's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordAreaLaidOutEventArgs.ReportTextArea">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea"/> element of the RecordArea's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordAreaLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordArea"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordAreaLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox">
            <summary>
            Represents a record box report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.LayingOut">
            <summary>
            Occurs before the record box is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.LaidOut">
            <summary>
            Occurs after the record box has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration that specifies the text alignment of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.AutoLeading">
            <summary>
            Gets or sets a value indicating whether the leading of the record box should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.CleanParagraphBreaks">
            <summary>
            Gets or sets the clean paragraph breaks for the paragraphs of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Expandable">
            <summary>
            Gets or sets a value indicating whether the record box will expand if all the text is not visible.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Splittable">
            <summary>
            Gets or sets a value indicating whether the text within the record box will split if the record area reaches the end of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Font"/> object used to specify the font of the text for the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.FontSize">
            <summary>
            Gets or sets the font size for the text of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Leading">
            <summary>
            Gets or sets the leading for the text of the record box.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indenting for the paragraphs of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.TextOutlineWidth">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Underline">
            <summary>
            Gets or sets a value indicating if the record box is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.VAlign"/> enumeration that specifies the vertical text alignment of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.DataFormat">
            <summary>
            Gets or sets the format to be used for the data of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Field">
            <summary>
            Gets or sets the name of the field to be used in the record box
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Angle">
            <summary>
            Gets or sets the angle of the record box in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Height">
            <summary>
            Gets or sets the height of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Width">
            <summary>
            Gets or sets the width of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.X">
            <summary>
            Gets or sets the X coordinate of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.Y">
            <summary>
            Gets or sets the Y coordinate of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.FormatProvider">
            <summary>
            Gets or sets the format provider of the record box.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBoxLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox">RecordBox's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBoxLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBoxLaidOutEventArgs.LayoutWriter"/> argument of the RecordBox's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBoxLaidOutEventArgs.ReportTextArea">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Layout.LayoutTextArea"/> element of the RecordBox's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBoxLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBox"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RecordBoxLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle">
            <summary>
            Represents a rectangle report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.LayingOut">
            <summary>
            Occurs before the rectangle is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.LaidOut">
            <summary>
            Occurs after the rectangle has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the border of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.BorderStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> object used to specify the border style of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.BorderWidth">
            <summary>
            Gets or sets the border width of the rectangle.
            </summary>
            <remarks>To force the borders not to appear set the border width to any value 0 or less.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.CornerRadius">
            <summary>
            Gets or sets the corner radius of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.FillColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the fill of the rectangle.
            </summary>
            <remarks>To force no color to appear in the rectangle (only borders) set the fill color to null (Nothing in Visual Basic).</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.ShowAlternateRow">
            <summary>
            Gets or sets a value indicating whether the rectangle should be displayed on alternating records.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.Angle">
            <summary>
            Gets or sets the angle of the rectangle in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.X">
            <summary>
            Gets or sets the X coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.Y">
            <summary>
            Gets or sets the Y coordinate of the rectangle.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventArgs.Rectangle">Rectangle's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventArgs.LayoutWriter"/> argument of the Rectangle's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventArgs.Rectangle">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventArgs.Rectangle"/> element of the Rectangle's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Rectangle"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.RectangleLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport">
            <summary>
            Represents a sub report report element.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Height">
            <summary>
            Gets or sets the height of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.X">
            <summary>
            Gets or sets the X coordinate of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Query">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Query"/> object of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Y">
            <summary>
            Gets or sets the X coordinate of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Width">
            <summary>
            Gets or sets the width of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Header">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.ReportWriter.SubReportHeader"/> object of the sub report. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Footer">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.ReportWriter.SubReportFooter"/> object of the sub report. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SubReport.Detail">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.ReportWriter.DetailSubReportPart"/> object of the sub report.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol">
            <summary>
            Represents a symbol report element.
            </summary>
            /// <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.LayingOut">
            <summary>
            Occurs before the symbol is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.LaidOut">
            <summary>
            Occurs after the symbol has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Font"/> object to use for the character of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.CustomCharacter">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.CustomCharacter"/> of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.VisibilityCondition">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.ReportWriter.Condition"/> of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.SymbolType">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.SymbolType"/> of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Size">
            <summary>
            Gets or sets the font size for the character of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Color"/> object to use for the character of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Height">
            <summary>
            Gets or sets the height of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Width">
            <summary>
            Gets or sets the width of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.X">
            <summary>
            Gets or sets the X coordinate of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.Y">
            <summary>
            Gets or sets the Y coordinate of the Symbol.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventArgs">
            <summary>
            Provides data for the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventArgs.Symbol">Symbol's</see> LaidOut event.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventArgs.LayoutWriter"/> argument of the Symbol's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventArgs.Symbol">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventArgs.Symbol"/> element of the Symbol's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.Symbol"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportElements.SymbolLaidOutEventArgs"/>.</param>
            <remarks><font color="red">NOTE: This delegate is obsolete.</font> Use LayoutEngine namespace delegates instead.</remarks>           
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportFooter">
            <summary>
            Represents the footer of a report.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportFooter.Height">
            <summary>
            Gets the height of the footer.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportHeader">
            <summary>
            Represents the header of a report.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.ReportHeader.Height">
            <summary>
            Gets the height of the header.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.ReportWriterException">
            <summary>
            The exception that is thrown when a ReportWriter error occurs.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="M:ceTe.DynamicPDF.ReportWriter.ReportWriterException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ReportWriter.ReportWriterException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.SubReportFooter">
            <summary>
            Represents the footer of a sub report.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.SubReportFooter.Height">
            <summary>
            Gets the height of the footer.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ReportWriter.SubReportHeader">
            <summary>
            Represents the header of a sub report.
            </summary>
            <remarks><font color="red">NOTE: This class is obsolete.</font> Use LayoutEngine namespace classes instead.</remarks>           
        </member>
        <member name="P:ceTe.DynamicPDF.ReportWriter.SubReportHeader.Height">
            <summary>
            Gets the height of the header.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.UserPropertyList">
             <summary>
             Represents an user properties attribute object.
             </summary>
            ^UserPropertyList 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.UserPropertyList"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.String)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.String,System.String)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
            <param name="format">Format of the property value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
            <param name="format">Format of the property value.</param>
            <param name="isHidden">Specifies if attribute is hidden.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.Boolean)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.Boolean,System.String)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
            <param name="format">Format of the property value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.Boolean,System.String,System.Boolean)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
            <param name="format">Format of the property value.</param>
            <param name="isHidden">Specifies if attribute is hidden.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.Single)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.Single,System.String)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
            <param name="format">Format of the property value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UserPropertyList.Add(System.String,System.Single,System.String,System.Boolean)">
            <summary>
            Adds a user property to the user PropertyList.
            </summary>
            <param name="name">Name of the property.</param>
            <param name="value">Value of the property.</param>
            <param name="format">Format of the property value.</param>
            <param name="isHidden">Specifies if attribute is hidden.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.UserPropertyList.Owner">
            <summary>
            Gets the attribute owner.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.WebCacheException">
             <summary>
             The exception that is thrown for a WebCache error.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font></remarks>        
            ^Lic.Cache.Gen.Ent
             <remarks><font color="red">This class is not available for .NET standard.</font></remarks>    
        </member>
        <member name="T:ceTe.DynamicPDF.WebCacheItem">
             <summary>
             Represents an item in the WebCache.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font></remarks>    
            ^Lic.Cache.Gen.Ent
             <remarks><font color="red">This class is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.WebCacheItem.Redirect">
             <summary>
             Redirects to the PDF using an HTTP redirect.
             </summary>
            ^Lic.Cache.Gen.Ent.Method
        </member>
        <member name="P:ceTe.DynamicPDF.WebCacheItem.FilePath">
             <summary>
             Gets a value indicating the file name and path to use to store the PDF.
             </summary>
            ^Lic.Cache.Gen.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.WebCacheItem.Url">
             <summary>
             Gets a value indicating the secure URL to use to view the PDF.
             </summary>
            ^Lic.Cache.Gen.Ent.Prop
        </member>
        <member name="T:ceTe.DynamicPDF.CmykColor">
             <summary>
             Represents a CMYK color.
             </summary>
             <remarks>See the <a href="Colors.html">Colors</a> topic for more on CMYK colors.</remarks>
            ^Lic.Generator.Comm
        </member>
        <member name="T:ceTe.DynamicPDF.DeviceColor">
             <summary>
             Represents the base class for which all solid colors are derived.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.DeviceColor.DrawStroke(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>PageWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.DeviceColor.DrawFill(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>PageWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.DeviceColor.ToStringBuilder(System.Text.StringBuilder)">
            <summary>
            Appends the color information to the given <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="stringBuilder"><see cref="T:System.Text.StringBuilder"/> to receive the color information.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.DeviceColor.Components">
            <summary>
            Gets the number of components for the device color.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.CmykColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.CmykColor"/> class.
            </summary>
            <param name="cyan">The cyan intensity.</param>
            <param name="magenta">The magenta intensity.</param>
            <param name="yellow">The yellow intensity.</param>
            <param name="black">The black intensity.</param>
            <remarks>Values must be between 0.0 and 1.0.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.CmykColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.CmykColor"/> class.
            </summary>
            <param name="cyan">The cyan intensity.</param>
            <param name="magenta">The magenta intensity.</param>
            <param name="yellow">The yellow intensity.</param>
            <param name="black">The black intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.CmykColor.Equals(System.Object)">
            <summary>
            Tests equality of colors.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <b>Color</b>.</param>
            <returns><b>true</b> if the two colors are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.CmykColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.Color"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.CmykColor.ToStringBuilder(System.Text.StringBuilder)">
            <summary>
            Appends the color information to the given <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="stringBuilder"><see cref="T:System.Text.StringBuilder"/> to receive the color information.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.CmykColor.DrawStroke(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.OperatorWriter"/> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.CmykColor.DrawFill(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.OperatorWriter"/> object to receive the color data.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Components">
            <summary>
            Gets the number of components for the device color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.ColorSpace">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.C">
            <summary>
            Gets or sets the cyan value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.M">
            <summary>
            Gets or sets the magenta value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Y">
            <summary>
            Gets or sets the yellow value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.K">
            <summary>
            Gets or sets the black value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Black">
            <summary>Gets the color black.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Silver">
            <summary>Gets the color silver.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkGray">
            <summary>Gets the color dark gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Gray">
            <summary>Gets the color gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DimGray">
            <summary>Gets the color dim gray. </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.White">
            <summary>Gets the color white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Red">
            <summary>Gets the color red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Green">
            <summary>Gets the color green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Lime">
            <summary>Gets the color lime.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Aqua">
            <summary>Gets the color aqua.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Purple">
            <summary>Gets the color purple.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Blue">
            <summary>Gets the color blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Cyan">
            <summary>Gets the color cyan. </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Magenta">
            <summary>Gets the color magenta.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Yellow">
            <summary>Gets the color yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.AliceBlue">
            <summary>Gets the color Alice blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.AntiqueWhite">
            <summary>Gets the color antique white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Aquamarine">
            <summary>Gets the color aquamarine.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Azure">
            <summary>Gets the color azure.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Beige">
            <summary>Gets the color beige.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Bisque">
            <summary>Gets the color bisque.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.BlanchedAlmond">
            <summary>Gets the color blanched almond.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.BlueViolet">
            <summary>Gets the color blue violet.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Brown">
            <summary>Gets the color brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.BurlyWood">
            <summary>Gets the color burly wood.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.CadetBlue">
            <summary>Gets the color cadet blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Chartreuse">
            <summary>Gets the color chartreuse.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Chocolate">
            <summary>Gets the color chocolate.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Coral">
            <summary>Gets the color coral.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.CornflowerBlue">
            <summary>Gets the color cornflower blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Cornsilk">
            <summary>Gets the color corn silk.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Crimson">
            <summary>Gets the color crimson.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkBlue">
            <summary>Gets the color dark blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkCyan">
            <summary>Gets the color dark cyan.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkGoldenRod">
            <summary>Gets the color dark golden rod.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkGreen">
            <summary>Gets the color dark green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkKhaki">
            <summary>Gets the color dark khaki.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkMagenta">
            <summary>Gets the color dark magenta.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkOliveGreen">
            <summary>Gets the color dark olive green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkOrange">
            <summary>Gets the color dark orange.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkOrchid">
            <summary>Gets the color dark orchid.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkRed">
            <summary>Gets the color dark red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkSalmon">
            <summary>Gets the color dark salmon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkSeaGreen">
            <summary>Gets the color dark sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkSlateBlue">
            <summary>Gets the color dark slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkSlateGray">
            <summary>Gets the color dark slate gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkTurquoise">
            <summary>Gets the color dark turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DarkViolet">
            <summary>Gets the color dark violet.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DeepPink">
            <summary>Gets the color deep pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DeepSkyBlue">
            <summary>Gets the color deep sky blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.DodgerBlue">
            <summary>Gets the color dodger blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Feldspar">
            <summary>Gets the color feldspar.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.FireBrick">
            <summary>Gets the color fire brick.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.FloralWhite">
            <summary>Gets the color floral white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.ForestGreen">
            <summary>Gets the color forest green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Fuchsia">
            <summary>Gets the color fuchsia.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Gainsboro">
            <summary>Gets the color gainsboro.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.GhostWhite">
            <summary>Gets the color ghost white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Gold">
            <summary>Gets the color gold.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.GoldenRod">
            <summary>Gets the color golden rod.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.GreenYellow">
            <summary>Gets the color green yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.HoneyDew">
            <summary>Gets the color honey dew.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.HotPink">
            <summary>Gets the color hot pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.IndianRed">
            <summary>Gets the color Indian red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Indigo">
            <summary>Gets the color indigo.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Ivory">
            <summary>Gets the color ivory.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Khaki">
            <summary>Gets the color khaki.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Lavender">
            <summary>Gets the color lavender.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LavenderBlush">
            <summary>Gets the color lavender blush.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LawnGreen">
            <summary>Gets the color lawn green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LemonChiffon">
            <summary>Gets the color lemon chiffon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightBlue">
            <summary>Gets the color light blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightCoral">
            <summary>Gets the color light coral.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightCyan">
            <summary>Gets the color light cyan.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightGoldenRodYellow">
            <summary>Gets the color light golden rod yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightGrey">
            <summary>Gets the color light grey.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightGreen">
            <summary>Gets the color light green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightPink">
            <summary>Gets the color light pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightSalmon">
            <summary>Gets the color light salmon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightSeaGreen">
            <summary>Gets the color light sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightSkyBlue">
            <summary>Gets the color light sky blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightSlateBlue">
            <summary>Gets the color light slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightSlateGray">
            <summary>Gets the color light slate gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightSteelBlue">
            <summary>Gets the color light steel blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LightYellow">
            <summary>Gets the color light yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.LimeGreen">
            <summary>Gets the color lime green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Linen">
            <summary>Gets the color linen.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Maroon">
            <summary>Gets the color maroon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumAquaMarine">
            <summary>Gets the color medium aqua marine.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumBlue">
            <summary>Gets the color medium blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumOrchid">
            <summary>Gets the color medium orchid.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumPurple">
            <summary>Gets the color medium purple.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumSeaGreen">
            <summary>Gets the color medium sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumSlateBlue">
            <summary>Gets the color medium slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumSpringGreen">
            <summary>Gets the color medium spring green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumTurquoise">
            <summary>Gets the color medium turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MediumVioletRed">
            <summary>Gets the color medium violet red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MidnightBlue">
            <summary>Gets the color midnight blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MintCream">
            <summary>Gets the color mint cream.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.MistyRose">
            <summary>Gets the color misty rose.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Moccasin">
            <summary>Gets the color moccasin.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.NavajoWhite">
            <summary>Gets the color Navajo white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Navy">
            <summary>Gets the color navy.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.OldLace">
            <summary>Gets the color old lace.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Olive">
            <summary>Gets the color olive.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.OliveDrab">
            <summary>Gets the color olive drab.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Orange">
            <summary>Gets the color orange.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.OrangeRed">
            <summary>Gets the color orange red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Orchid">
            <summary>Gets the color orchid.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.PaleGoldenRod">
            <summary>Gets the color pale golden rod.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.PaleGreen">
            <summary>Gets the color pale green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.PaleTurquoise">
            <summary>Gets the color pale turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.PaleVioletRed">
            <summary>Gets the color pale violet red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.PapayaWhip">
            <summary>Gets the color papaya whip.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.PeachPuff">
            <summary>Gets the color peach puff.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Peru">
            <summary>Gets the color Peru.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Pink">
            <summary>Gets the color pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Plum">
            <summary>Gets the color plum.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.PowderBlue">
            <summary>Gets the color powder blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.RosyBrown">
            <summary>Gets the color rosy brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.RoyalBlue">
            <summary>Gets the color royal blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SaddleBrown">
            <summary>Gets the color saddle brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Salmon">
            <summary>Gets the color salmon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SandyBrown">
            <summary>Gets the color sandy brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SeaGreen">
            <summary>Gets the color sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SeaShell">
            <summary>Gets the color sea shell.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Sienna">
            <summary>Gets the color sienna.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SkyBlue">
            <summary>Gets the color sky blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SlateBlue">
            <summary>Gets the color slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SlateGray">
            <summary>Gets the color slate gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Snow">
            <summary>Gets the color snow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SpringGreen">
            <summary>Gets the color spring green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.SteelBlue">
            <summary>Gets the color steel blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Tan">
            <summary>Gets the color tan.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Teal">
            <summary>Gets the color teal.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Thistle">
            <summary>Gets the color thistle.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Tomato">
            <summary>Gets the color tomato.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Turquoise">
            <summary>Gets the color turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Violet">
            <summary>Gets the color violet.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.VioletRed">
            <summary>Gets the color violet red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.Wheat">
            <summary>Gets the color wheat.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.WhiteSmoke">
            <summary>Gets the color white smoke.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.CmykColor.YellowGreen">
            <summary>Gets the color yellow green.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ColorSpace">
             <summary>
             Represents a color space resource for a color.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.ColorSpace.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the color space to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the encoder's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ColorSpace.DrawName(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color space name to the specified <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> to take the color space name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ColorSpace.DrawColorSpace(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the color space to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive color space.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ColorSpace.DeviceGray">
            <summary>
            Gets the DeviceGray color space. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ColorSpace.DeviceRgb">
            <summary>
            Gets the DeviceRgb color space. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ColorSpace.DeviceCmyk">
            <summary>
            Gets the DeviceCmyk color space. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ColorSpace.Pattern">
            <summary>
            Gets the Pattern color space. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Destination">
             <summary>
             Base class from which destinations are derived.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Destination.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Destination"/> class.
            </summary>
            <param name="pageNumber">Page number targeted by the destination.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Destination.PageNumber">
            <summary>
            Gets or sets the page number targeted by the destination.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Dimensions">
             <summary>
             Represents the dimensions of a rectangle.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Dimensions.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Dimensions"/> structure.
            </summary>
            <param name="size">The page size of the dimensions in points (1/72 inches).</param>
            <param name="orientation">The orientation of the dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Dimensions.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Dimensions"/> structure.
            </summary>
            <param name="width">The width of the dimensions in points (1/72 inches).</param>
            <param name="height">the height of the dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Dimensions.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Dimensions"/> structure.
            </summary>
            <param name="left">The left edge of the dimensions in points (1/72 inches).</param>
            <param name="top">The top edge of the dimensions in points (1/72 inches).</param>
            <param name="right">The right edge of the dimensions in points (1/72 inches).</param>
            <param name="bottom">The bottom edge of the dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Dimensions.Equals(System.Object)">
            <summary>
            Tests equality of Dimensions.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <b>Dimension</b>.</param>
            <returns><b>true</b> if the two dimensions are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Dimensions.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.Dimensions"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Dimensions.op_Equality(ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions)">
            <summary>
            Returns a value indicating if the instances are equal or not.
            </summary>
            <returns>Value indicates whether or not the instances are equal.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Dimensions.op_Inequality(ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions)">
            <summary>
            Returns a value indicating if the instances are equal or not.
            </summary>
            <returns>Value indicates whether or not the instances are not equal.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Dimensions.Width">
            <summary>
            Gets or sets the width of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Dimensions.Height">
            <summary>
            Gets or sets the height of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Dimensions.Left">
            <summary>
            Gets or sets the left edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Dimensions.Top">
            <summary>
            Gets or sets the top edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Dimensions.Right">
            <summary>
            Gets or sets the right edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Dimensions.Bottom">
            <summary>
            Gets or sets the bottom edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Document">
             <summary>
             Represents a PDF Document.
             </summary>
             <remarks>
             This is the primary class used to generate the PDF document. It
             represents a single PDF Document and is made up of Pages and Outlines.
             The document can have a <see cref="P:ceTe.DynamicPDF.Document.Security"/> object associated with it
             to control document security and encryption. The document can be output
             to any object derived from the <see cref="T:System.IO.Stream"/> class that
             supports writing and can easily be integrated with ASP.NET to stream the
             document to Internet Information Server's HTTP output stream.
             </remarks>
            ^Document.Example1
            ^Lic.Generator.Comm2
        </member>
        <member name="M:ceTe.DynamicPDF.Document.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Document"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.AddLicense(System.String)">
            <summary>
            Adds a license key.
            </summary>
            <param name="licenseKey">The license key to add.</param>
            <returns>A boolean value indicating if the license is valid.</returns>
            <remarks>This method accepts a license key, not a serial number.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.IO.Stream,ceTe.DynamicPDF.PageDimensions,ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="stream"><see cref="T:System.IO.Stream"/> object containing the HTML contents data.</param>
             <param name="dimensions">Page dimensions for HTML Area</param>
             <param name="padding">Padding for HTML Area</param>
            ^Document.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.IO.Stream,ceTe.DynamicPDF.PageDimensions,System.Uri)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="stream"><see cref="T:System.IO.Stream"/> object containing the HTML contents data.</param>
             <param name="dimensions">Page dimensions for HTML Area.</param>
             <param name="baseHref">Initializes a new instance of the Uri class with the specified base href URI.</param>
            ^Document.Example3
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.IO.Stream,ceTe.DynamicPDF.PageDimensions,ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding,System.Uri)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="stream"><see cref="T:System.IO.Stream"/> object containing the HTML contents data.</param>
             <param name="dimensions">Page dimensions for HTML Area</param>
             <param name="padding">Padding for HTML Area</param>
             <param name="baseHref">Initializes a new instance of the Uri class with the specified base href URI.</param>
            ^Document.Example4
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.String,ceTe.DynamicPDF.PageDimensions,ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="filePath">Physical location of the HTML file.</param>
             <param name="dimensions">Page dimensions for HTML Area</param>
             <param name="padding">Padding for HTML Area</param>
            ^Document.Example5
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.String,ceTe.DynamicPDF.PageDimensions,System.Uri)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="filePath">Physical location of the HTML file.</param>
             <param name="dimensions">Page dimensions for HTML Area.</param>
             <param name="baseHref">Initializes a new instance of the Uri class with the specified base href URI.</param>
            ^Document.Example6
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.String,ceTe.DynamicPDF.PageDimensions,ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding,System.Uri)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="filePath">Physical location of the HTML file.</param>
             <param name="dimensions">Page dimensions for HTML Area</param>
             <param name="padding">Padding for HTML area</param>
             <param name="baseHref">Initializes a new instance of the Uri class with the specified base href URI.</param>
            ^Document.Example7
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.Uri,ceTe.DynamicPDF.PageDimensions,ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="uri">Initializes a new instance of the Uri class with the specified URI.</param>
             <param name="dimensions">Page dimensions for HTML Area</param>
             <param name="padding">Padding for HTML Area</param>
            ^Document.Example8
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.Uri,ceTe.DynamicPDF.PageDimensions,System.Uri)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="uri">Initializes a new instance of the Uri class with the specified URI.</param>
             <param name="dimensions">Page dimensions for HTML Area.</param>
             <param name="baseHref">Initializes a new instance of the Uri class with the specified base href URI.</param>
            ^Document.Example9
        </member>
        <member name="M:ceTe.DynamicPDF.Document.FromHtml(System.Uri,ceTe.DynamicPDF.PageDimensions,ceTe.DynamicPDF.PageElements.Html.HtmlAreaPadding,System.Uri)">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing <see cref="T:ceTe.DynamicPDF.PageElements.Html.HtmlArea"/> created with the given content.
             </summary>
             <param name="uri">Initializes a new instance of the Uri class with the specified URI.</param>
             <param name="dimensions">Page dimensions for HTML Area</param>
             <param name="padding">Padding for HTML Area</param>
             <param name="baseHref">Initializes a new instance of the Uri class with the specified base href URI.</param>
            ^Document.Example10
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Draw">
             <summary>
             Outputs the generated <b>Document</b> to a byte array.
             </summary>
            ^Document.Example11
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>The PDF could not be created because of an internal problem.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>If DynamicPDF is being used and one of the input PDF files cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Draw(System.String)">
             <summary>
             Outputs the generated <b>Document</b> to a file.
             </summary>
             <param name="filePath">File path to store the Document.</param>
            ^Document.Example19
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>The PDF could not be created because of an internal problem.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>If DynamicPDF is being used and one of the input PDF files cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Draw(System.IO.Stream)">
             <summary>
             Outputs the generated <b>Document</b> to the given <b>Stream</b> object.
             </summary>
             <param name="stream"><b>Stream</b> object that receive the <b>Document</b> output.</param>
            ^Document.Example12
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>The PDF could not be created because of an internal problem.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>If DynamicPDF is being used and one of the input PDF files cannot be parsed because it is likely corrupt or invalid.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.TimestampException"/>If there was failure in the connection or if there is no Timestamp Info present.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.DrawToWeb">
             <summary>
             Outputs the generated <b>Document</b> to the current ASPX page.
             </summary>
            ^Document.Example21
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>The PDF could not be created because of an internal problem.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>If DynamicPDF Merger is being used and a merging error occurred.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>If DynamicPDF Merger is being used and one of the input PDF files cannot be parsed because it is likely corrupt or invalid.</exception>
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.DrawToWeb(System.String)">
             <summary>
             Outputs the generated <b>Document</b> to the current ASPX page.
             </summary>
            ^Document.Example22
             <param name="downloadAsFileName">Specifies the file name of the document if it is downloaded.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>The PDF could not be created because of an internal problem.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>If DynamicPDF Merger is being used and a merging error occurred.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>If DynamicPDF Merger is being used and one of the input PDF files cannot be parsed because it is likely corrupt or invalid.</exception>
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.DrawToWeb(System.String,System.Boolean)">
             <summary>
             Outputs the generated <b>Document</b> to the current ASPX page.
             </summary>
            ^Document.Example23
             <param name="downloadAsFileName">Specifies the file name of the document if it is downloaded.</param>
             <param name="forceDownload">Specifies if the Save As dialog should appear.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>The PDF could not be created because of an internal problem.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>If DynamicPDF Merger is being used and a merging error occurred.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>If DynamicPDF Merger is being used and one of the input PDF files cannot be parsed because it is likely corrupt or invalid.</exception>
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.DrawToWebCache(System.String)">
             <summary>
             Outputs the generated <b>Document</b> to web cache.
             </summary>
             <param name="fileName"></param>
             <returns></returns>
            ^Lic.Cache.Gen.Ent.Method
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>The PDF could not be created because of an internal problem.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>If DynamicPDF Merger is being used and a merging error occurred.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>If DynamicPDF Merger is being used and one of the input PDF files cannot be parsed because it is likely corrupt or invalid.</exception>
             <remarks><font color="red">NOTE: This method is obsolete.</font> Use DrawToWeb() or Draw() method instead and it is not available for .NET standard.</remarks>            
        </member>
        <member name="M:ceTe.DynamicPDF.Document.RequireLicense(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.RequireLicense">
            <summary>
            
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Sign(System.String,ceTe.DynamicPDF.Certificate)">
             <summary>
             Sign this document digitally.
             </summary>
             <remarks>
             <font color="red"><b>NOTE:</b> This method requires the .NET Framework 2.0 or greater.</font><p/>
             To sign with visible signature, give the <see cref="T:System.Signature"/> field name which is already added into any of the document pages. 
             To sign with invisible, use a different name which does not assign for any of the page elements added into this document pages.
             Giving existing field name of other page elements apart from <see cref="T:System.Signature"/> will make the document unsigned.
             This method is not available for .NET standard.
             </remarks>
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>
             If the document is signed more than once.
             </exception>
            ^Document.Example24
             <param name="fieldName">Field name of the signature.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/></param>
            ^Lic.Generator.Ent.Method
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Sign(System.String,ceTe.DynamicPDF.Certificate,ceTe.DynamicPDF.TimestampServer)">
             <summary>
             Digitally sign this document with Time stamping.
             </summary>
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>
             If the document is signed more than once.
             </exception>
            ^Document.Example25
             <param name="fieldName">Field name of the signature.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="timestampServer">Reference of type <see cref="T:ceTe.DynamicPDF.TimestampServer"/>.</param>
            ^Lic.Generator.Ent.Method
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Sign(System.String,ceTe.DynamicPDF.Certificate,System.Boolean)">
             <summary>
             Digitally sign this document with Time stamping.
             </summary>
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>
             If the document is signed more than once.
             </exception>
             <remarks> If the document is set for Time stamping then the Certificate should contain the details for Time stamping.</remarks>
            ^Document.Example26
             <param name="fieldName">Field name of the signature.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="timeStamp">Timestamp the document using details from the certificate.</param>
            ^Lic.Generator.Ent.Method
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Sign(System.String,ceTe.DynamicPDF.SigningProvider)">
             <summary>
             Digitally sign this document with SigningProvider.
             </summary>
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>
             If the document is signed more than once.
             </exception>
             <remarks> If the document is set for Time stamping then the Certificate should contain the details for Time stamping.</remarks>
             <param name="fieldName">Field name of the signature.</param>
             <param name="externalSigningProvider">Reference of type <see cref="T:ceTe.DynamicPDF.SigningProvider"/>.</param>
            ^Lic.Generator.Ent.Method
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Certify(System.String,ceTe.DynamicPDF.Certificate,ceTe.DynamicPDF.CertifyingPermission)">
             <summary>
             Certifies with signing the document digitally.
             </summary>
            ^Document.Example27
             <param name="fieldName">Field name of the signature.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="permissions"><see cref="P:ceTe.DynamicPDF.Document.CertifyingPermission"/> for the signature.</param>
            ^Lic.Generator.Ent.Method
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Certify(System.String,ceTe.DynamicPDF.Certificate,ceTe.DynamicPDF.TimestampServer,ceTe.DynamicPDF.CertifyingPermission)">
             <summary>
             Certifies with signing and Time stamping the document digitally.
             </summary>
            ^Document.Example28
             <param name="fieldName">Field name of the signature.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="timestampServer">Reference of type <see cref="T:ceTe.DynamicPDF.TimestampServer"/>.</param>
             <param name="permission"><see cref="P:ceTe.DynamicPDF.Document.CertifyingPermission"/> for the signature.</param>
            ^Lic.Generator.Ent.Method
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Certify(System.String,ceTe.DynamicPDF.Certificate,System.Boolean,ceTe.DynamicPDF.CertifyingPermission)">
             <summary>
             Certifies with signing and Time stamping the document digitally.
             </summary>
             <remarks> If the document is set for Time stamping then the Certificate should contain the details for Time stamping.</remarks>
            ^Document.Example29
             <param name="fieldName">Field name of the signature.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="timeStamp">Timestamp the document using details from the certificate.</param>
             <param name="permission"><see cref="P:ceTe.DynamicPDF.Document.CertifyingPermission"/> for the signature.</param>
            ^Lic.Generator.Ent.Method
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Certify(System.String,ceTe.DynamicPDF.SigningProvider,ceTe.DynamicPDF.CertifyingPermission)">
             <summary>
             Certifies with signing and Time stamping the document digitally.
             </summary>
             <remarks> If the document is set for Time stamping then the Certificate should contain the details for Time stamping.</remarks>
             <param name="fieldName">Field name of the signature.</param>
             <param name="externalSigningProvider">Reference of type <see cref="T:ceTe.DynamicPDF.SigningProvider"/>.</param>
             <param name="permission"><see cref="P:ceTe.DynamicPDF.Document.CertifyingPermission"/> for the signature.</param>
            ^Lic.Generator.Ent.Method
             <remarks><font color="red">This method is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Timestamp(System.String,ceTe.DynamicPDF.TimestampServer)">
             <summary>
             Marks the document to add a timestamp to the existing signature filed.
             </summary>
             <remarks>
             Actual timestamping happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Document.Draw"/> method.        
             A document can be either signed or certified or timestamped. For signing or certifying and document timestamp it has to be done through multiple incremental updates.
             </remarks>
            ^Document.Example30
             <param name="signatureFieldName">Name of a signature field that is already exsit in the document.</param>
             <param name="timestampServer">Timestamp server to be used for timestamping the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.Timestamp(System.String,ceTe.DynamicPDF.SigningProvider)">
             <summary>
             Marks the document to add a timestamp to the existing signature filed.
             </summary>
             <remarks>
             Actual timestamping happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Document.Draw"/> method.        
             A document can be either signed or certified or timestamped. For signing or certifying and document timestamp it has to be done through multiple incremental updates.
             </remarks>
            ^Document.Example31
             <param name="signatureFieldName">Name of a signature field that is already exsit in the document.</param>
             <param name="signingProvider">Signing provider to be used for timestamping the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Document.DrawRootEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Outputs the catalog entries to the <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to write the catalog entries.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.DefaultPdfFormat">
            <summary>
            Gets or sets the default format for the PDF document.
            </summary>
            <remarks>This property will determine whether the document is linearized or not.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.DefaultPdfVersion">
            <summary>
            Gets or sets the default version for the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.ViewerPreferences">
             <summary>
             Gets a <see cref="P:ceTe.DynamicPDF.Document.ViewerPreferences"/> object that represents the viewer preferences of the <b>Document</b>.
             </summary>
             <value>The documents <see cref="P:ceTe.DynamicPDF.Document.ViewerPreferences"/> object.</value>
            ^Document.Example13
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Template">
             <summary>
             Gets or sets a <see cref="P:ceTe.DynamicPDF.Document.Template"/> object for the <b>Document</b>.  All page elements within this Template will appear in the background of the other contents of the PDF.
             </summary>
             <value>The documents <see cref="P:ceTe.DynamicPDF.Document.Template"/> object.</value>
             <remarks>See the <a href="Templates.html">Templates</a> topic for more on templates.</remarks>
            ^Document.Example14
        </member>
        <member name="P:ceTe.DynamicPDF.Document.StampTemplate">
            <summary>
            Gets or sets a <see cref="P:ceTe.DynamicPDF.Document.Template"/> object for the <b>Document</b>.  All page elements within this Template will appear in the foreground of the other contents of the PDF.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Sections">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.SectionList"/> object for the <b>Document</b>.
             </summary>
             <value>The documents <see cref="T:ceTe.DynamicPDF.SectionList"/> object.</value>
             <remarks>Used to break a document into sections.  See the <a href="Document Sectioning.html">Document Sectioning</a> topic for 
             more details.</remarks>
            ^Document.Example15
        </member>
        <member name="P:ceTe.DynamicPDF.Document.PdfFormat">
            <summary>
            Gets or sets the PDF format for the PDF document. 
            </summary>
            <remarks>This property will determine whether the document is linearized or not.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.PdfXVersion">
            <summary>
            Gets or sets the PDF/X version for the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Trapped">
            <summary>
            Gets or sets a value indicating if trapping information is present in the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Package">
            <summary>
            Gets or sets  the document package.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.ReaderEvents">
            <summary>
            Gets the reader events of the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.OutputIntents">
            <summary>
            Gets the output intent list for the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Pages">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.PageList"/> object that represents the pages of the <b>Document</b>.
            </summary>
            <value>The collection of pages for the <b>Document</b></value>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Outlines">
             <summary>
             Gets an <see cref="T:ceTe.DynamicPDF.OutlineList"/> object that represents the top level outlines of the <b>Document</b>.
             </summary>
             <remarks>See the <a href="Outlines and BookMarks.html">Outlines and Bookmarks</a> topic for more on Outlines.</remarks>
            ^Document.Example16
            ^Lic.Generator.Pro.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Document.InitialPageZoom">
            <summary>
            Gets or sets a value indicating the initial zoom of the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.InitialPageMode">
            <summary>
            Gets or sets a value indicating the initial page mode of the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.InitialPageLayout">
            <summary>
            Gets or sets a value indicating the initial layout of the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.InitialPage">
            <summary>
            Gets or sets a value indicating the initial page of the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Producer">
            <summary>
            Gets or sets a value indicating the producer of the <b>Document</b>.
            </summary>
            <remarks>This value appears as a property of the generated PDF document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Author">
            <summary>
            Gets or sets a value indicating the author of the <b>Document</b>.
            </summary>
            <remarks>This value appears as a property of the generated PDF document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Language">
            <summary>
            Gets or sets a value indicating the language of the <b>Document</b>.
            </summary>
            <remarks>This value appears as the language identifier property of the generated PDF document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Creator">
            <summary>
            Gets or sets a value indicating the creator of the <b>Document</b>.
            </summary>
            <remarks>This value appears as a property of the generated PDF document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Keywords">
            <summary>
            Gets or sets a value indicating the keywords of the <b>Document</b>.
            </summary>
            <remarks>This value appears as a property of the generated PDF document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Subject">
            <summary>
            Gets or sets a value indicating the subject of the <b>Document</b>.
            </summary>
            <remarks>This value appears as a property of the generated PDF document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Title">
            <summary>
            Gets or sets a value indicating the title of the <b>Document</b>.
            </summary>
            <remarks>This value appears as a property of the generated PDF document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.CustomProperties">
             <summary>
             Gets or sets a value indicating the custom properties of the <b>Document</b>.
             </summary>
            ^Document.Example17
        </member>
        <member name="P:ceTe.DynamicPDF.Document.CompressionLevel">
            <summary>
            Gets or sets a value indicating the compression level of the <b>Document</b>.
            </summary>
            <remarks>A value from 0 to 9 indicating the compression level of the 
            document. Six (6) is the default. Zero (0) represents no compression and
            nine (9) represents the best compression. This value will only affect the
            compression of the content streams of the documents pages. Depending
            on the type of document you are creating, it may not affect the size
            significantly.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Security">
             <summary>
             Gets or sets an object to control the security and encryption of the <b>Document</b>.
             </summary>
             <remarks>This object controls the encryption and security of the generated PDF document.</remarks>
            ^Document.Example20
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Form">
             <summary>
             Gets or sets a form object for the PDF document.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="P:ceTe.DynamicPDF.Document.PdfVersion">
            <summary>
            Gets or sets the PDF version of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.XmpMetadata">
             <summary>
             Gets or sets the XMP metadata for the PDF document.
             </summary>
            ^Document.Example18
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Document.JavaScripts">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.DocumentJavaScriptList"/> containing the JavaScript entries for that document.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Document.EmbeddedFiles">
             <summary>
             Gets an <see cref="T:ceTe.DynamicPDF.EmbeddedFileList"/> containing the EmbeddedFile for the document.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Tag">
             <summary>
             Gets or sets a value indicating whether document is tagged.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.Document.Optimization">
            <summary>
            Gets or sets  the document optimization.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.DiskBuffering">
            <summary>
            Gets or sets the disk buffering options for the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.ProductVersion">
            <summary>
            Gets the product version.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.ProductBuild">
            <summary>
            Gets the product build.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Document.FormFlattening">
            <summary>
            Gets or sets the form flattening options for the PDF document.
            </summary>
            <remarks><font color="red">NOTE: This property is obsolete.</font> Use <see cref="P:ceTe.DynamicPDF.Forms.Form.Output"/> property instead.</remarks>        
        </member>
        <member name="T:ceTe.DynamicPDF.DocumentJavaScript">
             <summary>
             Represents a PDF document's JavaScript entry.
             </summary>
             <remarks>For more details on using the document's JavaScript take a look at the <a href="Javascript.html">JavaScript</a> topic.</remarks>
            ^DocumentJavaScript
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentJavaScript.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.DocumentJavaScript"/> class.
            </summary>
            <param name="name">The name for the JavaScript.</param>
            <param name="javaScript">The JavaScript.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentJavaScript.DrawReference(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws a reference to the JavaScript indirect object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the JavaScript indirect object.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentJavaScript.Name">
            <summary>
            Gets the name of the JavaScript entry.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentJavaScript.JavaScript">
            <summary>
            Gets the actual JavaScript.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.DocumentJavaScriptList">
             <summary>
             Represents a list of JavaScript entries.
             </summary>
            ^DocumentJavaScriptList
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentJavaScriptList.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the JavaScript entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentJavaScriptList.Add(ceTe.DynamicPDF.DocumentJavaScript)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.DocumentJavaScript"/> to the <see cref="T:ceTe.DynamicPDF.DocumentJavaScriptList"/>.
            </summary>
            <param name="javaScript"><see cref="T:ceTe.DynamicPDF.DocumentJavaScript"/> to add.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentJavaScriptList.ContainsName(System.String)">
            <summary>
            Returns a value indicating whether the provided name is found in the list of JavaScript entries.
            </summary>
            <param name="name">Name to check if it is in the JavaScript entries.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentJavaScriptList.Count">
            <summary>
            Gets the number of JavaScript entries actually contained in the <see cref="T:ceTe.DynamicPDF.DocumentJavaScriptList"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentJavaScriptList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.DocumentJavaScript"/> at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentJavaScriptList.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.DocumentJavaScript"/> with the given name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Duplex">
            <summary>
            Specifies the duplex mode for the document.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Duplex.None">
            <summary>
            Duplex mode is not specified.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Duplex.Simplex">
            <summary>
            Simplex mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Duplex.DuplexFlipShortEdge">
            <summary>
            Duplex mode with flipping on the short edge.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Duplex.DuplexFlipLongEdge">
            <summary>
            Duplex mode with flipping on the long edge.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.EmbeddedFileList">
             <summary>
             Represents a list of EmbeddedFiles(attachments).
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.EmbeddedFileList.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the EmbeddedFiles to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.EmbeddedFileList.Add(ceTe.DynamicPDF.EmbeddedFile)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.EmbeddedFile"/> to the <see cref="T:ceTe.DynamicPDF.EmbeddedFileList"/>.
            </summary>
            <param name="embeddedFile"><see cref="T:ceTe.DynamicPDF.EmbeddedFile"/> to add.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.EmbeddedFileList.Count">
            <summary>
            Gets the number of <see cref="T:ceTe.DynamicPDF.EmbeddedFile"/>s contained in the <see cref="T:ceTe.DynamicPDF.EmbeddedFileList"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.EmbeddedFileList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.EmbeddedFile"/> at the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.EmbeddedFileRelation">
            <summary>
            The embedded file relationship options to the content of the PDF.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.EmbeddedFileRelation.Source">
            <summary>
            Source relation.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.EmbeddedFileRelation.Data">
            <summary>
            Data relation.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.EmbeddedFileRelation.Alternative">
            <summary>
            Alternative relation.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.EmbeddedFileRelation.Supplement">
            <summary>
            Supplement relation.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.EmbeddedFileRelation.Unspecified">
            <summary>
            Unspecified relation.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.EmbeddedFileResource">
             <summary>
             Represents EmbeddedFile resource
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.EmbeddedFileResource.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the EmbeddedFile resource to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the resource's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.EmbeddedFileResource.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.EmptyDocumentException">
             <summary>
             The exception that is thrown if the document does not have any pages.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.EmptyDocumentException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.EmptyDocumentException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageZoom">
            <summary>
            Specifies zoom type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageZoom.Retain">
            <summary>
            Keep unchanged.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageZoom.FitPage">
            <summary>
            Fit page in window.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageZoom.FitWidth">
            <summary>
            Fit width of page in window.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageZoom.FitHeight">
            <summary>
            Fit height of page in window.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageZoom.FitBox">
            <summary>
            Fit all elements of page in window.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageZoom.None">
            <summary>
            OpenAction entry will not be write into the PDF document.
            </summary>
            <remarks><font color="red">NOTE: This enum value is obsolete.</font></remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.PageMode">
            <summary>
            Specifies page mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageMode.Auto">
            <summary>
            ShowOutlines is used if outlines are present. If not ShowNone is used.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageMode.ShowNone">
            <summary>
            Outlines and Thumbnails toolbars are not shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageMode.ShowOutlines">
            <summary>
            Outlines toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageMode.ShowThumbnails">
            <summary>
            Thumbnails toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageMode.ShowOptionalContent">
            <summary>
            Optional content is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageMode.ShowAttachments">
            <summary>
            Attachments toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageMode.FullScreen">
            <summary>
            Document is show in full screen mode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageSize">
            <summary>
            Specifies page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.A3">
            <summary>
            A3 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.A4">
            <summary>
            A4 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.A5">
            <summary>
            A5 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.A6">
            <summary>
            A6 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.B3">
            <summary>
            B3 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.B4">
            <summary>
            B4 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.B5">
            <summary>
            B5 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.B5JIS">
            <summary>
            B5 Japanese page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.DoublePostcard">
            <summary>
            Double postcard page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Envelope10">
            <summary>
            Envelope 10 page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.EnvelopeDL">
            <summary>
            DL envelope page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.EnvelopeC5">
            <summary>
            C5 envelope page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.EnvelopeB5">
            <summary>
            B5 envelope page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.EnvelopeMonarch">
            <summary>
            Monarch envelope page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Executive">
            <summary>
            Executive page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Legal">
            <summary>
            Legal page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Folio">
            <summary>
            Folio page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Letter">
            <summary>
            Letter page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Postcard">
            <summary>
            Postcard page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.PRC16K">
            <summary>
            PRC 16K page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.PRC32K">
            <summary>
            PRC 32K page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Quatro">
            <summary>
            Quatro page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Statement">
            <summary>
            Statement page size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageSize.Tabloid">
            <summary>
            Tabloid page size.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageOrientation">
            <summary>
            Specifies page orientation.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageOrientation.Portrait">
            <summary>
            Portrait page orientation.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageOrientation.Landscape">
            <summary>
            Landscape page orientation.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.TextAlign">
            <summary>
            Specifies alignment of text.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlign.Left">
            <summary>
            Align left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlign.Center">
            <summary>
            Align center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlign.Right">
            <summary>
            Align right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlign.Justify">
            <summary>
            Align justify.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlign.FullJustify">
            <summary>
            Align justify including last line.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.CellAlign">
            <summary>
            <font color="red">Obsolete.</font> Specifies alignment of a cell's text.
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font> Use <see cref="T:ceTe.DynamicPDF.TextAlign"/> enum instead.</remarks>
        </member>
        <member name="F:ceTe.DynamicPDF.CellAlign.Left">
            <summary>
            Align left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellAlign.Center">
            <summary>
            Align center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellAlign.Right">
            <summary>
            Align right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellAlign.Justify">
            <summary>
            Align justify.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellAlign.FullJustify">
            <summary>
            Align justify including last line.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellAlign.Inherit">
            <summary>
            Inherit the alignment from the object with next precedence.
            </summary>        
        </member>
        <member name="T:ceTe.DynamicPDF.TextStyle">
            <summary>
            Specifies text style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextStyle.Regular">
            <summary>
            Regular style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextStyle.Italic">
            <summary>
            Italic style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextStyle.Bold">
            <summary>
            Bold style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextStyle.BoldItalic">
            <summary>
            Bold italic style.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Align">
            <summary>
            Specifies horizontal alignment.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Align.Left">
            <summary>
            Align left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Align.Center">
            <summary>
            Align center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Align.Right">
            <summary>
            Align right.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.VAlign">
            <summary>
            Specifies vertical alignment.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.VAlign.Top">
            <summary>
            Align top.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.VAlign.Center">
            <summary>
            Align center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.VAlign.Bottom">
            <summary>
            Align bottom.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.CellVAlign">
            <summary>
            <font color="red">Obsolete.</font> Specifies a cell's vertical alignment.
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font>Use <see cref="T:ceTe.DynamicPDF.VAlign"/> enum instead.</remarks>
        </member>
        <member name="F:ceTe.DynamicPDF.CellVAlign.Top">
            <summary>
            Align top.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellVAlign.Center">
            <summary>
            Align center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellVAlign.Bottom">
            <summary>
            Align bottom.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.CellVAlign.Inherit">
            <summary>
            Inherit the vertical alignment from the object with next precedence.
            </summary>        
        </member>
        <member name="T:ceTe.DynamicPDF.LineCap">
            <summary>
            Specifies the cap style of a line.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineCap.Butt">
            <summary>
            Straight line at point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineCap.Round">
            <summary>
            Rounded at point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineCap.ProjectedSquare">
            <summary>
            Projected from point.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LineJoin">
            <summary>
            Specifies how lines are joined.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineJoin.Miter">
            <summary>
            Sharp angle projected from point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineJoin.Round">
            <summary>
            Rounded at point.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineJoin.Bevel">
            <summary>
            Beveled at point.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LineLeadingType">
            <summary>
            Specifies the line leading type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineLeadingType.Auto">
            <summary>
            Automatically calculated.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineLeadingType.AtLeast">
            <summary>
            At least the value specified.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineLeadingType.Exactly">
            <summary>
            Exactly the value specified.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.TextRenderingMode">
            <summary>
            Specifies text rendering mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextRenderingMode.Fill">
            <summary>
            Fill text.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextRenderingMode.Stroke">
            <summary>
            Stroke text border.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextRenderingMode.FillAndStroke">
            <summary>
            Fill text and stroke border.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextRenderingMode.Invisible">
            <summary>
            Invisible text.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.TextDecorationType">
            <summary>
            Specifies text decoration type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextDecorationType.None">
            <summary>
            No decoration.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextDecorationType.Underline">
            <summary>
            Under line.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextDecorationType.OverLine">
            <summary>
            Over Line.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextDecorationType.LineThrough">
            <summary>
            Strike through.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Placement">
            <summary>
            Specifies  placement.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Placement.Block">
            <summary>
            Block.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Placement.Inline">
            <summary>
             Inline.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Placement.Before">
            <summary>
            Before.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Placement.Start">
            <summary>
            Start.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Placement.End">
            <summary>
            End.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.WritingMode">
            <summary>
            Specifies  writing mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.WritingMode.LrTb">
            <summary>
            Left to right and top to bottom.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.WritingMode.RlTb">
            <summary>
            Right to left and top to bottom.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.WritingMode.TbRl">
            <summary>
            Top to bottom and right to left.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.BorderStyleAttribute">
            <summary>
            Specifies  border style attribute.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.None">
            <summary>
            No border style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Hidden">
            <summary>
            Hidden.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Dotted">
            <summary>
            Dotted.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Dashed">
            <summary>
            Dashed.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Solid">
            <summary>
            Solid.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Double">
            <summary>
            Double.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Groove">
            <summary>
            Groove.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Ridge">
            <summary>
            Ridge.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Inset">
            <summary>
            Inset.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BorderStyleAttribute.Outset">
            <summary>
            Outset.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.TextAlignAttribute">
            <summary>
            Specifies text align attribute.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlignAttribute.Start">
            <summary>
            Aligned with the start edge.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlignAttribute.Center">
            <summary>
            Centered between the start and end edges.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlignAttribute.End">
            <summary>
            Aligned with the end edge.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.TextAlignAttribute.Justify">
            <summary>
            Justify.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.BlockAlign">
            <summary>
            Specifies block align attribute.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlockAlign.Before">
            <summary>
            Before.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlockAlign.Middle">
            <summary>
            Middle.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlockAlign.After">
            <summary>
            After.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.BlockAlign.Justify">
            <summary>
            Justify.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.InlineAlign">
            <summary>
            Specifies inline align attribute.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.InlineAlign.Start">
            <summary>
            Start.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.InlineAlign.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.InlineAlign.End">
            <summary>
            End.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LineHeight">
            <summary>
            Specifies line height. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineHeight.Normal">
            <summary>
            Normal.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LineHeight.Auto">
            <summary>
            Auto.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.RubyAlign">
            <summary>
            Specifies ruby align. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyAlign.Start">
            <summary>
            Start.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyAlign.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyAlign.End">
            <summary>
            End.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyAlign.Justify">
            <summary>
            Justify.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyAlign.Distribute">
            <summary>
            Distribute.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.RubyPosition">
            <summary>
            Specifies ruby position. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyPosition.Before">
            <summary>
            Before.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyPosition.After">
            <summary>
            After.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyPosition.Warichu">
            <summary>
            Warichu.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.RubyPosition.Inline">
            <summary>
            Inline.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Role">
            <summary>
            Specifies the type of form field. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Role.rb">
            <summary>
            Radio button.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Role.cb">
            <summary>
            Check box.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Role.pb">
            <summary>
            Push button.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Role.tv">
            <summary>
            Text value field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Checked">
            <summary>
            Specifies the state of a radio button or check box field. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Checked.on">
            <summary>
            On.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Checked.off">
            <summary>
            Off.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Checked.neutral">
            <summary>
            Neutral.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ListNumbering">
            <summary>
            Specifies the list numbering style. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.None">
            <summary>
            No autonumbering.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.Disc">
            <summary>
            Disc.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.Circle">
            <summary>
            Circle.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.Square">
            <summary>
            Square.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.Decimal">
            <summary>
            Decimal arabic numerals.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.UpperRoman">
            <summary>
            Uppercase roman numerals.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.LowerRoman">
            <summary>
            Lowercase roman numerals.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.UpperAlpha">
            <summary>
            Uppercase letters.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ListNumbering.LowerAlpha">
            <summary>
            Lowercase letters.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Scope">
            <summary>
            Specifies the scope. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Scope.Row">
            <summary>
            Row.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Scope.Column">
            <summary>
            Column.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Scope.Both">
            <summary>
            Both.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ArtifactType">
            <summary>
            Specifies the artifact type. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ArtifactType.Pagination">
            <summary>
            Page numbers.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ArtifactType.Layout">
            <summary>
            Layout.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ArtifactType.Page">
            <summary>
            Page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ArtifactType.Background">
            <summary>
            Background.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ArtifactType.None">
            <summary>
            No ArtifactType
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.SubType">
            <summary>
            Specifies the sub type of artifact. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.SubType.Header">
            <summary>
            Header. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.SubType.Footer">
            <summary>
            Footer. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.SubType.Watermark">
            <summary>
            Watermark. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.SubType.None">
            <summary>
            No SubType
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Edge">
            <summary>
            Specifies the edge. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Edge.Top">
            <summary>
            Top. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Edge.Bottom">
            <summary>
            Bottom. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Edge.Left">
            <summary>
            Left. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Edge.Right">
            <summary>
            Right. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Attribute">
            <summary>
            Specifies the attribute. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.O">
            <summary>
            Owner.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.WritingMode">
            <summary>
            Writing mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.BorderColor">
            <summary>
            Border color.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.BorderThickness">
            <summary>
            Border thickness.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Color">
            <summary>
            Color.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.StartIndent">
            <summary>
            Start indent.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.EndIndent">
            <summary>
            End indent.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.TextIndent">
            <summary>
            Text indent.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.TextAlign">
            <summary>
            Text align.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.BlockAlign">
            <summary>
            Block align.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.InlineAlign">
            <summary>
            Inline align.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.TBorderStyle">
            <summary>
            Table border style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.TPadding">
            <summary>
            Table padding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.LineHeight">
            <summary>
            Line height.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.TextDecorationColor">
            <summary>
            Text color.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.TextDecorationThickness">
            <summary>
            Text decoration thickness.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.GlyphOrientationVertical">
            <summary>
            Orientation of glyphs.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.RubyAlign">
            <summary>
            Ruby align.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.RubyPosition">
            <summary>
            Ruby position.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Role">
            <summary>
            Type of form field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Checked">
            <summary>
            The state of radio button or check box field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Desc">
            <summary>
            Description of the field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.ListNumbering">
            <summary>
            List numbering style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.RowSpan">
            <summary>
            Row span.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.ColSpan">
            <summary>
            Column span.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Headers">
            <summary>
            Header.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Scope">
            <summary>
            Scope.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Summary">
            <summary>
            Summary.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Placement">
            <summary>
            Placement.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.BackgroundColor">
            <summary>
            Background color.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.BorderStyle">
            <summary>
            Border style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Padding">
            <summary>
            Padding.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.SpaceBefore">
            <summary>
            Space before.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.SpaceAfter">
            <summary>
            Space after.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.BBox">
            <summary>
            Bounding box.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Width">
            <summary>
            Width.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.Height">
            <summary>
            Height.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.BaselineShift">
            <summary>
            Base line shift.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.TextDecorationType">
            <summary>
            Text decoration type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.ColumnCount">
            <summary>
            Column count.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.ColumnWidths">
            <summary>
            Column width.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Attribute.ColumnGap">
            <summary>
            Column gap.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.EvenOddTemplate">
             <summary>
             Represents an even / odd section or document template.
             </summary>
             <remarks>This class can be used to define a template that can contain separate information to go on even and odd pages.
             See the <a href="Templates.html">Templates</a> topic for more on Templates.</remarks>
            ^EvenOddTemplate
            ^Lic.Generator.Comm
        </member>
        <member name="T:ceTe.DynamicPDF.Template">
             <summary>
             Represents a document or section template.
             </summary>
             <remarks>See the <a href="Templates.html">Templates</a> topic for more on templates.</remarks>
            ^Template 
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Template.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Template"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Template.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the template's page elements to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the template's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Template.HasPageElements(System.Int32)">
            <summary>
            Returns a value indicating if the template has page elements for the given page.
            </summary>
            <param name="pageNumber">Page number to test.</param>
            <returns>A <b>Boolean</b> value indicating if there are page elements.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Template.Elements">
            <summary>
            Gets the page elements that will be applied by the template to all pages.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.EvenOddTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Template"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.EvenOddTemplate.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the template's page elements to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the template's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.EvenOddTemplate.HasPageElements(System.Int32)">
            <summary>
            Returns a value indicating if the template has page elements for the given page.
            </summary>
            <param name="pageNumber">The page number to check.</param>
            <returns>A <b>Boolean</b> value indicating if there are page elements.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.EvenOddTemplate.EvenElements">
            <summary>
            Gets the page elements that will be applied by the template to even pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.EvenOddTemplate.OddElements">
            <summary>
            Gets the page elements that will be applied by the template to odd pages.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ExtendedPageDimensions">
             <summary>
             Represents the extended dimensions of a page.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="T:ceTe.DynamicPDF.PageDimensions">
             <summary>
             Represents the dimensions of a page.
             </summary>
             <remarks>This class can be used to specify the dimensions and other formatting details of a page.  It can then be passed into a <see cref="T:ceTe.DynamicPDF.Page"/> constructor.</remarks>
            ^PageDimensions
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="width">Width of the page dimensions in points (1/72 inches).</param>
            <param name="height">Height of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="width">Width of the page dimensions in points (1/72 inches).</param>
            <param name="height">Height of the page dimensions in points (1/72 inches).</param>
            <param name="margins">Margins of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(ceTe.DynamicPDF.PageSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
            <param name="orientation"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(ceTe.DynamicPDF.PageSize,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
            <param name="margins">Margins of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
            <param name="orientation">Orientation of the page dimensions in points (1/72 inches).</param>
            <param name="margins">Margins of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(ceTe.DynamicPDF.Dimensions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="edgeDimensions">Edge dimensions of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(ceTe.DynamicPDF.Dimensions,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="edgeDimensions">Edge dimensions of the page dimensions in points (1/72 inches).</param>
            <param name="margins">Margins of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.#ctor(ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageDimensions"/> class.
            </summary>
            <param name="edgeDimensions">Edge dimensions of the page dimensions in points (1/72 inches).</param>
            <param name="marginDimensions">Margin dimensions of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the page dimensions to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the page dimensions output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.GetPdfY(System.Single)">
            <summary>
            Gets the translated Y coordinate.
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.GetPdfY(System.Single,ceTe.DynamicPDF.PageElements.RelativeTo,System.Boolean)">
            <summary>
            Gets the translated Y coordinate. 
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <param name="relativeTo"></param>
            <param name="ignoreMargins"></param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.SetMargins(System.Single)">
            <summary>
            Sets all of the margins for the page dimensions in points (1/72 inches).
            </summary>
            <param name="margins">Margins value in points (1/72 inches) to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.SetMargins(System.Single,System.Single)">
            <summary>
            Sets all of the margins of the page in points (1/72 inches).
            </summary>
            <param name="leftAndRight">Left and right margin value in points (1/72 inches) to set.</param>
            <param name="topAndBottom">Top and bottom margin value in points (1/72 inches) to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageDimensions.SetMargins(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets all of the margins of the page in points (1/72 inches).
            </summary>
            <param name="leftMargin">Left margin value in points (1/72 inches) to set.</param>
            <param name="topMargin">Top margin value in points (1/72 inches) to set.</param>
            <param name="rightMargin">Right margin value in points (1/72 inches) to set.</param>
            <param name="bottomMargin">Bottom margin value in points (1/72 inches) to set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageDimensions.MediaBox">
            <summary>
            Gets the media box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageDimensions.CropBox">
            <summary>
            Gets the crop box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageDimensions.BleedBox">
            <summary>
            Gets the bleed box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageDimensions.TrimBox">
            <summary>
            Gets the trim box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageDimensions.ArtBox">
            <summary>
            Gets the art box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.ExtendedPageDimensions.#ctor(ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ExtendedPageDimensions"/> class.
            </summary>
            <param name="edge">Edge dimensions of the page in points (1/72 inches).</param>
            <param name="body">Body dimensions of the page in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ExtendedPageDimensions.#ctor(ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ExtendedPageDimensions"/> class.
            </summary>
            <param name="edge">Edge dimensions of the page in points (1/72 inches).</param>
            <param name="bleedBox">Bleed box dimensions of the page in points (1/72 inches).</param>
            <param name="trimBox">Trim box dimensions of the page in points (1/72 inches).</param>
            <param name="body">Body dimensions of the page in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ExtendedPageDimensions.#ctor(ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ExtendedPageDimensions"/> class.
            </summary>
            <param name="mediaBox">Media box dimensions of the page in points (1/72 inches).</param>
            <param name="cropBox">Crop box dimensions of the page in points (1/72 inches).</param>
            <param name="bleedBox">Bleed dimensions of the page in points (1/72 inches).</param>
            <param name="trimBox">Trim dimensions of the page in points (1/72 inches).</param>
            <param name="artBox">Art box dimensions of the page in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ExtendedPageDimensions.#ctor(ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions,ceTe.DynamicPDF.Dimensions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ExtendedPageDimensions"/> class.
            </summary>
            <param name="mediaBox">Media box dimensions of the page in points (1/72 inches).</param>
            <param name="cropBox">Crop box dimensions of the page in points (1/72 inches).</param>
            <param name="bleedBox">Bleed dimensions of the page in points (1/72 inches).</param>
            <param name="trimBox">Trim dimensions of the page in points (1/72 inches).</param>
            <param name="artBox">Art box dimensions of the page in points (1/72 inches).</param>
            <param name="body">Body dimensions of the page in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ExtendedPageDimensions.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the page dimensions to the given <b>DocumentWriter</b> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the page dimensions output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ExtendedPageDimensions.GetPdfY(System.Single)">
            <summary>
            Gets the translated PDF y coordinate.
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.ExtendedPageDimensions.GetPdfY(System.Single,ceTe.DynamicPDF.PageElements.RelativeTo,System.Boolean)">
            <summary>
            Gets the translated Y coordinate.
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <param name="relativeTo">Placement of the page element on the page</param>
            <param name="ignoreMargins">Setting false will consider the margin while placing the page element based on the RelativeTo property.</param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.ExtendedPageDimensions.CropBox">
            <summary>
            Gets the crop box dimensions of the page in points (1/72 inches). This is the same as the edge of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ExtendedPageDimensions.ArtBox">
            <summary>
            Gets the art box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ExtendedPageDimensions.MediaBox">
            <summary>
            Gets the media box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ExtendedPageDimensions.BleedBox">
            <summary>
            Gets the bleed box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ExtendedPageDimensions.TrimBox">
            <summary>
            Gets the trim box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.FontFamily">
             <summary>
             Represents a font family.
             </summary>
             <remarks>See the <a href="Font Families.html">Font Families</a> topic for more on font families.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.FontFamily.#ctor(System.String,ceTe.DynamicPDF.Font,ceTe.DynamicPDF.Font,ceTe.DynamicPDF.Font,ceTe.DynamicPDF.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.FontFamily"/> class.
            </summary>
            <param name="name">Name of font family.</param>
            <param name="regular"><see cref="T:ceTe.DynamicPDF.Font"/> representing regular.</param>
            <param name="bold"><see cref="T:ceTe.DynamicPDF.Font"/> representing bold.</param>
            <param name="italic"><see cref="T:ceTe.DynamicPDF.Font"/> representing italic.</param>
            <param name="boldItalic"><see cref="T:ceTe.DynamicPDF.Font"/> representing bold italic.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.FontFamily.#ctor(System.String,ceTe.DynamicPDF.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.FontFamily"/> class.
            </summary>
            <param name="name">Name of font family.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> representing all styles.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Name">
            <summary>
            Gets the name of the font family.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Regular">
            <summary>
            Gets the regular font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Bold">
            <summary>
            Gets the bold font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Italic">
            <summary>
            Gets the italic font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.BoldItalic">
            <summary>
            Gets the bold italic font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Courier">
            <summary>
            Gets the core Courier font family.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Helvetica">
            <summary>
            Gets the core Helvetica font family.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Times">
            <summary>
            Gets the core Times font family.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.Symbol">
            <summary>
            Gets the core Symbol font family.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FontFamily.ZapfDingbats">
            <summary>
            Gets the core Zapf Dingbats font family.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.ButtonField">
             <summary>
             Base class representing a button field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.ButtonField.DrawDictionary(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the form field's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.CheckBoxField">
             <summary>
             Base class representing a check box field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.CheckBoxField.HasValue">
            <summary>
            Specifies if the form field has a value.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.ChoiceField">
             <summary>
             Base class representing a choice field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.ChoiceField.DrawDictionary(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the choice field's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.ChoiceField.Default">
            <summary>
            Gets the Default values of the Choice field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.ComboBoxField">
             <summary>
             Base class representing a combo box field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.ComboBoxField.HasValue">
            <summary>
            Specifies if the form field has a value.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.Form">
             <summary>
             Base class representing a PDF form.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.Form.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the form to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the form's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.Form.GetTextFields">
            <summary>
            Returns a collection of text form fields.
            </summary>
            <returns>A <see cref="T:ceTe.DynamicPDF.Forms.TextFieldList"/> object containing the visible form fields.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.Form.RequireLicense(System.Int32)">
            <summary>
            Sets the required license level for the form.
            </summary>
            <param name="requiredLicenseLevel">The license level required.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.Form.DrawDictionary(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the form's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="E:ceTe.DynamicPDF.Forms.Form.FormFieldsAdded">
            <summary>
            Occurs when the fields are added to the Document's Form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.DefaultResources">
            <summary>
            Gets or sets the default appearance for the form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.DefaultAppearance">
            <summary>
            Gets or sets the default appearance for the form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.DefaultFont">
            <summary>
            Gets the font default for all the variable text fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.DefaultFontSize">
            <summary>
            Gets the default font size for all the variable text fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.DefaultColor">
            <summary>
            Gets the default color for all the variable text fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.Align">
            <summary>
            Gets or Sets the document’s wide alignment for variable text fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.Fields">
            <summary>
            Gets a collection of fields for the form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.IsReadOnly">
            <summary>
            Gets or sets a value indicating if the form is read only.
            </summary>  
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.CalculationOrder">
            <summary>
            Gets the form's calculation order.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.DefaultAlign">
            <summary>
            Gets or sets the default alignment for the form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.SignatureFlags">
            <summary>
            Gets or sets the signature flags for the form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.NeedsAppearances">
            <summary>
            Gets or sets a value indicating if the form needs appearance streams.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.ExcludeXfaDataIfValuesChanged">
            <summary>
            Gets or sets a value indicating to exclude the XFA if the form field value is changed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.SubstituteFont">
            <summary>
            Gets or Sets the Font to be used as a substitute font for form fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.Output">
            <summary>
            Gets or Sets the output options for the form.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.Form.SignatureFieldsOutput">
            <summary>
            Gets or Sets output options for the signature fields.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormCalculationOrder">
             <summary>
             Represents a PDF forms calculation order.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormCalculationOrder.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.Forms.FormFieldList"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.Forms.FormFieldList"/></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormCalculationOrder.Add(ceTe.DynamicPDF.Forms.FormField)">
            <summary>
            Adds a form field to the calculation order.
            </summary>
            <param name="formField"><see cref="T:ceTe.DynamicPDF.Forms.FormField"/> object to add.</param>
            <returns>The index of the added form field.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormCalculationOrder.Count">
            <summary>
            Gets the number of fields in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormCalculationOrder.Item(System.Int32)">
            <summary>
            Gets a text form field by index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormEventArgs">
             <summary>
             Provides data for the <see cref="P:ceTe.DynamicPDF.Forms.FormEventArgs.Form">Form's</see> FieldsAdded event.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormEventArgs.Form">
            <summary>
            Gets the Form containing the fields added to the <b>Document</b>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormFieldAlign">
            <summary>
            Specifies alignment of form fields.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldAlign.Left">
            <summary>
            Left alignment.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldAlign.Center">
            <summary>
            Center alignment.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldAlign.Right">
            <summary>
            Right alignment.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormFieldFlags">
            <summary>
            <font color="red">Obsolete.</font> Specifies form field flags.
            </summary>
            <remarks><font color="red">NOTE: This enum is obsolete.</font></remarks>        
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.None">
            <summary>
            None specified.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.ReadOnly">
            <summary>
            Read only field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Required">
            <summary>
            Required field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.NoExport">
            <summary>
            No export set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Multiline">
            <summary>
            Multiline field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Password">
            <summary>
            Password field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.NoToggleToOff">
            <summary>
            No toggle to off set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Radio">
            <summary>
            Radio field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Pushbutton">
            <summary>
            Push button field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Combo">
            <summary>
            Combo field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Edit">
            <summary>
            Edit field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Sort">
            <summary>
            Sort set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.FileSelect">
            <summary>
            File select field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.MultiSelect">
            <summary>
            Multi select field.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.DoNotSpellCheck">
            <summary>
            Do not spell check set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.DoNotScroll">
            <summary>
            Do not scroll set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.Comb">
            <summary>
            Combs set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.RadiosInUnison">
            <summary>
            Radios in unison set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.CommitOnSelChange">
            <summary>
            Commit on select change set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.FormFieldFlags.RichText">
            <summary>
            Rich text field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormFieldList">
             <summary>
             Represents a collection of form fields.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormFieldList.Add(ceTe.DynamicPDF.Forms.FormField)">
            <summary>
            Adds a form field to the collection.
            </summary>
            <param name="formField"><see cref="T:ceTe.DynamicPDF.Forms.FormField"/> object to add.</param>
            <returns>The index of the added form field.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormFieldList.Remove(ceTe.DynamicPDF.Forms.FormField)">
            <summary>
            Removes the field from the collection.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormFieldList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.Forms.FormFieldList"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.Forms.FormFieldList"/></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormFieldList.DrawKidReferences(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the child references to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the form field list's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.FormFieldList.GetTextFields">
            <summary>
            Returns a collection of text form fields.
            </summary>
            <returns>A <see cref="T:ceTe.DynamicPDF.Forms.TextFieldList"/> object containing the visible form fields.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormFieldList.Count">
            <summary>
            Gets the number of fields in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormFieldList.Owner">
            <summary>
            Get the <see cref="T:ceTe.DynamicPDF.Forms.FormField"/> that owns the form field list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormFieldList.Item(System.String)">
            <summary>
            Gets a form field by the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.FormFieldList.Item(System.Int32)">
            <summary>
            Gets a form field by index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.FormFieldsAddedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.Forms.Form.FormFieldsAdded"/> event of the <see cref="T:ceTe.DynamicPDF.Forms.Form"/>.
            </summary>
            <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
            <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.Forms.FormEventArgs"/>.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.ListBoxField">
             <summary>
             Base class representing a list box field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.ListBoxField.SetValues(System.String[])">
            <summary>
            Sets the values of the list box field.
            </summary>
            <param name="values">Array of string values to set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.ListBoxField.HasValue">
            <summary>
            Specifies if the form field has a value.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.RadioButtonField">
             <summary>
             Base class representing a radio button field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.RadioButtonField.HasValue">
            <summary>
            Specifies if the form field has a value.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.SignatureFlags">
            <summary>
            Specifies signature field flags.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.SignatureFlags.None">
            <summary>
            None specified
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.SignatureFlags.SignatureExists">
            <summary>
            Signature field exists
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Forms.SignatureFlags.AppendOnly">
            <summary>
            Append only set
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.TextField">
             <summary>
             Base class representing a text field.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.TextField.DrawDictionary(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the text field's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.TextField.HasValue">
            <summary>
            Specifies if the form field has a value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.TextField.MaximumLength">
            <summary>
            Gets the maximum length of the text in the text field
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.TextField.Align">
            <summary>
            Get the text align.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Forms.TextFieldList">
             <summary>
             Represents a collection of text form fields.
             </summary>
            ^Lic.Merger.Std.Misc
        </member>
        <member name="M:ceTe.DynamicPDF.Forms.TextFieldList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.Forms.FormFieldList"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.Forms.FormFieldList"/></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.TextFieldList.Count">
            <summary>
            Gets the number of fields in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Forms.TextFieldList.Item(System.Int32)">
            <summary>
            Gets a text form field by index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Grayscale">
             <summary>
             Represents a grayscale color.
             </summary>
             <remarks>See the <a href="Colors.html">Colors</a> topic for more on grayscale colors.</remarks>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Grayscale.#ctor(System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Grayscale"/> class.
            </summary>
            <param name="grayLevel">The gray intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Grayscale.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Grayscale"/> class.
            </summary>
            <param name="grayLevel">The gray intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Grayscale.Equals(System.Object)">
            <summary>
            Tests equality of colors.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <b>Color</b>.</param>
            <returns><b>true</b> if the two colors are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Grayscale.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <b>Color</b>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Grayscale.ToStringBuilder(System.Text.StringBuilder)">
            <summary>
            Appends the color information to the given <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="stringBuilder"><see cref="T:System.Text.StringBuilder"/> to receive the color information.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Grayscale.DrawStroke(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>OperatorWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Grayscale.DrawFill(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>OperatorWriter</b> object to receive the color data.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.Components">
            <summary>
            Gets the number of components for the device color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.ColorSpace">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.GrayLevel">
            <summary>
            Gets the gray value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.Black">
            <summary>Gets the color black.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.LightGrey">
            <summary>Gets the color light grey.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.Silver">
            <summary>Gets the color silver.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.DarkGray">
            <summary>Gets the color dark gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.Gray">
            <summary>Gets the color gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.DimGray">
            <summary>Gets the color dim gray. </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Grayscale.White">
            <summary>Gets the color white.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IccProfile">
             <summary>
             Represents an ICC profile resource.
             </summary>
             <remarks>For more details on creating PDF/X documents take a look at the <a href="PDFX.html">PDF/X</a> topic.</remarks>
            ^IccProfile
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.IccProfile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IccProfile"/> class.
            </summary>
            <param name="filePath">A Physical path to the file containing the ICC profile data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IccProfile.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IccProfile"/> class.
            </summary>
            <param name="iccProfile">A byte array containing the ICC profile data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IccProfile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IccProfile"/> class.
            </summary>
            <param name="iccProfile"><see cref="T:System.IO.Stream"/> object containing the ICC profile data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IccProfile.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the ICC profile data to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the ICC profile's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.BitmapImageData">
             <summary>
             Represents the data of an image created using the <see cref="T:System.Drawing.Bitmap"/> class.
             </summary>
            ^Lic.Generator.Pro
             <remarks><font color="red">This class is not available for .NET standard.</font></remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.ImageData">
             <summary>
             Represents the data of an image.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.ImageData"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.GetImage(System.String)">
            <summary>
            Returns an <see cref="T:ceTe.DynamicPDF.Imaging.ImageData"/> of the correct type for the given physical file path.
            </summary>
            <param name="filePath">Physical file path of the image data.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.GetImage(System.IO.Stream)">
            <summary>
            Returns an <see cref="T:ceTe.DynamicPDF.Imaging.ImageData"/> of the correct type for the given <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image data.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.GetImage(System.Byte[])">
            <summary>
            Returns an <see cref="T:ceTe.DynamicPDF.Imaging.ImageData"/> of the correct type for the given byte array.
            </summary>
            <param name="data">Byte array containing the image data.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.GetPointWidth">
            <summary>
            Calculates the width of the image in points.
            </summary>
            <returns>The width of the image in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.GetPointHeight">
            <summary>
            Calculates the height of the image in points.
            </summary>
            <returns>The height of the image in points.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.GetPage(System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Page"/> object containing the image as a background.
            </summary>
            <param name="margins">The margins of the page.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Page"/> with the image as a background.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.GetPage">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Page"/> object containing the image as a background.
            </summary>
            <returns>A <see cref="T:ceTe.DynamicPDF.Page"/> with the image as a background.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageData.Draw(ceTe.DynamicPDF.IO.OperatorWriter,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the image data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> class to receive the image data's output.</param>
            <param name="pdfX">X PDF coordinate for the image when drawn.</param>
            <param name="pdfY">Y PDF Coordinate for the image when drawn.</param>
            <param name="width">Width of the image when drawn.</param>
            <param name="height">Height of the image when drawn.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.Width">
            <summary>
            Gets the pixel width of the image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.Height">
            <summary>
            Gets the pixel height of the image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.ScaleX">
            <summary>
            Gets the X scale of the image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.ScaleY">
            <summary>
            Gets the Y scale of the image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.HorizontalDpi">
            <summary>
            Gets the horizontal dpi (also known as pixels per inch) of the image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.VerticalDpi">
            <summary>
            Gets the vertical dpi (also known as pixels per inch) of the image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.Interpolate">
            <summary>
            Gets or set a value indicating is image interpolation should be used by the PDF viewer when viewing the Image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.ImageData.ResourceType">
            <summary>
            Gets the type of resource.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.BitmapImageData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.BitmapImageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
            <remarks><font color="red">This class is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.BitmapImageData.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.BitmapImageData"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image.</param>
            <remarks><font color="red">This class is not available for .NET standard.</font></remarks>        
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.BitmapImageData.#ctor(System.Drawing.Bitmap)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.BitmapImageData"/> class.
            </summary>
            <param name="bitmap"><see cref="T:System.Drawing.Bitmap"/> object containing the image.</param>
            <remarks><font color="red">This class is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.BitmapImageData.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the bitmap image data to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the bitmap image data's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.BitmapImageData.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the bitmap image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.BitmapImageData.Width">
            <summary>
            Gets the width of the bitmap image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.BitmapImageData.Height">
            <summary>
            Gets the height of the bitmap image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.BitmapImageData.ScaleX">
            <summary>
            Gets the X scale of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.BitmapImageData.ScaleY">
            <summary>
            Gets the Y scale of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.GifImageData">
             <summary>
             Represents the data of a GIF image.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.GifImageData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.GifImageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.GifImageData.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.GifImageData"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.GifImageData.IsValid(System.String)">
            <summary>
            Returns a value indicating if the provides file extension is valid for a GIF image.
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.GifImageData.IsValid(System.Byte[])">
            <summary>
            Returns a value indicating if the provides file header is valid for a GIF image.
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.GifImageData.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the GIF image data to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the GIF image data's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.GifImageData.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the GIF image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.GifImageData.Width">
            <summary>
            Gets the width of the GIF image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.GifImageData.Height">
            <summary>
            Gets the height of the GIF image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.GifImageData.ScaleX">
            <summary>
            Gets the X scale of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.GifImageData.ScaleY">
            <summary>
            Gets the Y scale of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.ImageParsingException">
             <summary>
             The exception that is thrown for an image parsing error.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.ImageParsingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.ImageParsingException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData">
             <summary>
             Represents the data of a JPEG2000 image.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.IsValid(System.String)">
            <summary>
            Returns a value indicating if the provides file extension is valid for a JPEG2000 image.
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.IsValid(System.Byte[])">
            <summary>
            Returns a value indicating if the provides file header is valid for a JPEG2000 image.
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the JPEG2000 image data to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the JPEG2000 image data's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the JPEG2000 image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.Width">
            <summary>
            Gets the width of the JPEG2000 image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.Height">
            <summary>
            Gets the height of the JPEG2000 image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.ScaleX">
            <summary>
            Gets the X scale of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.Jpeg2000ImageData.ScaleY">
            <summary>
            Gets the Y scale of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.JpegImageData">
             <summary>
             Represents the data of a JPEG image.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.JpegImageData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.JpegImageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.JpegImageData.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.JpegImageData"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.JpegImageData.IsValid(System.String)">
            <summary>
            Returns a value indicating if the provides file extension is valid for a JPEG image.
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.JpegImageData.IsValid(System.Byte[])">
            <summary>
            Returns a value indicating if the provides file header is valid for a JPEG image.
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.JpegImageData.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the JPEG image data to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the JPEG image data's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.JpegImageData.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the JPEG image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.JpegImageData.Width">
            <summary>
            Gets the width of the JPEG image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.JpegImageData.Height">
            <summary>
            Gets the height of the JPEG image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.JpegImageData.ScaleX">
            <summary>
            Gets the X scale of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.JpegImageData.ScaleY">
            <summary>
            Gets the Y scale of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.PngImageData">
             <summary>
             Represents the data of a PNG image.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.PngImageData.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.PngImageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.PngImageData.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.PngImageData"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.PngImageData.IsValid(System.String)">
            <summary>
            Returns a value indicating if the provides file extension is valid for a PNG image.
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.PngImageData.IsValid(System.Byte[])">
            <summary>
            Returns a value indicating if the provides file header is valid for a PNG image.
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.PngImageData.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the PNG image data to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the PNG image data's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.PngImageData.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the PNG image data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.PngImageData.Width">
            <summary>
            Gets the pixel width of the PNG image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.PngImageData.Height">
            <summary>
            Gets the pixel height of the PNG image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.PngImageData.ScaleX">
            <summary>
            Gets the X scale of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.PngImageData.ScaleY">
            <summary>
            Gets the Y scale of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.TiffFile">
             <summary>
             Represents a TIFF image file.
             </summary>
             <remarks>See the <a href="Tiff Images.html">TIFF Images</a> section for more details on TIFF File.<p>1. For handling TIFF files, always use TiffFile object class.</p> 
             <p>2. When using TiffFile object, always call the Close() method after draw method because internally the image stream will not be closed.</p></remarks>
            ^TiffFile
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.TiffFile"/> class.
            </summary>
            <param name="filePath">The physical file path of the TIFF.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffFile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.TiffFile"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the TIFF file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffFile.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Imaging.TiffFile"/> class.
            </summary>
            <param name="data">Byte array containing the TIFF file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffFile.Close">
            <summary>
            Closes the stream associated with this object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffFile.GetDocument">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.Document"/> object that contains the images of the tiff file. 
            </summary>
            <returns>A <see cref="T:ceTe.DynamicPDF.Document"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffFile.IsValid(System.String)">
            <summary>
            Returns a value indicating if the provides file extension is valid for a TIFF image.
            </summary>
            <param name="fileExtension"></param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffFile.IsValid(System.Byte[])">
            <summary>
            Returns a value indicating if the provides file header is valid for a TIFF image.
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffFile.Images">
            <summary>
            Returns a collection of images in the TIFF file.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffFile.FirstImage">
            <summary>
            Returns the first image in the TIFF file.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.TiffImageData">
             <summary>
             Represents the data of a TIFF image contained in a TIFF image file.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffImageData.Draw(ceTe.DynamicPDF.IO.OperatorWriter,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the TIFF image data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> class to receive the TIFF image data's output.</param>
            <param name="pdfX">X PDF coordinate for the TIFF image when drawn.</param>
            <param name="pdfY">Y PDF Coordinate for the TIFF image when drawn.</param>
            <param name="width">Width of the TIFF image when drawn.</param>
            <param name="height">Height of the TIFF image when drawn.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffImageData.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the TIFF image data to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the TIFF image data's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffImageData.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the TIFF image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffImageData.Width">
            <summary>
            Gets the width of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffImageData.Height">
            <summary>
            Gets the height of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffImageData.ScaleX">
            <summary>
            Gets the X scale of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffImageData.ScaleY">
            <summary>
            Gets the Y scale of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Imaging.TiffImageDataList">
             <summary>
             Represents a collection of TIFF images.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Imaging.TiffImageDataList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.Imaging.TiffImageDataList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:ceTe.DynamicPDF.Imaging.TiffImageDataList"/></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffImageDataList.Count">
            <summary>
            Gets the number of images in the collection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Imaging.TiffImageDataList.Item(System.Int32)">
            <summary>
            Gets the TIFF image data at the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.OutputIntent">
             <summary>
             Represents an output intent.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.OutputIntent.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.OutputIntent"/> class.
            </summary>
            <param name="outputCondition">The output condition.</param>
            <param name="outputConditionIdentifier">The output condition identifier.</param>
            <param name="registryName">The registry name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.OutputIntent.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.OutputIntent"/> class.
            </summary>
            <param name="outputCondition">The output condition.</param>
            <param name="outputConditionIdentifier">The output condition identifier.</param>
            <param name="registryName">The registry name.</param>
            <param name="info">Additional information or comments.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.OutputIntent.#ctor(System.String,System.String,System.String,System.String,ceTe.DynamicPDF.IccProfile)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.OutputIntent"/> class.
            </summary>
            <param name="outputCondition">The output condition.</param>
            <param name="outputConditionIdentifier">The output condition identifier.</param>
            <param name="registryName">The registry name.</param>
            <param name="info">Additional information or comments.</param>
            <param name="iccProfile">The IccProfile to be used.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.OutputIntent.SetDestOutputProfile(ceTe.DynamicPDF.IccProfile)">
            <summary>
            Sets the destination output profile to the given <see cref="T:ceTe.DynamicPDF.IccProfile"/>.
            </summary>
            <param name="iccProfile">The <see cref="T:ceTe.DynamicPDF.IccProfile"/> to be set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.USWebCoatedSwop">
            <summary>
            Gets the US Web Coated (SWOP) v2 output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.IsoWebCoated">
            <summary>
            Gets the ISO Web Coated output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.IsoUncoated">
            <summary>
            Gets the ISO Uncoated output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.IsoUncoatedYellowish">
            <summary>
            Gets the ISO Uncoated Yellowish output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.IsoCoated">
            <summary>
            Gets the ISO Coated output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.IfraNewsPrint28">
            <summary>
            Gets the Ifra Newsprint 28 output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.IfraNewsPrint22">
            <summary>
            Gets the Ifra Newsprint 22 output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.OutputCondition">
            <summary>
            Gets or sets the output condition of the output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.OutputConditionIdentifier">
            <summary>
            Gets or sets the output condition identifier of the output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.RegistryName">
            <summary>
            Gets or sets the registry name of the output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.Info">
            <summary>
            Gets or sets the additional information of the output intent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntent.Version">
            <summary>
            Gets or Sets the OutputIntentVersion to PDF/X or PDF/A
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.FontSubsetter">
             <summary>
             Represents an font sub setter.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.FontSubsetter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IO.FontSubsetter"/> class.
            </summary>
            <param name="glyphCount"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.FontSubsetter.GlyphUsed(System.Int32)">
            <summary>
            Sets the glyph as used.
            </summary>
            <param name="glyphIndex">Glyph to mark as used.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.FontSubsetter.GlyphsUsed">
            <summary>
            Gets an array of all glyphs.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageAnnotationList">
             <summary>
             Represents a collection of annotations for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageAnnotationList.Add(ceTe.DynamicPDF.Resource)">
            <summary>
            Adds an annotation to the collection.
            </summary>
            <param name="annotation">Annotation to add.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageColorSpaceList">
             <summary>
             Represents a collection of color spaces for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageColorSpaceList.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the color space collection.
            </summary>
            <param name="startingNameNumber">The starting name number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageColorSpaceList.Add(ceTe.DynamicPDF.Resource,ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Writes the PDF name for the Resource to the page and adds it to the pages 
            resource list if it has not previously been added.
            </summary>
            <param name="resource">Resource to add to the page.</param>
            <param name="writer">The writer for the current page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageColorSpaceList.DrawEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the color space's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageColorSpaceList.Count">
            <summary>
            Gets the number of color spaces in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageExtGStateList">
             <summary>
             Represents a collection of external graphics states for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageExtGStateList.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the external graphics states collection.
            </summary>
            <param name="startingNameNumber">The starting name number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageExtGStateList.Add(ceTe.DynamicPDF.Resource,ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Writes the PDF name for the Resource to the page and adds it to the pages 
            resource list if it has not previously been added.
            </summary>
            <param name="resource">Resource to add to the page.</param>
            <param name="writer">The writer for the current page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageExtGStateList.DrawEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the external graphics state's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageExtGStateList.Count">
            <summary>
            Gets the number of external graphics states in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageFontList">
             <summary>
             Represents a collection of fonts for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageFontList.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the fonts collection.
            </summary>
            <param name="startingNameNumber">The starting name number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageFontList.Add(ceTe.DynamicPDF.Resource,ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Writes the PDF name for the Font to the page and adds it to the pages 
            resource list if it has not previously been added.
            </summary>
            <param name="font">Font to add to the page.</param>
            <param name="writer">The writer for the current page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageFontList.DrawEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the font's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageFontList.Count">
            <summary>
            Gets the number of fonts in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PagePatternList">
             <summary>
             Represents a collection of patterns for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PagePatternList.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the patterns collection.
            </summary>
            <param name="startingNameNumber">The starting name number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PagePatternList.Add(ceTe.DynamicPDF.Resource,ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Writes the PDF name for the Resource to the page and adds it to the pages 
            resource list if it has not previously been added.
            </summary>
            <param name="resource">Resource to add to the page.</param>
            <param name="writer">The writer for the current page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PagePatternList.DrawEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the pattern's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PagePatternList.Count">
            <summary>
            Gets the number of patterns in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PagePropertiesList">
             <summary>
             Represents a collection of properties for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PagePropertiesList.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the properties collection.
            </summary>
            <param name="startingNameNumber">The starting name number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PagePropertiesList.Add(ceTe.DynamicPDF.Resource,ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Writes the PDF name for the Resource to the page and adds it to the pages 
            resource list if it has not previously been added.
            </summary>
            <param name="resource">Resource to add to the page.</param>
            <param name="writer">The writer for the current page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PagePropertiesList.DrawEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the properties' dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PagePropertiesList.Count">
            <summary>
            Gets the number of properties in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageResources">
             <summary>
             Represents a pages resources.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageResources.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the page resources to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageResources.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the page resources.
            </summary>
            <param name="startingNameNumber"></param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageResources.Fonts">
            <summary>
            Gets a collection of fonts used on the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageResources.XObjects">
            <summary>
            Gets a collection of XObjects used on the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageResources.Shadings">
            <summary>
            Gets a collection of Shadings used on the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageResources.ColorSpaces">
            <summary>
            Gets a collection of ColorSpaces used on the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageResources.Patterns">
            <summary>
            Gets a collection of Patterns used on the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageResources.Properties">
            <summary>
            Gets a collection of Properties used on the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageResources.ExtGStates">
            <summary>
            Gets a collection of ExtGStates used on the page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageShadingList">
             <summary>
             Represents a collection of shadings for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageShadingList.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the shadings collection.
            </summary>
            <param name="startingNameNumber">The starting name number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageShadingList.Add(ceTe.DynamicPDF.Resource,ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Writes the PDF name for the Resource to the page and adds it to the pages 
            resource list if it has not previously been added.
            </summary>
            <param name="resource">Resource to add to the page.</param>
            <param name="writer">The writer for the current page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageShadingList.DrawEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the shading's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageShadingList.Count">
            <summary>
            Gets the number of shadings in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageWriter">
             <summary>
             Represents a writer class for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the page writer to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.SetStrokeColorSpace(ceTe.DynamicPDF.ColorSpace)">
            <summary>
            Sets the color space for the page.
            </summary>
            <param name="colorSpace">The <see cref="T:ceTe.DynamicPDF.ColorSpace"/> to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.SetFillColorSpace(ceTe.DynamicPDF.ColorSpace)">
            <summary>
            Sets the color space for the page.
            </summary>
            <param name="colorSpace">The <see cref="T:ceTe.DynamicPDF.ColorSpace"/> to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_Do(ceTe.DynamicPDF.Resource)">
            <summary>
            Writes a PDF "Do" operator to the page.
            </summary>
            <param name="xObject">The XObject to reference.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_cs_(ceTe.DynamicPDF.ColorSpace)">
            <summary>
            Writes a PDF "cs" operator to the page.
            </summary>
            <param name="colorSpace">The <see cref="T:ceTe.DynamicPDF.ColorSpace"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_CS(ceTe.DynamicPDF.ColorSpace)">
            <summary>
            Writes a PDF "CS" operator to the page.
            </summary>
            <param name="colorSpace">The <see cref="T:ceTe.DynamicPDF.ColorSpace"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_scn_(ceTe.DynamicPDF.SpotColor)">
            <summary>
            Writes a PDF "scn" operator to the page.
            </summary>
            <param name="tint">The tint to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_scn_(ceTe.DynamicPDF.Gradient)">
            <summary>
            Writes a PDF "scn" operator to the page.
            </summary>
            <param name="pattern">The <see cref="T:ceTe.DynamicPDF.Gradient"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_SCN(ceTe.DynamicPDF.SpotColor)">
            <summary>
            Writes a PDF "SCN" operator to the page.
            </summary>
            <param name="tint">The tint to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_SCN(ceTe.DynamicPDF.Gradient)">
            <summary>
            Writes a PDF "SCN" operator to the page.
            </summary>
            <param name="pattern">The <see cref="T:ceTe.DynamicPDF.Gradient"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_Tf(ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Writes a PDF "Tf" operator to the page.
            </summary>
            <param name="font">The <see cref="T:ceTe.DynamicPDF.Font"/> to draw.</param>
            <param name="fontSize">The font size to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_gs(ceTe.DynamicPDF.Resource)">
            <summary>
            Writes a PDF "gs" operator to the page.
            </summary>
            <param name="extGState">The external graphics state <see cref="T:ceTe.DynamicPDF.Resource"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_m_(System.Single,System.Single)">
            <summary>
            Writes a PDF "m" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_l_(System.Single,System.Single)">
            <summary>
            Writes a PDF "l" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The y coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_c(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "c" operator to the page.
            </summary>
            <param name="x1">The X1 coordinate to draw.</param>
            <param name="y1">The Y1 coordinate to draw.</param>
            <param name="x2">The X2 coordinate to draw.</param>
            <param name="y2">The Y2 coordinate to draw.</param>
            <param name="x3">The X3 coordinate to draw.</param>
            <param name="y3">The Y3 coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_v(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "v" operator to the page.
            </summary>
            <param name="x2">The X2 coordinate to draw.</param>
            <param name="y2">The Y2 coordinate to draw.</param>
            <param name="x3">The X3 coordinate to draw.</param>
            <param name="y3">The Y3 coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_y(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "y" operator to the page.
            </summary>
            <param name="x1">The X1 coordinate to draw.</param>
            <param name="y1">The Y1 coordinate to draw.</param>
            <param name="x3">The X3 coordinate to draw.</param>
            <param name="y3">The Y3 coordinate to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_re(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Writes a PDF "re" operator to the page.
            </summary>
            <param name="x">The X coordinate to draw.</param>
            <param name="y">The Y coordinate to draw.</param>
            <param name="width">The width to draw.</param>
            <param name="height">The height to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_s_">
            <summary>
            Writes a PDF "s" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_S">
            <summary>
            Writes a PDF "S" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_fx">
            <summary>
            Writes a PDF "f*" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_f">
            <summary>
            Writes a PDF "f" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_BI">
            <summary>
            Writes a PDF "BI" operator to the page.
            </summary>
            <summary>
            Writes a PDF "BI" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_EI">
            <summary>
            Writes a PDF "EI" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_B">
            <summary>
            Writes a PDF "B" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_b_">
            <summary>
            Writes a PDF "b" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_Bx">
            <summary>
            Writes a PDF "B*" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_bx_">
            <summary>
            Writes a PDF "b*" operator to the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_G(ceTe.DynamicPDF.Grayscale)">
            <summary>
            Writes a PDF "G" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.Grayscale"/> color to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_g_(ceTe.DynamicPDF.Grayscale)">
            <summary>
            Writes a PDF "g" operator to the page.
            </summary>
            <param name="color">The <c ref="Grayscale"/> color to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_RG(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Writes a PDF "RG" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.RgbColor"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_rg_(ceTe.DynamicPDF.RgbColor)">
            <summary>
            Writes a PDF "rg" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.RgbColor"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_K(ceTe.DynamicPDF.CmykColor)">
            <summary>
            Writes a PDF "K" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.CmykColor"/> to draw.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriter.Write_k_(ceTe.DynamicPDF.CmykColor)">
            <summary>
            Writes a PDF "k" operator to the page.
            </summary>
            <param name="color">The <see cref="T:ceTe.DynamicPDF.CmykColor"/> to draw.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriter.ResourceType">
            <summary>
            Gets the type of resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriter.SectionPageNumber">
            <summary>
            Gets the section page number being drawn the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriter.PageNumber">
            <summary>
            Gets the page number being drawn to the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriter.Page">
            <summary>
            Gets the <b>Page</b> object the page writer belongs to.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriter.Resources">
            <summary>
            Gets the resources used on the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriter.Annotations">
            <summary>
            Gets a list of annotations used on the page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageWriterState">
             <summary>
             Represents the page writers state.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriterState.#ctor(ceTe.DynamicPDF.IO.PageWriterState)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IO.PageWriterState"/> class.
            </summary>
            <param name="state">Page writer state to clone.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageWriterState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.IO.PageWriterState"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.CharacterSpacing">
            <summary>
            Represents character spacing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.WordSpacing">
            <summary>
            Represents word spacing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.HorizontalScaling">
            <summary>
            represents horizontal spacing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.Leading">
            <summary>
            Represents line leading.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.Font">
            <summary>
            represents the Font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.FontSize">
            <summary>
            Represents font size.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.TextRenderingMode">
            <summary>
            Represents text render mode.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.TextRise">
            <summary>
            represents text rise.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.LineWidth">
            <summary>
            Represents line width.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.LineCap">
            <summary>
            Represents line cap style.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.LineJoin">
            <summary>
            Represents line join style.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.MiterLimit">
            <summary>
            Represents miter limit.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.LineStyle">
            <summary>
            Represents line style.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.StrokeColor">
            <summary>
            Represents stroke color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.FillColor">
            <summary>
            Represents fill color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.StrokeColorSpace">
            <summary>
            Represents stroke color space.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageWriterState.FillColorSpace">
            <summary>
            Represents fill color space.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.PageXObjectList">
             <summary>
             Represents a collection of XObjects for a page.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageXObjectList.SetStartingNameNumber(System.Int32)">
            <summary>
            Sets the starting name number for the XObjects collection.
            </summary>
            <param name="startingNameNumber">The starting name number.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageXObjectList.Add(ceTe.DynamicPDF.Resource,ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Writes the PDF name for the Resource to the page and adds it to the pages 
            resource list if it has not previously been added.
            </summary>
            <param name="resource">Resource to add to the page.</param>
            <param name="writer">The writer for the current page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.PageXObjectList.DrawEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the XObject's dictionary entries to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.IO.PageXObjectList.Count">
            <summary>
            Gets the number of XObjects in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.JavaScriptAction">
             <summary>
             Represents a JavaScript action.
             </summary>
             <remarks>For more details on using the JavaScript action take a look at the <a href="Javascript.html">JavaScript</a> topic.</remarks>
            ^JavaScriptAction
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.JavaScriptAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.JavaScriptAction"/> class.
            </summary>
            <param name="javaScript">The JavaScript code.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.JavaScriptAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.JavaScriptResource">
             <summary>
             Represents a JavaScript resource
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.JavaScriptResource.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the JavaScript resource to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the resource's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.JavaScriptResource.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LineStyle">
             <summary>
             Represents a style of line.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.LineStyle.#ctor(System.Single[],System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LineStyle"/> class.
            </summary>
            <param name="dashArray">The array specifying the line style.</param>
            <param name="dashPhase">The phase of the line style.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LineStyle.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LineStyle"/> class.
            </summary>
            <param name="dashArray">The array specifying the line style.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LineStyle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>LineStyle</b> class.
            </summary>
            <param name="lineStyle">String specifying the line style.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LineStyle.Solid">
            <summary>
            Gets a solid line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LineStyle.Dots">
            <summary>
            Gets a dotted line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LineStyle.DashSmall">
            <summary>
            Gets a line with small dashes.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LineStyle.Dash">
            <summary>
            Gets a dashed line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LineStyle.DashLarge">
            <summary>
            Gets a line with large dashes. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LineStyle.None">
            <summary>
            Gets a invisible line. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.AppendedPage">
             <summary>
             Represents an appended page.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.AppendedPage.BackgroundElements">
            <summary>
            Gets a collection of page elements to be drawn as a background on the page.
            </summary>
            <remarks>Page elements placed in this collection will appear below the imported PDF data. Use the
            <see cref="P:ceTe.DynamicPDF.Page.Elements"/> property to place page elements on top of the imported PDF data.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.MergeButtonField.BackgroundColor">
            <summary>
            Gets the background color of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.MergeComboBoxField.Value">
            <summary>
            Gets or sets the value of the merged combo box field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.MergeFormException">
             <summary>
             The exception that is thrown for a DynamicPDF form filling error.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.MergeFormException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.Forms.MergeFormException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.PdfButtonField">
             <summary>
             Representing a button field in a PDF document.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.PdfFormField">
             <summary>
             Representing a form field in a PDF document.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.GetOriginalPageNumber">
            <summary>
            Returns the original page number of the form field in the original PDF document.
            </summary>
            <returns>The page number that the form field appears on (1 based index).</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.PositionPageElement(ceTe.DynamicPDF.PageElement,ceTe.DynamicPDF.Page)">
            <summary>
            Sets the position of a page element to the coordinates of the form field.
            </summary>
            <param name="pageElement">Page element whose coordinates should be set.</param>
            <param name="page">Page that contains the page element.</param>
            <remarks>The page element must implement <see cref="T:ceTe.DynamicPDF.PageElements.IArea"/> and/or <see cref="T:ceTe.DynamicPDF.PageElements.ICoordinate"/>
            in order for it's coordinates to be set.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.GetX(ceTe.DynamicPDF.Page)">
            <summary>
            Returns the X coordinate of the form field on the given page.
            </summary>
            <param name="page">Page for which the X coordinates are returned.</param>
            <returns>The X coordinate on the given page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.GetY(ceTe.DynamicPDF.Page)">
            <summary>
            Returns the Y coordinate of the form field on the given page.
            </summary>
            <param name="page">Page for which the Y coordinates are returned.</param>
            <returns>The Y coordinate on the given page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.Single,System.Single,System.String,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="xOffset">The X coordinate offset for the label.</param>
            <param name="yOffset">The Y coordinate offset for the label.</param>
            <param name="text">The text of the label.</param>
            <param name="font">The font to use for the label.</param>
            <param name="fontSize">The font size to use for the label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object that was added to the page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.Single,System.Single,System.String,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="xOffset">The X coordinate offset for the label.</param>
            <param name="yOffset">The Y coordinate offset for the label.</param>
            <param name="text">The text of the label.</param>
            <param name="font">The font to use for the label.</param>
            <param name="fontSize">The font size to use for the label.</param>
            <param name="align">The text alignment of the label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object that was added to the page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.Single,System.Single,System.String,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="xOffset">The X coordinate offset for the label.</param>
            <param name="yOffset">The Y coordinate offset for the label.</param>
            <param name="text">The text of the label.</param>
            <param name="font">The font to use for the label.</param>
            <param name="fontSize">The font size to use for the label.</param>
            <param name="align">The text alignment of the label.</param>
            <param name="textColor">The text color of the label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object that was added to the page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.Single,System.Single,System.String)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="xOffset">The X coordinate offset for the label.</param>
            <param name="yOffset">The Y coordinate offset for the label.</param>
            <param name="text">The text of the label.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.String,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="text">The text of the label.</param>
            <param name="font">The font to use for the label.</param>
            <param name="fontSize">The font size to use for the label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object that was added to the page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.String,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="text">The text of the label.</param>
            <param name="font">The font to use for the label.</param>
            <param name="fontSize">The font size to use for the label.</param>
            <param name="align">The text alignment of the label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object that was added to the page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.String,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="text">The text of the label.</param>
            <param name="font">The font to use for the label.</param>
            <param name="fontSize">The font size to use for the label.</param>
            <param name="align">The text alignment of the label.</param>
            <param name="textColor">The text color of the label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object that was added to the page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CreateLabel(ceTe.DynamicPDF.Page,System.String)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.PageElements.Label"/> object and adds it to the given page at the coordinates of the form field.
            </summary>
            <remarks>NOTE: For actual Form Flattening, use the <see cref="P:ceTe.DynamicPDF.Document.FormFlattening"/> property of the <see cref="T:ceTe.DynamicPDF.Document"/> class
            (see the <a href="Form Flattening.html">Form Flattening</a> Help Topic for more information)</remarks>
            <param name="page">Page to which the label will be added.</param>
            <param name="text">The text of the label.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.GetDefaultValue">
            <summary>
            Gets the default value of the form field.
            </summary>
            <returns>A <b>string</b> containing the default value.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfFormField.GetValue">
            <summary>
            Gets the value of the form field.
            </summary>
            <returns>A <b>string</b> containing the value.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.HasChildFields">
            <summary>
            Gets the type of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Width">
            <summary>
            Gets the width of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Height">
            <summary>
            Gets the height of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Parent">
            <summary>
            Gets the parent form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Form">
            <summary>
            Gets the form the form field belongs to.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.ExportValue">
            <summary>
            Gets the export value of the form field.
            </summary>
            <returns>A <b>string</b> containing the value.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.ExportValues">
            <summary>
            Gets the export values of the form field.
            </summary>
            <returns>A <b>string[]</b> containing the values.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.ChildFields">
            <summary>
            Gets a collection of child form fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.None">
            <summary>
            Gets the form field flags status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.ReadOnly">
            <summary>
            Gets the read only flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Required">
            <summary>
            Gets the required flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.NoExport">
            <summary>
            Gets the no export flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Multiline">
            <summary>
            Gets the multi line flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Password">
            <summary>
            Gets the password flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Combo">
            <summary>
            Gets the combo flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Edit">
            <summary>
            Gets the edit flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Sort">
            <summary>
            Gets the sort flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.FileSelect">
            <summary>
            Gets the file select flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.MultiSelect">
            <summary>
            Gets the multi select flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.DoNotSpellCheck">
            <summary>
            Gets the do not spell check flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.DoNotScroll">
            <summary>
            Gets the do not scroll flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Comb">
            <summary>
            Gets the comb flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.NoToggleToOff">
            <summary>
            Gets the no toggle to off flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Radio">
            <summary>
            Gets the radio flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Pushbutton">
            <summary>
            Gets the push button flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.RadiosInUnison">
            <summary>
            Gets the radio in unison flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.CommitOnSelChange">
            <summary>
            Gets the commit on sel change flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.RichText">
            <summary>
            Gets the rich text flag status of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Flags">
            <summary>
            <font color="red">Obsolete.</font> Gets the partial name of the form field.
            </summary>
            <remarks><font color="red">NOTE: This property is obsolete.</font> Instead use relevant flag name properties present on this class.</remarks>        
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Name">
            <summary>
            Gets the partial name of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.FullName">
            <summary>
            Gets the full name of the form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.BorderStyle">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.BorderStyle"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.BorderColor">
            <summary>
            Gets the border color of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.BackgroundColor">
            <summary>
            Gets the background color of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.TextColor">
            <summary>
            Gets the color of the text for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Rotate">
            <summary>
            Gets the angle of a form field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.FontSize">
            <summary>
            Gets or Sets the fontsize for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormField.Align">
            <summary>
            Gets the text alignment for the field.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.GetDefaultValue">
            <summary>
            Gets the default value of the button field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.GetValue">
            <summary>
            Gets the value of the button field.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.ExportValue">
            <summary>
            Gets the export value of the form field.
            </summary>
            <returns>A <b>string</b> containing the value.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.NoToggleToOff">
            <summary>
            Gets the no toggle to off property of the button field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.Radio">
            <summary>
            Gets the radio property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.Pushbutton">
            <summary>
            Gets the push button property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.RadiosInUnison">
            <summary>
            Gets the radio in unision property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfButtonField.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField">
             <summary>
             Representing a choice field in a PDF document.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.GetItems">
            <summary>
            Gets all the items available for selection in the combo box or list box.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.GetItemsExportValues">
            <summary>
            Gets the export values for all the items available for selection in the combo box or list box.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.GetValues">
            <summary>
            Gets the selected values of the listbox field.
            </summary>
            <returns>An array of strings containing the selected values of the listbox field.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.GetValue">
            <summary>
            Gets the selected value of the comboBox field or listBox field.
            </summary>
            <returns>A <b>string</b> containing the selected value of the comboBox field or listBox field.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.GetDefaultValues">
            <summary>
            Gets the default values of the choice field.
            </summary>
            <returns>An array of strings containing the default values.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.GetDefaultValue">
            <summary>
            Gets the default value of the choice fields.
            </summary>
            <returns>A <b>string</b> containing the default value.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.ExportValue">
            <summary>
            Gets the selected item export value in the comboBox or listBox.
            </summary>
            <returns>A <b>string</b> containing the selected item export value.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.ExportValues">
            <summary>
            Gets the selected items export value in the comboBox or listBox.
            </summary>
            <returns>A <b>string array</b> containing the elected items export values.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.Combo">
            <summary>
            Gets the combo property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.Edit">
            <summary>
            Gets the edit property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.Sort">
            <summary>
            Gets the sort property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.DoNotSpellCheck">
            <summary>
            Gets the do not spell check property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.CommitOnSelChange">
            <summary>
            Gets the commit on sel change property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfChoiceField.MultiSelect">
            <summary>
            Gets the multi select property of the text field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.PdfForm">
             <summary>
             Representing a form in a PDF document.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfForm.Fields">
            <summary>
            Gets a collection of form fields contained in the form.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.PdfFormFieldList">
             <summary>
             Representing a collection of form fields in a PDF document.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormFieldList.Count">
            <summary>
            Gets the number of form fields in the collection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormFieldList.Item(System.Int32)">
            <summary>
            Gets a form field at the specified index in the collection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfFormFieldList.Item(System.String)">
            <summary>
            Gets the form field by the given name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField">
             <summary>
             Represents the Signature field of an existing PDF document.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField.Signed">
            <summary>
            Returns true if the signature field is signed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField.SignatureContent">
            <summary>
            Gets the byte data of the signed content for the signature from an existing PDF.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField.Range">
            <summary>
            Gets an array of <see cref="T:ceTe.DynamicPDF.Merger.ByteRange"/> that represents the signed content data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField.SubFilter">
            <summary>
            Gets the encryption algorithm details used to decrypt the encryption dictionary content.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField.Filter">
            <summary>
             Gets the encryption algorithm details used to decrypt the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField.Timestamp">
            <summary>
            Gets the time stamp information of the signature.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField.CoversEntirePdf">
            <summary>
            Returns true if the current signature signs the entire PDF document.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.PdfTextField">
             <summary>
             Representing a text field in a PDF document.
             </summary>
            ^Lic.Merger.Std.Misc2
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfTextField.GetDefaultValue">
            <summary>
            Gets the default value of the form field.
            </summary>
            <returns>A <b>string</b> containing the default value.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.Forms.PdfTextField.GetValue">
            <summary>
            Gets the value of a text field.
            </summary>
            <returns>A <b>string</b> containing the value.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.MaximumLength">
            <summary>
            Gets the maximum length of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.Text">
            <summary>
            Gets the text of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.Multiline">
            <summary>
            Gets the multi line property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.Password">
            <summary>
            Gets the password property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.FileSelect">
            <summary>
            Gets the file select property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.DoNotSpellCheck">
            <summary>
            Gets the do not spell check property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.DoNotScroll">
            <summary>
            Gets the do not scroll property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.Comb">
            <summary>
            Gets the comb property of the text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.Forms.PdfTextField.RichText">
            <summary>
            Gets the rich text property of the text field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImportedAction">
            <summary>
            Represents an imported action.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedAction.ActionType">
            <summary>
            Get the action type of the imported action.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImportedDestination">
            <summary>
            Represents an imported destination
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedDestination.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Outline">
             <summary>
             Represents an outline.
             </summary>
             <remarks>See the <a href="Outlines and BookMarks.html">Outlines and Bookmarks</a> topic for more on Outlines.</remarks>
            ^Outline
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Outline.#ctor(System.Boolean,ceTe.DynamicPDF.TextStyle,ceTe.DynamicPDF.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Outline"/> class.
            </summary>
            <param name="expanded">Specifies if the outline will be expanded.</param>
            <param name="style">Style of the outline.</param>
            <param name="action">Action of the outline.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Outline.Text">
            <summary>
            Gets or sets the text of the outline.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Outline.Style">
            <summary>
            Gets or sets the style of the outline.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Outline.Color">
            <summary>
            Gets or sets the color of the outline.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Outline.Parent">
            <summary>
            Gets the parent of the outline.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Outline.ChildOutlines">
            <summary>
            Gets a collection or child outlines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Outline.Expanded">
            <summary>
            Gets or sets a value specifying if the outline is expanded.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImportedPage">
             <summary>
             Represents an imported page.
             </summary>
             <remarks>This class can be used to pull a single selected page from an existing PDF document.</remarks>
            ^ImportedPage
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPage.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPage"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPage.#ctor(System.String,System.Int32,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPage"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
            <param name="margins">Margins of the new page. Overrides the default margins.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPage.#ctor(ceTe.DynamicPDF.Merger.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPage"/> class.
            </summary>
            <param name="pdfPage"><see cref="P:ceTe.DynamicPDF.Merger.ImportedPage.PdfPage"/> object to import.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPage.#ctor(ceTe.DynamicPDF.Merger.PdfPage,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPage"/> class.
            </summary>
            <param name="pdfPage"><see cref="P:ceTe.DynamicPDF.Merger.ImportedPage.PdfPage"/> object to import.</param>
            <param name="margins">Margins of the new page. Overrides the default margins.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPage.ImportAnnotations">
            <summary>
            Gets or sets a value specifying whether or not to import the annotations.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPage.ImportFormFields">
            <summary>
            Gets or sets a value specifying whether or not to import the form fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPage.ImportAllOtherData">
            <summary>
            Gets or sets a value specifying whether or not to import all data except annotations and form fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPage.LogicalStructure">
            <summary>
            Gets or sets a value specifying whether or not to import the logical structures.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPage.BackgroundElements">
            <summary>
            Gets a collection of page elements to be drawn as a background on the page.
            </summary>
            <remarks>Page elements placed in this collection will appear below the imported PDF data. Use the
            <see cref="P:ceTe.DynamicPDF.Page.Elements"/> property to place page elements on top of the imported PDF data.</remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImportedPageArea">
             <summary>
             Represents an imported pages area.
             </summary>
            ^Lic.Merger.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.#ctor(System.String,System.Int32,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageArea"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF doument to import.</param>
            <param name="pageNumber">Page number to import.</param>
            <param name="x">X coordinate of the imported page area.</param>
            <param name="y">Y coordinate of the imported page area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.#ctor(System.String,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageArea"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
            <param name="x">X coordinate of the imported page area.</param>
            <param name="y">Y coordinate of the imported page area.</param>
            <param name="scale">The scale to use when rendering the imported page area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.#ctor(ceTe.DynamicPDF.Merger.PdfPage,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageArea"/> class.
            </summary>
            <param name="pdfPage"><see cref="T:ceTe.DynamicPDF.Merger.PdfPage"/> object containing the page.</param>
            <param name="x">X coordinate of the imported page area.</param>
            <param name="y">Y coordinate of the imported page area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.#ctor(ceTe.DynamicPDF.Merger.PdfPage,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageArea"/> class.
            </summary>
            <param name="pdfPage"><see cref="T:ceTe.DynamicPDF.Merger.PdfPage"/> object containing the page.</param>
            <param name="x">X coordinate of the imported page area.</param>
            <param name="y">Y coordinate of the imported page area.</param>
            <param name="scale">The scale to use when rendering the imported page area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.#ctor(ceTe.DynamicPDF.Merger.ImportedPageContents,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageArea"/> class.
            </summary>
            <param name="contents"><see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> object containing the page's contents.</param>
            <param name="x">X coordinate of the imported page area.</param>
            <param name="y">Y coordinate of the imported page area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.#ctor(ceTe.DynamicPDF.Merger.ImportedPageContents,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageArea"/> class.
            </summary>
            <param name="contents"><see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> object containing the page's contents.</param>
            <param name="x">X coordinate of the imported page area.</param>
            <param name="y">Y coordinate of the imported page area.</param>
            <param name="scale">The scale to use when rendering the imported page area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the image to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the image's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.SetBounds(System.Single,System.Single)">
            <summary>
            Scales the image to fit in the given box keeping the X and Y scale equal.
            </summary>
            <param name="maximumWidth">The maximum width.</param>
            <param name="maximumHeight">The maximum height.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageArea.SetSize(System.Single,System.Single)">
            <summary>
            Scales the image to fit the exact width and height given.
            </summary>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.X">
            <summary>
            Gets or sets the X coordinate of the page element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.Y">
            <summary>
            Gets or sets the Y coordinate of the imported page area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.Angle">
            <summary>
            Gets or sets the angle of the imported page area in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.ScaleX">
            <summary>
            Gets or sets the horizontal scale of the imported page area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.ScaleY">
            <summary>
            Gets or sets the vertical scale of the imported page area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.Width">
            <summary>
            Gets or sets the width of the imported page area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.Height">
            <summary>
            Gets or sets the height of the imported page area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageArea.Contents">
            <summary>
            Get the imported page area's <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> object.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImportedPageContents">
             <summary>
             Represents the contents used by an the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
             </summary>
             <remarks>This class can be used to reuse a pages contents in multiple <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> objects. Doing so will
             reduce the size of the output PDF because the contents will only appears in the output document once.</remarks>
            ^ImportedPageContents 
            ^Lic.Merger.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageContents.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageContents.#ctor(ceTe.DynamicPDF.Merger.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> class.
            </summary>
            <param name="pdfPage"><see cref="P:ceTe.DynamicPDF.Merger.ImportedPageContents.PdfPage"/> object to import.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageContents.#ctor(System.String,System.Int32,ceTe.DynamicPDF.PageBoundary)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
            <param name="pageBoundary">The boundaries box to use as the edges of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageContents.#ctor(ceTe.DynamicPDF.Merger.PdfPage,ceTe.DynamicPDF.PageBoundary)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> class.
            </summary>
            <param name="pdfPage"><see cref="P:ceTe.DynamicPDF.Merger.ImportedPageContents.PdfPage"/> object to import.</param>
            <param name="pageBoundary">The boundaries box to use as the edges of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageContents.SetBoundaries(ceTe.DynamicPDF.PageBoundary)">
            <summary>
            Sets the boundaries of the page to the specified boundary on the imported page.
            </summary>
            <param name="pageBoundary"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageContents.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the contents the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the contents output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the imported page data's contents.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.ResourceType">
            <summary>
            Gets the type of resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.ClipLeft">
            <summary>
            Gets or sets the left clipping of the contents.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.ClipRight">
            <summary>
            Gets or sets the right clipping of the contents.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.ClipTop">
            <summary>
            Gets or sets the top clipping of the contents.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.ClipBottom">
            <summary>
            Gets or sets the bottom clipping of the contents.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.Width">
            <summary>
            Gets the clipped width of the contents.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageContents.Height">
            <summary>
            Gets the clipped height of the contents.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ImportedPageData">
             <summary>
             Represents a Page Element containing the data of an imported page from a PDF document.
             </summary>
             <remarks>This class can be used to pull a single selected page from an existing PDF document.  
             You can scale it or rotate it and you can place it on an another page.</remarks>
            ^ImportedPageData 
            ^Lic.Merger.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(System.String,System.Int32,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
            <param name="xOffset">X offset of the placement on the page.</param>
            <param name="yOffset">Y offset of the placement on the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(System.String,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
            <param name="xOffset">X offset of the placement on the page.</param>
            <param name="yOffset">Y offset of the placement on the page.</param>
            <param name="scale">Scale of the imported page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(ceTe.DynamicPDF.Merger.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="pdfPage"><see cref="T:ceTe.DynamicPDF.Merger.PdfPage"/> object to import.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(ceTe.DynamicPDF.Merger.PdfPage,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="pdfPage"><see cref="T:ceTe.DynamicPDF.Merger.PdfPage"/> object to import.</param>
            <param name="xOffset">X offset of the placement on the page.</param>
            <param name="yOffset">Y offset of the placement on the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(ceTe.DynamicPDF.Merger.PdfPage,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="pdfPage"><see cref="T:ceTe.DynamicPDF.Merger.PdfPage"/> object to import.</param>
            <param name="xOffset">X offset of the placement on the page.</param>
            <param name="yOffset">Y offset of the placement on the page.</param>
            <param name="scale">Scale of the imported page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(ceTe.DynamicPDF.Merger.ImportedPageContents)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="contents"><see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> object containing the pages contents.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(ceTe.DynamicPDF.Merger.ImportedPageContents,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="contents"><see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> object containing the pages contents.</param>
            <param name="xOffset">X offset of the placement on the page.</param>
            <param name="yOffset">Y offset of the placement on the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.#ctor(ceTe.DynamicPDF.Merger.ImportedPageContents,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageData"/> class.
            </summary>
            <param name="contents"><see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> object containing the pages contents.</param>
            <param name="xOffset">X offset of the placement on the page.</param>
            <param name="yOffset">Y offset of the placement on the page.</param>
            <param name="scale">Scale of the imported page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.ImportedPageData.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the imported page data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the imported page data output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.XOffset">
            <summary>
            Gets or sets the X offset of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.YOffset">
            <summary>
            Gets or sets the Y offset of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.ScaleX">
            <summary>
            Gets or sets the horizontal scale of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.ScaleY">
            <summary>
            Gets or sets the vertical scale of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.Width">
            <summary>
            Gets or sets the width of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.Height">
            <summary>
            Gets or sets the height of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.Angle">
            <summary>
            Gets or sets the angle of the page in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ImportedPageData.Contents">
            <summary>
            Get the imported page data's <see cref="T:ceTe.DynamicPDF.Merger.ImportedPageContents"/> object.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.MergeDocument">
             <summary>
             Represents a document that can merge and append other documents.
             </summary>
             <remarks>This is the primary class used to merge or append entire PDF documents or certain pages from existing documents.
             The merge document can be output to any object derived from the <see cref="T:System.IO.Stream"/> class that supports 
             writing and can easily be integrated with ASP.NET to stream the document to Internet Information Server's HTTP output stream.</remarks>
            ^MergeDocument
            ^Lic.Merger.Std2
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(ceTe.DynamicPDF.Merger.PdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(System.String,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <param name="options">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(ceTe.DynamicPDF.Merger.PdfDocument,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <param name="options">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <param name="startPage">The page to start importing from.</param>
            <param name="pageCount">The number of pages to import.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(ceTe.DynamicPDF.Merger.PdfDocument,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <param name="startPage">The page to start importing from.</param>
            <param name="pageCount">The number of pages to import.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(System.String,System.Int32,System.Int32,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <param name="startPage">The page to start importing from.</param>
            <param name="pageCount">The number of pages to import.</param>
            <param name="options">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.#ctor(ceTe.DynamicPDF.Merger.PdfDocument,System.Int32,System.Int32,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> class.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <param name="startPage">The page to start importing from.</param>
            <param name="pageCount">The number of pages to import.</param>
            <param name="options">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options.</param>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(System.String)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(ceTe.DynamicPDF.Merger.PdfDocument)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(System.String,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <param name="options">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(ceTe.DynamicPDF.Merger.PdfDocument,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <param name="options">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(System.String,System.Int32,System.Int32)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <param name="startPage">The page to start importing from.</param>
            <param name="pageCount">The number of pages to import.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(ceTe.DynamicPDF.Merger.PdfDocument,System.Int32,System.Int32)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <param name="startPage">The page to start appending from.</param>
            <param name="pageCount">The number of pages to append.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(System.String,System.Int32,System.Int32,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="filePath">The physical file path of the PDF to import.</param>
            <param name="startPage">The page to start importing from.</param>
            <param name="pageCount">The number of pages to import.</param>
            <param name="options">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Append(ceTe.DynamicPDF.Merger.PdfDocument,System.Int32,System.Int32,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Appends a PDF document to the current document.
            </summary>
            <param name="pdfDocument">The <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> to import.</param>
            <param name="startPage">The page to start appending from.</param>
            <param name="pageCount">The number of pages to append.</param>
            <param name="options">Specifies the merge options.</param>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.AppendedPage"/>s that were appended to the document.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Merge(System.String,System.String)">
            <summary>
            Merges two PDF documents together.
            </summary>
            <param name="firstDocumentFilePath">The physical file path to the first PDF document.</param>
            <param name="secondDocumentFilePath">The physical file path to the second PDF document.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> containing the pages from both PDF documents.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>One or both of the PDF files cannot be parsed because they are likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>One or both of the PDF files cannot be read because they are encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Merge(ceTe.DynamicPDF.Merger.PdfDocument,ceTe.DynamicPDF.Merger.PdfDocument)">
            <summary>
            Merges two PDF documents together.
            </summary>
            <param name="firstDocument">A <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class representing the first PDF document.</param>
            <param name="secondDocument">A <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class representing the second PDF document.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> containing the pages from both PDF documents.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>One or both of the PDF files cannot be parsed because they are likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Merge(System.String,ceTe.DynamicPDF.Merger.MergeOptions,System.String,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Merges two PDF documents together.
            </summary>
            <param name="firstDocumentFilePath">The physical file path to the first PDF document.</param>
            <param name="firstDocumentOptions">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options for the first PDF document.</param>
            <param name="secondDocumentFilePath">The physical file path to the second PDF document.</param>
            <param name="secondDocumentOptions">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options for the second PDF document.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> containing the pages from both PDF documents.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>One or both of the PDF files cannot be parsed because they are likely corrupt or invalid.</exception>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>One or both of the PDF files cannot be read because they are encrypted and the owner password is incorrect or not supplied.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.Merge(ceTe.DynamicPDF.Merger.PdfDocument,ceTe.DynamicPDF.Merger.MergeOptions,ceTe.DynamicPDF.Merger.PdfDocument,ceTe.DynamicPDF.Merger.MergeOptions)">
            <summary>
            Merges two PDF documents together.
            </summary>
            <param name="firstDocument">A <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class representing the first PDF document.</param>
            <param name="firstDocumentOptions">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options for the first PDF document.</param>
            <param name="secondDocument">A <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class representing the second PDF document.</param>
            <param name="secondDocumentOptions">A <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object specifying the merge options for the second PDF document.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Merger.MergeDocument"/> containing the pages from both PDF documents.</returns>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>One or both of the PDF files cannot be parsed because they are likely corrupt or invalid.</exception>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeDocument.DrawRootEntries(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Outputs the catalog entries to the <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to write the catalog entries.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeDocument.InitialPage">
            <summary>
            Gets or sets a value indicating the initial page of the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeDocument.InitialPageZoom">
            <summary>
            Gets or sets a value indicating the initial zoom of the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeDocument.XmpMetadata">
             <summary>
             Gets or sets the Xmp metadata for the PDF document.
             </summary>
            ^Lic.Merger.Ent.Prop
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.MergeOptions">
             <summary>
             Represents options for merging PDF documents.
             </summary>
             <remarks>Currently the only merge option is whether or not to preserve the form fields on the PDF being merged in.  
             Specifying true will keep the form fields on the merged PDF where specifying false will remove the form fields from the PDF.</remarks>
            ^MergeOptions 
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeOptions.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> class.
            </summary>
            <param name="mergeFormFields">A value indicating if form fields should be merged.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeOptions.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> class.
            </summary>
            <param name="mergeFormFields">A value indicating if form fields should be merged.</param>
            <param name="rootFormField">The root form field that all merged form fields will be placed under.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.MergeOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.FormFields">
            <summary>
            Gets or sets a value indicating if form fields should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.FormsXfaData">
            <summary>
            Gets or sets a value indicating if form XFA data should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.PageAnnotations">
            <summary>
            Gets or sets a value indicating if annotations should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.Outlines">
            <summary>
            Gets or sets a value indicating if outlines and bookmarks should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.DocumentInfo">
            <summary>
            Gets or sets a value indicating if document information should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.DocumentProperties">
            <summary>
            Gets or sets a value indicating if document properties should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.OpenAction">
            <summary>
            Gets or sets a value indicating if the documents opening action (initial page and zoom settings) should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.AllOtherData">
            <summary>
            Gets or sets a value indicating if all other document data should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.DocumentJavaScript">
            <summary>
            Gets or sets a value indicating if document level JavaScript should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.EmbeddedFiles">
            <summary>
            Gets or sets a value indicating if the Embedded files should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.PageLabelsAndSections">
            <summary>
            Gets or sets a value indicating if page labels and sections should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.XmpMetadata">
            <summary>
            Gets or sets a value indicating if Xmp Metadata should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.LogicalStructure">
            <summary>
            Gets or Sets the value indicating if logical structure should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.OutputIntent">
            <summary>
            Gets or Sets a value indication if OutputIntent should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.RootOutline">
            <summary>
            Gets or sets the root outline for imported outlines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.RootFormField">
            <summary>
            Gets or sets the root form field for imported form fields.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.OptionalContentInfo">
            <summary>
            Gets or sets the Output Content should be imported.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.All">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object with all options set to true.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.Append">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object that you would typically use when appending documents. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.MergeOptions.None">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Merger.MergeOptions"/> object with all options set to false.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfDocument">
             <summary>
             Represents a PDF document for import.
             </summary>
             <remarks>
             This class should be used when you will be referencing an existing PDF document more than once.  Using a 
             PDFDocument is more efficient than specifying a file path because the document will not need to 
             be parsed again on each subsequent reference.  This class is safe for multithreaded operations.
             </remarks>
            ^PdfDocument
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.#ctor(System.IO.Stream)">
             <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class.
             </summary>
             <param name="stream"><see cref="T:System.IO.Stream"/> object containing the PDF document data.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.#ctor(System.Byte[])">
             <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class.
             </summary>
             <param name="data">A byte array containing the PDF document data.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class.
             </summary>
             <param name="filePath">Physical file path of the PDF document.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.#ctor(System.IO.Stream,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class.
             </summary>
             <param name="stream"><see cref="T:System.IO.Stream"/> object containing the PDF document data.</param>
             <param name="password">Owner password of the encrypted PDF document.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.#ctor(System.Byte[],System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class.
             </summary>
             <param name="data">A byte array containing the PDF document data.</param>
             <param name="password">Owner password of the encrypted PDF document.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> class.
             </summary>
             <param name="filePath">Physical file path of the PDF document.</param>
             <param name="password">Owner password of the encrypted PDF document.</param>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfParsingException"/>The PDF file cannot be parsed because it is likely corrupt or invalid.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.PdfSecurityException"/>The PDF file cannot be read because it is encrypted and the owner password is incorrect or not supplied.</exception>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetPage(System.Int32)">
             <summary>
             Gets a page by page number.
             </summary>
             <param name="pageNumber">The page number to retrieve.</param>
             <returns>A <see cref="T:ceTe.DynamicPDF.Merger.PdfPage"/> object.</returns>
             <remarks>The first page is 1.</remarks>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetEncryptionInfo(System.String)">
            <summary>
            Gets the security information of the given PDF document.
            </summary>
            <param name="filePath">Physical file path of the PDF document.</param>
            <returns>The security information of the given PDF document.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetEncryptionInfo(System.Byte[])">
            <summary>
            Gets the security information of the given PDF document.
            </summary>
            <param name="data">A byte array containing the PDF document data.</param>
            <returns>The security information of the given PDF document.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetFonts">
            <summary>
            Gets the informaton of all the fonts present in a document.
            </summary>
            <returns>An array of <see cref="T:ceTe.DynamicPDF.Merger.FontInformation"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetXfaInfo">
            <summary>
            Gets the type of XFA in the given PDF document.
            </summary>
            <returns>The type of <see cref="T:ceTe.DynamicPDF.Merger.Forms.XfaInfo"/> present in the given PDF document.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.Attachments">
            <summary>
            Retrieves the attachment files in the PDFDocument.
            </summary>
            <returns>Contains the list of attachment files present in a pdf.</returns>
            <remarks><font color="red">NOTE: This method is obsolete.</font> Use getAttachments() method instead.</remarks>            
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetAttachments">
             <summary>
             Retrieves the attachment files in the PDF document.
             </summary>
            <returns>Contains the list of attachment files present in the pdf.</returns>      
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.SetDocumentInfo(ceTe.DynamicPDF.Document)">
             <summary>
             Sets the document info on the supplied <see cref="T:ceTe.DynamicPDF.Document"/> to match this document.
             </summary>
             <param name="document">A document to set.</param>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetText">
             <summary>
             Gets the text in all the pages.
             </summary>
             <returns>
             A string containing the text in all the pages.</returns>
             <remarks>This method can be used to extract the text in the same order the pdf operators are loaded. 
             Text extraction skips characters that are morethan 2 bytes.
             With some of the .Net runtimes (example: .Net Core 2.0), Text extraction will give the error "No data is available for encoding 1252. 
             For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.".
             To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
             </remarks>
            ^TextExtraction
            ^Lic.Merger.Pro.Method
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetImages">
             <summary>
             Returns an array of <see cref="T:ceTe.DynamicPDF.Merger.ImageInformation"/> objects of all the images present in the document.
             </summary>
             <remarks>
             This method returns image information only when the license key is applied and it will not work in evaluation mode.
             </remarks>
             <returns>
             An array of <see cref="T:ceTe.DynamicPDF.Merger.ImageInformation"/> objects of all the images present in the document.
             </returns>
            ^ImageExtraction
            ^Lic.Merger.Ent.Method
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetSignedSignatureFields">
             <summary>
             Gets the list of PdfSignatureField that are present in the document.
             </summary>
             <returns>Returns a list of <see cref="T:ceTe.DynamicPDF.Merger.Forms.PdfSignatureField"/> objects</returns>
            ^SignatureVerification
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfDocument.GetSecurityStore">
            <summary>
            Gets the Document Security Store (DSS) of the Pdf document.
            </summary>
            <returns>Returns <see cref="T:ceTe.DynamicPDF.Merger.SecurityStore"/> object</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Outlines">
             <summary>
             Gets the outlines of the PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Title">
             <summary>
             Gets the title property of the PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Author">
             <summary>
             Gets the author property of the PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Subject">
             <summary>
             Gets the subject property of the PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Keywords">
             <summary>
             Gets the keywords property of the PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.NeedsRendering">
            <summary>
            Get the Needs Rendering property of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Creator">
             <summary>
             Gets the creator property of the PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Tagged">
            <summary>
            Gets the Taging property of the  PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Signed">
            <summary>
            Gets the signed property of the  PDF document (only available in version 10.27+).
            </summary>
            <remarks>This property is only available with version 10.27 and later.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.SecurityInfo">
            <summary>
            Gets the security type of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Producer">
             <summary>
             Gets the producer property of the PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.XmpMetadata">
            <summary>
            Gets the xml metadata string.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.CustomProperties">
            <summary>
            Gets the custom properties of the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Form">
             <summary>
             Gets the AcroForm for the document.
             </summary>
            ^Lic.Merger.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.CollectionType">
            <summary>
            Gets a value indicating the collectionType of a Pdf document
            </summary>
            
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfDocument.Pages">
             <summary>
             Gets a collection of PDF pages for the document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfPage">
             <summary>
             Represents a page from an imported PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetNoteAnnotations">
            <summary>
            Gets the note annotations from the the PDF page.
            </summary>
            <returns>A array of note annotations present in the PDF page.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetDictionaryValue(System.String)">
            <summary>
            Returns the value of a given page dictionary key.
            </summary>
            <param name="key">The dictionaries key.</param>
            <returns>The dictionary key's value as a string.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetContents">
            <summary>
            Returns the uncompressed binary contents of the page.
            </summary>
            <returns>A byte array containing the pages contents.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetDimensions">
            <summary>
            Gets the page dimensions of the page.
            </summary>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageDimensions"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetFonts">
            <summary>
            Gets the informaton of all the fonts present in the page.
            </summary>
            <returns>An array of the <see cref="T:ceTe.DynamicPDF.Merger.FontInformation"/>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetText">
             <summary>
             Gets the text in the page.
             </summary>
             <returns>A string containing the text in the page.</returns>   
             <remarks>This method can be used to extract the text in the same order the pdf operators are loaded.
             Text extraction skips characters that are morethan 2 bytes.
             With some of the .Net runtimes (example: .Net Core 2.0), Text extraction will give the error "No data is available for encoding 1252. 
             For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.".
             To resolve this error refer the user manual page  <a href="Encoding Considerations.html">Encoding Considerations.</a>
             </remarks>
            ^PdfPage
            ^Lic.Merger.Pro.Method
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetText(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets the text in the specified rectangle of the page.
            </summary>
            <param name="x">X coordinate of the rectangle.</param>
            <param name="y">Y coordinate of the rectangle.</param>
            <param name="width">Width of the rectangle.</param>
            <param name="height">Height of the rectangle.</param>
            <returns>A string containing the text in the specified rectangle of the page.</returns>   
            <remarks>This method can be used to extract the text in the same order the pdf operators are loaded.
            Text extraction skips characters that are morethan 2 bytes.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPage.GetImages">
             <summary>
             Gets the informaton of all the images present in the page.
             </summary>
             <returns>
             An array of <see cref="T:ceTe.DynamicPDF.Merger.ImageInformation"/> object for all the images present in the page.
             </returns>
            ^PdfPage.GetImages
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfAnnotation">
             <summary>
             Represents an annotation resource.
             </summary>
            ^Lic.Merger.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.Contents">
            <summary>
            Gets the contents of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.Name">
            <summary>
            Gets the name of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.ModifiedDate">
            <summary>
            Gets the modifiedDate of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.Invisible">
            <summary>
            Gets the visiblity status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.Hidden">
            <summary>
            Gets the hide status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.Printable">
            <summary>
            Gets the print status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.NoZoom">
            <summary>
            Gets the zoom status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.NoRotate">
            <summary>
            Gets the zoom status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.NoView">
            <summary>
            Gets the view status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.ReadOnly">
            <summary>
            Gets the ReadOnly status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.Locked">
            <summary>
            Gets the lock status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.ToggleNoView">
            <summary>
            Gets the toggle view status of the annotation.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfAnnotation.LockedContents">
            <summary>
            Gets the lock status of the contents.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfPageList">
             <summary>
             Represents a collection of PDF pages.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.PdfPageList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.Merger.PdfPageList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:ceTe.DynamicPDF.Merger.PdfPageList"/></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfPageList.Count">
            <summary>
            Gets the number of PDF pages in the collection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfPageList.Item(System.Int32)">
            <summary>
            Gets a PDF page at the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.NonFullScreenPageMode">
            <summary>
            Specifies page mode when full screen mode is set on the document.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NonFullScreenPageMode.ShowNone">
            <summary>
            Outlines and Thumbnails toolbars are not shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NonFullScreenPageMode.ShowOutlines">
            <summary>
            Outlines toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NonFullScreenPageMode.ShowThumbnails">
            <summary>
            Thumbnails toolbar is shown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NonFullScreenPageMode.ShowOptionalContent">
            <summary>
            Optional content is shown.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.NumberingStyle">
            <summary>
            Specifies numbering style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NumberingStyle.Numeric">
            <summary>
            Numeric numbering (Arabic).
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NumberingStyle.AlphabeticLowerCase">
            <summary>
            Lower case alphabetic numbering.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NumberingStyle.AlphabeticUpperCase">
            <summary>
            Upper case alphabetic numbering.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NumberingStyle.RomanLowerCase">
            <summary>
            Lower case roman numerals.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NumberingStyle.RomanUpperCase">
            <summary>
            Upper case roman numerals.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.NumberingStyle.None">
            <summary>
            None specified.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.OutlineList">
             <summary>
             Represents a collection of outlines.
             </summary>
             /// <remarks>See the <a href="Outlines and BookMarks.html">Outlines and Bookmarks</a> topic for more on Outlines.</remarks>
            ^OutlineList
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.OutlineList.Add(System.String)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.Outline"/> object to the outline list.
            </summary>
            <param name="text">Text of the outline.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Outline"/> object that is created.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.OutlineList.Add(System.String,ceTe.DynamicPDF.Action)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.Outline"/> object to the outline list.
            </summary>
            <param name="text">Text of the outline.</param>
            <param name="action">Action or destination of the outline.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Outline"/> object that is created.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.OutlineList.Add(ceTe.DynamicPDF.Merger.PdfOutline)">
             <summary>
             Adds an imported outline along with its children to the outline list.
             </summary>
             <remarks>
             Use the overloaded method with a the addChildOutline parameter set to false if you do not want to add the child outlines.
             </remarks>
             <param name="outline">Imported outline to add.</param>
             <returns>The <see cref="T:ceTe.DynamicPDF.Outline"/> object that is created.</returns>
            ^Lic.Merger.Std.Method
        </member>
        <member name="M:ceTe.DynamicPDF.OutlineList.Add(ceTe.DynamicPDF.Merger.PdfOutline,System.Boolean)">
             <summary>
             Adds an imported outline to the outline list.
             </summary>
             <param name="outline">Imported outline to add.</param>
             <param name="addChildOutline">Specifies if the child outlines should be added as well.</param>
             <returns>The <see cref="T:ceTe.DynamicPDF.Outline"/> object that is created.</returns>
            ^Lic.Merger.Std.Method
        </member>
        <member name="M:ceTe.DynamicPDF.OutlineList.Add(ceTe.DynamicPDF.Merger.PdfOutlineList)">
             <summary>
             Adds all outlines from an imported outline list to the outline list.
             </summary>
             <param name="outlines">Imported outline list to add.</param>
            ^Lic.Merger.Std.Method
        </member>
        <member name="M:ceTe.DynamicPDF.OutlineList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <b>OutlineList</b>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <b>OutlineList</b></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.OutlineList.Count">
            <summary>
            Gets the number of outlines in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutlineList.Item(System.Int32)">
            <summary>
            Gets the <b>Outline</b> object at the specified index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.OutputIntentList">
             <summary>
             Represents a collection of output intents.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.OutputIntentList.Add(ceTe.DynamicPDF.OutputIntent)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.OutputIntent"/> object to the output intent list.
            </summary>
            <param name="outputIntent">The <see cref="T:ceTe.DynamicPDF.OutputIntent"/> object to be added.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntentList.Count">
            <summary>
            Gets the number of output intents in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.OutputIntentList.Item(System.Int32)">
            <summary>
            Gets the output intent object at the specified index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageBoundary">
            <summary>
            Specifies the boundaries of a page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageBoundary.MediaBox">
            <summary>
            MediaBox
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageBoundary.CropBox">
            <summary>
            CropBox
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageBoundary.BleedBox">
            <summary>
            BleedBox
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageBoundary.TrimBox">
            <summary>
            TrimBox
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageBoundary.ArtBox">
            <summary>
            ArtBox
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.AnchorGroup">
             <summary>
             Represents a group of elements that will be anchored. 
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Group">
             <summary>
             Represents a group of page elements.
             </summary>
             <remarks>This class can be used to collect many page elements together and add them to the page all at once.  
             Every page element that you add to the group will be added to the page when the group is added to the page.</remarks>
            ^Group
            ^Lic.Generator.Comm
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.IPageElementContainer">
            <summary>
            Defines a container of page elements.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.IPageElementContainer.GetPageElementByID(System.String)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElement"/> with the given ID.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Group.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Group"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Group.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the group to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the group's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Group.Insert(System.Int32,ceTe.DynamicPDF.PageElement)">
            <summary>
            Inserts a page element to the group.
            </summary>
            <param name="index">The Zero-based index it which the page element should be inserted.</param>
            <param name="pageElement"><see cref="T:ceTe.DynamicPDF.PageElement"/> object to insert in the group.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Group.Add(ceTe.DynamicPDF.PageElement)">
            <summary>
            Adds a page element to the group.
            </summary>
            <param name="pageElement"><see cref="T:ceTe.DynamicPDF.PageElement"/> object to add to the group.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Group.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <b>Group</b>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <b>Group</b></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Group.GetPageElementByID(System.String)">
            <summary>
            Returns a page element with the given ID.
            </summary>
            <param name="id">ID of the page element to find.</param>
            <returns><b>PageElement</b> with the given ID.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Group.HasPageElements">
            <summary>
            Returns a value indicating if there are any <see cref="P:ceTe.DynamicPDF.PageElements.Group.PageElements"/> in the group.
            </summary>
            <returns>Value indication whether or not there are <see cref="P:ceTe.DynamicPDF.PageElements.Group.PageElements"/> in the group.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Group.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElement"/> object with the given ID.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Group.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElement"/> object at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Group.Count">
            <summary>
            Gets the number of page elements in the group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Group.HasElements">
            <summary>
            Gets a value indicating whether the group has any elements.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.AnchorGroup.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Align,ceTe.DynamicPDF.VAlign)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.AnchorGroup"/> class.
            </summary>
            <param name="width">Width of the anchor group.</param>
            <param name="height">Height of the anchor group.</param>
            <param name="align">Alignment of the anchor group.</param>
            <param name="vAlign">Vertical Alignment of the anchor group.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.AnchorGroup.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the anchor group to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the anchor group's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AnchorGroup.Width">
            <summary>
            Gets or sets the width of the anchor group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AnchorGroup.Height">
            <summary>
            Gets or sets the height of the anchor group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AnchorGroup.Align">
            <summary>
            Gets or sets the alignment of the anchor group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AnchorGroup.VAlign">
            <summary>
            Gets or sets the vertical alignment of the anchor group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AnchorGroup.AnchorTo">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.AnchorGroup.AnchorTo"/> object to use for the anchor group.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.AnchorTo">
            <summary>
            Specifies the types of anchors.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.AnchorTo.Margins">
            <summary>
            Anchors to the margins of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.AnchorTo.Edges">
            <summary>
            Anchors to the edges of the page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.AreaGroup">
             <summary>
             Represents a group of page elements with an area.
             </summary>
             <remarks>This class can be used to collect many page elements together and add them to the page all at once. 
             Every page element that you add to the group will be added to the page when the group is added to the page.</remarks>
            ^AreaGroup
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.AreaGroup.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.AreaGroup"/> class.
            </summary>
            <param name="width">Width of the area group.</param>
            <param name="height">Height of the area group.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AreaGroup.X">
            <summary>
            Gets the X coordinate of the area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AreaGroup.Y">
            <summary>
            Gets the Y coordinate of the area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AreaGroup.Width">
            <summary>
            Gets or sets the width of the area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.AreaGroup.Height">
            <summary>
            Gets or sets the height of the area group.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BackgroundImage">
             <summary>
             Represents a background image.
             </summary>
             <remarks>This class can be used to place an image on the page that will be stretched to the dimensions of the page.
             If an image will be used more than once, please see the <a href="Image ReUse.html">Image Reuse</a> topic.</remarks>
            ^BackgroundImage
            ^Lic.Generator.Pro.64
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BackgroundImage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BackgroundImage"/> class.
            </summary>
            <param name="filePath">The physical file path to the background image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BackgroundImage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BackgroundImage"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BackgroundImage.#ctor(ceTe.DynamicPDF.Imaging.ImageData)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BackgroundImage"/> class.
            </summary>
            <param name="imageData"><see cref="P:ceTe.DynamicPDF.PageElements.BackgroundImage.ImageData"/> object containing the image data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BackgroundImage.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the background image to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the background image's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BackgroundImage.ImageData">
            <summary>
            Get the background image's <see cref="P:ceTe.DynamicPDF.PageElements.BackgroundImage.ImageData"/> object.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BackgroundImage.LeftPadding">
            <summary>
            Get or set the left padding of the background image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BackgroundImage.RightPadding">
            <summary>
            Get or set the right padding of the background image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BackgroundImage.TopPadding">
            <summary>
            Get or set the top padding of the background image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BackgroundImage.BottomPadding">
            <summary>
            Get or set the bottom padding of the background image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BackgroundImage.UseMargins">
            <summary>
            Get or set a value indicating if the pages margins should be used when calculating the placement of the background image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Calculate">
             <summary>
             Specifies calculation type for barcodes.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.Calculate.Yes">
            <summary>
            Always calculate.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.Calculate.No">
            <summary>
            Never calculate.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.Calculate.Auto">
            <summary>
            Automatically detect when to calculate.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Codabar">
             <summary>
             Represents a Codabar barcode.
             </summary>
             <remarks>This class can be used to place a Codabar barcode on a page.</remarks>
            ^Codabar
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Codabar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Codabar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Codabar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Codabar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Codabar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Codabar"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Codabar.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Code128">
             <summary>
             Represents a Code 128 barcode.
             </summary>
             <remarks>This class can be used to place a Code 128 barcode on a page.</remarks>
            ^Code128
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code128"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <remarks>Code sets can be specified along with data, in order to do this <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ProcessTilde"/> property needs to be set to <b>true</b>.
            Example value: "~BHello ~AWORLD 1~C2345", where ~A, ~B and ~C representing code sets A, B and C respectively.
            However if any inline code set has invalid characters it will be shifted to an appropriate code set.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code128"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
            <remarks>Code sets can be specified along with data, in order to do this <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ProcessTilde"/> property needs to be set to <b>true</b>.
            Example value: "~BHello ~AWORLD 1~C2345", where ~A, ~B and ~C representing code sets A, B and C respectively.
            However if any inline code set has invalid characters it will be shifted to an appropriate code set.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code128"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
            <remarks>Code sets can be specified along with data, in order to do this <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ProcessTilde"/> property needs to be set to <b>true</b>.
            Example value: "~BHello ~AWORLD 1~C2345", where ~A, ~B and ~C representing code sets A, B and C respectively.
            However if any inline code set has invalid characters it will be shifted to an appropriate code set.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code128"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <remarks>Code sets can be specified along with data, in order to do this <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ProcessTilde"/> property needs to be set to <b>true</b>.
            Example value: "~BHello ~AWORLD 1~C2345", where ~A, ~B and ~C representing code sets A, B and C respectively.
            However if any inline code set has invalid characters it will be shifted to an appropriate code set.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code128"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
            <remarks>Code sets can be specified along with data, in order to do this <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ProcessTilde"/> property needs to be set to <b>true</b>.
            Example value: "~BHello ~AWORLD 1~C2345", where ~A, ~B and ~C representing code sets A, B and C respectively.
            However if any inline code set has invalid characters it will be shifted to an appropriate code set.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code128"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
            <remarks>Code sets can be specified along with data, in order to do this <see cref="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ProcessTilde"/> property needs to be set to <b>true</b>.
            Example value: "~BHello ~AWORLD 1~C2345", where ~A, ~B and ~C representing code sets A, B and C respectively.
            However if any inline code set has invalid characters it will be shifted to an appropriate code set.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code128.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ProcessTilde">
            <summary>
            Gets or Sets a boolean indicating whether to process the tilde character.
            </summary>
            <remarks>If <b>true</b> checks for fnc1 (~1) character in the barcode Value and checks for the inline code sets if present in the data to process.
            Example value: "~BHello ~AWORLD 1~C2345", where ~A, ~B and ~C representing code sets A, B and C respectively.
            However if any inline code set has invalid characters it will be shifted to an appropriate code set.
            "\" is used as an escape character to add ~.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.LookAhead">
            <summary>
            Gets or sets the number of characters to look ahead when determining the best mode.
            </summary>
            <remarks>This is used initially and when switching from Mode C.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.ContinueToNextSymbol">
            <summary>
            Gets or sets if the barcode will be continued to another Code 128 barcode.
            </summary>
            <remarks>If <b>true</b> a FNC2 code will be the first (second if IsUCCEAN128 is <b>true</b>) character in the barcode.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Code128.IsUCCEAN128">
            <summary>
            Gets or sets if the barcode is a UCC / EAN Code 128 barcode.
            </summary>
            <remarks>If <b>true</b> a FNC1 code will be the first character in the barcode.</remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Code25">
             <summary>
             Represents a Code 2 of 5 barcode.
             </summary>
             <remarks>This class can be used to place a Code 2 of 5 barcode on a page.</remarks>
            ^Code25
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code25.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Code39">
             <summary>
             Represents a Code 3 of 9 barcode.
             </summary>
             <remarks>This class can be used to place a Code 3 of 9 barcode on a page.</remarks>
            ^Code39
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code39"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code39"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code39"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code39"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code39"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Code39"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Code39.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Compaction">
             <summary>
             The type of Compaction to encode.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.Compaction.Byte">
            <summary>
            Byte Compaction.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.Compaction.Text">
            <summary>
            Text Compaction.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.Compaction.Numeric">
            <summary>
            Numeric Compaction.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.Compaction.Automatic">
            <summary>
            All Compactions.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13">
             <summary>
             Represents an EAN/JAN 13 barcode.
             </summary>
             <remarks>This class can be used to place an EAN/JAN 13 barcode on a page.</remarks>
            ^Ean13
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2">
             <summary>
             Represents an EAN/JAN 13, 2 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an EAN/JAN 13, 2 digit supplement barcode on a page.</remarks>
            ^Ean13Sup2
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue">The supplemental value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup2.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5">
             <summary>
             Represents an EAN/JAN 13, 5 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an EAN/JAN 13, 5 digit supplement barcode on a page.</remarks>
            ^Ean13Sup5
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Ean13Sup5.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8">
             <summary>
             Represents an EAN/JAN 8 barcode.
             </summary>
             <remarks>This class can be used to place an EAN/JAN 8 barcode on a page.</remarks>
            ^Ean8
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2">
             <summary>
             Represents an EAN/JAN 8, 2 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an EAN/JAN 8, 2 digit supplement barcode on a page.</remarks>
            ^Ean8Sup2
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup2.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5">
             <summary>
             Represents an EAN/JAN 8, 5 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place an EAN/JAN 8, 5 digit supplement barcode on a page.</remarks>
            ^Ean8Sup5
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Ean8Sup5.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection">
             <summary>
             The level of error correction to use.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level0">
            <summary>
            Error Correction Level 0.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level1">
            <summary>
            Error Correction Level 1.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level2">
            <summary>
            Error Correction Level 2.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level3">
            <summary>
            Error Correction Level 3.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level4">
            <summary>
            Error Correction Level 4.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level5">
            <summary>
            Error Correction Level 5.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level6">
            <summary>
            Error Correction Level 6.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level7">
            <summary>
            Error Correction Level 7.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Level8">
            <summary>
            Error Correction Level 8.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.ErrorCorrection.Auto">
            <summary>
            Error Correction Auto.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25">
             <summary>
             Represents an interleaved 2 of 5 barcode.
             </summary>
             <remarks>This class can be used to place an interleaved 2 of 5 barcode on a page.</remarks>
            ^Interleaved25
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.#ctor(System.String,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="showText"><b>true</b> to display value of barcode as text. Otherwise, display barcode only.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="height">The height of the barcode.</param>
            <param name="xDimension">The XDimension of the barcode.</param>
            <param name="font">The font to use when displaying text.</param>
            <param name="fontSize">The font size to use when displaying text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Interleaved25.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.Postnet">
             <summary>
             Represents a Postnet barcode.
             </summary>
             <remarks>This class can be used to place a Postnet barcode on a page.</remarks>
            ^Postnet
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Postnet.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.Postnet"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Postnet.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.Postnet.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.Postnet.AppendCheckDigit">
            <summary>
            Gets or sets a value specifying if the check digit should calculated.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionA">
             <summary>
             Represents a UPC Version A barcode.
             </summary>
             <remarks>This class can be used to place a UPC Version A barcode on a page.</remarks>
            ^UpcVersionA
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionA.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionA"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionA.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionA"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionA.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionA.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2">
             <summary>
             Represents a UPC Version A, 2 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place a UPC Version A, 2 digit supplement barcode on a page.</remarks>
            ^UpcVersionASup2
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup2.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5">
             <summary>
             Represents a UPC Version A, 5 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place a UPC Version A, 5 digit supplement barcode on a page.</remarks>
            ^UpcVersionASup5
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionASup5.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionE">
             <summary>
             Represents a UPC Version E barcode.
             </summary>
             <remarks>This class can be used to place a UPC Version E barcode on a page.</remarks>
            ^UpcVersionE
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionE.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionE"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionE.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionE"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionE.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionE.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2">
             <summary>
             Represents a UPC Version E, 2 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place a UPC Version E, 2 digit supplement barcode on a page.</remarks>
            ^UpcVersionESup2
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup2.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5">
             <summary>
             Represents a UPC Version E, 5 digit supplement barcode.
             </summary>
             <remarks>This class can be used to place a UPC Version E, 5 digit supplement barcode on a page.</remarks>
            ^UpcVersionESup5
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5"/> class.
            </summary>
            <param name="value">The value (including supplemental value) of the barcode.</param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5.#ctor(System.String,System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5.#ctor(System.String,System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5"/> class.
            </summary>
            <param name="value">The value of the barcode.</param>
            <param name="supplementalValue"></param>
            <param name="x">The X coordinate of the barcode.</param>
            <param name="y">The Y coordinate of the barcode.</param>
            <param name="scale">The scale of the barcode.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5.GetSymbolWidth">
            <summary>
            Returns the width required to display the full barcode.
            </summary>
            <returns>A value representing the required width.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5.DrawBarCode(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the barcode to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.BarCoding.UpcVersionESup5.SupplementalValue">
            <summary>
            Gets or sets the supplemental value of the barcode.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Bookmark">
             <summary>
             Represents a bookmark.
             </summary>
             <remarks>This class can be used to place bookmarks on the PDF document.  These bookmarks will be displayed to the right of 
             the PDF document.  See the <a href="Outlines and BookMarks.html">Outlines and Bookmarks</a> topic for more details on bookmarks.
             <p/><b>NOTE:</b> This page element cannot be used within a table cell, or transformation group.</remarks>
            ^Bookmark
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Bookmark.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Bookmark"/> class.
            </summary>
            <param name="text">Text of the bookmark.</param>
            <param name="x">X coordinate of the bookmark.</param>
            <param name="y">Y coordinate of the bookmark.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Bookmark.#ctor(System.String,System.Single,System.Single,ceTe.DynamicPDF.Outline)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Bookmark"/> class.
            </summary>
            <param name="text">Text of the bookmark.</param>
            <param name="x">X coordinate of the bookmark.</param>
            <param name="y">Y coordinate of the bookmark.</param>
            <param name="parentOutline"><see cref="T:ceTe.DynamicPDF.Outline"/> object that the bookmark will appear under.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Bookmark.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the bookmark to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the bookmark's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Bookmark.Text">
            <summary>
            Gets or sets the text of the bookmark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Bookmark.X">
            <summary>
            Gets of sets the X coordinate of the bookmark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Bookmark.Y">
            <summary>
            Gets or sets the Y coordinate of the bookmark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Bookmark.Style">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextStyle"/> enumeration that represents the text style of the bookmark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Bookmark.ParentOutline">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Outline"/> object the bookmark will appear under.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Bookmark.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Bookmark.Color"/> object to use for the text of the bookmark.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Cell">
             <summary>
             <font color="red">Obsolete.</font> Represents a cell in the Table.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font> Use <see cref="T:ceTe.DynamicPDF.PageElements.Cell2"/> class instead.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Text">
            <summary>
            Gets or sets the text to be displayed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Element">
            <summary>
            Gets or sets the page element contained in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Padding">
            <summary>
            Gets or sets the padding of the cell.  By default this value is set to float.MinValue.  Being set to 'Not a Number' implies that the cell's padding will be pulled from the padding for the row containing that cell. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.FontSize">
            <summary>
            Gets or sets the font size to use for the text in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Cell.Font"/> object to use for the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Row">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Cell.Row"/> that the cell is contained in.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.ColumnIndex">
            <summary>
            Gets the index of the <see cref="T:ceTe.DynamicPDF.PageElements.Column"/> in which the cell begins.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.ColumnSpan">
            <summary>
            Gets or sets the number of columns that the cell spans.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.RowSpan">
            <summary>
            Gets or sets the number of rows that the cell spans.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Width">
            <summary>
            Gets the width of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Height">
            <summary>
            Gets the height of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the background of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.CellAlign"/> enumeration to use for the horizontal alignment of the text in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.VAlign">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.CellVAlign"/> enumeration to use for the vertical alignment of the text in the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.AutoLeading">
            <summary>
            Gets or sets whether the leading of the cell should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.PageElements.Cell.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Leading">
            <summary>
            Gets or sets the leading for the text of the cell.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.PageElements.Cell.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indent for the paragraphs of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the cell.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.RightToLeft">
            <summary>
            Gets or sets a value specifying whether the text in the cell will be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Underline">
            <summary>
            Gets or sets a value specifying whether the text in the cell will be underlined. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.Tag">
             <summary>
             Gets or sets the structure element of the angle element.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Cell.TagOrder">
            <summary>
            Gets or sets the structure element order of the angle element.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.CellList">
             <summary>
             <font color="red">Obsolete.</font> Represents a list of cells.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font> Use <see cref="T:ceTe.DynamicPDF.PageElements.Cell2List"/> class instead.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <param name="font">Font for the text in the cell.</param>
            <param name="size">Font size for the text in the cell.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String,ceTe.DynamicPDF.Font,System.Single,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <param name="font">Font for the text in the cell.</param>
            <param name="size">Font size for the text in the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String,ceTe.DynamicPDF.Font,System.Single,System.Int32,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <param name="font">Font for the text in the cell.</param>
            <param name="size">Font size for the text in the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <param name="rowSpan">Number of rows that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String,System.Int32,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <param name="rowSpan">Number of rows that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <param name="font">Font for the text in the cell.</param>
            <param name="size">Font size for the text in the cell.</param>
            <param name="textColor">Color for the text in the cell.</param>
            <param name="backColor">Background color for the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(System.String,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Int32,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <param name="text">Text to be displayed in the cell.</param>
            <param name="font">Font for the text in the cell.</param>
            <param name="size">Font size for the text in the cell.</param>
            <param name="textColor">Color for the text in the cell.</param>
            <param name="backColor">Background color for the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <param name="rowSpan">Number of rows that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any text to a cell in a table.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(ceTe.DynamicPDF.PageElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/> with the specified page element.
            </summary>
            <param name="element">Page element to be displayed in the cell.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any page element to the table.  Note that a page element should only be added to the cell directly if that page element impliments <see cref="T:ceTe.DynamicPDF.PageElements.IArea"/>.  If the page element does not impliment IArea then it is recommended you place your page element(s) in an <see cref="T:ceTe.DynamicPDF.PageElements.AreaGroup"/>.  This will assuree that the row will adjust to the height of the page element as needed.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(ceTe.DynamicPDF.PageElement,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/> with the specified page element.
            </summary>
            <param name="element">Page element to be displayed in the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any page element to the table.  Note that a page element should only be added to the cell directly if that page element impliments <see cref="T:ceTe.DynamicPDF.PageElements.IArea"/>.  If the page element does not impliment IArea then it is recommended you place your page element(s) in an <see cref="T:ceTe.DynamicPDF.PageElements.AreaGroup"/>.  This will assuree that the row will adjust to the height of the page element as needed.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.Add(ceTe.DynamicPDF.PageElement,System.Int32,System.Int32)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/> with the specified page element.
            </summary>
            <param name="element">Page element to be displayed in the cell.</param>
            <param name="colSpan">Number of columns that the cell will span.</param>
            <param name="rowSpan">Number of rows that the cell will span.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> object.</returns>
            <remarks>This method is used to add any page element to the table.  Note that a page element should only be added to the cell directly if that page element impliments <see cref="T:ceTe.DynamicPDF.PageElements.IArea"/>.  If the page element does not impliment IArea then it is recommended you place your page element(s) in an <see cref="T:ceTe.DynamicPDF.PageElements.AreaGroup"/>.  This will assuree that the row will adjust to the height of the page element as needed.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CellList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Cell"/> at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CellList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.AreaSeries">
             <summary>
             Base class from which date-time and indexed area series are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.LegendXYSeries">
             <summary>
             This class provides the base class from which all XYSeries are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYSeries">
             <summary>
             The base class from which the legends of the XYSeries and StackedSeries are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LegendXYSeries.Name">
            <summary>
            Gets the name of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LegendXYSeries.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.LegendXYSeries.Color"/> object to use for the color of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LegendXYSeries.LegendLabel">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.LegendXYSeries.LegendLabel"/> object to use for the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.AreaSeries.ValueFormat">
            <summary>
            Gets or sets the value Format String of the area series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.AreaSeries.DataLabel">
            <summary>
             Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> of the area series. This is the
            default data label for the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.AreaSeries.Marker">
            <summary>
             Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.AreaSeries.Marker"/> of the area series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue">
             <summary>
             Represents an AreaValue
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue.DataLabel">
            <summary>
             Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> of the area value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue.Value">
            <summary>
            Gets the value of the area value.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValueList">
             <summary>
             Represents a list of AreaValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValueList.Count">
            <summary>
            Gets the total number of area values in the area value list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValueList.Item(System.Int32)">
            <summary>
            Gets the area value from the area value list based on the given index.
            </summary>
            <param name="index">area value Index</param>
            <returns>The given index areaValue</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axis">
             <summary>
             Base class from which x and y axes are derived.
             </summary>
             <remarks> When adding a series to the SeriesList, an axis is created. Maximum 
             and minimum values and intervals for the axis do not need to be set, as they are calculated based on the given data. Each series will 
             have a specific type of axis.</remarks>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axis.Offset">
            <summary>
            Gets or sets the offset of the axis. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axis.LineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the line color of the axis.	
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axis.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axis.LineStyle"/> object specifying the line style of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axis.LineWidth">
            <summary>
            Gets or sets the line width of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axis.LabelOffset">
            <summary>
            Gets or sets the label offset of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axis.Visible">
            <summary>
             Gets or sets the visible status of the axis. By default it is true. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axis.LabelFormat">
            <summary>
            Gets or sets the format of the labels.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabel">
             <summary>
             Base class from which all axis labels are derived.
             </summary>
             <remarks> If the AutoLayout property of the chart is set to true, 
             XAxisLabels and YAxisLabels are created automatically based on the given data.</remarks>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabel.Text">
            <summary>
            Gets or sets the text of the axis label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabel.Font"/> object to use for the text of the axis label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabel.FontSize">
            <summary>
            Gets or sets the font size for the text of the axis label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabel.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the axis label.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList">
             <summary>
             Base class from which all axis label lists are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.Font"/> to use for the axis label list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.FontSize">
            <summary>
            Gets or sets the font size of the axis label list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the axis label list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.AutoLabels">
            <summary>
            Gets or sets the auto creation status of the axis label list. By default it is true.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.Count">
            <summary>
            Gets the number of elements actually contained.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.Visible">
            <summary>
            Gets or sets the axis label list visible status. By default it is true.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.WrapText">
            <summary>
            Gets or sets the WrapText property of the axis label list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.AxisLabelList.MaximumLabelWidth">
            <summary>
            Sets the maximum width of the axis label.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.BarSeries">
             <summary>
             Base class from which date-time and indexed bar series are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.BarSeries.BorderWidth">
            <summary>
            Gets or sets the border width of the bar series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.BarSeries.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the border of the bar series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.BarSeries.DataLabel">
            <summary>
             Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> to use for the data label of the bar series. This is the
            default data label for the series.
            </summary>        
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.BarSeries.ValueFormat">
            <summary>
            Gets or sets the format to use for the value of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue">
             <summary>
             Base class from which date-time and indexed bar values are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue.Value">
            <summary>
            Gets the value of the bar value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue.Color"/> to use for the color of the bar value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> to use for the data label of the bar value.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValueList">
             <summary>
             Base class from which date-time and indexed bar value lists are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.BarValueList.Count">
            <summary>
            Gets the number of bar values actually contained in the bar value list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.BarValueList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue"/> at the given index. 
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeriesElementBase">
             <summary>
              Base class from which stacked series elements are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesElement">
             <summary>
             The base class from which the SeriesElements are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesElement.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesElement.Color"/> object to use for the color of the SeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesElement.Name">
            <summary>
            Gets the name of the SeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesElement.LegendLabel">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesElement.LegendLabel"/> of the SeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeriesElementBase.ValueFormat">
            <summary>
             Gets or sets the format to use for the value of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> object.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Chart">
             <summary>
             Represents a chart page element. 
             </summary>
             <remarks> By default, the AutoLayout property of the chart is set to true.  
             Being set to true indicates that the X, Y, Width and Height properties for all 
             the chart elements are calculated automatically. </remarks>
            ^Chart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Chart.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Chart"/> class. 
            </summary>
            <param name="x">X coordinate of the chart.</param>
            <param name="y">Y coordinate of the chart.</param>
            <param name="width">Width of the chart.</param>
            <param name="height">Height of the chart.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Chart.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Chart"/> class. 
            </summary>
            <param name="x">X coordinate of the chart.</param>
            <param name="y">Y coordinate of the chart.</param>
            <param name="width">Width of the chart.</param>
            <param name="height">Height of the chart.</param>
            <param name="font"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Chart.Font"/> for the text in the chart.</param>
            <param name="fontSize">Size for the text in the chart.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text in the chart.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Chart.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the chart to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object. 
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the chart's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Chart.Layout">
            <summary>
            Arranges all of the elements of the chart automatically.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.X">
            <summary>
            Gets or sets the x coordinate of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.Y">
            <summary>
            Gets or sets the y coordinate of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.Width">
            <summary>
            Gets or sets the width of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.Height">
            <summary>
            Gets or sets the height of the chart. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.PrimaryPlotArea">
            <summary>
            Gets the Default PlotArea of the chart. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.LeftPadding">
            <summary>
            Gets or sets the leftPadding of the chart.	
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.RightPadding">
            <summary>
            Gets or sets the rightPadding of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.TopPadding">
            <summary>
            Gets or sets the topPadding of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.BottomPadding">
            <summary>
            Gets or sets the bottomPadding of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.ChartLegendSpacing">
             <summary>
            Gets or sets the chartLegendSpacing of the chart.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.FooterTitles">
            <summary>
            Gets the footer <see cref="T:ceTe.DynamicPDF.PageElements.Charting.TitleList"/> in the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.HeaderTitles">
            <summary>
            Gets the header <see cref="T:ceTe.DynamicPDF.PageElements.Charting.TitleList"/> in the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.PlotAreas">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PlotAreaList"/> in the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.Legends">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.LegendList"/> in the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Chart.Font"/> to use for the text in the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.FontSize">
            <summary>
            Gets or sets the font size of the text in the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.TextColor">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the text in the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the background of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the border of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.BorderWidth">
            <summary>
            Gets or sets the border width of the chart.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.AutoLayout">
            <summary>
            Gets or sets whether elements should be arranged automatically on the chart or not.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Chart.BorderStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> to use for the border style of the chart.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.ColumnSeries">
             <summary>
             Base class from which DateTime and IndexedColumnSeries are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.ColumnSeries.BorderWidth">
            <summary>
            Gets or sets the border width of the column series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.ColumnSeries.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the border of the column series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.ColumnSeries.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> to use for the data label of the column series. This is the
            default data label for the series.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.ColumnSeries.ValueFormat">
            <summary>
            Gets or sets the format to use for the value of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> object. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue">
             <summary>
             Base class from which DateTime and IndexedColumnValues are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue.Value">
            <summary>
            Gets the value of the column value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue.Color"/> to use for the color of the column value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> to use for the data label of the column value.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValueList">
             <summary>
             Base class from which DateTime and IndexedColumnValue lists are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValueList.Count">
            <summary>
            Gets the number of column values actually contained in the column value list. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValueList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue"/> object at the given index. 
            </summary>
            <param name="index">Position of the required column value. </param>
            <returns> the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue"/> object. </returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries">
             <summary>
             Represents a DateTime100PercentStackedAreaSeries.
             </summary>
            ^DateTime100PercentStackedAreaSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentAreaSeries">
             <summary>
              Represents a Stacked100PercentAreaSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentSeries">
             <summary>
             Represents a Stacked100PercentSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeries">
             <summary>
             The base class from which the StackedSeries are derived. 
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeries.Count">
            <summary>
            Gets the number of StackedSeriesElements actually contained in the StackedSeries.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.#ctor">
             <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries"/> object.
             </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the  dateTime 100Percent stacked area series.</param>
            <param name="yAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the dateTime 100Percent stacked area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the  eateTime 100Percent stacked area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the dateTime 100Percent stacked area series. </param>
            <param name="legend">Legend of the dateTime 100Percent stacked area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the dateTime 100Percent stacked area series.  </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement"/> object to the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries"/> elements list.
            </summary>
            <param name="element">DateTime100PercentStackedAreaSeriesElement.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement"/> object at the given index.
            </summary>
            <param name="index">index position of the required Date Time 100Percent stacked area Series element </param>
            <returns>DateTime100PercentStackedAreaSeriesElement </returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement">
             <summary>
             Represents a DateTime100PercentStackedAreaSeriesElement.
             </summary>
            ^DateTime100PercentStackedAreaSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentAreaSeriesElement">
             <summary>
             Represents a Stacked100PercentAreaSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentSeriesElement">
             <summary>
             Represents a Stacked100PercentSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentSeriesElement.PercentageFormat">
            <summary>
            Gets or sets the format to use for the percentage of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> object.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentAreaSeriesElement.Marker">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentAreaSeriesElement.Marker"/> of the Stacked100PercentAreaSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentAreaSeriesElement.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> object to use for the DataLabel of the stacked 100Percent series element. This is the
            default data label for the series element.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the  <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the  <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement"/> object.
            
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime 100Percent stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/>of the dateTime 100Percent stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/>of the dateTime 100Percent stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime 100Percent stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked area series element.</param>
            <param name="marker"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/>of the dateTime 100Percent stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked areaSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/>of the dateTime 100Percent stacked area series element. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime 100Percent stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/>of the dateTime 100Percent stacked area series element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedAreaSeriesElement.Values">
            <summary>
            Gets the DateTime100PercentStackedAreaValueList from the DateTime100PercentStackedAreaSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue">
             <summary>
             Represents a DateTime100PercentStackedAreaValue.
             </summary>
            ^DateTime100PercentStackedAreaValueChart
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValue">
             <summary>
             Represents a Stacked100PercentAreaValue.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValue.DataLabel">
            <summary>
            Gets or sets the DataLabel of the Stacked100percentAreaValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValue.Value">
            <summary>
            Gets the value of the Stacked100percentAreaValue.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue"/> object.
            </summary>
            <param name="value1">The value of dateTime 100Percent stacked area value. </param>
            <param name="position">The position of the dateTime 100Percent stacked area value. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue.Position">
            <summary>
            Gets the position of the DateTime100PercentStackedAreaValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValueList">
             <summary>
             Represents a DateTime100PercentStackedAreaValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValueList">
             <summary>
             Represents a list of the Stacked100PercentAreaValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValueList.Item(System.Int32)">
            <summary>
            Gets the Stacked100PercentAreaValue from the Stacked100PercentAreaValueList based on the given index.
            </summary>
            <returns>Stacked100PercentAreaValue in the specified index.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValueList.Count">
            <summary>
            Gets the total number of Stacked100PercentAreaValues in the Stacked100PercentAreaValueList.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue"/> object to the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValueList"/> object.
            </summary>
            <param name="value1">Value of the dateTime 100Percent stacked area value. </param>
            <param name="obj">Position of the dateTime 100Percent stacked area value. </param>
            <returns> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedAreaValueList"/> object.
            </summary>
            <param name="areaValue"> the dateTime 100Percent stacked area value.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries">
             <summary>
             Represents a DateTime100PercentStackedBarSeries.
             </summary>
            ^DateTime100PercentStackedBarSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentBarSeries">
             <summary>
             Represents a Stacked100PercentBarSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries"/> class.
            </summary>
            <param name="percentageXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/>of the dateTime 100Percent stacked barSeries.</param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/>of the dateTime 100Percent stacked barSeries.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries"/> class.
            </summary>
            <param name="percentageXAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/>of the dateTime 100Percent stacked barSeries. </param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the dateTime 100Percent stacked barSeries. </param>
            <param name="legend"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/>of the dateTime 100Percent stacked barSeries. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries"/> class.
            </summary>
            <param name="percentageXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> of the date time 100Percent stacked bar series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> object to the end of the
               <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries"/> elements list.
            </summary>
            <param name="dateTimeStackedBarSeriesElement"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> object</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> object at the given index.
            </summary>
            <param name="index"> position of the required Date Time 100Percent Stacked Bar Series Element. </param>
            <returns>DateTime100PercentStackedBarSeriesElement. </returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement">
             <summary>
             Represents a DateTime100PercentStackedBarSeriesElement.
             </summary>
            ^DateTime100PercentStackedBarSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentBarSeriesElement">
             <summary>
             Represents a Stacked100PercentBarSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentBarSeriesElement.BorderWidth">
            <summary>
            Gets or sets the BorderWidth of the Stacked100PercentBarSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentBarSeriesElement.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the borders of the Stacked100PercentBarSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentBarSeriesElement.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> object to use for the DataLabel of the stacked 100Percent series element. This is the
            default data label for the series element.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type PercentageDataLabel.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.#ctor(System.String)">
            <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the date time100Percent stacked bar series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the dateTime 100Percent stacked barSeries element.</param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked barSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the dateTime 100Percent stacked barSeries element.</param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked barSeries element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime 100Percent stacked barSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the date time 100Percent stacked barSeries element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked barSeries element. </param>
            <param name="borderWidth">Border width of the dateTime 100Percent stacked barSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked barSeries element </param>
            <param name="borderWidth">Border width of the dateTime 100Percent stacked barSeries element </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent Stacked barSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked barSeries element. </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked barSeries element.</param>
            <param name="borderWidth">Border width of the dateTime 100Percent stacked barSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked barSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked barSeries element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked barSeries element. </param>
            <param name="borderWidth"> Border width of the dateTime 100Percent stacked barSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked barSeries element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime 100Percent stacked barSeries element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedBarSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValueList"/> contained in the
             date-time stacked 100Percent bar series element.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue">
             <summary>
             Represents a DateTime100PercentStackedBarValue.
             </summary>
            ^DateTime100PercentStackedBarValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue">
             <summary>
             Represents a Stacked100PercentBarValue.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue.Value">
            <summary>
            Gets the value of the Stacked100PercentBarValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue.Color"/> object to use for the color of the Stacked100PercentBarValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> object to use for the DataLabel of the Stacked100PercentBarValue.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type PercentageDataLabel.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue"/> class.
            </summary>
            <param name="value1"> Value of the datetime 100Percent stacked bar value. </param>
            <param name="position">Position of the datetime 100Percent stacked bar value</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue.Position">
            <summary>
            Gets the position of the DateTime100PercentStackedBarValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValueList">
             <summary>
             Represents a DateTime100PercentStackedBarValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValueList">
             <summary>
             Represents a list of the Stacked100PercentBarValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValueList.Count">
            <summary>
            Gets the number of Stacked100PercentBarValues actually contained in the Stacked100PercentBarValueList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValueList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue"/> object at the given index. 
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue"/> object to the end of the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValueList"/> object.
            </summary>
            <param name="value1">Value of date time 100Percent stacked bar value. </param>
            <param name="position">Position of the date time 100Percent stacked bar value. </param>
            <returns><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue"/> object </returns>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue"/> to the end of the
             <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValueList"/> .
            </summary>
            <param name="dateTimeStackedBarValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedBarValue"/> to be added. </param>      	
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries">
             <summary>
             Represents a DateTime100PercentStackedColumnSeries.
             </summary>
            ^DateTime100PercentStackedColumnSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentColumnSeries">
             <summary>
             Represents the Stacked100PercentColumnSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries"/> class.
            </summary>
            <param name="dateTimeXAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time 100Percent stacked column series.</param>
            <param name="percentageYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the date time 100Percent stacked column series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries"/> class.
            </summary>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time 100Percent stacked column series.</param>
            <param name="percentageYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the date time 100Percent stacked column series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time 100Percent stacked column series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries"/> class.
            </summary>
            <param name="percentageYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the date time 100Percent stacked column series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries"/> element list.
            </summary>
            <param name="dateTimeStackedColumnSeriesElement"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> to be added. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> at the given index.
            </summary>
            <param name="index">Index position of the required Date Time 100Percent Stacked Column Series Element.</param>
            <returns></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement">
             <summary>
             Represents a DateTime100PercentStackedColumnSeriesElement.
             </summary>
            ^DateTime100PercentStackedColumnSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentColumnSeriesElement">
             <summary>
             Represents the Stacked100PercentColumnSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentColumnSeriesElement.BorderWidth">
            <summary>
            Gets or sets the BorderWidth of the Stacked100PercentColumnSeriesElement. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentColumnSeriesElement.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/> object to use for the DataLabel of the stacked 100Percent series element. This is the
            default data label for the series element.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type PercentageDataLabel.
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentColumnSeriesElement.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the borders of the Stacked100PercentColumnSeriesElement.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> class.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> class.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> class.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="legend"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="borderWidth">Border width of the dateTime 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="borderWidth">Border width of the dateTime 100Percent stacked columnSeries element.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> class.  
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="borderWidth">Border width of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="borderWidth">Border width of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked columnSeries element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime 100Percent stacked columnSeries element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedColumnSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValueList"/> object contained in the DateTime100PercentStackedColumnSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue">
             <summary>
             Represents a DateTime100PercentStackedColumnValue.
             </summary>
            ^DateTime100PercentStackedColumnValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue">
             <summary>
             Represents the Stacked100PercentColumnValue.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue.Value">
            <summary>
            Gets the value of the Stacked100PercentColumnValue. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue.Color"/> object to use for the color of the Stacked100PercentColumnValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnPercentageDataLabel"/>to use for the DataLabel of the Stacked100PercentColumnValue.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type PercentageDataLabel.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue"/> class.  
            </summary>
            <param name="value1">The value of datetime 100Percent stacked column value. </param>
            <param name="position">The position of the datetime 100Percent stacked column value. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue.Position">
            <summary>
            Gets the position of the DateTime100PercentStackedColumnValue. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValueList">
             <summary>
             Represents a DateTime100PercentStackedColumnValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValueList">
             <summary>
             Represents the Stacked100PercentColumnValueList. 
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValueList.Count">
            <summary>
            Gets the number of Stacked100PercentColumnValues actually contained in the Stacked100PercentColumnValueList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValueList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue"/> object at the given index. 
            </summary>
            <param name="index">index of the required stacked 100Percent column value. </param>
            <returns> The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValueList"/>.
            </summary>
            <param name="value1">Value of the datetime 100Percent stacked column value. </param>
            <param name="position">Position of the datetime 100Percent stacked column value. </param>
            <returns> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValueList"/> object.  
            </summary>
            <param name="dateTimeStackedColumnValue"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedColumnValue"/> to be added.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries">
             <summary>
              Represents a DateTime100PercentStackedLineSeries.
             </summary>
            ^DateTime100PercentStackedLineSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeries">
             <summary>
             Represents a Stacked100PercentLineSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/>of the dateTime 100Percent stacked line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the dateTime 100Percent stacked line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the dateTime 100Percent stacked line series </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the dateTime 100Percent stacked line series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the dateTime 100Percent stacked line series. </param>
            <param name="legend"> Legend of the dateTime 100Percent stacked line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object to the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries"/> elements list.
            </summary>
            <param name="element"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object to be added.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object at the given index.
            </summary>
            <param name="index"> Index of the required date time 100Percent stacked line series element. </param>
            <returns> The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object. </returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement">
             <summary>
             Represents a DateTime100PercentStackedLineSeriesElement.
             </summary>
            ^DateTime100PercentStackedLineSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement">
             <summary>
             Represents a Stacked100PercentLineSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.Marker">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.Marker"/> of the Stacked100PercentLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PercentageDataLabel"/> object to use for the DataLabel of the stacked 100Percent series element. This is the
            default data label for the series element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.LineCap">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.LineCap"/> of the Stacked100PercentLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.LineJoin">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.LineJoin"/> of the Stacked100PercentLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.Width">
            <summary>
            Gets or sets the LineWidth of the Stacked100PercentLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.Stacked100PercentLineSeriesElement.LineStyle"/> of the Stacked100PercentLineSeriesElement.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked line series element </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime 100Percent stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="lineWidth">line width of the dateTime 100Percent stacked line series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="lineWidth">line width of the dateTime 100Percent stacked line series element. </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime 100Percent stacked line series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked lineSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="lineWidth"> Line width of the dateTime 100Percent stacked line series element </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime 100Percent stacked line series element. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime 100Percent stacked lineSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="lineWidth">Line width of the dateTime 100Percent stacked line series element. </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime 100Percent stacked line series element. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime 100Percent stacked lineSeries element. </param>
            <param name="lineWidth"> Line width of the dateTime 100Percent stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime 100Percent stacked line series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime 100Percent stacked line series element </param>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTime100PercentStackedLineSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValueList"/> contained in the DateTime100PercentStackedLineSeriesElement.
            </summary>        
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue">
             <summary>
             Represents a DateTime100PercentStackedLineValue.
             </summary>
            ^DateTime100PercentStackedLineValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValue">
             <summary>
             Represents a Stacked100PercentLineValue.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValue.DataLabel">
            <summary>
            Gets or sets the DataLabel of the Stacked100PercentLineValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValue.Value">
            <summary>
            Gets the value of the Stacked100PercentLineValue.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue"/> object.
            </summary>
            <param name="value1"> the value of dateTime 100Percent stacked line value.</param>
            <param name="position">the position of the dateTime 100Percent stacked line value. </param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue.Position">
            <summary>
            Gets the position of the DateTime100PercentStackedLineValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValueList">
             <summary>
             Represents a DateTime100PercentStackedLineValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValueList">
             <summary>
             Represents a list of the Stacked100PercentLineValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValueList.Count">
            <summary>
            Gets the total number of Stacked100PercentLineValues in the Stacked100PercentLineValueList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValueList.Item(System.Int32)">
            <summary>
            Gets the Stacked100PercentLineValue from the Stacked100Percent LineValueList based on the given index. 
            </summary>
            <returns>Stacked100PercentLineValue in the specified index.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue"/> object to the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValueList"/> object.
            </summary>
            <param name="lineValue"> Value of the dateTime 100Percent stacked line value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue"/> object to the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValueList"/> object.
            </summary>
            <param name="value1"> Value of the dateTime 100Percent stacked line value. </param>
            <param name="obj">Position of the dateTime 100Percent stacked line value. </param>
            <returns><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTime100PercentStackedLineValue"/>object</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries">
             <summary>
             Represents a DateTimeAreaSeries.
             </summary>
            ^DateTimeAreaSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries"/> object.
            </summary>
            <param name="name">Name of the datetime Area series </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries"/> object.
            </summary>
            <param name="name"> Name of the datetime Area series.</param>
            <param name="xAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime area series </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries"/> object.
            </summary>
            <param name="name">Name of the datetime Area series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime area series. </param>
            <param name="yAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime area series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime area series. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries"/> object.
            </summary>
            <param name="name">Name of the datetime Area series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime area series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime area series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime area series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the datetime area series. </param>                
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries"/> object.
            </summary>
            <param name="name"> Name of the datetime Area series.</param>
            <param name="xAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime area series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/>of the datetime area series. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime area series </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries"/> object.
            </summary>
            <param name="name">Name of the datetime Area series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime area series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime area series </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime area series </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime area series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the datetime area series. </param>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeAreaSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValueList"/> object contained in the DateTimeAreaSeries.
            </summary>       
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue">
             <summary>
             Represents a DateTimeAreaValue.
             </summary>
            ^DateTimeAreaValueChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue"/> object.
            </summary>
            <param name="value1">the value of dateTime area value </param>
            <param name="position">the position of the dateTime area value </param>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue.Position">
            <summary>
            Gets the position of the DateTimeAreaValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValueList">
             <summary>
             Represents a list of the DateTimeAreaValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue"/> object to the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValueList"/> object.
            </summary>
            <param name="value1"> Value of the dateTime area Value</param>
            <param name="obj">Position of the dateTime area Value </param>
            <returns><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue"/> object. </returns>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeAreaValueList"/> object.
            </summary>
            <param name="areaValue">Value of the dateTime area Value</param>        
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries">
             <summary>
             This class represents the DateTimeBarSeries.
             </summary>
            ^DateTimeBarSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time bar series </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name"> Name of the date time bar series</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series.</param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series. </param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name"> Name of the date time bar series. </param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series </param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series. </param>
            <param name="dateTimeYAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time bar series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name"> Name of the date time bar series. </param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series. </param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time bar series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time bar series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series. </param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series. </param>
            <param name="dateTimeYAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time bar series. </param>
            <param name="borderWidth">Border width of the date time bar series </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series.</param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series.</param>
            <param name="borderWidth">Border width of the date time bar series.</param>
            <param name="borderColor"> Border <see cref="T:ceTe.DynamicPDF.Color"/> for the border of the date time bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series.</param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time bar series.</param>
            <param name="borderWidth">Border width of the date time bar series.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for border of the date time bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries"/> class.
            </summary>
            <param name="name">Name of the date time bar series</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time bar series.</param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time bar series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time bar series.</param>
            <param name="borderWidth">Border width of the date time bar series.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for border of the date time bar series.</param>
            <param name="legend">code&gt;<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time bar series.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValueList"/> object contained in the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeBarSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> object of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue">
             <summary>
             This class represents the DateTimeBarValue.
             </summary>
            ^DateTimeBarValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue"/> class.
            </summary>
            <param name="value1">the float indicating value of date time bar value</param>
            <param name="position">position the position of the date time bar value </param>             
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue.Position">
            <summary>
            Gets the position of the DateTimeBarValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValueList">
             <summary>
             This class represents the DateTimeBarValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue"/> object to the end of the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValueList"/> object.
            </summary>
            <param name="value1">Value of the date time bar value. </param>
            <param name="position">Position of the date time bar value. </param>
            <returns><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue"/> object </returns>             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue"/> object to the end of the
            <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValueList"/> object.
            </summary>
            <param name="dateTimeBarValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeBarValue"/> object to be added</param>        
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries">
             <summary>
             Represents the DateTimeColumnSeries.
             </summary>
            ^DateTimeColumnSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class.
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name"> Name of the date time column series. </param>
            <param name="dateTimeXAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
            <param name="numericYAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="numericYAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time column series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time column series. </param>
            <param name="borderWidth">Border width of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series. </param>
            <param name="borderWidth">Border width of the date time column series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for border of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time column series. </param>
            <param name="borderWidth">Border width of the date time column series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for the border of the date time column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries"/> class.
            </summary>
            <param name="name">Name of the date time column series. </param>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time column series. </param>
            <param name="borderWidth">Border width of the date time column series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for the border of the date time column series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time column series. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValueList"/> object contained in the DateTimeColumnSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> object of the series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeColumnSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> object of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue">
             <summary>
             Represents a DateTimeColumnValue.
             </summary>
            ^DateTimeColumnValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue"/> class. 
            </summary>
            <param name="value1">The float indicating value of date time column value. </param>
            <param name="position">The position of the date time column value. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue.Position">
            <summary>
            Gets the position of the DateTimeColumnValue. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValueList">
             <summary>
             Represents a DateTimeColumnValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValueList"/> object.
            </summary>
            <param name="value1">Value of the date time column value. </param>
            <param name="position">Position of the date time column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValueList"/> object.
            </summary>
            <param name="dateTimeColumnValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeColumnValue"/> to be added. </param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries">
             <summary>
             Represents a DateTimeLineSeries.
             </summary>
            ^DateTimeLineSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries">
             <summary>
             Base class from which date-time and indexed LineSeries are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.ValueFormat">
            <summary>
            Gets or sets the ValueFormat of the line series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> of the line series. This is the
            default data label for the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.Marker">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.Marker"/> of the line series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.LineCap">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.LineCap"/> of the LineSeries.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.LineJoin">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.LineJoin"/> of the LineSeries.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.Width">
            <summary>
            Gets or sets the LineWidth of the LineSeries.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.LineSeries.LineStyle"/> of the LineSeries.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name"> Name of the datetime line series. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name"> Name of the datetime line series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime line series </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime line series. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name">  Name of the datetime line series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime line series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime line series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime line series. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name">Name of the datetime line series</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime line series</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime line series.</param>
            <param name="lineWidth">line width of the datetime line series</param>                
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name">Name of the datetime line series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime line series</param>
            <param name="lineWidth">line width of the datetime line series.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the datetime line series.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name">Name of the datetime line series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime line series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime line series. </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the datetime line series</param>
            <param name="lineWidth">line width of the datetime line series. </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the datetime line series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the datetime line series. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name">Name of the datetime line series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/>of the datetime line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime line series.</param>
            <param name="lineWidth">line width of the datetime line series.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/>of the datetime line series</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries"/> object.
            </summary>
            <param name="name">Name of the datetime line series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the datetime line series </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the datetime line series.</param>
            <param name="lineWidth">Line width of the datetime line series. </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the datetime line series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the datetime line series. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime line series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the datetime line series. </param>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeLineSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValueList"/> object contained in the DateTimeLineSeries.
            </summary>               
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue">
             <summary>
             Represents a DateTimeLineValue.
             </summary>
            ^DateTimeLineValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue">
             <summary>
             Represents a LineValue.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue.Value">
            <summary>
            Gets the value of the LineValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> of the LineValue.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue"/> object.
            </summary>
            <param name="value1">The value of dateTime line value. </param>
            <param name="position">The position of the dateTime line value. </param>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue.Position">
            <summary>
            Gets the position of the DateTimeLineValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValueList">
             <summary>
             Represents a list of the DateTimeLineValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.LineValueList">
             <summary>
             Represents a list of the LineValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.LineValueList.Item(System.Int32)">
            <summary>
            Gets the LineValue from the LineValueList based on the given index.
            </summary>
            <returns>LineValue in the specified index.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.LineValueList.Count">
            <summary>
            Gets the total number of LineValues in the LineValueList.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValueList"/> object.
            </summary>
            <param name="lineValue"> Value of the dateTime line value. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValueList"/> object.
            </summary>
            <param name="value1">Value of the dateTime line Value. </param>
            <param name="obj">Position of the dateTime line Value. </param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeLineValue"/> object. </returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries">
             <summary>
             Represents a DateTimeStackedAreaSeries.
             </summary>
            ^DateTimeStackedAreaSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedAreaSeries">
             <summary>
             Represents a StackedAreaSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the dateTime stacked area series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the dateTime stacked area series. </param>               
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the dateTime stacked area series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the dateTime stacked area series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime stacked area series </param>               
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the dateTime stacked area series. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries"/> elements list.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object to be added.</param>                
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required date Time stacked area series element.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object. </returns>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement">
             <summary>
             Represents a DateTimeStackedAreaSeriesElement.
             </summary>
            ^DateTimeStackedAreaSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedAreaSeriesElement">
             <summary>
             Represents a StackedAreaSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeriesElement">
             <summary>
             Represents a StackedSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedAreaSeriesElement.Marker">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedAreaSeriesElement.Marker"/> of the StackedAreaSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedAreaSeriesElement.DataLabel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> object to use for the DataLabel of the stacked series element. This is the
            default data label for the series element.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime stacked area series element.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">  Name of the dateTime stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked area series element. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
             Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime stacked area series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked area series element. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime stacked area series element. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked area series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime stacked area series element.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement.Values">
            <summary>
            Gets the DateTimeStackedAreaValueList from the DateTimeStackedAreaSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue">
             <summary>
             Represents a DateTimeStackedAreaValue.
             </summary>
            ^DateTimeStackedAreaValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValue">
             <summary>
             Represents a StackedAreaValue.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValue.DataLabel">
            <summary>
            Gets or sets the DataLabel of the StackedAreaValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValue.Value">
            <summary>
            Gets the value of the StackedAreaValue.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue"/> object.
            </summary>
            <param name="value1">The value of dateTime stacked area value.</param>
            <param name="position">The position of the dateTime stacked area value.</param>              
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue.Position">
            <summary>
            Gets the position of the DateTimeStackedAreaValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValueList">
             <summary>
             Represents a list of the DateTimeStackedAreaValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValueList">
             <summary>
             Represents a list of the StackedAreaValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValueList.Item(System.Int32)">
            <summary>
            Gets the StackedAreaValue from the StackedAreaValueList based on the given index. 
            </summary>
            <returns>StackedAreaValue in the specified index.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValueList.Count">
            <summary>
            Gets the total number of StackedAreaValues in the StackedAreaValueList.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValueList.#ctor(ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedAreaSeriesElement)">
            <summary> 
            Creates a new instance of the DateTimeStackedAreaValueList. 
            </summary>
            <param name="areaSeries">DateTime stacked area series element</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValueList"/> object.
            </summary>
            <param name="value1">Value of the dateTime stacked area value. </param>
            <param name="obj">Position of the dateTime stacked area value. </param>
            <returns> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue"/> object. </returns>      	
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedAreaValueList"/> object.
            </summary>
            <param name="areaValue">Value of the dateTime stacked areaValue. </param>       
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries">
             <summary>
             This class represents the DateTimeStackedBarSeries.
             </summary>
            ^DateTimeStackedBarSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedBarSeries">
             <summary>
             The base class from which the date-time and indexed StackedBarSeries are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries"/> class.
            </summary>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time stacked bar series.</param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time stacked bar series.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries"/> class.
            </summary>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time stacked bar series.</param>
            <param name="dateTimeYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the date time stacked bar series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time stacked bar series.</param>                  
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries"/> class.
            </summary>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the date time stacked bar series.</param>             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries"/> element list.
            </summary>
            <param name="dateTimeStackedBarSeriesElement"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> object to be added.</param>      
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required Date Time Stacked Bar Series Element.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> object.</returns>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the series.
            </summary>		
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement">
             <summary>
             This class represents the DateTimeStackedBarSeriesElement.
             </summary>
            ^DateTimeStackedBarSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedBarSeriesElement">
             <summary>
             The base class from which the date-time and indexed StackedBarSeriesElements are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedBarSeriesElement.BorderWidth">
            <summary>
            Gets or sets the BorderWidth of the StackedBarSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedBarSeriesElement.DataLabel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> object to use for the DataLabel of the stacked series element. This is the
            default data label for the series element.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedBarSeriesElement.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the borders of the StackedBarSeriesElement.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the date time stacked bar series element.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the date time stacked bar series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked bar series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the date time stacked bar series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked bar series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time stacked bar series element. </param>      
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the date time stacked bar series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked bar series element.</param>
            <param name="borderWidth">Border width of the date time stacked bar series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the date time stacked bar series element.</param>
            <param name="borderWidth"> Border width of the date time stacked bar series element.</param>
            <param name="borderColor"> Border <see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked bar series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the date time stacked bar series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of date time stacked bar series element. </param>
            <param name="borderWidth">Border width of the date time stacked bar series element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked bar series element. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the date time stacked bar series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked bar series element. </param>
            <param name="borderWidth">Border width of the date time stacked bar series element. </param>
            <param name="borderColor"> Border <see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked bar series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time stacked bar series element. </param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedBarSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValueList"/> object contained in the DateTimeStackedBarSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue">
             <summary>
             This class represents the DateTimeStackedBarValue.
             </summary>
            ^DateTimeStackedBarValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue">
             <summary>
             The base class from which the date-time and indexed StackedBarValues are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue.Value">
            <summary>
            Gets the value of the StackedBarValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue.Color"/> object to use for the color of the StackedBarValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> object to use for the DataLabel of the StackedBarValue.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue"/> class.
            </summary>
            <param name="value1">The float indicating value of date time stacked bar value.</param>
            <param name="position">The position of the date time stacked bar value. </param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue.Position">
            <summary>
            Gets the position of the DateTimeStackedBarValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValueList">
             <summary>
             This class represents the DateTimeStackedBarValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValueList">
             <summary>
             The base class from which the date-time and indexed StackedBarValueLists are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValueList.Count">
            <summary>
            Gets the number of StackedBarValues actually contained in the StackedBarValueList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValueList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue"/> object at the given index. 
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValueList"/> object.
            </summary>
            <param name="value1"> Value of date time stacked bar value. </param>
            <param name="position">Position of the date time stacked bar value. </param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue"/> object.</returns>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValueList"/> object.
            </summary>
            <param name="dateTimeStackedBarValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedBarValue"/> to be added.</param>       
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries">
             <summary>
             Represents a DateTimeStackedColumnSeries.
             </summary>
            ^DateTimeStackedColumnSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedColumnSeries">
             <summary>
             The base class from which the date-time and indexed StackedColumnSeries are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries"/> class. 
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries"/> class. 
            </summary>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time stacked column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries"/> class.
            </summary>
            <param name="dateTimeXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the date time stacked column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time stacked column series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of date time stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries"/> class. 
            </summary>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the date time stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries"/> element list.
            </summary>
            <param name="dateTimeStackedColumnSeriesElement"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> to be added.  </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required Date Time Stacked Column Series Element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the series. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement">
             <summary>
             Represents a DateTimeStackedColumnSeriesElement.
             </summary>
            ^DateTimeStackedColumnSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedColumnSeriesElement">
             <summary>
             The base class from which the date-time and indexed StackedColumnSeriesElements are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedColumnSeriesElement.BorderWidth">
            <summary>
            Gets or sets the BorderWidth of the StackedColumnSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedColumnSeriesElement.DataLabel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> object to use for the DataLabel of the stacked series element. This is the
            default data label for the series element.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedColumnSeriesElement.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> to use for the borders of the StackedColumnSeriesElement.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the date time stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the date time stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> class.
            </summary>
            <param name="name">Name of the date time stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the date time stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
            <param name="borderWidth">Border width of the date time stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the date time stacked column series element. </param>
            <param name="borderWidth">Border width of the date time stacked column series element. </param>
            <param name="borderColor">Border<see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the date time stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
            <param name="borderWidth">Border width of the date time stacked column series element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the date time stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
            <param name="borderWidth">Border width of the date time stacked column series element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the date time stacked column series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the date time stacked column series element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedColumnSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValueList"/> object contained in the DateTimeStackedColumnSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue">
             <summary>
             Represents a DateTimeStackedColumnValue.
             </summary>
            ^DateTimeStackedColumnValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue">
             <summary>
             The base class from which the date-time and indexed StackedColumnValues are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue.Value">
            <summary>
            Gets the value of the StackedColumnValue. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue.Color"/> object to use for the color of the StackedColumnValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.BarColumnValuePositionDataLabel"/> object to use for the DataLabel of the StackedColumnValue.
            </summary>
            <p/><b>NOTE:</b> Prior to Version 6.0 DataLabel was of type ValuePositionDataLabel.
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue"/> class. 
            </summary>
            <param name="value1">The float indicating value of date time stacked column value. </param>
            <param name="position">The position of the date time stacked column value. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue.Position">
            <summary>
            Gets the position of the DateTimeStackedColumnValue. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValueList">
             <summary>
             Represents a DateTimeStackedColumnValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValueList">
             <summary>
             The base class from which the date-time and indexed StackedColumnValueLists are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValueList.Count">
            <summary>
            Gets the number of StackedColumnValues actually contained in the StackedColumnValueList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValueList.Item(System.Int32)">
            <summary>
            Gets the <see cref="M:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValueList.StackedColumnValue(System.Single,System.Int32)"/> object at the given index. 
            </summary>
            <param name="index">Position of the required stacked column value. </param>
            <returns>The <see cref="M:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValueList.StackedColumnValue(System.Single,System.Int32)"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of the date time stacked column value. </param>
            <param name="position">Position of the date time stacked column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValueList"/> object.
            </summary>
            <param name="dateTimeStackedColumnValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedColumnValue"/> to be added. </param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries">
             <summary>
             Represents a DateTimeStackedLineSeries.
             </summary>
            ^DateTimeStackedLineSeries
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeries">
             <summary>
             Represents a StackedLineSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.#ctor">
             <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries"/> object.
             </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the dateTime stacked line series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the dateTime stacked line series</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the dateTime stacked line series.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the dateTime stacked line series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the dateTime stacked line series </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime stacked line series</param>               
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries"/> elements list.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object to be added.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required date Time stacked line series element. </param>
            <returns> The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object. </returns>              
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement">
             <summary>
             Represents a DateTimeStackedLineSeriesElement.
             </summary>
            ^DateTimeStackedLineSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement">
             <summary>
             Represents a StackedLineSeriesElement.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.Marker">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.Marker"/> of the StackedLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.DataLabel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ValuePositionDataLabel"/> object to use for the DataLabel of the stacked series element. This is the
            default data label for the series element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.LineCap">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.LineCap"/> of the StackedLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.LineJoin">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.LineJoin"/> of the StackedLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.Width">
            <summary>
            Gets or sets the LineWidth of the StackedLineSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.StackedLineSeriesElement.LineStyle"/> of the StackedLineSeriesElement.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime stacked line series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked line series element.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime stacked line series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked line series element.</param>
            <param name="lineWidth">Line width of the dateTime stacked line series element.</param>      
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime stacked line series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked line series element.</param>
            <param name="lineWidth">Line width of the dateTime stacked lineSeries element. </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime stacked line series element. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the dateTime stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked line series element.</param>
            <param name="lineWidth">Line width of the dateTime stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime stacked line series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime stacked line series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime stacked line series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked line series element. </param>
            <param name="lineWidth">Line width of the dateTime stacked line series element. </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime stacked line series element. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime stacked line series element. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the dateTime Stacked Line Series Element.</param>
            <param name="lineWidth">Line width of the dateTime stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the dateTime stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the dateTime stacked line Series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the dateTime stacked line series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the dateTime stacked line series element.</param>                
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.DateTimeStackedLineSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValueList"/> object contained in the DateTimeStackedLineSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue">
             <summary>
             Represents a DateTimeStackedLineValue.
             </summary>
            ^DateTimeStackedLineValue
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue">
             <summary>
             Represents a StackedLineValue.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue.DataLabel">
            <summary>
            Gets or sets the DataLabel of the StackedLineValue.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue.Value">
            <summary>
            Gets the value of the StackedLineValue.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue.#ctor(System.Single,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue"/> object.
            </summary>
            <param name="value1">The value of dateTime stacked line value. </param>
            <param name="position">The position of the dateTime stacked line value.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue.Position">
            <summary>
            Gets the position of the DateTimeStackedLineValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValueList">
             <summary>
             Represents a list of the DateTimeStackedLineValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValueList">
             <summary>
             Represents a list of the StackedLineValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValueList.Count">
            <summary>
            Gets the total number of StackedLineValues in the StackedLineValueList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValueList.Item(System.Int32)">
            <summary>
            Gets the StackedLineValue from the StackedLineValue list based on the given index. 
            </summary>
            <returns>StackedLineValue in the specified index.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValueList"/> object.
            </summary>
            <param name="lineValue">Value of the dateTime stacked line value. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValueList.Add(System.Single,System.DateTime)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValueList"/> object.
            </summary>
            <param name="value1">Value of the dateTime stacked line value. </param>
            <param name="obj">Position of the dateTime stacked line value. </param>
            <returns> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.DateTimeStackedLineValue"/> object. </returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.DateTimeType">
             <summary>
             Represents the DateTimeType enumeration.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DateTimeType.Year">
            <summary>
            Year date-time type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DateTimeType.Month">
            <summary>
            Month date-time type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DateTimeType.Day">
            <summary>
            Day date-time type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DateTimeType.Hour">
            <summary>
            Hour date-time type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DateTimeType.Minute">
            <summary>
            Minute date-time type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DateTimeType.Second">
            <summary>
            Second date-time type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.DateTimeType.Undefined">
            <summary>
            Undefined date-time type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis">
             <summary>
             This class can be used to place the DateTimeXAxis on the plot area.
             </summary>
            ^DateTimeXAxis
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis">
             <summary>
             This class provides the base class from which all of the XAxes are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.AnchorType">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisAnchorType"/> enumeration that specifies the position of the XAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.LabelPosition">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelPosition"/> enumeration that specifies the position of the labels.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.MajorGridLines">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisGridLines"/> object to use for the MajorGridLines of the XAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.MinorGridLines">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisGridLines"/> object to use for the MinorGridLines of the XAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.MajorTickMarks">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks"/> object to use for the MajorTickMarks of the XAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.MinorTickMarks">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks"/> object to use for the MinorTickMarks of the XAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.Titles">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.TitleList"/> object to use for the Title of the XAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxis.TitlePosition">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTitlePosition"/> enumeration that specifies the position of the Title.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis"/> class. 
            </summary>
            <param name="offset">The border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.Min">
            <summary>
            Gets or sets the minimum value of the axis.
            <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.Max">
            <summary>
            Gets or sets the maximum value of the axis.
            <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.Interval">
            <summary>
            Gets or sets the interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.AxisPaddingInterval">
            <summary>
            Gets or sets the padding interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.DateTimeType">
            <summary>
            Gets or sets <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.DateTimeType"/> enumeration that specifies the DateTimeType of the DateTimeXAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxis.Labels">
            <summary>
            Gets <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabelList"/> object contained in the DateTimeXAxis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel">
             <summary>
             Represents a DateTimeXAxisLabel.
             </summary>
            ^DateTimeXAxisLabel
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabel">
             <summary>
             Represents an XAxisLabel.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the date time xAxis label</param>
            <param name="value1">Position of the date time xAxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel.#ctor(System.String,System.DateTime,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the date time xAxis label.</param>
            <param name="value1">Position of the date time xAxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the date time xAxis label.</param>
            <param name="fontSize">Size for the text of the date time xAxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the date time xAxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel.Value">
            <summary>
            Gets or sets the position of the DateTimeXAxisLabel. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabelList">
             <summary>
             Represents a DateTimeXAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelList">
             <summary>
             Represents an XAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelList.Angle">
            <summary>
            Gets or sets the angle of the AxisLabelList.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabelList"/> object. 
            </summary>
            <param name="dateTimeAxisLabel">The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabelList"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabelList.AxisLabel(System.DateTime)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel"/> object at the given DateTime position. 
            </summary>
            <param name="value1">Position of the required date time axis label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeXAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis">
             <summary>
             This class can be used to place the DateTimeYAxis on the plot area.
             </summary>
            ^DateTimeYAxis
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis">
             <summary>
             This class provides the base class from which all of the YAxes are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.AnchorType">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisAnchorType"/> enumeration that specifies the position of the YAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.LabelPosition">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelPosition"/> enumeration that specifies the position of the labels.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.MajorGridLines">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisGridLines"/> object to use for the MajorGridLines of the YAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.MinorGridLines">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisGridLines"/> object to use for the MinorGridLines of the YAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.MajorTickMarks">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks"/> object to use for the MajorTickMarks of the YAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.MinorTickMarks">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks"/> object to use for the MinorTickMarks of the YAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.Titles">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> object to use for the Title of the YAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxis.TitlePosition">
            <summary>
            Gets or sets <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTitlePosition"/> enumeration that specifies the position of the Title.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis"/> class. 
            </summary>
            <param name="offset">Border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.Min">
            <summary>
            Gets or sets the minimum value  of the axis.
            <see cref="T:System.DateTime"/> 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.Max">
            <summary>
            Gets or sets the maximum value of the axis.
            <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.Interval">
            <summary>
            Gets or sets the interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.AxisPaddingInterval">
            <summary>
            Gets or sets the padding interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.DateTimeType">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.DateTimeType"/> enumeration that specifies the DateTimeType of the DateTimeYAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxis.Labels">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabelList"/> object contained in the DateTimeYAxis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel">
             <summary>
             Represents a DateTimeYAxisLabel.
             </summary>
            ^DateTimeYAxisLabel
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabel">
             <summary>
             Represents a YAxisLabel.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the date time yaxis label.</param>
            <param name="value1">Position of the date time yaxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel.#ctor(System.String,System.DateTime,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the date time yaxis label.</param>
            <param name="value1">Position of the date time yaxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the date time yaxis label.</param>
            <param name="fontSize">Size for the text of the date time yaxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the date time yaxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel.Value">
            <summary>
            Gets or sets the position of the DateTimeYAxisLabel. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabelList">
             <summary>
             Represents a DateTimeYAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelList">
             <summary>
              Represents a YAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabelList"/> object.
            </summary>
            <param name="dateTimeYAxisLabel">the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabelList"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabelList.AxisLabel(System.DateTime)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel"/> object at the given DateTime position. 
            </summary>
            <param name="value1">Position of the required date time axis label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.DateTimeYAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.GridLines">
             <summary>
             Base class from which x and y grid lines are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.GridLines.Interval">
            <summary>
            Gets or sets the interval of the grid lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.GridLines.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.GridLines.LineStyle"/> enumeration that specifies the line style of the grid lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.GridLines.Width">
            <summary>
            Gets or sets the width of the grid lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.GridLines.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.GridLines.Color"/> object to use for the color of the grid lines.    
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.GridLines.Visible">
            <summary>
            Gets or sets the visible status of the grid lines on the plot area. By default it is true. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries">
             <summary>
             Represents an Indexed100PercentStackedAreaSeries.
             </summary>
            ^Indexed100PercentStackedAreaSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked area series.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed 100Percent stacked area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked area series.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed 100Percent stacked area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked area series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked area series.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries"/> elements list.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object to be added.</param>      
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required indexed 100Percent stacked area series element.</param>
            <returns>the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object.</returns>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement">
             <summary>
             Represents an Indexed100PercentStackedAreaSeriesElement.
             </summary> 
            ^Indexed100PercentStackedAreaSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed 100Percent stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed 100Percent stacked area series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked area series element. </param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed 100Percent stacked area series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked areaSeries element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed 100Percent stacked areaSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked area series element. </param>
            <param name="marker"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed 100Percent stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked area series element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedAreaSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList"/> object contained in the Indexed100PercentStackedAreaSeriesElement.	  
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue">
             <summary>
             Represents an Indexed100PercentStackedAreaValue.
             </summary>
            ^Indexed100PercentStackedAreaValueChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue"/> object.
            </summary>
            <param name="value1">The Value of indexed 100Percent stacked area value.</param>
            <param name="position">The position of the indexed 100Percent stacked area value.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue.Position">
            <summary>
            Gets the position of the Indexed100PercentStackedAreaValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList">
             <summary>
             Represents an Indexed100PercentStackedAreaValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList"/> object.
            </summary>
            <param name="areaValue">The indexed 100Percent stacked area value object. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList"/> object.
            </summary>
            <param name="val">Value of the indexed 100Percent stacked area value. </param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList.Add(System.Single[])">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList"/> object.
            </summary>
            <param name="value1"> values of the indexed 100Percent stacked area values. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentAreaValue"/> object array. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed 100Percent stacked area value. </param>
            <param name="position"> Position of the indexed 100Percent stacked area value. </param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedAreaValue"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries">
             <summary>
             Represents an Indexed100PercentStackedBarSeries.
             </summary>
            ^Indexed100PercentStackedBarSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries"/> class.
            </summary>
            <param name="percentageXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> of the indexed 100Percent stacked bar series. </param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed 100Percent stacked bar series. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries"/> class.
            </summary>
            <param name="percentageXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> of the indexed 100Percent stacked bar series. </param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed 100Percent stacked bar series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked bar series. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries"/> class.
            </summary>
            <param name="percentageXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> of the indexed 100Percent stacked bar series. </param>      
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> to the end of the Indexed100PercentStackedBarSeriesElement list.
            </summary>
            <param name="indexedStackedBarSeriesElement"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> to be added.</param>       
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> object at the given index.
            </summary>
            <param name="index">index of the required Indexed 100Percent Stacked Bar Series Element.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> object.</returns>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement">
             <summary>
             Represents an Indexed100PercentStackedBarSeriesElement.
             </summary>
            ^Indexed100PercentStackedBarSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed 100Percent stacked barSeries element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed 100percent stacked barSeries element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked barSeries element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">  Name of the indexed 100Percent stacked barSeries element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked barSeries element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked barSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked barSeries element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked barSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked barSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed 100Percent stacked barSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked barSeries element. </param>
            <param name="borderColor"> Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked barSeries element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked barSeries element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked barSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked barSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked barSeries element.</param>    
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed 100Percent stacked barSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked barSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked barSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of indexed 100Percent stacked barSeries element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked barSeries element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedBarSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList"/> object contained in the Indexed100PercentStackedBarSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue">
             <summary>
             Represents an Indexed100PercentStackedBarValue.
             </summary>
            ^Indexed100PercentStackedBarValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue"/> class.
            </summary>
            <param name="value1"> Value of indexed 100Percent stacked bar value.</param>
            <param name="position">Position of the indexed 100Percent stacked bar value.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue.Position">
            <summary>
            Gets the position of the Indexed100PercentStackedBarValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList">
             <summary>
             Represents an Indexed100PercentStackedBarValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList"/> object.
            </summary>
            <param name="value1"> Value of stacked 100Percent bar value.</param>
            <returns>A<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue"/> object. </returns>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList.Add(System.Single[])">
            <summary>
            Adds an array of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList"/> object.
            </summary>
            <param name="value1">Values of the stacked 100Percent bar values.</param>
            <returns> Array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentBarValue"/> objects.</returns>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed 100Percent stacked bar value. </param>
            <param name="position">Position of the indexed 100Percent stacked bar value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue"/> object.</returns>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValueList"/> object.
            </summary>
            <param name="indexedStackedBarValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedBarValue"/> to be added.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries">
             <summary>
             Represents an Indexed100PercentStackedColumnSeries.
             </summary>
            ^Indexed100PercentStackedColumnSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries"/> class. 
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see href ="Indexed100PercentStackedColumnSeries"/> class.
            </summary>
            <param name="indexedXAxis"><see href ="IndexedXAxis"/> of the indexed 100Percent stacked column series. </param>
            <param name="percentageYAxis"><see href ="PercentageYAxis"/> of the indexed 100Percent stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries"/> class.
            </summary>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed 100Percent stacked column series. </param>
            <param name="percentageYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked column series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of indexed 100Percent stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries"/> class. 
            </summary>
            <param name="percentageYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries"/> element list.
            </summary>
            <param name="indexedStackedColumnSeriesElement"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/>  to be added. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required Indexed 100Percent Stacked Column Series Element. </param>
            <returns> The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> object. </returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the series. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement">
             <summary>
             Represents an Indexed100PercentStackedColumnSeriesElement.
             </summary>
            ^Indexed100PercentStackedColumnSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed 100Percent stacked columnSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed 100Percent stacked columnSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of indexed 100Percent stacked columnSeries element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed 100Percent stacked columnSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked columnSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed 100Percent stacked columnSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked columnSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed 100Percent stacked columnSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked columnSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked columnSeries element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked columnSeries element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed 100Percent stacked columnSeries element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked ColumnSeries element. </param>
            <param name="borderWidth">Border width of the indexed 100Percent stacked columnSeries Element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked columnSeries element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent Stacked columnSeries element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedColumnSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList"/> object contained in the Indexed100PercentStackedColumnSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue">
             <summary>
             Represents an Indexed100PercentStackedColumnValue.
             </summary>
            ^Indexed100PercentStackedColumnValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue"/> class. 
            </summary>
            <param name="value1">Value of indexed 100Percent stacked column value. </param>
            <param name="position">Position of the indexed 100Percent stacked column value. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue.Position">
            <summary>
            Gets the position of the Indexed100PercentStackedColumnValue. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList">
             <summary>
             Represents an Indexed100PercentStackedColumnValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of the stacked 100Percent column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList.Add(System.Single[])">
            <summary>
            Adds an array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue"/> objects to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList"/> object.
            </summary>
            <param name="value1">Values of stacked 100Percent column values. </param>
            <returns> Array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentColumnValue"/> objects. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed 100Percent stacked column value. </param>
            <param name="position">Position of the indexed 100Percent stacked column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValueList"/> object.
            </summary>
            <param name="indexedStackedColumnValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedColumnValue"/> object to be added. </param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries">
             <summary>
             Represents an Indexed100PercentStackedLineSeries.
             </summary>
            ^Indexed100PercentStackedLineSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked line series</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed 100Percent stacked line series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked line series. </param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed 100Percent stacked line series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the indexed 100Percent stacked line series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked line series.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries"/> elements list.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object to be added.</param>       		 
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object at the given index.
            </summary>
            <param name="index"> Index of the required Indexed 100Percent Stacked line series element.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object. </returns>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement">
             <summary>
             Represents an Indexed100PercentStackedLineSeriesElement.
             </summary>
            ^Indexed100PercentStackedLineSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked line series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked line series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked line series element.</param>
            <param name="lineWidth">Line width of the indexed 100Percent stacked line series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked line series element. </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked line series element. </param>
            <param name="lineWidth"> Line width of the indexed 100Percent stacked line series element. </param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed 100Percent stacked line series element. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked line series element.</param>
            <param name="lineWidth">Line width of the indexed 100Percent stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed 100Percent stacked line series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked line series element.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed 100Percent stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked line series element.</param>
            <param name="lineWidth">Line width of the indexed 100Percent stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed 100Percent stacked line series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed 100Percent stacked line series element.</param>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed 100Percent stacked lineSeries element.</param>
            <param name="lineWidth">Line width of the indexed 100Percent stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed 100Percent stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed 100Percent stacked line series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed indexed 100Percent stacked line series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed 100Percent stacked line series element.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.Indexed100PercentStackedLineSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList"/> object contained in the Indexed100PercentStackedLineSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue">
             <summary>
             Represents an Indexed100PercentStackedLineValue.
             </summary>
            ^Indexed100PercentStackedLineValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue"/> object.
            </summary>
            <param name="value1">The Value of indexed 100Percent stacked line value.</param>
            <param name="position">The position of the indexed 100Percent stacked line value.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue.Position">
            <summary>
            Gets the position of the Indexed100PercentStackedLineValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList">
             <summary>
             Represents an Indexed100PercentStackedLineValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList"/> object.
            </summary>
            <param name="lineValue">Value of the indexed 100Percent Stacked line value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed 100Percent stacked line value.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList.Add(System.Single[])">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList"/> object.
            </summary>
            <param name="value1">values of the indexed 100Percent stacked line values.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Stacked100PercentLineValue"/> object array.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed 100Percent stacked line value.</param>
            <param name="position">Position of the indexed 100Percent stacked line value.</param>
            <returns>A<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.Indexed100PercentStackedLineValue"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries">
             <summary>
             Represents an IndexedAreaSeries.
             </summary>
            ^IndexedAreaSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries"/> object. 
            </summary>
            <param name="name">Name of the indexed Area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries"/> object. 
            </summary>
            <param name="name">Name of the indexed Area series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries"/> object. 
            </summary>
            <param name="name">Name of the indexed area series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed area series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries"/> object. 
            </summary>
            <param name="name">Name of the indexed Area series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed area series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed area series.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries"/> object. 
            </summary>
            <param name="name">Name of the indexed Area series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed area series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed area series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries"/> object. 
            </summary>
            <param name="name">Name of the indexed Area series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed area series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed area series.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed area series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed area series.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedAreaSeries.Values">
             <summary>
             Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList"/> object contained in the IndexedAreaSeries.
             </summary>
            <returns>IndexedAreaValueList of the series.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValue">
             <summary>
             Represents an IndexedAreaValue.
             </summary>
            ^IndexedAreaValueChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValue"/> object.
            </summary>
            <param name="value1">The Value of indexed area value.</param>
            <param name="position">The position of the indexed area value.</param>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValue.Position">
            <summary>
            Gets the position of IndexedAreaValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList">
             <summary>
             Represents a list of the IndexedAreaValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed area value.</param>
            <param name="position">Position of the indexed area value.</param>
            <returns>  A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue"/> object.</returns>       
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList"/> object.
            </summary>
            <param name="areaValue">Value of the indexed area value. </param>        
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList.Add(System.Single)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList"/> object.
            </summary>
            <param name="value1">Value of the area value.</param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList.Add(System.Single[])">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedAreaValueList"/> object.
            </summary>
            <param name="value1">Array of values of the area values.</param>
            <returns>a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue"/> object array.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries">
             <summary>
             This class represents the IndexedBarSeries.
             </summary>
            ^IndexedBarSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name"> Name of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name"> Name of the indexed bar series.</param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name"> Name of the indexed bar series.</param>
            <param name="numericXAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
            <param name="indexedYAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name">Name of the indexed bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name">Name of the indexed bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name"> Name of the indexed bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name"> Name of the indexed bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed bar series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name">Name of the indexed bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed bar series.</param>
            <param name="borderWidth">Border width of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name">Name of the indexed bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
            <param name="borderWidth">Border width of the indexed bar series.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for border of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name"> Name of the indexed bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed bar series.</param>
            <param name="borderWidth">Border width of the indexed bar series.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for border of the indexed bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries"/> class.
            </summary>
            <param name="name">Name of the indexed bar series.</param>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed bar series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed bar series.</param>
            <param name="borderWidth"> Border width of the indexed bar series.</param>
            <param name="borderColor"> Border <see cref="T:ceTe.DynamicPDF.Color"/> for border of the indexed bar series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/>of the indexed bar series.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList"/> object contained in the IndexedBarSeries.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedBarSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> object of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue">
             <summary>
             This class represents the IndexedBarValue.
             </summary>
            ^IndexedBarValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue"/> class.
            </summary>
            <param name="value1"> The float indicating value of indexed bar value.</param>
            <param name="position">The integer indicating position of the indexed bar value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue.Position">
            <summary>
            Gets the position of the IndexedBarValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList">
             <summary>
             This class represents the IndexedBarValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList"/> object.
            </summary>
            <param name="value1"> Value of the bar value.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList.Add(System.Single[])">
            <summary>
            Adds an array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue"/> objects to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList"/> object.
            </summary>
            <param name="value1">  Value of the bar values.</param>
            <returns> Array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.BarValue"/> objects.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList"/> object.
            </summary>
            <param name="value1"> Value of the indexed bar value.</param>
            <param name="position">Position of the indexed bar value.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValueList"/> object.
            </summary>
            <param name="indexedBarValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedBarValue"/> object to be added.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries">
             <summary>
             Represents an IndexedColumnSeries. 
             </summary>
            ^IndexedColumnSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class.
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed column series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed column series. </param>
            <param name="borderWidth">Border width of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
            <param name="borderWidth">Border width of the indexed column series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for the border of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed column series. </param>
            <param name="borderWidth">Border width of the indexed column series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for the border of the indexed column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries"/> class. 
            </summary>
            <param name="name">Name of the indexed column series. </param>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed column series. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed column series. </param>
            <param name="borderWidth">Border width of the indexed column series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> for the border of the indexed column series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed column series. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList"/> object contained in the IndexedColumnSeries.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> object of the series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedColumnSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> object of the series. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue">
             <summary>
             This class represents the IndexedColumnValue. 
             </summary>
            ^IndexedColumnValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue"/> class. 
            </summary>
            <param name="value1">The float indicating value of indexed column value. </param>
            <param name="position">The integer indicating position of the indexed column value. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue.Position">
            <summary>
            Gets the position of the IndexedColumnValue. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList">
             <summary>
             This class represents the IndexedColumnValueList. 
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of the column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList.Add(System.Single[])">
            <summary>
            Adds an array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue"/> objects to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of column values to be added. </param>
            <returns> Array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.ColumnValue"/> objects. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList"/> object. 
            </summary>
            <param name="value1">Value of the indexed column value. </param>
            <param name="position">Position of the indexed column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValueList"/> object.  
            </summary>
            <param name="indexedColumnValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedColumnValue"/> to be added. </param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries">
             <summary>
             Represents an IndexedLineSeries.
             </summary>
            ^IndexedLineSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name"> Name of the indexed line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name"> Name of the indexed line series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name">  Name of the indexed line series.</param>
            <param name="xAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name"> Name of the indexed line series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed line series.</param>
            <param name="lineWidth">Line width of the indexed line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name">Name of the indexed lineseries.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed line series.</param>
            <param name="lineWidth">Line width of the indexed line series.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name"> Name of the indexed lineseries.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed line series.</param>
            <param name="lineWidth">Line width of the indexed line series.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed line series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name">Name of the indexed lineseries.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed line series.</param>
            <param name="lineWidth">Line width of the indexed line series.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed line series.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries"/> object.
            </summary>
            <param name="name">Name of the indexed line series.</param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed line series.</param>
            <param name="lineWidth">Line width of the indexed line series.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed line series.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed line series.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed line series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed line series.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> object of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedLineSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList"/> object contained in the IndexedLineSeries.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValue">
             <summary>
             Represents an IndexedLineValue.
             </summary>
            ^IndexedLineValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValue"/> object.
            </summary>
            <param name="value1">The Value of indexed line value.</param>
            <param name="position"> The position of the indexed line value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValue.Position">
            <summary>
            Gets the position of the IndexedLineValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList">
             <summary>
             Represents a list of the IndexedLineValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList"/> object.
            </summary>
            <param name="lineValue">Value of the indexed line value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList"/> object.
            </summary>
            <param name="value1">Value of the line value.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList.Add(System.Single[])">
            <summary>
             Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList"/> object.
            </summary>
            <param name="value1">Array of values of the line values.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue"/> object array.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedLineValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed line value.</param>
            <param name="position">Position of the indexed line value.</param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.LineValue"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries">
             <summary>
             Represents an IndexedStackedAreaSeries.
             </summary>
            ^IndexedStackedAreaSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked area series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed stacked area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked area series</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed stacked area series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the Indexed stacked area series</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked area series</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries"/> element list.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> to be added.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required indexed stacked area series element.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement">
             <summary>
             Represents an IndexedStackedAreaSeriesElement.
             </summary>
            ^IndexedStackedAreaSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked area series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked area series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked area series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked area series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed stacked area series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked area series element.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedAreaSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList"/> object contained in the IndexedStackedAreaSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValue">
             <summary>
             Represents an IndexedStackedAreaValue.
             </summary>
            ^IndexedStackedAreaValue
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValue"/> object.
            </summary>
            <param name="value1">The Value of indexed stacked area value.</param>
            <param name="position">The position of the indexed stacked area value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValue.Position">
            <summary>
            Gets the position of the IndexedStackedAreaValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList">
             <summary>
             Represents a list of the IndexedStackedAreaValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList"/> object.
            </summary>
            <param name="areaValue">indexed stacked area value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList"/> object.
            </summary>
            <param name="value1">Value of the stacked area value.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList.Add(System.Single[])">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.AreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList"/> object.
            </summary>
            <param name="value1">Array of values of the stacked area values.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValue"/> object array.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedAreaValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed stacked area value.</param>
            <param name="position">Position of the indexed stacked area value.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedAreaValue"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries">
             <summary>
             This class represents the IndexedStackedBarSeries.
             </summary>
            ^IndexedStackedBarSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries"/> class.
            </summary>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed stacked bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed stacked bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries"/> class.
            </summary>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed stacked bar series.</param>
            <param name="indexedYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the indexed stacked bar series.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries"/> class.
            </summary>
            <param name="numericXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the indexed stacked bar series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries"/> element list.
            </summary>
            <param name="indexedStackedBarSeriesElement"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> to be added. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required Indexed Stacked Bar Series Element.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement">
             <summary>
             This class represents the IndexedStackedBarSeriesElement.
             </summary>
            ^IndexedStackedBarSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed stacked bar series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed stacked bar series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked bar series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed stacked bar series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked bar series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked bar series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed stacked bar series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked bar series element.</param>
            <param name="borderWidth">Border width of the indexed stacked bar series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> class.
            </summary>
            <param name="name"> Name of the indexed stacked bar series element.</param>
            <param name="borderWidth">Border width of the indexed stacked bar series element.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked bar series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed stacked bar series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked bar series element.</param>
            <param name="borderWidth">Border width of the indexed stacked bar series element.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked bar series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement"/> class.
            </summary>
            <param name="name">Name of the indexed stacked bar series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked bar series element.</param>
            <param name="borderWidth">Border width of the indexed stacked bar series element.</param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of indexed stacked bar series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked bar series element.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedBarSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList"/> object contained in the IndexedStackedBarseriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue">
             <summary>
             This class represents the IndexedStackedBarValue.
             </summary>
            ^IndexedStackedBarValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue"/> class.
            </summary>
            <param name="value1">The float indicating value of indexed stacked bar value.</param>
            <param name="position">The integer indicating position of the indexed stacked bar value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue.Position">
            <summary>
            Gets the position of the IndexedStackedBarValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList">
             <summary>
             This class represents the IndexedStackedBarValueList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList"/> object.
            </summary>
            <param name="value1">Value of stacked bar value.</param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList.Add(System.Single[])">
            <summary>
            Adds an array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue"/> objects to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList"/> object.
            </summary>
            <param name="value1">Value of the stacked bar values.</param>
            <returns>Array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedBarValue"/> objects.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed stacked bar value.</param>
            <param name="position">Position of the indexed stacked bar value.</param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValueList"/> object.
            </summary>
            <param name="indexedStackedBarValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedBarValue"/> to be added.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries">
             <summary>
             Represents the IndexedStackedColumnSeries. 
             </summary>
            ^IndexedStackedColumnSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries"/> class. 
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries"/> class. 
            </summary>
            <param name="indexedXAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed stacked column series. </param>
            <param name="numericYAxis"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries"/> class. 
            </summary>
            <param name="indexedXAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed stacked column series. </param>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked column series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of indexed stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries"/> class. 
            </summary>
            <param name="numericYAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked column series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries"/> element list.
            </summary>
            <param name="indexedStackedColumnSeriesElement"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> to be added. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required Indexed Stacked Column Series Element. </param>
            <returns> The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> object. </returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the series. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement">
             <summary>
             Represents the IndexedStackedColumnSeriesElement. 
             </summary>
            ^IndexedStackedColumnSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of indexed stacked column series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked column series element. </param>
            <param name="borderWidth">Border width of the indexed stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed stacked column series element. </param>
            <param name="borderWidth">Border width of the indexed stacked column series element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name"> Name of the indexed stacked column series element. </param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked column series element. </param>
            <param name="borderWidth"> Border width of the indexed stacked column series element. </param>
            <param name="borderColor"> Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked column series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement"/> class. 
            </summary>
            <param name="name">Name of the indexed stacked column series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked column series element. </param>
            <param name="borderWidth">Border width of the indexed stacked column series element. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked column series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked column series element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedColumnSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList"/> object contained in the IndexedStackedColumnSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue">
             <summary>
             Represents the IndexedStackedColumnValue. 
             </summary>
            ^IndexedStackedColumnValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue"/> class. 
            </summary>
            <param name="value1">The float indicating value of indexed stacked column value. </param>
            <param name="position">The integer indicating position of the indexed stacked column value. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue.Position">
            <summary>
            Gets the position of the IndexedStackedColumnValue. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList">
             <summary>
             Represents the IndexedStackedColumnValueList. 
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of the stacked column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList.Add(System.Single[])">
            <summary>
            Adds an array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue"/> objects to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of stacked column values. </param>
            <returns> Array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedColumnValue"/> objects. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed stacked column value. </param>
            <param name="position">Position of the indexed stacked column value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue"/> object to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValueList"/> object.
            </summary>
            <param name="indexedStackedColumnValue"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedColumnValue"/> object to be added. </param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries">
             <summary>
             Represents an IndexedStackedLineSeries.
             </summary>
            ^IndexedStackedLineSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries"/> object.
            </summary>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed stacked line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked line series.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries"/> object.
            </summary>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the indexed stacked line series.</param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the indexed stacked line series</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked line series</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.Add(ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries"/> elements list.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object to be added.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object at the given index.
            </summary>
            <param name="index">Position of the required indexed stacked line series element.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> of the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement">
             <summary>
             Represents an IndexedStackedLineSeriesElement.
             </summary>
            ^IndexedStackedLineSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked line series element.</param>
            <param name="lineWidth"> Line width of the indexed stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked line series element.</param>
            <param name="lineWidth">Line width of the indexed stacked line Series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed stacked line Series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked line series element.</param>
            <param name="lineWidth">Line width of the indexed stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed stacked line series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.#ctor(System.String,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.
            </summary>
            <param name="name">Name of the indexed stacked line series element.</param>
            <param name="color"> <see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked line series element.</param>
            <param name="lineWidth">Line width of the indexed stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed stacked line series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed indexed stacked line series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.#ctor(System.String,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Marker,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement"/> object.
            </summary>
            <param name="name"> Name of the indexed stacked line series element.</param>
            <param name="lineWidth">Line width of the indexed stacked line series element.</param>
            <param name="style"><see cref="T:ceTe.DynamicPDF.LineStyle"/> of the indexed Stacked Line series element.</param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the indexed stacked line series element.</param>
            <param name="marker"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Marker"/> of the indexed indexed stacked line series element.</param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the indexed stacked line series element.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.IndexedStackedLineSeriesElement.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList"/> object contained in the IndexedStackedLineSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValue">
             <summary>
             Represents an IndexedStackedLineValue.
             </summary>
            ^IndexedStackedLineValue
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValue.#ctor(System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValue"/> object.
            </summary>
            <param name="value1">The Value of indexed stacked line value.</param>
            <param name="position">The position of the indexed stacked line value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValue.Position">
            <summary>
            Gets the position of the IndexedStackedLineValue.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList">
             <summary>
             Represents a list of the IndexedStackedLineValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValue)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList"/> object.
            </summary>
            <param name="lineValue">Value of the indexed Stacked Line Value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList"/> object.
            </summary>
            <param name="value1">Value of the stacked Line Value.</param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList.Add(System.Single[])">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList"/> object.
            </summary>
            <param name="value1">values of the stacked line values.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue"/> object array. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList.Add(System.Single,System.Int32)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.IndexedStackedLineValueList"/> object.
            </summary>
            <param name="value1">Value of the indexed Stacked Line Value.</param>
            <param name="position">Position of the indexed Stacked Line Value.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.StackedLineValue"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis">
             <summary>
             This class can be used to place the IndexedXAxis on the plot area.
             </summary>
            ^IndexedXAxis
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis"/> class. 
            </summary>
            <param name="offset">Offset from the border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis.Min">
            <summary>
            Gets the Minimum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis.Max">
            <summary>
            Gets or sets the Maximum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis.AxisPaddingInterval">
            <summary>
            Gets or sets the padding interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxis.Labels">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabelList"/> object contained in the IndexedXAxis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel">
             <summary>
             Represents the IndexedXAxisLabel.
             </summary>
            ^IndexedXAxisLabelChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the indexed xaxis label.</param>
            <param name="value1">Position of the indexed xaxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel.#ctor(System.String,System.Int32,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the indexed xaxis label.</param>
            <param name="value1">Position of the indexed xaxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the indexed xaxis label.</param>
            <param name="fontSize">Size for the text of the indexed xaxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the indexed xaxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel.Value">
            <summary>
            Gets or sets the position of the IndexedXAxisLabel. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabelList">
             <summary>
             Represents the IndexedXAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabelList"/> object. 
            </summary>
            <param name="indexedXAxisLabel">The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabelList"/>.</param> 
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabelList.Item(System.Int32)">
             <summary>
             Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel"/> at the given integer position. 
             </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedXAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis">
             <summary>
             This class can be used to place the IndexedYAxis on the plot area.
             </summary>
            ^IndexedYAxis
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis"/> class. 
            </summary>
            <param name="offset">Offset from the border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis.Min">
            <summary>
            Gets the Minimum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis.Max">
            <summary>
            Gets or sets the Maximum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis.Labels">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabelList"/> object contained in the IndexedYAxis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxis.AxisPaddingInterval">
            <summary>
            Gets or sets the padding interval of the axis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel">
             <summary>
             Represents the IndexedYAxisLabel.
             </summary>
            ^IndexedYAxisLabel
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the indexed yAxis label.</param>
            <param name="value1">Position of the indexed yAxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel.#ctor(System.String,System.Int32,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the indexed yAxis label.</param>
            <param name="value1">Position of the indexed yAxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the indexed yAxis label.</param>
            <param name="fontSize">Size for the text of the indexed yAxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the indexed yAxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel.Value">
            <summary>
            Gets or sets the position of the IndexedYAxisLabel. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabelList">
             <summary>
             Represents the IndexedYAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel)">
            <summary>
            Adds an <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabelList"/> object.
            </summary>
            <param name="indexedYAxisLabel">The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabelList"/>.</param> 
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabelList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel"/> at the given integer position.
            </summary>
            <returns> the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.IndexedYAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelPosition">
             <summary>
             Represents the position of the XAxisLabels.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelPosition.BelowPlotArea">
            <summary>
            Shows the axis labels below the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelPosition.AbovePlotArea">
            <summary>
            Shows the axis labels above the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelPosition.BelowXAxis">
            <summary>
            Shows the axis labels below the XAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelPosition.AboveXAxis">
            <summary>
            Shows the axis labels above the XAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisLabelPosition.Automatic">
            <summary>
            Shows the axis labels automatically below or above the XAxis depending on the X anchor type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTitlePosition">
             <summary>
             Represents the position of the XAxisTitle.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTitlePosition.BelowPlotArea">
            <summary>
            Shows the XAxis title below the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTitlePosition.AbovePlotArea">
            <summary>
            Shows the XAxis title above the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTitlePosition.BelowXAxis">
            <summary>
            Shows the XAxis title below the XAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTitlePosition.AboveXAxis">
            <summary>
            Shows the XAxis title above the XAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTitlePosition.Automatic">
            <summary>
            Shows the XAxis title automatically below or above the XAxis depending on the X anchor type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelPosition">
             <summary>
             Represents the location of the YAxisLabels.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelPosition.LeftOfPlotArea">
            <summary>
            Shows the axis labels left of the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelPosition.RightOfPlotArea">
            <summary>
            Shows the axis labels right of the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelPosition.LeftOfYAxis">
            <summary>
            Shows the axis labels left of the YAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelPosition.RightOfYAxis">
            <summary>
            Shows the axis labels right of the YAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisLabelPosition.Automatic">
            <summary>
            Show the axis labels automatically left or right of the YAxis depending on the Y anchor type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTitlePosition">
             <summary>
             Represents the position of the YAxisTitle.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTitlePosition.LeftOfPlotArea">
            <summary>
            Shows the YAxis title left of the plot area. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTitlePosition.RightOfPlotArea">
            <summary>
            Shows the YAxis title right of the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTitlePosition.LeftOfYAxis">
            <summary>
            Shows the YAxis title left of the YAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTitlePosition.RightOfYAxis">
            <summary>
            Shows the YAxis title right of the YAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTitlePosition.Automatic">
            <summary>
            Shows the YAxis title automatically left or right of the YAxis depending on the Y anchor type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Legend">
             <summary>
             Represents a Legend.
             </summary>
             <remarks> A Chart can have multiple Legends. Each Chart has one default Legend called DefaultLegend.
             If the Chart's Auto Layout property is true, the Legends will occupy 35% of the Chart width</remarks>
            ^Legend
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Legend.Font"/> of the Legend.		
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.Align">
            <summary>
            Gets or sets the legend labels text alignment.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.FontSize">
            <summary>
            Gets or sets the FontSize of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.TextColor">
            <summary>
            Gets or sets the TextColor of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.BorderColor">
            <summary>
            Gets or sets the BorderColor of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.BackgroundColor">
            <summary>
            Gets or sets the BackgroundColor of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.LegendLabelList">
            <summary>
            Gets or sets the LegendLabelList from the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.RequiredWidth">
            <summary>
             Gets the RequiredWidth to draw the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.TopPadding">
            <summary>
            Gets or sets the TopPadding of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.BottomPadding">
            <summary>
             Gets or sets the BottomPadding of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.LeftPadding">
            <summary>
            Gets or sets the LeftPadding of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.RightPadding">
            <summary>
            Gets or sets the RightPadding of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.LabelSpacing">
            <summary>
            Gets or sets the LabelSpacing of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.SymbolSpacing">
            <summary>
            Gets or sets the SymbolSpacing of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.Visible">
            <summary>
            Gets or sets the visible property of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.X">
            <summary>
            Gets or sets the x position of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.Y">
            <summary>
            Gets or sets the y position of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.BorderWidth">
            <summary>
            Gets or sets the LineWidth of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.BorderStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.Width">
            <summary>
            Gets or sets the width of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.Height">
            <summary>
            Gets or sets the height of the Legend.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Legend.RequiredHeight">
            <summary>
            Gets the RequiredHeight to draw the Legend.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.LegendLabel">
             <summary>
             Represents a LegendLabel.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.Align">
            <summary>
            Gets or sets the legend label alignment.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.Text">
            <summary>
            Gets or sets the text of the LegendLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.SymbolWidth">
            <summary>
            Gets or sets the SymbolWidth of the LegendLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.RequiredWidth">
            <summary>
            Gets the RequiredWidth of the LegendLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.Visible">
            <summary>
            Gets or sets the visible property of the Legend label.
            </summary>         
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.Font"/> of the LegendLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.FontSize">
            <summary>
            Gets or sets the FontSize of the Legend label.
            </summary>  
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabel.TextColor">
            <summary>
            Gets or sets the TextColor of the Legend Label.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.LegendLabelList">
             <summary>
             Represents a LegendLabelList class.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabelList.Count">
             <summary>
            Gets the total number of labels in the LabelList.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendLabelList.Item(System.Int32)">
             <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.LegendLabel"/> from the LabelList based on the given index.
             </summary>
             <returns>The legend label of the given index.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.LegendList">
             <summary>
             Represents a list of Legends.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.LegendList.Add(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates the and adds that <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> to the LegendList. 
            </summary>
            <param name="x">X co-ordinate of the Legend.</param>
            <param name="y">Y co-ordinate of the Legend.</param>
            <param name="width">Width of the Legend.</param>
            <param name="height">Height of the Legend.</param>
            <returns>The created Legend</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.LegendList.Add">
            <summary>
            Creates and adds that <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> to the LegendList. 
            </summary>
            <returns>The created Legend</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendList.Placement">
            <summary>
            Gets or sets the placement of the legends.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendList.Layout">
            <summary>
            Gets or sets the layout of the legends.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendList.LabelsLayout">
            <summary>
            Gets or sets the labels layout of the legends.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> based on the given index.
            </summary>
            <returns>The Legend of the given index.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.LegendList.Count">
            <summary>
            Returns the number of legends in the LegendList.
            </summary>
            <returns>The number of legends in the legendList.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Marker">
             <summary>
             Represents a Marker class.
             </summary>
             <remarks>Markers can only be used with Area, Line and XYScatter charts.</remarks>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetCircle(System.Single)">
            <summary>
            Gets the instance of the Marker type as a Circle. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetSquare(System.Single)">
            <summary>
            Gets the instance of the Marker type as a Square. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetTriangle(System.Single)">
            <summary>
            Gets the instance of the Marker type as a Triangle. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetDiamond(System.Single)">
            <summary>
            Gets the instance of the Marker type as a Diamond. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetCross(System.Single)">
            <summary>
            Gets the instance of the Marker type as a Cross. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetPlus(System.Single)">
            <summary>
            Gets the instance of the Marker type as a Plus. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetDash(System.Single)">
            <summary>
            Gets the instance of the Marker type as a Dash. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Marker.GetAsterisk(System.Single)">
            <summary>
            Gets the instance of the Marker type as an Asterisk. 
            </summary>
            <param name="size">The size of the marker.</param>
            <returns>Returns Marker Object</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Marker.Color">
            <summary>
            Gets or sets the color of the Marker.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Marker.Size">
            <summary>
            Gets or sets the size of the Marker.
            </summary>        
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis">
             <summary>
             This class can be used to place the NumericXAxis on the plot area.
             </summary>
            ^NumericXAxis
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> class. 
            </summary>
            <param name="offset">Offset from the border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis.Min">
            <summary>
            Gets or sets the Minimum value of the axis. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis.Max">
            <summary>
            Gets or sets the Maximum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis.Interval">
            <summary>
            Gets or sets the interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis.Labels">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabelList"/> object contained in the NumericXAxis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel">
             <summary>
             Represents the NumericXAxisLabel.
             </summary>
            ^NumericXAxisLabelChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the numeric xAaxis label.</param>
            <param name="value1">Position of the numeric xAxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel.#ctor(System.String,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the numeric xAxis label.</param>
            <param name="value1">Position of the numeric xAxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the numeric xAxis label.</param>
            <param name="fontSize">Font size for the text of the numeric xAxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the numeric xAxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel.Value">
            <summary>
            Gets or sets the position of the NumericXAxisLabel. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabelList">
             <summary>
             Represents the NumericXAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabelList"/> object.
            </summary>
            <param name="numericXAxisLabel">The<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabelList"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabelList.AxisLabel(System.Single)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel"/> at the given float position. 
            </summary>
            <param name="value1">Position of the required numeric axis label.</param>
            <returns>The<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis">
             <summary>
             This class can be used to place the NumericYAxis on the plot area. 
             </summary>
            ^NumericYAxis
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis.#ctor">
            <summary>
            Initializes a new instance of the <ses cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> class. 
            </summary>
            <param name="offset">Offset from the border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis.Min">
            <summary>
            Gets or sets the minimum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis.Max">
            <summary>
            Gets or sets the Maximum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis.Interval">
            <summary>
            Gets or sets the interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis.Labels">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabelList"/> object contained in the NumericXAxis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel">
             <summary>
             Represents the NumericYAxisLabel.
             </summary>
            ^NumericYAxisLabel
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the numeric yaxis label.</param>
            <param name="value1">Position of the numeric yaxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel.#ctor(System.String,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the numeric yaxis label.</param>
            <param name="value1">Position of the numeric yaxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the numeric yaxis label.</param>
            <param name="fontSize">Size for the text of the numeric yaxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the numeric yaxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel.Value">
            <summary>
            Gets or sets the position of the NumericYAxisLabel.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabelList">
             <summary>
             Represents the NumericYAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel"/>to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabelList"/> object.
            </summary>
            <param name="numericYAxisLabel">The<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabelList"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabelList.AxisLabel(System.Single)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel"/> at the given float position. 
            </summary>
            <param name="value1">Position of the required numeric axis label.</param>
            <returns>the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis">
             <summary>
             This class can be used to place the PercentageXAxis on the plot area.
             </summary>
            ^PercentageXAxis
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis"/> class. 
            </summary>
            <param name="offset">Offset from the border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis.Min">
            <summary>
            Gets or sets the Minimum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis.Interval">
            <summary>
            Gets or sets the interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis.Max">
            <summary>
            Gets or sets the Maximum value  of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxis.Labels">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabelList"/> object contained in the PercentageXAxis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel">
             <summary>
             Represents the PercentageXAxisLabel.
             </summary>
            ^PercentageXAxisLabelChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the percentage xaxis label.</param>
            <param name="value1">Position of the percentage xaxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel.#ctor(System.String,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the percentage xaxis label.</param>
            <param name="value1">Position of the percentage xaxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the percentage xaxis label.</param>
            <param name="fontSize">Size for the text of the percentage xaxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the percentage xaxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel.Value">
            <summary>
            Gets or sets the position of the PercentageXAxisLabel.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabelList">
             <summary>
             Represents the PercentageXAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabelList"/> object.
            </summary>
            <param name="percentageXAxisLabel">The<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabelList"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabelList.AxisLabel(System.Single)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel"/> at the given float position. 
            </summary>
            <param name="value1">Position of the required percentage axis label.</param>
            <returns>The<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageXAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis">
             <summary>
             This class can be used to place the PercentageYAxis on the plot area.
             </summary>
            ^PercentageYAxis
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis"/> class. 
            </summary>
            <param name="offset">Offset from the border of plot area.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis.Min">
            <summary>
            Gets or sets the Minimum value of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis.Interval">
            <summary>
            Gets or sets the interval of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis.Max">
            <summary>
            Gets or sets the Maximum value  of the axis.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxis.Labels">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabelList"/> object contained in the PercentageYAxis.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel">
             <summary>
             Represents the PercentageYAxisLabel.
             </summary>
            ^PercentageYAxisLabel
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel.#ctor(System.String,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel"/> class.
            </summary>
            <param name="text">Text to display in the percentage yAxis label.</param>
            <param name="value1">Position of the percentage yAxis label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel.#ctor(System.String,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel"/> class. 
            </summary>
            <param name="text">Text to display in the percentage yAaxis label.</param>
            <param name="value1">Position of the percentage yAxis label.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> for the text of the percentage yAxis label.</param>
            <param name="fontSize">Size for the text of the percentage yAxis label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the percentage yAxis label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel.Value">
            <summary>
            Gets or sets the position of the PercentageYAxisLabel. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabelList">
             <summary>
             Represents the PercentageYAxisLabelList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabelList.Add(ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabelList"/> object.
            </summary>
            <param name="percentageAxisLabel">The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabelList"/>.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabelList.AxisLabel(System.Single)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel"/> at the given float position. 
            </summary>
            <param name="value1">Position of the required percentage axis label.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.PercentageYAxisLabel"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries">
             <summary>
             Represents a PieSeries.
             </summary>
            ^PieSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries"/> class. 
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries"/> class. 
            </summary>
            <param name="seriesLabel"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> of the pie series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries"/> class. 
            </summary>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the pie series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.#ctor(System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries"/> class. 
            </summary>
            <param name="borderWidth">Border width of the pie series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the pie series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.#ctor(System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries"/> class. 
            </summary>
            <param name="borderWidth">Border width of the pie series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the pie series. </param>
            <param name="legend"> <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the pie series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.#ctor(ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries"/> class. 
            </summary>
            <param name="seriesLabel"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> of the pie series. </param>
            <param name="borderWidth">Border width of the pie series. </param>
            <param name="borderColor">Border <see cref="T:ceTe.DynamicPDF.Color"/> of the pie series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the pie series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.SetArea(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set the area of the PieSeries. 
            </summary>
            <param name="x">X coordinate of the pie series. </param>
            <param name="y">Y coordinate of the pie series. </param>
            <param name="width">Width of the pie series. </param>
            <param name="height">Height of the pie series. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.Elements">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList"/> object contained in the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.BorderWidth">
            <summary>
            Gets or sets the BorderWidth of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the borders of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.Label">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> object to use for the name of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> object to use for the data label of the Pie series. This is the
            default data label for the series.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.DataLabelPosition">
            <summary>
            Gets or sets <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabelPosition"/> enumeration that specifies the display position of the data label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.XOffset">
            <summary>
            Gets or sets the XOffset of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.YOffset">
            <summary>
            Gets or sets the YOffset of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.Radius">
            <summary>
            Gets or sets the radius of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.StartAngle">
            <summary>
            Gets or sets the StartAngle of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.X">
            <summary>
            Gets the X coordinate of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.Y">
            <summary>
            Gets the Y coordinate of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.Width">
            <summary>
            Gets the width of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.Height">
            <summary>
            Gets the height of the PieSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.ValueFormat">
            <summary>
            Gets or sets the format to use for the value of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> object.  
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeries.PercentageFormat">
            <summary>
            Gets or sets the format to use for the percentage of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> object. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement">
             <summary>
             Represents a PieSeriesElement.
             </summary>
            ^PieSeriesElement
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> class. 
            </summary>
            <param name="value1">Value of the pie series element.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.#ctor(System.Single,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> class. 
            </summary>
            <param name="value1">Value of the pie series element. </param>
            <param name="name">Name of the pie series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.#ctor(System.Single,System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> class. 
            </summary>
            <param name="value1">Value of the pie series element. </param>
            <param name="name">Name of the pie series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the pie series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.#ctor(System.Single,System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> class. 
            </summary>
            <param name="value1">Value of the pie series element. </param>
            <param name="name">Name of the pie series element. </param>
            <param name="color"><see cref="T:ceTe.DynamicPDF.Color"/> of the pie series element. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the pie series element. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.#ctor(System.Single,ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> class. 
            </summary>
            <param name="value1">Value of the pie series element. </param>
            <param name="scalarDataLabel"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> of the pie series element. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.Value">
            <summary>
            Gets or sets the value of the PieSeriesElement. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.BorderWidth">
            <summary>
            Gets or sets the BorderWidth of the PieSeriesElement. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the borders of the PieSeriesElement.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.ExplodeLength">
            <summary>
            Gets or sets the ExplodeLength of the PieSeriesElement. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> object to use for the data label of the PieSeriesElement.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList">
             <summary>
             Represents a PieSeriesElementList.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList.Add(ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList"/> object.
            </summary>
            <param name="pieSeriesElement"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> object to be added. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList"/> object.
            </summary>
            <param name="value1">Value of the pie series element. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList.Add(System.Single,System.String)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList"/> object.
            </summary>
            <param name="value1">Value of the pie series element. </param>
            <param name="name">Name of the pie series element </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList.Add(System.Single[])">
            <summary>
            Adds an array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> objects to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList"/> object.
            </summary>
            <param name="value1">Value of the pie series elements. </param>
            <returns> Array of <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> objects. </returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList.Count">
            <summary>
            Gets the number of PieSeriesElements actually contained in the PieSeriesElementList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElementList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> object at the given index. 
            </summary>
            <param name="index">Position of the required pie series element. </param>
            <returns> The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.PieSeriesElement"/> object. </returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.PlotArea">
             <summary>
             This can be used to place the PlotArea on the chart. 
             </summary>
             <remarks>A Chart can have multiple plotArea's. Each Chart has one default plotArea called DefaultPlotarea.
             If the Chart's Auto Layout property is true, the plot area's will occupy 65% of the Chart width.</remarks>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.PlotArea.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the PlotArea to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object. 
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the plot area's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.X">
            <summary>
            Gets or sets the X coordinate of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.Y">
            <summary>
            Gets or sets the Y coordinate of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.Width">
            <summary>
            Gets or sets the width of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.Height">
            <summary>
            Gets or sets the height of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.Series">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList"/> object contained in the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.XAxes">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisList"/> object contained in the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.YAxes">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisList"/> object contained in the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.Chart">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.Chart"/> object of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the background of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.TopTitles">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> object to use for the top title of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.BottomTitles">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> object to use for the bottom title of the PlotArea.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotArea.ClipToPlotArea">
            <summary>
            Gets or sets the boolean value specifying whether to clip data or not. By default it is true.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.PlotAreaList">
             <summary>
             Represents a list of PlotAreas in the chart.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.PlotAreaList.Add(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PlotArea"/> object. 
            </summary>
            <param name="x">X coordinate of the plot area.</param>
            <param name="y">Y coordinate of the plot area.</param>
            <param name="width">Width of the plot area.</param>
            <param name="height">Height of the plot area.</param>
            <returns>The<see cref="T:ceTe.DynamicPDF.PageElements.Charting.PlotArea"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotAreaList.Item(System.Int32)">
             <summary>
             Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PlotArea"/> at the given index. 
             </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.PlotArea"/> based on the index.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.PlotAreaList.Count">
            <summary>
            Gets the number of PlotAreas actually contained in the PlotAreaList.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel">
             <summary>
             This class represents the ScalarDataLabel.
             </summary>
            ^ScalarDataLabelChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the pie series element value.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the pie series element value.</param>
            <param name="showElement">Visible status of the pie series element name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> class. 
            </summary>
            <param name="showValue">Visible status of the pie series element value.</param>
            <param name="showPercentage">Visible status of the pie series element value in percentage.</param>
            <param name="showElement">Visible status of the pie series element name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.#ctor(ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel"/> class. 
            </summary>
            <param name="font"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Font"/> of the scalar data label.</param>
            <param name="fontSize">Size of the scalar data label.</param>
            <param name="color"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Color"/> of the scalar data label.</param>
            <param name="showValue">Visible status of the pie series element value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Font"/> object to use for the font of the ScalarDataLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.FontSize">
            <summary>
            Gets or sets the FontSize of the ScalarDataLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Color"/> object to use for the color of the ScalarDataLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Suffix">
            <summary>
            Gets or sets the suffix of the ScalarDataLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Prefix">
            <summary>
            Gets or sets the prefix of the ScalarDataLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Seperator">
            <summary>
            Gets or sets the separator of the ScalarDataLabel.
            </summary>
            <remarks><font color="red">NOTE: This property is obsolete.</font>Use Separator property instead.</remarks> 
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.Separator">
            <summary>
            Gets or sets the separator of the ScalarDataLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.ShowValue">
            <summary>
            Gets or sets the visible status of the PieSeriesElementValue. By default it is false.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.ShowPercentage">
             <summary>
            Gets or sets the visible status of the PieSeriesElementValue as a percentage. By default it is false.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabel.ShowElement">
            <summary>
            Gets or sets the visible status of the PieSeriesElement name. By default it is false. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabelPosition">
             <summary>
             Represents the position of the ScalarDataLabel.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabelPosition.Inside">
            <summary>
            Inside of ScalarDataLabel Position.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabelPosition.Outside">
            <summary>
            Outside of ScalarDataLabel Position.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.ScalarDataLabelPosition.OutsideWithConnectors">
            <summary>
            Outside of ScalarDataLabel OutsideWithConnectors.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel">
             <summary>
             Represents a SeriesLabel of the PieSeries.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> class. 
            </summary>
            <param name="text">Text to display in the series label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> class. 
            </summary>
            <param name="text">Text to display in the series label.</param>
            <param name="seriesNameDisplay"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay"/> enumeration indicating display position of series label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.#ctor(System.String,ceTe.DynamicPDF.Font,ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> class. 
            </summary>
            <param name="text">Text to display in the series label.</param>
            <param name="font"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.Font"/> for the text of the series label.</param>
            <param name="seriesNameDisplay"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay"/> enumeration indicating display position of series label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> class. 
            </summary>
            <param name="text">Text to display in the series label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the series label.</param>
            <param name="font"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.Font"/> for the text of the series label.</param>
            <param name="fontSize">Size for the text of the series label.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.#ctor(System.String,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel"/> class. 
            </summary>
            <param name="text">Text to display in the series label.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> for the text of the series label.</param>
            <param name="font"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.Font"/> for the text of the series label.</param>
            <param name="fontSize">Size for the text of the series label.</param>
            <param name="seriesNameDisplay"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay"/> enumeration indicating display position of series label.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.Text">
            <summary>
            Gets or sets the text of the SeriesLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.Font"/> object to use for the text of the SeriesLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.FontSize">
            <summary>
            Gets or sets the FontSize for the text of the SeriesLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the SeriesLabel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesLabel.DisplayPosition">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay"/> enumeration that specifies the display position of the SeriesLabel.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList">
             <summary>
             Represents the SeriesList of the plot area.
             </summary>
             <remarks>While adding series to SeriesList, Axis and Legend are created automatically, axis is created
             based on the series type and series color also set automatically if the series is not having the color.  </remarks>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList.Add(ceTe.DynamicPDF.PageElements.Charting.SeriesBase)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.SeriesBase"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList"/> object.
            </summary>
            <param name="series"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.SeriesBase"/> object to be added.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList.Add(ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeries)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeries"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList"/> object. 
            </summary>
            <param name="stackedSeries"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.StackedSeries"/> to be added.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.SeriesBase"/> at the given index.
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageElements.Charting.SeriesBase"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesList.Count">
            <summary>
            Gets the number of Series actually contained.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay">
             <summary>
             Represents the SeriesNameDisplay.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay.Below">
            <summary>
            Below SeriesNameDisplay
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Series.SeriesNameDisplay.Above">
            <summary>
            Above SeriesNameDisplay
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.TickMarks">
             <summary>
             The base class from which x and y TickMarks are derived.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.Interval">
            <summary>
            Gets or sets the interval of the TickMarks.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.LineStyle">
            <summary>
            Gets or sets <see cref="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.LineStyle"/> enumeration that specifies the LineStyle of the TickMarks.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.Width">
            <summary>
            Gets or sets the width of the TickMarks.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.Color"/> object to use for the color of the TickMarks.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.Length">
            <summary>
            Gets or sets the length of the TickMarks.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TickMarks.Visible">
            <summary>
            Gets or sets the visible status of the TickMarks. By default it is true.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Title">
             <summary>
             Represents the Title.
             </summary>
            ^TitleChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Title.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> class.
            </summary>
            <param name="title">Indicating the title.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Title.#ctor(System.String,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> class.
            </summary>
            <param name="title">Indicating the title.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the title.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Title.#ctor(System.String,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> class.
            </summary>
            <param name="title">Indicating the title.</param>
            <param name="font"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Title.Font"/> of the title.</param>
            <param name="fontSize">Size of the the title.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Title.#ctor(System.String,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> class.
            </summary>
            <param name="title">Indicating the title.</param>
            <param name="font"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Title.Font"/> of the title.</param>
            <param name="fontSize">Size of the title.</param>
            <param name="textColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the title.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Title.Titles">
            <summary>
            Gets or sets the text of the Title.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Title.Align">
            <summary>
            Gets or sets the alignment of the Title.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Title.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Title.Font"/> object to use for the font of the Title.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Title.FontSize">
            <summary>
            Gets or sets the FontSize of the Title.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Title.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the TextColor of the Title.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Title.Width">
            <summary>
            Gets or sets the width of the Title.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Title.Height">
            <summary>
            Gets or sets the height of the Title.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.TitleList">
             <summary>
             Represents the TitleList of the chart.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.TitleList.Add(ceTe.DynamicPDF.PageElements.Charting.Title)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.TitleList"/> object. 
            </summary>
            <param name="title">Title to be displayed in the chart.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TitleList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> at the given index. 
            </summary>
            <returns>The<see cref="T:ceTe.DynamicPDF.PageElements.Charting.Title"/> object.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.TitleList.Count">
            <summary>
            Gets the number of Titles actually contained in the TitleList.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisAnchorType">
             <summary>
             Represents the position of the XAxis on the plot area.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisAnchorType.Bottom">
            <summary>
            Shows the XAxis at the bottom of the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisAnchorType.Top">
            <summary>
            Shows the XAxis at the top of the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisAnchorType.Floating">
            <summary>
            Shows the XAxis at the zero position of the plot area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisGridLines">
             <summary>
             This class represents the Gridlines of the XAxis. 
             </summary>
            ^XAxisGridLines
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisGridLines.#ctor">
             <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisGridLines"/> class. 
             </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisGridLines.#ctor(System.Single)">
             <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisGridLines"/> class. 
             </summary>
             <param name="interval">Interval of the x grid lines.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks">
             <summary>
             This class represents the Tick marks of the XAxis. 
             </summary>
            ^XAxisTickMarks
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks"/> class. 
            </summary>
            <param name="interval">Indicating interval of the xAxis tick marks.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarks.Position">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarksPosition"/> enumeration that specifies the position of the XAxisTickMarks.
            </summary>		
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarksPosition">
             <summary>
             Represents the position of the XAxisTickMarks. 
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarksPosition.Above">
            <summary>
            Shows the tick marks above the XAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarksPosition.Below">
            <summary>
            Shows the tick marks below the XAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarksPosition.Across">
            <summary>
            Shows the tick marks across the XAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.XAxisTickMarksPosition.Automatic">
            <summary>
            Shows the tick marks based on the XAxis anchor type. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel">
             <summary>
             Represents an XYScatterDataLabel.
             </summary>
            ^XYScatterDataLabelChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel"/> object. 
            </summary>
            <param name="yValue">Series value visible status. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel"/> object. 
            </summary>
            <param name="yValue">Series value visible status. </param>
            <param name="series">Series name visible status. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel"/> object. 
            </summary>
            <param name="xValue">Series value visible status. </param>
            <param name="yValue">Position visible status. </param>
            <param name="series">Series name visible status. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel.ShowXValue">
            <summary>
            Gets or sets the visible status of the XValue. By default it is false. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel.ShowYValue">
            <summary>
            Gets or sets the visible status of the YValue. By default it is false. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel.Series">
            <summary>
            Gets or sets the visible status of the SeriesName. By default it is false. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries">
             <summary>
             Represents an XYScattSeries.
             </summary>
            ^XYScatterSeries
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="lineDisplay"> lineDisplay of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="marker">Marker of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the XYScatter series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the XYScatter series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the XYScatter series. </param>
            <param name="lineColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the XYScatter series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the XYScatter series. </param>
            <param name="lineColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the XYScatter series. </param>
            <param name="lineWidth">Line width of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the XYScatter series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the XYScatter series. </param>
            <param name="lineColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the XYScatter series. </param>
            <param name="lineWidth">Line width of the XYScatter series. </param>
            <param name="lineStyle"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineStyle"/> of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Marker)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the XYScatter series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the XYScatter series. </param>
            <param name="lineColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the XYScatter series. </param>
            <param name="lineWidth">Line width of the XYScatter series. </param>
            <param name="lineStyle"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineStyle"/> of the XYScatter series. </param>
            <param name="marker"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.Marker"/> of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object.
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the XYScatter series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the XYScatter series. </param>
            <param name="lineColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the XYScatter series. </param>
            <param name="lineWidth">Line width of the XYScatter series. </param>
            <param name="lineStyle"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineStyle"/> of the XYScatter series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the XYScatter series. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.#ctor(System.String,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis,ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,ceTe.DynamicPDF.PageElements.Charting.Legend,ceTe.DynamicPDF.PageElements.Charting.Marker,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries"/> object. 
            </summary>
            <param name="name">Name of the XYScatter series. </param>
            <param name="xAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the XYScatter series. </param>
            <param name="yAxis"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the XYScatter series. </param>
            <param name="lineColor"><see cref="T:ceTe.DynamicPDF.Color"/> of the XYScatter series. </param>
            <param name="lineWidth">Line width of the XYScatter series. </param>
            <param name="lineStyle"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineStyle"/> of the XYScatter series. </param>
            <param name="legend"><see cref="T:ceTe.DynamicPDF.PageElements.Charting.Legend"/> of the XYScatter series. </param>
            <param name="marker"><see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.Marker"/> of the XYScatter series. </param>
            <param name="lineDisplay">LineDisplay of the XYScatter series. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.XValueFormat">
            <summary>
            Gets or sets the XValueFormatString of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.YValueFormat">
            <summary>
            Gets or sets the YValueFormatString of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel"/> of the XYScatter series. This is the
            default data label for the series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.Marker">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.Marker"/> of the XYScatter series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineJoin">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineJoin"/> of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineCap">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineCap"/> of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineDisplay">
            <summary>
            Gets or sets the LineDisplay status of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.Width">
            <summary>
            Gets or sets the LineWidth of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.Values">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList"/> of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.LineStyle"/> of the XYScatterSeries. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.XAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericXAxis"/> of the series. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Series.XYScatterSeries.YAxis">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.NumericYAxis"/> of the series.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue">
             <summary>
             Represents an XYScatterValue.
             </summary>
            ^XYScatterValueChart
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue"/> object. 
            </summary>
            <param name="yValue">The xAxis value of XYScatter value. </param>
            <param name="xValue">The yAxis value of the XYScatter value. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue.#ctor(System.Single,System.Single,ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue"/> object. 
            </summary>
            <param name="yValue">The yAxis value of XYScatter value. </param>
            <param name="xValue">The yAxis value of the XYScatter value. </param>
            <param name="dataLabel">The dataLabel of the XYScatter value.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue.DataLabel">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.XYScatterDataLabel"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue.ScatterYValue">
            <summary>
            Gets the YValue of the XYScatterValue. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue.ScatterXValue">
            <summary>
            Gets the XValue of the XYScatterValue. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList">
             <summary>
             Represents a list of the XYScatterValues.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList.Add(System.Single,System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList"/> object.
            </summary>
            <param name="val">Value of the XYScatter value. </param>
            <param name="position">Position of the XYScatter value. </param>
            <returns> A <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue"/> object. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList.Add(ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValue"/> object to the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList"/> object.
            </summary>
            <param name="val">The XYScatter value to be added to the XYScatter value list. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList.Count">
            <summary>
            Gets the total number of XYScatterValues in the XYScatterValueList. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Values.XYScatterValueList.Item(System.Int32)">
            <summary>
            Gets the XYScatterValue from the XYScatterValueList based on the given index. 
            </summary>
            <param name="index">Index of the XYScatter value. </param>
            <returns>XYScatterValue in the specified index. </returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisAnchorType">
             <summary>
             Represents the position of the YAxis on the plot area.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisAnchorType.Left">
            <summary>
            Shows the YAxis at the left side of the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisAnchorType.Right">
            <summary>
            Shows the YAxis at the right side of the plot area.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisAnchorType.Floating">
            <summary>
            Shows the YAxis at the zero position of the plot area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisGridLines">
             <summary>
             This class represents the Gridlines of YAxis.
             </summary>
            ^YAxisGridLines
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisGridLines.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisGridLines"/> class.
            </summary>		
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisGridLines.#ctor(System.Single)">
             <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisGridLines"/> class. 
             </summary>
             <param name="interval">Interval of yAxis grid lines.</param>															
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks">
             <summary>
             This class represents the TickMarks of the YAxis. 
             </summary>
            ^YAxisTickMarks
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks"/> class. 
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks.#ctor(System.Single)">
             <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks"/> class. 
             </summary>
             <param name="interval">Interval of the yAxis tick marks.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarks.Position">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarksPosition"/> enumeration that specifies the position of the YaxisTickMarks.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarksPosition">
             <summary>
             Represents the position of the YAxisTickMarks. 
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarksPosition.Right">
            <summary>
            Shows the tick marks right of the YAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarksPosition.Left">
            <summary>
            Shows the tick marks left of the YAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarksPosition.Across">
            <summary>
            Shows the tick marks across the YAxis.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Charting.Axes.YAxisTickMarksPosition.Automatic">
            <summary>
            Shows the tick marks based on the YAxis anchor type. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Circle">
             <summary>
             Represents a circle.
             </summary>
             <remarks>This class can be used to place circles on a page.</remarks>
            ^Circle
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radius">Radius of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radiusX">Horizontal radius of the circle.</param>
            <param name="radiusY">Vertical radius of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radius">Radius of the circle.</param>
            <param name="borderColor">Color of the border of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radius">Radius of the circle.</param>
            <param name="borderWidth">Width of the border of the circle.</param>
            <param name="borderStyle">Style of the border of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radius">Radius of the circle.</param>
            <param name="borderColor">Color of the border of the circle.</param>
            <param name="borderWidth">Width of the border of the circle.</param>
            <param name="borderStyle">Style of the border of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radius">Radius of the circle.</param>
            <param name="borderColor">Color of the border of the circle.</param>
            <param name="fillColor">Fill color of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radius">Radius of the circle.</param>
            <param name="borderColor">Color of the border of the circle.</param>
            <param name="fillColor">Fill color of the circle.</param>
            <param name="borderWidth">Width of the border of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radius">Radius of the circle.</param>
            <param name="borderColor">Color of the border of the circle.</param>
            <param name="fillColor">Fill color of the circle.</param>
            <param name="borderWidth">Width of the border of the circle.</param>
            <param name="borderStyle">Style of the border of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Circle"/> class.
            </summary>
            <param name="x">X coordinate of the circle.</param>
            <param name="y">Y coordinate of the circle.</param>
            <param name="radiusX">Horizontal radius of the circle.</param>
            <param name="radiusY">Vertical radius of the circle.</param>
            <param name="borderColor">Color of the border of the circle.</param>
            <param name="fillColor">Fill color of the circle.</param>
            <param name="borderWidth">Width of the border of the circle.</param>
            <param name="borderStyle">Style of the border of the circle.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Circle.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the circle to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the circle's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.BorderStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> object that represents the border style of the circle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.BorderWidth">
            <summary>
            Gets or sets the border width of the circle.
            </summary>
            <remarks>To force the borders not to appear set the border width to any value 0 or less.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the border of the circle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.FillColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the fill of the circle.
            </summary>
            <remarks>To force no color to appear in the rectangle (only borders) set the fill color to null (Nothing in Visual Basic).</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.X">
            <summary>
            Gets or sets the X coordinate of the circle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.Y">
            <summary>
            Gets or sets the Y coordinate of the circle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.RadiusX">
            <summary>
            Gets or sets the horizontal radius of the circle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Circle.RadiusY">
            <summary>
            Gets or sets the vertical radius of the circle.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Column">
             <summary>
             <font color="red">Obsolete.</font> Represents a column in a table.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font> Use <see cref="T:ceTe.DynamicPDF.PageElements.Column2"/> class instead.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Column.Width">
            <summary>
            Gets the width of the column.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.ColumnList">
             <summary>
             <font color="red">Obsolete.</font> Represents a list of columns in a table.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font> Use <see cref="T:ceTe.DynamicPDF.PageElements.Column2List"/> class instead.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ColumnList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Column"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.ColumnList"/>
            </summary>
            <param name="width">Width of the column to be added.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Column"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ColumnList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.PageElements.ColumnList"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.PageElements.ColumnList"/>.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ColumnList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:ceTe.DynamicPDF.PageElements.ColumnList"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ColumnList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Column"/> at the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.ContentArea">
             <summary>
             Represents group of content with area.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ContentArea.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.ContentArea"/> class.
            </summary>
            <param name="x">X coordinate of the content area.</param>
            <param name="y">Y coordinate of the content area.</param>
            <param name="width">Width of the content area.</param>
            <param name="height">Height of the content area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ContentArea.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the content area to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the content area's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ContentArea.X">
            <summary>
            Gets or sets the X coordinate of the content area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ContentArea.Y">
            <summary>
            Gets or sets the Y coordinate of the content area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ContentArea.Width">
            <summary>
            Gets or sets the width of the content area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ContentArea.Height">
            <summary>
            Gets or sets the height of the content area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.CurveFromSubPath">
             <summary>
             Represents a Bezier curve from the previous point.
             </summary>
             <remarks>This class, when added to a <see cref="T:ceTe.DynamicPDF.PageElements.Path"/>, is used to create a Bezier curve 
             from the CurveToSubPath's specified location back to the last point in the <see cref="T:ceTe.DynamicPDF.PageElements.Path"/>.</remarks>
            ^CurveFromSubPath
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.SubPath">
             <summary>
             Base class from which all sub paths are defined.
             </summary>
             <remarks>This class is the base class for all sub paths.  SubPath's derived classes are: <see cref="T:ceTe.DynamicPDF.PageElements.CurveFromSubPath"/>, <see cref="T:ceTe.DynamicPDF.PageElements.CurveToSubPath"/>, <see cref="T:ceTe.DynamicPDF.PageElements.CurveSubPath"/> and <see cref="T:ceTe.DynamicPDF.PageElements.LineSubPath"/></remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.SubPath.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the sub path to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>PageWriter</b> to receive the sub path's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CurveFromSubPath.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.CurveFromSubPath"/> class.
            </summary>
            <param name="x">X coordinate of the destination.</param>
            <param name="y">Y coordinate of the destination.</param>
            <param name="sourceControlPointX">X coordinate of the sources control point.</param>
            <param name="sourceControlPointY">Y coordinate of the sources control point.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CurveFromSubPath.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the sub path to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the sub path's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveFromSubPath.X">
            <summary>
            Gets or sets the X coordinate of the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveFromSubPath.Y">
            <summary>
            Gets or sets the Y coordinate of the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveFromSubPath.SourceControlPointX">
            <summary>
            Gets or sets the X coordinate of the sources control point.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveFromSubPath.SourceControlPointY">
            <summary>
            Gets or sets the Y coordinate of the sources control point.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.CurveSubPath">
             <summary>
             Represents a Bezier curve sub path.
             </summary>
             <remarks>This class, when added to a <see cref="T:ceTe.DynamicPDF.PageElements.Path"/>, is used to create a Bezier curve 
             to the CurveSubPath's specified location using the source and destination control points.</remarks>
            ^CurveSubPath
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CurveSubPath.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.CurveSubPath"/> class.
            </summary>
            <param name="x">X coordinate of the destination.</param>
            <param name="y">Y coordinate of the destination.</param>
            <param name="sourceControlPointX">X coordinate of the sources control point.</param>
            <param name="sourceControlPointY">Y coordinate of the sources control point.</param>
            <param name="destinationControlPointX">X coordinate of the destinations control point.</param>
            <param name="destinationControlPointY">Y coordinate of the destinations control point.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CurveSubPath.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the sub path to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the sub path's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveSubPath.X">
            <summary>
            Gets or sets the X coordinate of the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveSubPath.Y">
            <summary>
            Gets or sets the Y coordinate of the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveSubPath.SourceControlPointX">
            <summary>
            Gets or sets the X coordinate of the sources control point.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveSubPath.SourceControlPointY">
            <summary>
            Gets or sets the Y coordinate of the sources control point.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveSubPath.DestinationControlPointX">
            <summary>
            Gets or sets the X coordinate of the destinations control point.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveSubPath.DestinationControlPointY">
            <summary>
            Gets or sets the Y coordinate of the destinations control point.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.CurveToSubPath">
             <summary>
             Represents a Bezier curve to the next sub path.
             </summary>
             <remarks>This class, when added to a <see cref="T:ceTe.DynamicPDF.PageElements.Path"/>, is used to create a Bezier curve 
             to the CurveToSubPath's specified location.</remarks>
            ^CurveToSubPath
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CurveToSubPath.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.CurveSubPath"/> class.
            </summary>
            <param name="x">X coordinate of the destination.</param>
            <param name="y">Y coordinate of the destination.</param>
            <param name="destinationControlPointX">X coordinate of the destinations control point.</param>
            <param name="destinationControlPointY">Y coordinate of the destinations control point.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.CurveToSubPath.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the sub path to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the sub path's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveToSubPath.X">
            <summary>
            Gets or sets the X coordinate of the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveToSubPath.Y">
            <summary>
            Gets or sets the Y coordinate of the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveToSubPath.DestinationControlPointX">
            <summary>
            Gets or sets the X coordinate of the destinations control point.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.CurveToSubPath.DestinationControlPointY">
            <summary>
            Gets or sets the Y coordinate of the destinations control point.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle">
             <summary>
             Represents an formatted text area style.
             </summary>
             <remarks>This class can be used to define a certain style of text to be used with an <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextArea"/>.</remarks>
            ^FormattedTextAreaStyle
            ^Lic.Generator.Pro
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Bold">
            <summary>
            Represents bold text.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Italic">
            <summary>
            Represents italic text.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Underline">
            <summary>
            Represents underlined text.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Paragraph">
            <summary>
            Represents the paragraph style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Font">
            <summary>
            Represents the font style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Line">
            <summary>
            Represents the line style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.TextRise">
            <summary>
            Represents the rise level for superscript ot subscript.
            </summary>summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.#ctor(ceTe.DynamicPDF.FontFamily,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle"/> structure.
            </summary>
            <param name="fontFamily">Font family of the style.</param>
            <param name="fontSize">Font size of the style.</param>
            <param name="preserveWhiteSpace">Preserve whitespace property of the style.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Equals(System.Object)">
            <summary>
            Tests equality of styles.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle"/>.</param>
            <returns><b>true</b> if the two styles are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.GetFont">
            <summary>
            Returns the <see cref="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Font"/> to use from the <see cref="T:ceTe.DynamicPDF.FontFamily"/> of the style.
            </summary>
            <returns>The <see cref="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.Font"/> of the style</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle">
            <summary>
            Represents the style of a paragraph.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.SpacingBefore">
            <summary>
            Represents the spacing before a paragraph.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.SpacingAfter">
            <summary>
            Represents the spacing after a paragraph.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.Indent">
            <summary>
            Represents the indention of the first line of a paragraph.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.LeftIndent">
            <summary>
            Represents the left indentation of a paragraph.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.RightIndent">
            <summary>
            Represents the right indentation of a paragraph.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.Align">
            <summary>
            Represents the alignment of a paragraph.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.AllowOrphanLines">
            <summary>
            Represents if paragraphs should be allowed to break leaving one line on a page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.PreserveWhiteSpace">
            <summary>
            Represents if a white space should be preserved.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.Equals(System.Object)">
            <summary>
            Tests equality of paragraph styles.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle"/>.</param>
            <returns><b>true</b> if the two paragraph styles are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.ParagraphStyle"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.LineStyle">
            <summary>
            Represents the style of a line.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.LineStyle.Leading">
            <summary>
            Represents the leading of the line.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.LineStyle.LeadingType">
            <summary>
            Represents the leading type of the line.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.LineStyle.Equals(System.Object)">
            <summary>
            Tests equality of line styles.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.LineStyle"/>.</param>
            <returns><b>true</b> if the two line styles are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.LineStyle.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.LineStyle"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle">
            <summary>
            Represents the style of a font.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle.Face">
            <summary>
            Represents the font face.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle.Size">
            <summary>
            Represents the font size.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle.Color">
            <summary>
            Represents the font color.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle.Equals(System.Object)">
            <summary>
            Tests equality of font styles.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle"/>.</param>
            <returns><b>true</b> if the two font styles are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle.FontStyle"/> object.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.Behavior">
             <summary>
             To specify the field's highlighting mode.
             The visual effect to be used when the mouse button
             is pressed or held down inside its active area.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.Behavior.CreatePush(System.String)">
            <summary>
            Creates a push behavior with down label.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.Behavior.CreatePush(System.String,System.String)">
            <summary>
            Creates a push behavior with down label and rollover label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Behavior.None">
            <summary>
            No highlighting.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Behavior.Invert">
            <summary>
            Invert the contents of a field's rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Behavior.Outline">
            <summary>
            Invert the field’s border.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Behavior.Push">
            <summary>
            The field's rectangle to appear as if it were 
            being “pushed” below the surface of the page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.BorderStyle">
             <summary>
             A border style class specifying the characteristics
             of a field’s border. An field may optionally
             be surrounded by a border when displayed or printed.
             If present, the border is drawn completely inside a 
             field rectangle.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.SetThin">
            <summary>
            Sets the border line width as thin.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.SetMedium">
            <summary>
            Sets the border line width as medium.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.SetThick">
            <summary>
            Sets the border line width as Thick.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the BorderStyle's dictionary entries to the given
            <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.Solid">
            <summary>
            A solid rectangle surrounding a field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.Dashed">
            <summary>
            A dashed rectangle surrounding a field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.Beveled">
            <summary>
            A simulated embossed rectangle that appears to
            be raised above the surface of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.Inset">
            <summary>
            A simulated engraved rectangle that appears to
            be recessed below the surface of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.Underline">
            <summary>
            A single line along the bottom of a field's rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.BorderStyle.Thickness">
            <summary>
            Gets and Sets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.BorderThickness"/>for the field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.Button">
             <summary>
             Represents the button field of a interactive forms.
             A button is a purely interactive control that responds
             immediately to user input without retaining a permanent value.
             </summary>
             <remarks>For more details on button fields take a look at the <a href="Interactive Forms.html">Interactive Forms</a> topic.</remarks>
            ^Button
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.Button.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.Button"/> class.
            </summary>
            <param name="name"> Name of a button. </param>
            <param name="x"> X coordinate of a button. </param>
            <param name="y"> Y coordinate of a button. </param>
            <param name="width"> Width of a button. </param>
            <param name="height"> Height of a button. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.Button.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the button to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the button's output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Button.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Button.FontSize">
            <summary>
            Gets or Sets the font size for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Button.Label">
            <summary>
            Gets or Sets the label/caption of a field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Button.Behavior">
            <summary>
            Gets or Sets the field’s highlighting mode, the visual effect to be used
            when the mouse button is pressed or held down inside its active area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.Button.Action">
            <summary>
            Gets or Sets the action associated with this button.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.CheckBox">
             <summary>
             Represents the check box field of a interactive forms.
             A check box toggles between two states, on and off.
             </summary>
             <remarks>For more details on check box fields take a look at the <a href="Interactive Forms.html">Interactive Forms</a> topic.</remarks>
            ^CheckBox
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.CheckBox.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.CheckBox"/> class.
            </summary>
            <param name="name"> Name of a check box. </param>
            <param name="x"> X coordinate of a check box. </param>
            <param name="y"> Y coordinate of a check box. </param>
            <param name="width"> Width of a check box. </param>
            <param name="height"> Height of a check box. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.CheckBox.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the checkbox to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the checkbox's output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.CheckBox.FontSize">
            <summary>
            Gets or Sets the font size for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.CheckBox.DefaultChecked">
            <summary>
            Gets or Sets the checkbox's default checked state.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.CheckBox.ExportValue">
            <summary>
            Gets or Sets the export value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.CheckBox.Symbol">
            <summary>
            Gets or Sets the type of ‘check’ to appear in the checkbox.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.CheckBox.NoExport">
            <summary>
            Gets or Sets the export state for the field.
            If set, the field will not be exported by a submit-form action.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.ComboBox">
             <summary>
             Represents the combo box field of a interactive forms.
             A combo box consisting of a drop list.
             </summary>
             <remarks>For more details on combo box fields take a look at the <a href="Interactive Forms.html">Interactive Forms</a> topic.</remarks>
            ^ComboBox
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.ChoiceField">
             <summary>
             Represents the choice field of a interactive forms.
             A base class for all form field of type choice form field.
             A choice field contains several text items,
             one or more of which may be selected as the field value.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ChoiceField.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Creates a new instance of <code>ListBoxField</code> class.
             </summary>
             <param name="name"> Name of a choice field.</param>
             <param name="x"> X coordinate of a choice field.</param>
             <param name="y">Y coordinate of a choice field.</param>
             <param name="width"> Width of a choice field.</param>
             <param name="height"> Height of a choice field.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceField.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceField.FontSize">
            <summary>
            Gets or Sets the font size for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceField.NoExport">
            <summary>
            Gets or Sets the export state of a choice field.
            If set, the field will not be exported by a submit-form action.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ChoiceField.Items">
            <summary>
            Gets the list of items for the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.ChoiceField"/>.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ComboBox.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.ComboBox"/> class.
            </summary>
            <param name="name"> Name of a combo box. </param>
            <param name="x"> X coordinate of a combo box. </param>
            <param name="y"> Y coordinate of a combo box. </param>
            <param name="width"> Width of a combo box. </param>
            <param name="height"> Height of a combo box. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ComboBox.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the combo box to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the combo box's output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ComboBox.Editable">
            <summary>
            Gets or Sets the editable state of a combo box.
            If set, the combo box includes an editable text box as well as
            a drop list; if clear, it includes only a drop list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ComboBox.Required">
            <summary>
            Gets or Sets the value specifying the required state of a field.
            If set, the field must have a value at the time
            it is exported by a submit-form action.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.FormExportFormat">
            <summary>
            Represents the forms export formats.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.FormExportFormat.HtmlPost">
            <summary>
            If set, field names and values are submitted in HTML Form format.
            Using a POST request. By default, it is set.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.FormExportFormat.HtmlGet">
            <summary>
             If set, field names and values are submitted in HTML Form format.
             Using a GET request.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.FormExportFormat.FDF">
            <summary>
             If set, they are submitted in Forms Data Format (FDF).
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.FormExportFormat.XML">
            <summary>
             If set, field names and values are submitted in XML format.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.FormExportFormat.PDF">
            <summary>
             If set, the document is submitted in PDF format, using 
             the MIME content type application/pdf.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.ListBox">
             <summary>
             Represents the list box field of a interactive forms.
             </summary>
             <remarks>For more details on list box fields take a look at the <a href="Interactive Forms.html">Interactive Forms</a> topic.</remarks>
            ^ListBox
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ListBox.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.ListBox"/> class.
            </summary>
            <param name="name"> Name of a list box.</param>
            <param name="x"> X coordinate of a list box.</param>
            <param name="y"> Y coordinate of a list box.</param>
            <param name="width"> Width of a list box.</param>
            <param name="height"> Height of a list box.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ListBox.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the list box to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the list box's output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.ListBox.Multiselect">
            <summary>
            Gets or Sets the multi select flag status of list box.
            If set, more than one of the field’s option items may be selected
            simultaneously; if clear, no more than one item at a time may be selected.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.PushBehavior">
             <summary>
             A type of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.Behavior"/>.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.PushBehavior.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.PushBehavior"/> class.
            </summary>
            <param name="downLabel"> A Label/caption on push button. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.PushBehavior.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.PushBehavior"/> class.
            </summary>
            <param name="downLabel"> A down label on push button. </param>
            <param name="rolloverLabel"> A rollover label on push button. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.PushBehavior.DownLabel">
            <summary>
            Gets or Sets the alternate caption on push button.
            Displayed when the mouse button is pressed within its active area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.PushBehavior.RolloverLabel">
            <summary>
            Gets or Sets the rollover caption on push button.
            Displayed when the user rolls the cursor into its
            active area without pressing the mouse button.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.RadioButton">
             <summary>
             Represents the radio button field of a interactive forms.
             Radio buttons are a set of related toggles, at most one of
             which may be on at any given time; selecting any one of the
             buttons automatically deselects all the others.
             </summary>
             <remarks>For more details on radio button fields take a look at the <a href="Interactive Forms.html">Interactive Forms</a> topic.</remarks>
            ^RadioButton
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.RadioButton.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.RadioButton"/> class.
             </summary>
             <param name="name"> Name of a radio button. </param>
             <param name="x"> X coordinate of a radio button. </param>
             <param name="y"> Y coordinate of a radio button. </param>
             <param name="width"> Width of a radio button. </param>
             <param name="height"> Height of a radio button. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.RadioButton.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the radio button to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the radio button's output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.RadioButton.DefaultChecked">
            <summary>
             Gets or Sets the radio button default checked state.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.RadioButton.ExportValue">
            <summary>
            Gets or Sets the export value.
            To create a set of mutually exclusive radio buttons
            (i.e., where only one can be selected at a time),
            give the fields the same name but different export values.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.RadioButton.Required">
            <summary>
            Gets or Sets the required state for the field.
            If set, the field must have a value at the time
            it is exported by a submit-form action.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.RadioButton.NoExport">
            <summary>
            Gets or Sets the export state for the field.
            If set, the field will not be exported by a submit-form action.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.RadioButton.RadiosInUnison">
            <summary>
            Gets or Sets the radio button's unison state.
            Buttons with the same name and value are selected in unison.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.RadioButton.Symbol">
            <summary>
            Gets or Sets the type of �check� to appear in the checkbox.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.ResetAction">
             <summary>
             Class represents the reset-form action.
             A reset-form action resets selected interactive form fields to their
             default values.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ResetAction.#ctor">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.ResetAction"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.ResetAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the reset-form action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the
            reset-form's action output. </param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.SubmitAction">
             <summary>
             Class represents the submit-form actions.
             A submit-form action transmits the names and values of selected
             interactive form fields to a specified uniform resource locator(URL).
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SubmitAction.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SubmitAction"/> class.
            </summary>
            <param name="url"> URL to which the submit-form action transmits the
            names and values. By default, field names and values
            are submitted in HTML Form format. Using a POST request. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SubmitAction.#ctor(System.String,ceTe.DynamicPDF.PageElements.Forms.FormExportFormat)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SubmitAction"/> class.
            </summary>
            <param name="url"> URL to which the submit-form action transmits the names and values. </param>
            <param name="exportFormat"> Specifies the submit export format type. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.SubmitAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the submit-form action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the
            submit-form's action output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SubmitAction.Url">
            <summary>
            Gets or Sets the url.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.SubmitAction.ExportFormat">
            <summary>
            Gets or Sets the export format of a submit action.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.Symbol">
             <summary>
              To specify the key-values used to designate
              the type of ‘check’ to appear in the checkbox.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.Symbol.Check">
            <summary>
            Check mark.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.Symbol.Circle">
            <summary>
            Circle mark.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.Symbol.Cross">
            <summary>
            Cross mark.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.Symbol.Diamond">
            <summary>
            Diamond mark.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.Symbol.Square">
            <summary>
            Square mark.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Forms.Symbol.Star">
            <summary>
            Star mark.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Forms.TextField">
             <summary>
             Represents the text field of a interactive forms.
             Text fields are boxes or spaces in which the user
             can enter text from the keyboard.
             </summary>
             <remarks>For more details on text fields take a look at the <a href="Interactive Forms.html">Interactive Forms</a> topic.</remarks>
            ^TextField
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.TextField.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.PageElements.Forms.TextField"/> class.
            </summary>
            <param name="name"> Name of a text field. </param>
            <param name="x"> X coordinate of a text field. </param>
            <param name="y"> Y coordinate of a text field. </param>
            <param name="width"> Width of a text field. </param>
            <param name="height"> Height of a text field. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Forms.TextField.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the text field to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the text field's output. </param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.Font">
            <summary>
            Gets or Sets the font for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.FontSize">
            <summary>
            Gets or Sets the font size for the field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.DefaultValue">
            <summary>
            Gets or Sets the text field's default value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.MaxLength">
            <summary>
            Gets or Sets the maximum length of characters in a text field.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.TextAlign">
            <summary>
            Sets the text align.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.Password">
            <summary>
            Gets or Sets the text field intended for entering a secure password
            that should not be echoed visibly to the screen.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.MultiLine">
            <summary>
            Gets or Sets the text field to contain multiple lines.
            If set, the field may contain multiple lines of text;
            if clear, the field�s text is restricted to a single line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.Comb">
            <summary>
            Gets or Sets the text field to be comb.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.Required">
            <summary>
            Gets or Sets the required state for the field.
            If set, the field must have a value at the time
            it is exported by a submit-form action.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Forms.TextField.NoExport">
            <summary>
            Gets or Sets the export state for the field.
            If set, the field will not be exported by a submit-form action.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.IListProperties">
            <summary>
            Represents the properties of the List and List item.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.Font">
            <summary>
            Gets the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.FontSize">
            <summary>
            Gets size of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.Leading">
            <summary>
            Gets the leading for the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.RightIndent">
            <summary>
            Gets the Right Indent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.LeftIndent">
            <summary>
            Gets the left indent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.TextAlign">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.IListProperties.TextAlign"/> enumeration that specifies the text alignment.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.TextColor">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Color"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.TextOutlineColor">
            <summary>
            Gets the text outline <see cref="T:ceTe.DynamicPDF.Color"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.TextOutlineWidth">
            <summary>
            Gets the text outline width.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.BulletAlign">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Align"/> enumeration that specifies the Bullet alignment.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.Level">
            <summary>
            Gets the level
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.ParagraphIndent">
            <summary>
            Gets the ParagraphIndent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.BulletAreaWidth">
            <summary>
            Gets the BulletAreaWidth.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.StrikeThrough">
            <summary>
            Gets the Strikethrough.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.RightToLeft">
            <summary>
            Gets a value indicating if text should be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.BulletSize">
            <summary>
            Gets the BulletSize.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.ListItemTopMargin">
            <summary>
            Gets the TopMargin.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.ListItemBottomMargin">
            <summary>
            Gets the BottomMargin.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.BulletSuffix">
            <summary>
            Get the Bullet suffix.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.BulletPrefix">
            <summary>
            Get the Bullet prefix.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.IListProperties.BulletType">
            <summary>
            Get the Bullet Numbering Style.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Image">
             <summary>
             Represents an image.
             </summary>
             <remarks>This class can be used to place images on a page.  If an image will be used more than once, 
             please see the <a href="Image ReUse.html">Image Reuse</a> topic.</remarks>
            ^Image
            ^Lic.Generator.Community.GIF
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Image"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
            <param name="x">X coordinate of the image.</param>
            <param name="y">Y coordinate of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.#ctor(ceTe.DynamicPDF.Imaging.ImageData,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Image"/> class.
            </summary>
            <param name="imageData"><see cref="P:ceTe.DynamicPDF.PageElements.Image.ImageData"/> object containing the image data.</param>
            <param name="x">X coordinate of the image.</param>
            <param name="y">Y coordinate of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.#ctor(System.Drawing.Bitmap,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Image"/> class.
            </summary>
            <param name="bitmap"><see cref="T:System.Drawing.Bitmap"/> object containing the image data.</param>
            <param name="x">X coordinate of the image.</param>
            <param name="y">Y coordinate of the image.</param>
            <remarks><font color="red">This constructor is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.#ctor(System.String,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Image"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
            <param name="x">X coordinate of the image.</param>
            <param name="y">Y coordinate of the image.</param>
            <param name="scale">The scale to use when rendering the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.#ctor(ceTe.DynamicPDF.Imaging.ImageData,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Image"/> class.
            </summary>
            <param name="imageData"><see cref="P:ceTe.DynamicPDF.PageElements.Image.ImageData"/> object containing the image data.</param>
            <param name="x">X coordinate of the image.</param>
            <param name="y">Y coordinate of the image.</param>
            <param name="scale">The scale to use when rendering the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.#ctor(System.IO.Stream,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Image"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the image data.</param>
            <param name="x">X coordinate of the image.</param>
            <param name="y">Y coordinate of the image.</param>
            <param name="scale">The scale to use when rendering the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.#ctor(System.Drawing.Bitmap,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Image"/> class.
            </summary>
            <param name="bitmap"><see cref="T:System.Drawing.Bitmap"/> object containing the image data.</param>
            <param name="x">X coordinate of the image.</param>
            <param name="y">Y coordinate of the image.</param>
            <param name="scale">The scale to use when rendering the image.</param>
            <remarks><font color="red">This constructor is not available for .NET standard.</font></remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the image to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the image's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.SetBounds(System.Single,System.Single)">
            <summary>
            Scales the image to fit in the given box keeping the X and Y scale equal.
            </summary>
            <param name="maximumWidth">The maximum width.</param>
            <param name="maximumHeight">The maximum height.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.SetSize(System.Single,System.Single)">
            <summary>
            Scales the image to fit the exact width and height given.
            </summary>
            <param name="width">Width of image.</param>
            <param name="height">Height of image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.SetDpi(System.Single)">
            <summary>
            Scales the image to have the specified dpi (also known as pixels per inch).
            </summary>
            <param name="dpi">DPI of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Image.SetDpi(System.Single,System.Single)">
            <summary>
            Scales the image to have the specified dpi (also known as pixels per inch).
            </summary>
            <param name="horizontalDpi">Horizontal dpi of the image.</param>
            <param name="verticalDpi">Horizontal dpi of the image.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.Align">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Image.Align"/> enumeration that specifies horizontal alignment of the image on the X coordinate.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Image.VAlign"/> enumeration that specifies vertical alignment of the image on the Y coordinate.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.ScaleX">
            <summary>
            Gets or sets the horizontal scale of the image.
            </summary>
            <remarks>Setting this value affects the <see cref="P:ceTe.DynamicPDF.PageElements.Image.HorizontalDpi"/> property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.ScaleY">
            <summary>
            Gets or sets the vertical scale of the image.
            </summary>
            <remarks>Setting this value affects the <see cref="P:ceTe.DynamicPDF.PageElements.Image.VerticalDpi"/> property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.HorizontalDpi">
            <summary>
            Gets or sets the horizontal dpi (also known as pixels per inch) of the image.
            </summary>
            <remarks>Setting this value affects the <see cref="P:ceTe.DynamicPDF.PageElements.Image.ScaleX"/> property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.VerticalDpi">
            <summary>
            Gets or sets the vertical dpi (also known as pixels per inch) of the image.
            </summary>
            <remarks>Setting this value affects the <see cref="P:ceTe.DynamicPDF.PageElements.Image.ScaleY"/> property.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.Width">
            <summary>
            Gets or sets the width of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.Height">
            <summary>
            Gets or sets the height of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.ImageData">
            <summary>
            Get the image's <see cref="P:ceTe.DynamicPDF.PageElements.Image.ImageData"/> object.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Image.AlternateText">
            <summary>
            Gets or sets the alternate text of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.LayoutGrid">
             <summary>
             Represents a layout grid.
             </summary>
             <remarks>This class can be used to place a grid on the entire page.  This grid is very helpful with the design and layout of the document.</remarks>
            ^LayoutGrid
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.LayoutGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.LayoutGrid"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.LayoutGrid.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.LayoutGrid"/> class.
            </summary>
            <param name="showTitle">This value specifies whether or not to display the grid's title information.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.LayoutGrid.#ctor(ceTe.DynamicPDF.PageElements.LayoutGrid.GridType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.LayoutGrid"/> class.
            </summary>
            <param name="type">Type of grid to display.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.LayoutGrid.#ctor(ceTe.DynamicPDF.PageElements.LayoutGrid.GridType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.LayoutGrid"/> class.
            </summary>
            <param name="type">Type of grid to display.</param>
            <param name="showTitle">This value specifies whether or not to display the grid's title information.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.LayoutGrid.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the layout grid to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the layout grid's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.LayoutGrid.Type">
            <summary>
            Gets or sets the style of grid.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.LayoutGrid.ShowTitle">
            <summary>
            Gets or sets a value specifying whether or not to display the grids title information.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.LayoutGrid.GridType">
            <summary>
            Specifies the type of grid. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.LayoutGrid.GridType.Decimal">
            <summary>
            Decimal style of grid.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.LayoutGrid.GridType.Standard">
            <summary>
            Standard measurement style of grid.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.LayoutGrid.GridType.Metric">
            <summary>
            Metrics measurement style of grid.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.LayoutGrid.GridType.Print">
            <summary>
            Print measurement style of grid.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.LineSubPath">
             <summary>
             Represents a line sub path.
             </summary>
             <remarks>This class, when added to a <see cref="T:ceTe.DynamicPDF.PageElements.Path"/>, is used to create a straight line 
             path to the LineSubPath's specified location.</remarks>
            ^LineSubPath
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.LineSubPath.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.LineSubPath"/> class.
            </summary>
            <param name="x">X coordinate of the destination.</param>
            <param name="y">Y coordinate of the destination.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.LineSubPath.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the sub path to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the sub path's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.LineSubPath.X">
            <summary>
            Gets or sets the X coordinate of the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.LineSubPath.Y">
            <summary>
            Gets or sets the Y coordinate of the destination.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Link">
             <summary>
             Represents a link with a destination or action.
             </summary>
             <remarks>This class can be used to place links on the PDF.
             <p/><b>NOTE:</b> This page element cannot be used within a table cell, or transformation group.</remarks>
            ^Link
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Link.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Action)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Link"/> class.
            </summary>
            <param name="x">X coordinate of the link.</param>
            <param name="y">Y coordinate of the link.</param>
            <param name="width">Width of the link.</param>
            <param name="height">Height of the link.</param>
            <param name="action">Action or destination of the link.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Link.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the link to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the link's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Link.DrawAnnotation(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the link to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the link's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Link.X">
            <summary>
            Gets or sets the X coordinate of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Link.Y">
            <summary>
            Gets or sets the Y coordinate of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Link.Width">
            <summary>
            Gets or sets the width of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Link.Height">
            <summary>
            Gets or sets the height of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Link.Action">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.Link.Action"/> to be taken by the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Link.Tag">
             <summary>
             Gets or sets the structure element of the link.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.List">
             <summary>
             Represents the List.
             </summary>
             <remarks>See the <a href="Lists.html">Lists</a> topic for more on lists.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.List.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the List to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"> <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the List's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.ListItemTopMargin">
            <summary>
            Gets or Sets the TopMargin of the ListItems in the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.ListItemBottomMargin">
            <summary>
            Gets or Sets the BottomMargin of the ListItems in the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.StrikeThrough">
            <summary>
            Gets or Sets the text of each <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/> of the List as StrikeThrough.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.BulletSize">
            <summary>
            Gets or Sets the bullet's size for the List .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.BulletAreaWidth">
            <summary>
            Gets or sets the Width in which bullets will be drawn, for each <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/> of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.ParagraphIndent">
            <summary>
            Gets or Sets the paragraphIndent of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.BulletAlign">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Align"/> enumeration that specifies the Bullet alignment of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.TextAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.List.TextAlign"/> enumeration that specifies the text alignment of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.LeftIndent">
            <summary>
            Gets or Sets the LeftIndent of the whole List. Each ListItem may have his own LeftIndent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.RightIndent">
            <summary>
            Gets or Sets the RightIndent of the whole List. Each ListItem may have his own RightIndent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> of the Text for whole List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> of the text outline for whole List.
            </summary>
            <remarks><font color="red">Unordered list bullets do not have text outline.</font></remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.TextOutlineWidth">
            <summary>
            Gets or sets the line width to use for the text outline of the list.
            </summary>
            <remarks><font color="red">Unordered list bullets do not have text outline.</font></remarks>        
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.RightToLeft">
            <summary>
            Gets or Sets a value indicating if the Text is in RighttoLeft language.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.List.Font"/> of the text for the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.FontSize">
            <summary>
            Gets or Sets the Font size of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.Leading">
            <summary>
            Gets or Sets the leading for the text of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.Items">
            <summary>
            Gets the ListItemLists of the List.
            </summary>
            <returns>ListItemLists of the List</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.Width">
            <summary>
            Gets or sets the Width of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.Height">
            <summary>
            Gets or sets the Height of the List.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.Tag">
             <summary>
             Gets or sets the tag of the taggable element.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.List.TagOrder">
            <summary>
            Gets or sets the tag order of the taggable element.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.ListItem">
             <summary>
             Represents the ListItem.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.Font">
            <summary>
            Gets or Sets the <see cref="P:ceTe.DynamicPDF.PageElements.ListItem.Font"/> of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#Font">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.ListItem.Font"/> of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.FontSize">
            <summary>
            Gets or Sets the FontSize of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#FontSize">
            <summary>
            Gets the FontSize of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.RightToLeft">
            <summary>
            Gets or sets a value indicating if text language is RightToLeft.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#RightToLeft">
            <summary>
            Gets a value indicating if text language is RightToLeft.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.Underline">
            <summary>
            Gets or sets the underline property  of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.StrikeThrough">
            <summary>
            Gets or Sets the StrikeThrough property of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#StrikeThrough">
            <summary>
            Gets the StrikeThrough property of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.TextColor">
            <summary>
            Gets or Sets the Text <see cref="T:ceTe.DynamicPDF.Color"/> of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#TextColor">
            <summary>
            Gets the Text <see cref="T:ceTe.DynamicPDF.Color"/> of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.TextOutlineColor">
            <summary>
            Gets or Sets the Text <see cref="T:ceTe.DynamicPDF.Color"/> of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#TextOutlineColor">
            <summary>
            Gets the Text <see cref="T:ceTe.DynamicPDF.Color"/> of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.TextOutlineWidth">
            <summary>
            Gets or sets the line width to use for the text outline of the list item.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#TextOutlineWidth">
            <summary>
            Gets  the line width to use for the text outline of the list item.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.Text">
            <summary>
            Gets or sets the Text of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.Leading">
            <summary>
            Gets or Sets the leading for the text of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#Leading">
            <summary>
            Gets the leading for the text of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.RightIndent">
            <summary>
            Gets or Sets the rightIndent of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#RightIndent">
            <summary>
            Gets the rightIndent of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.LeftIndent">
            <summary>
            Gets or Sets the LeftIndent of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#LeftIndent">
            <summary>
            Gets the LeftIndent of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.BulletAlign">
            <summary>
            Gets or Sets the <see cref="T:ceTe.DynamicPDF.Align"/> enumeration that specifies the Bullet alignment of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#BulletAlign">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Align"/> enumeration that specifies the Bullet alignment of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.BulletAreaWidth">
            <summary>
            Gets or Sets the width in which bullets will be drawn, for this <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#BulletAreaWidth">
            <summary>
            Gets the width in which bullets will be drawn, for this <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.TextAlign">
            <summary>
            Sets or Gets the <see cref="P:ceTe.DynamicPDF.PageElements.ListItem.TextAlign"/> enumeration that specifies the text alignment of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#TextAlign">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.ListItem.TextAlign"/> enumeration that specifies the text alignment of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.BulletSize">
            <summary>
            Gets or Sets the Bullet size of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#BulletSize">
            <summary>
            Gets the Bullet size of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#ListItemBottomMargin">
            <summary>
            Gets the BottomMargin of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#ListItemTopMargin">
            <summary>
            Gets the TopMargin of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ParagraphIndent">
            <summary>
            Gets or Sets the ParagraphIndent of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#ParagraphIndent">
            <summary>
            Gets the ParagraphIndent of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#BulletPrefix">
            <summary>
            Gets the BulletPrefix of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#BulletSuffix">
            <summary>
            Gets the BulletSuffix of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ceTe#DynamicPDF#PageElements#IListProperties#BulletType">
            <summary>
            Gets the NumberingStyle of the ListItem.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.SubLists">
            <summary>
            Gets the SubListList of the ListItem.
            </summary>
            <returns>SubListList of the ListItem</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.Tag">
             <summary>
             Gets or sets the structure element of the list item sublists.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.TagOrder">
            <summary>
            Gets or sets the structure element order of the list item sublists.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.BulletTag">
             <summary>
             Gets or sets the structure element of the list item bullet.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.BulletTagOrder">
            <summary>
            Gets or sets the structure element order of the list item bullet.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.BodyTag">
             <summary>
             Gets or sets the structure element of the list item body.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.BodyTagOrder">
            <summary>
            Gets or sets the structure element order of the list item body.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ListItemTag">
             <summary>
             Gets or sets the structure element of the list item.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItem.ListItemTagOrder">
            <summary>
            Gets or sets the structure element order of the list item .
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.ListItemList">
             <summary>
             Represents the collection of ListItems on a List.
             <see cref="T:ceTe.DynamicPDF.PageElements.List"/>
             <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/>
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ListItemList.Add(System.String)">
            <summary>
            Add new ListItem to the ListItemList.
            </summary>
            <param name="item">Text of the ListItem.</param>
            <returns>Returns newly created ListItem.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItemList.Item(System.Int32)">
            <summary>
            Gets the ListItem from the ListItemList based on the given index value.
            </summary>
            <param name="index">Index of the ListItem.</param>
            <returns>ListItem of the given index.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ListItemList.Count">
            <summary>
            Returns the number of ListItems in the List.
            </summary>
            <returns>The number of ListItems in the List.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Note">
             <summary>
             Represents a note annotation.
             </summary>
             <remarks>This class can be used to place a note annotation on the PDF.</remarks>
            ^Note
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Note.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Note"/> class.
            </summary>
            <param name="text">Text of the note.</param>
            <param name="x">X coordinate of the note.</param>
            <param name="y">Y coordinate of the note.</param>
            <param name="width">Width of the note.</param>
            <param name="height">Height of the note.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Note.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.NoteType)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Note"/> class.
            </summary>
            <param name="text">Text of the note.</param>
            <param name="x">X coordinate of the note.</param>
            <param name="y">Y coordinate of the note.</param>
            <param name="width">Width of the note.</param>
            <param name="height">Height of the note.</param>
            <param name="type">Specifies the type of note.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Note.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Note"/> class.
            </summary>
            <param name="text">Text of the note.</param>
            <param name="x">X coordinate of the note.</param>
            <param name="y">Y coordinate of the note.</param>
            <param name="width">Width of the note.</param>
            <param name="height">Height of the note.</param>
            <param name="isOpen">Specifies if the note is open initially.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Note.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.PageElements.NoteType,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Note"/> class.
            </summary>
            <param name="text">Text of the note.</param>
            <param name="x">X coordinate of the note.</param>
            <param name="y">Y coordinate of the note.</param>
            <param name="width">Width of the note.</param>
            <param name="height">Height of the note.</param>
            <param name="type">Specifies the type of note.</param>
            <param name="isOpen">Specifies if the note is open initially.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Note.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the link to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the link's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Note.DrawAnnotation(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the link to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the link's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.X">
            <summary>
            Gets or sets the X coordinate of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.Y">
            <summary>
            Gets or sets the Y coordinate of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.Width">
            <summary>
            Gets or sets the width of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.Height">
            <summary>
            Gets or sets the height of the link.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.NoteType">
            <summary>
            Gets or sets the type of note.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.Text">
            <summary>
            Gets or sets the text of the note.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.IsOpen">
            <summary>
            Gets or sets a value indicating if the note is opened by default.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.Color">
            <summary>
            Gets or sets the color of the note.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.Author">
             <summary>
             Gets or sets the author of the note.
             </summary>
            ^NoteWithAuthor
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Note.Tag">
             <summary>
             Gets or sets the structure element of the note.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.NoteType">
             <summary>
             Specifies a note type.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.Comment">
            <summary>Represents a note with a comment icon.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.Help">
            <summary>Represents a note with a help icon.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.Insert">
            <summary>Represents a note with an insert icon.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.Key">
            <summary>Represents a note with a key icon.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.NewParagraph">
            <summary>Represents a note with a new paragraph icon.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.Note">
            <summary>Represents a note with a note icon.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.Paragraph">
            <summary>Represents a note with a paragraph icon.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NoteType.None">
            <summary>Represents a note with a paragraph icon.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.NumberingType">
            <summary>
            Specifies the numbering style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.Numeric">
            <summary>
            Numeric numbering type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.AlphabeticLowerCase">
            <summary>
            AlphabeticLowerCase numbering type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.AlphabeticUpperCase">
            <summary>
            AlphabeticUpperCase numbering type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.ShortenedAlphabeticLowerCase">
            <summary>
            ShortenedAlphabeticLowerCase numbering type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.ShortenedAlphabeticUpperCase">
            <summary>
            ShortenedAlphabeticUpperCase numbering type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.RomanLowerCase">
            <summary>
            RomanLowerCase numbering type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.RomanUpperCase">
            <summary>
            RomanUpperCase numbering type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.NumberingType.None">
            <summary>
            No numbering type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.OrderedList">
             <summary>
             Represents an ordered list.
             </summary>
             <remarks>See the <a href="Lists.html">Lists</a> topic for more on ordered lists.
             <p/><b>NOTE:</b> This page element cannot be used within a table cell, or transformation group.</remarks>
            ^OrderedList.Example1
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.OrderedList.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creating new Instance of the OrderedList.
            </summary>
            <param name="x">X coordinate of the OrderedList.</param>
            <param name="y">Y coordinate of the OrderedList.</param>
            <param name="width">Width of the OrderedList.</param>
            <param name="height">Height of the OrderedList.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.OrderedList.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.NumberingStyle)">
            <summary>
            Creating new Instance of the OrderedList.
            </summary>
            <param name="x">X coordinate of the OrderedList.</param>
            <param name="y">Y coordinate of the OrderedList.</param>
            <param name="width">Width of the OrderedList.</param>
            <param name="height">Height of the OrderedList.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> of the OrderedList.</param>
            <param name="fontSize">FontSize of the OrderedList.</param>
            <param name="nStyle"><see cref="T:ceTe.DynamicPDF.NumberingStyle"/> of the OrderedList.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.OrderedList.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Creating new Instance of the OrderedList.
            </summary>
            <param name="x">X coordinate of the OrderedList.</param>
            <param name="y">Y coordinate of the OrderedList.</param>
            <param name="width">Width of the OrderedList.</param>
            <param name="height">Height of the OrderedList.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> of the OrderedList.</param>
            <param name="fontSize">FontSize of the OrderedList.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.OrderedList.GetRequiredHeight">
            <summary>
            Gets the height required to fit all of the text supplied.
            </summary>
            <returns>The float value indicating required height to display all text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.OrderedList.GetOverFlowList">
             <summary>
             Gets a OrderedList object containing the List Text.
             </summary>
             <returns>Returns a OrderedList object.</returns>
             <remarks>This method returns a new <b>OrderedList</b> object that contains the remaining text that did not fit.</remarks>
            ^OrderedList.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.OrderedList.GetOverFlowList(System.Single,System.Single)">
             <summary>
             Gets a OrderedList object containing the List Text.
             </summary>
             <param name="x">New X coordinate of the OrderedList.</param>
             <param name="y">New Y coordinate of the OrderedList.</param>
             <returns>Returns a OrderedList object.</returns>
             <remarks>This method returns a new <b>OrderedList</b> object that contains the remaining text that did not fit.</remarks>
            ^OrderedList.Example3
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.OrderedList.BulletPrefix">
            <summary>
            Sets or Gets the Prefix String of the Bullets.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.OrderedList.BulletSuffix">
            <summary>
            Sets or Gets the suffix String of the Bullets.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.OrderedListItemList">
             <summary>
             Represents a list of ordered items.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.OrderedSubList">
             <summary>
             Represents the an ordered sub list.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.SubList">
             <summary>
             Represents the SubList can be initialized on <see cref="T:ceTe.DynamicPDF.PageElements.List"/>.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.Leading">
            <summary>
            Gets or Sets the leading for the text of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#Leading">
            <summary>
            Gets the leading for the text of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.FontSize">
            <summary>
            Gets or Sets the Font size of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#FontSize">
            <summary>
            Gets the Font size of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.SubList.Font"/> of the text for the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#Font">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.SubList.Font"/> of the text for the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#RightToLeft">
            <summary>
            Gets a value indicating if the Text is in RighttoLeft language.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.RightToLeft">
            <summary>
            Gets or Sets a value indicating if the Text is in RighttoLeft language.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> of the Text for whole SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#TextColor">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Color"/> of the Text for whole SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> of the Text for whole SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.TextOutlineWidth">
            <summary>
            Gets or sets the line width to use for the text outline of the sub list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#TextOutlineWidth">
            <summary>
            Gets the line width to use for the text outline of the sub list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.RightIndent">
            <summary>
            Gets or Sets the RightIndent of the whole SubList. Each ListItem may have his own RightIndent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#RightIndent">
            <summary>
            Gets the RightIndent of the whole SubList. Each ListItem may have his own RightIndent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.LeftIndent">
            <summary>
            Gets or Sets the LeftIndent of the whole SubList. Each ListItem may have his own LeftIndent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#LeftIndent">
            <summary>
            Gets the LeftIndent of the whole SubList. Each ListItem may have his own LeftIndent.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.TextAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.SubList.TextAlign"/> enumeration that specifies the text alignment of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#TextAlign">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.PageElements.SubList.TextAlign"/> enumeration that specifies the text alignment of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.BulletAlign">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Align"/> enumeration that specifies the Bullet alignment of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletAlign">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Align"/> enumeration that specifies the Bullet alignment of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletPrefix">
            <summary>
            Gets the BulletPrefix of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletSuffix">
            <summary>
            Gets the BulletSuffix of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletType">
            <summary>
            Gets the Numbering style of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ParagraphIndent">
            <summary>
            Gets or Sets the paragraphIndent of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#ParagraphIndent">
            <summary>
            Gets the paragraphIndent of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.BulletAreaWidth">
            <summary>
            Gets or sets the Width in which bullets will be drawn, for each <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/> of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletAreaWidth">
            <summary>
            Gets the Width in which bullets will be drawn, for each <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/> of the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.Items">
            <summary>
            Gets the ListItemLists of the SubList.
            </summary>
            <returns>ListItemLists of the SubList</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ListItemTopMargin">
            <summary>
            Gets or Sets the TopMargin of the ListItems in the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#ListItemTopMargin">
            <summary>
            Gets the TopMargin of the ListItems in the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ListItemBottomMargin">
            <summary>
            Gets or Sets the BottomMargin of the ListItems in the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#ListItemBottomMargin">
            <summary>
            Gets the BottomMargin of the ListItems in the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.StrikeThrough">
            <summary>
            Gets or Sets the text of each <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/> of the SubList as StrikeThrough.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#StrikeThrough">
            <summary>
            Gets the text of each <see cref="T:ceTe.DynamicPDF.PageElements.ListItem"/> of the SubList as StrikeThrough.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.BulletSize">
            <summary>
            Gets or Sets the bullet's size for the SubList .
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletSize">
            <summary>
            Gets the bullet's size for the SubList.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.Tag">
            <summary>
            Gets or sets the structure element of the sub list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubList.TagOrder">
            <summary>
            Gets or sets the structure element order of the sub list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.OrderedSubList.BulletPrefix">
            <summary>
            Sets or Gets the Prefix String of the Bullets.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.OrderedSubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletPrefix">
            <summary>
            Gets the Prefix String of the Bullets.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.OrderedSubList.BulletSuffix">
            <summary>
            Sets or Gets the suffix String of the Bullets.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.OrderedSubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletSuffix">
            <summary>
            Gets the suffix String of the Bullets.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.OrderedSubList.ceTe#DynamicPDF#PageElements#IListProperties#BulletType">
            <summary>
            Gets the NumberingStyle of the Bullets.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Path">
             <summary>
             Represents a path with sub paths.
             </summary>
             <remarks>This class can be used to specify a collection of sub paths which will be used to complete your path.  
             Sub paths that can be added are CurveFromSubPath, CurveSubPath, CurveToSubPath and LineSubPath.</remarks>
            ^Path
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Path.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Path"/> class.
            </summary>
            <param name="x">X coordinate of the path.</param>
            <param name="y">Y coordinate of the path.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Path.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Path"/> class.
            </summary>
            <param name="x">X coordinate of the path.</param>
            <param name="y">Y coordinate of the path.</param>
            <param name="lineColor">Color of the lines of the path.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Path.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Path"/> class.
            </summary>
            <param name="x">X coordinate of the path.</param>
            <param name="y">Y coordinate of the path.</param>
            <param name="lineColor">Color of the lines of the path.</param>
            <param name="fillColor">Color of the fill of the path.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Path.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Path"/> class.
            </summary>
            <param name="x">X coordinate of the path.</param>
            <param name="y">Y coordinate of the path.</param>
            <param name="lineColor">Color of the lines of the path.</param>
            <param name="lineWidth">Width of the lines of the path.</param>
            <param name="lineStyle">Style of the lines of the path.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Path.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Path"/> class.
            </summary>
            <param name="x">X coordinate of the path.</param>
            <param name="y">Y coordinate of the path.</param>
            <param name="lineColor">Color of the lines of the path.</param>
            <param name="lineWidth">Width of the lines of the path.</param>
            <param name="lineStyle">Style of the lines of the path.</param>
            <param name="closePath">Specifies if the path should be closed.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Path.#ctor(System.Single,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color,System.Single,ceTe.DynamicPDF.LineStyle,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Path"/> class.
            </summary>
            <param name="x">X coordinate of the path.</param>
            <param name="y">Y coordinate of the path.</param>
            <param name="lineColor">Color of the lines of the path.</param>
            <param name="fillColor">Color of the fill of the path.</param>
            <param name="lineWidth">Width of the lines of the path.</param>
            <param name="lineStyle">Style of the lines of the path.</param>
            <param name="closePath">Specifies if the path should be closed.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Path.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the path to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the sub path's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Path.LineStyle"/> object used to specify the style of the path's lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.LineCap">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Path.LineCap"/> enumeration used to specify the line cap style of the path's lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.LineJoin">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Path.LineJoin"/> enumeration used to specify the line join style of the path's lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.MiterLimit">
            <summary>
            Gets or sets the miter limit of the path's lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.SubPaths">
            <summary>
            Gets <see cref="T:ceTe.DynamicPDF.PageElements.SubPathList"/> that contains a collection of <see cref="T:ceTe.DynamicPDF.PageElements.SubPath"/> objects.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.LineWidth">
            <summary>
            Gets or sets the width of the path's lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.LineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the path's lines.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.FillColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the fill of the path.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.X">
            <summary>
            Gets or set the X coordinate of the path.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.Y">
            <summary>
            Gets or sets the Y coordinate of the path.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Path.ClosePath">
            <summary>
            Gets or sets a value specifying if the path should be closed.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Row">
             <summary>
             <font color="red">Obsolete.</font> Represents a row in a table.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font> Use <see cref="T:ceTe.DynamicPDF.PageElements.Row2"/> class instead.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Row.Font"/> object to use for the row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.FontSize">
            <summary>
            Gets or sets the font size to use for the row.
            </summary>explanation should be same as padding here...
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text in the row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the background in the row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.CellAlign"/> enumeration to use for the horizontal alignment of each cell in that row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.VAlign">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.CellVAlign"/> enumeration to use for the vertical alignment of each cell in that row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.Padding">
            <summary>
            Gets or sets the padding of the cells in the row.  By default this value is set to float.MinValue.  Being set to 'Not a Number' implies that the row's padding will be pulled from the padding for the table containing that row. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.Height">
            <summary>
            Gets or sets the minimum height of the row.
            </summary>
            <remarks>If no height is specified for a Row this value will return -1.  A -1 signifies that the height will automatically adjust to the height of the text.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.Cells">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.CellList"/> containing all the cells in that row.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.ActualRowHeight">
            <summary>
            Gets the actual height of the row as it will be displayed.  This is different than the Height property.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.Tag">
             <summary>
             Gets or sets the structure element of the angle element.
             </summary>
            ^Lic.Generator.Ent.Prop
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Row.TagOrder">
            <summary>
            Gets or sets the structure element order of the angle element.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.RowList">
             <summary>
             <font color="red">Obsolete.</font> Represents a list of Rows in a table.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font> Use <see cref="T:ceTe.DynamicPDF.PageElements.Row2List"/> class instead.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RowList.Add">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RowList.Add(System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
            <param name="height">Height of the row to be added.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RowList.Add(ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
            <param name="font">Font for the text in the row.</param>
            <param name="size">Font size for the text in the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RowList.Add(System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
            <param name="height">Height of the row to be added.</param>
            <param name="font">Font for the text in the row.</param>
            <param name="size">Font size for the text in the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Column"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RowList.Add(ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
            <param name="font">Font for the text in the row.</param>
            <param name="size">Font size for the text in the row.</param>
            <param name="textColor">Color for the text in the row.</param>
            <param name="backColor">Background color for the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RowList.Add(System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
            <param name="height">Height of the row to be added.</param>
            <param name="font">Font for the text in the row.</param>
            <param name="size">Font size for the text in the row.</param>
            <param name="textColor">Color for the text in the row.</param>
            <param name="backColor">Background color for the row.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Column"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.RowList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.RowList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Row"/> at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.RowList.Count">
            <summary>
            Gets the number of elements actually contained in the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.SubListList">
             <summary>
             Represents the SubListList.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.SubListList.AddOrderedSubList">
            <summary>
            Creates new OrderedSubList as a sublist of ListItem Which is calling this method.
            </summary>
            <returns> The newly Created OrderedSubList. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.SubListList.AddOrderedSubList(ceTe.DynamicPDF.NumberingStyle)">
            <summary>
            Creates new OrderedSubList as a sublist of ListItem Which is calling this method.
            </summary>
            <param name="nStyle"><see cref="T:ceTe.DynamicPDF.NumberingStyle"/> of the newly created orderedList.</param>
            <returns>The newly Created OrderedSubList.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.SubListList.AddUnorderedSubList">
            <summary>
            Creates new UnorderedSubList as a sublist of ListItem Which is calling this method.
            </summary>
            <returns> The newly Created UnorderedSubList. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.SubListList.AddUnorderedSubList(ceTe.DynamicPDF.PageElements.UnorderedListStyle)">
            <summary>
            Creates new UnorderedSubList as a sub list of ListItem Which is calling this method.
            </summary>
            <param name="bullet"><see cref="T:ceTe.DynamicPDF.PageElements.UnorderedListStyle"/> of the newly created UnorderedList.</param>
            <returns>The newly Created UnorderedSubList.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubListList.Item(System.Int32)">
            <summary>
            Gets the List from the subList of Lists based on the given index value.
            </summary>
            <param name="index">Index of the List.</param>
            <returns>List of the given index.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubListList.Count">
            <summary>
            Gets the number of sub lists.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.SubPathList">
             <summary>
             Represents a collection of sub paths.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.SubPathList.Add(ceTe.DynamicPDF.PageElements.SubPath)">
            <summary>
            Adds a sub path to the current path.
            </summary>
            <param name="subPath"><b>SubPath</b> object to add to the path.</param>
            <returns>The index of the added sub path.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.SubPathList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <b>SubPathList</b>.
            </summary>
            <returns>An <b>IEnumerator</b> for the entire <b>SubPathList</b></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubPathList.Count">
            <summary>
            Gets the number of <see cref="T:ceTe.DynamicPDF.PageElements.SubPath"/> objects in the collection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.SubPathList.Item(System.Int32)">
            <summary>
            Gets or sets a <see cref="T:ceTe.DynamicPDF.PageElements.SubPath"/> object at the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Table">
             <summary>
             <font color="red">Obsolete.</font> Represents a table with rows, columns and cells.
             </summary>
             <remarks><font color="red">NOTE: This class is obsolete.</font>  Use <see cref="T:ceTe.DynamicPDF.PageElements.Table2"/> class instead.
             This class can be used to create tables.  A table must contain at least one Column and one Row with at least one 
             Cell in that Row.  Formatting of each cell in the table is done in a hierarchical manner in that a Cell's formatting take 
             precedent over a Row's formatting which in term takes precedent over a Table's formatting .  The column object contains no
             formatting information.  Using the Tables GetOverflowColumns and GetOverflowRows methods you can allow your table to easily 
             flow onto other pages.   See the <a href="Tables.html">Tables</a> topic for more on tables.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> class.
            </summary>
            <param name="x">X coordinate of the table.</param>
            <param name="y">Y coordinate of the table.</param>
            <param name="width">Width of the table.</param>
            <param name="height">Height of the table.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> class.
            </summary>
            <param name="x">X coordinate of the table.</param>
            <param name="y">X coordinate of the table.</param>
            <param name="width">Width of the table.</param>
            <param name="height">Height of the table.</param>
            <param name="font">Font for the text in the table.</param>
            <param name="size">Font size for the text in the table.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> class.
            </summary>
            <param name="x">X coordinate of the table.</param>
            <param name="y">X coordinate of the table.</param>
            <param name="width">Width of the table.</param>
            <param name="height">Height of the table.</param>
            <param name="font">Font for the text in the table.</param>
            <param name="size">Font size for the text in the table.</param>
            <param name="textColor">Color of the text in the table.</param>
            <param name="backColor">Background color of the table.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetOverflowRows">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object containing the overflow rows.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object.</returns>
            <remarks>This method returns a new <b>Table</b> object that contains the remaining rows that did not fit.</remarks>
             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetOverflowRows(System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object containing the overflow rows.
            </summary>
            <param name="x">X coordinate of the new table.</param>
            <param name="y">Y coordinate of the new table.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object.</returns>
            <remarks>This method returns a new <b>Table</b> object that contains the remaining rows that did not fit.  This new table will be assigned the specified values for x and y.</remarks>
             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetOverflowRows(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object containing the overflow rows.
            </summary>
            <param name="x">X coordinate of the new table.</param>
            <param name="y">Y coordinate of the new table.</param>
            <param name="width">Width of the new table.</param>
            <param name="height">Height of the new table.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object.</returns>
            <remarks>This method returns a new <b>Table</b> object that contains the remaining rows that did not fit.  This new table will be assigned the specified values for x, y, height and width.</remarks>
             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetOverflowColumns">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object containing the overflow columns.
            </summary>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object.</returns>
            <remarks>This method returns a new <b>Table</b> object that contains the remaining columns that did not fit.</remarks>
             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetOverflowColumns(System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object containing the overflow columns.
            </summary>
            <param name="x">X coordinate of the new table.</param>
            <param name="y">Y coordinate of the new table.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object.</returns>
            <remarks>This method returns a new <b>Table</b> object that contains the remaining columns that did not fit.  This new table will be assigned the specified values for x and y.</remarks>
             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetOverflowColumns(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object containing the overflow columns.
            </summary>
            <param name="x">X coordinate of the new table.</param>
            <param name="y">Y coordinate of the new table.</param>
            <param name="width">Width of the new table.</param>
            <param name="height">Height of the new table.</param>
            <returns>Returns a <see cref="T:ceTe.DynamicPDF.PageElements.Table"/> object.</returns>
            <remarks>This method returns a new <b>Table</b> object that contains the remaining columns that did not fit.  This new table will be assigned the specified values for x, y, height and width.</remarks>
             
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetVisibleWidth">
            <summary>
            Returns the width of the table that will be seen on the page.
            </summary>
            <returns>The width of all visible text of the table. </returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetVisibleHeight">
            <summary>
            Returns the height of the table that will be seen on the page.
            </summary>
            <returns>The height of all visible text of the table.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetRequiredWidth">
            <summary>
            Returns the width required to horizontally fit the entire table (all the columns) on the page.
            </summary>
            <returns>The width to fit the entire table on the page horizontally.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetRequiredHeight">
            <summary>
            Returns the height required to vertically fit the entire table on the page.
            </summary>
            <returns>The height to fit the entire table on the page vertically.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.HasOverflowRows">
            <summary>
            Returns a value indicating if there are rows remaining that will not be drawn to the table.
            </summary>
            <returns>Value indication whether or not overflow rows exists.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.HasOverflowColumns">
            <summary>
            Returns a value indicating if there are columns remaining that will not be drawn to the table.
            </summary>
            <returns>Value indication whether or not overflow columns exists.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetVisibleRowCount">
            <summary>
            Returns the number of rows that will be displayed in the current table.
            </summary>
            <returns>The number are rows that will display.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.GetVisibleColumnCount">
            <summary>
            Returns the number of columns that will be displayed in the current table.
            </summary>
            <returns>The number are columns that will display.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Table.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the table to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the table's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.X">
            <summary>
            Gets or sets the x coordinate of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Y">
            <summary>
            Gets or sets the y coordinate of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Width">
            <summary>
            Gets or sets the width of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Height">
            <summary>
            Gets or sets the height of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Rows">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.RowList"/> object contained in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Columns">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.ColumnList"/> object contained in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Table.Font"/> object to use for the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.FontSize">
            <summary>
            Gets or sets the font size of the text in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the background of the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration to use for the horizontal alignment of the text in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Table.VAlign"/> enumeration to use for the vertical alignment of the text in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.Padding">
            <summary>
            Gets or sets the padding of the cells in the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.RepeatRowHeaderCount">
            <summary>
            Gets or sets the number of columns that will be repeated as the row header.  This number is only considered if RepeatColumnHeader is set to true.  This is set to 0 by default.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.RepeatColumnHeaderCount">
            <summary>
            Gets or sets the number of initial rows in the table that should also be drawn as the first rows on all subsequent row overflow tables.  This is set to 0 by default.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.BorderWidth">
            <summary>
            Gets or sets the width of the border on the table.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Table.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the borders of the table.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.TableException">
             <summary>
             The exception that is thrown for a Table page element error.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TableException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.TextArea">
             <summary>
             Represents an area of text.
             </summary>
             <remarks>This class can be used to place text on a page.  Using the methods GetOverflowText or GetOverflowTextArea and HasOverflowText, 
             users can control the pagination of TextAreas that come from a source of unknown length.  See the <a href="Text Continuation.html">Text Continuation</a> topic for more on text continuation.</remarks>
            ^TextArea.Example1
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextArea"/> class.
            </summary>
            <param name="text">Text to display in the text area.</param>
            <param name="x">X coordinate of the text area.</param>
            <param name="y">Y coordinate of the text area.</param>
            <param name="width">Width of the text area.</param>
            <param name="height">Height of the text area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextArea"/> class.
            </summary>
            <param name="text">Text to display in the text area.</param>
            <param name="x">X coordinate of the text area.</param>
            <param name="y">Y coordinate of the text area.</param>
            <param name="width">Width of the text area.</param>
            <param name="height">Height of the text area.</param>
            <param name="font">Font for the text of the text area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextArea"/> class.
            </summary>
            <param name="text">Text to display in the text area.</param>
            <param name="x">X coordinate of the text area.</param>
            <param name="y">Y coordinate of the text area.</param>
            <param name="width">Width of the text area.</param>
            <param name="height">Height of the text area.</param>
            <param name="font">Font for the text of the text area.</param>
            <param name="fontSize">Font size of the text of the text area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextArea"/> class.
            </summary>
            <param name="text">Text to display in the text area.</param>
            <param name="x">X coordinate of the text area.</param>
            <param name="y">Y coordinate of the text area.</param>
            <param name="width">Width of the text area.</param>
            <param name="height">Height of the text area.</param>
            <param name="font">Font for the text of the text area.</param>
            <param name="fontSize">Font size of the text of the text area.</param>
            <param name="align">Alignment of the text of the text area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextArea"/> class.
            </summary>
            <param name="text">Text to display in the text area.</param>
            <param name="x">X coordinate of the text area.</param>
            <param name="y">Y coordinate of the text area.</param>
            <param name="width">Width of the text area.</param>
            <param name="height">Height of the text area.</param>
            <param name="font">Font for the text of the text area.</param>
            <param name="fontSize">Font size of the text of the text area.</param>
            <param name="textColor">Color of the text of the text area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.#ctor(System.String,System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextArea"/> class.
            </summary>
            <param name="text">Text to display in the text area.</param>
            <param name="x">X coordinate of the text area.</param>
            <param name="y">Y coordinate of the text area.</param>
            <param name="width">Width of the text area.</param>
            <param name="height">Height of the text area.</param>
            <param name="font">Font for the text of the text area.</param>
            <param name="fontSize">Font size of the text of the text area.</param>
            <param name="align">Alignment of the text of the text area.</param>
            <param name="textColor">Color of the text of the text area.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the text area to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the text area's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetRequiredHeight">
            <summary>
            Returns the height required to fit all of the text supplied.
            </summary>
            <returns>The required height to display all text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetTextHeight">
            <summary>
            Returns the height of the text that will be drawn.
            </summary>
            <returns>The height of visible text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetOverflowText">
            <summary>
            Returns the text remaining that will be clipped by the text area.
            </summary>
            <returns>The overflow text as a <b>string</b>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetOverflowTextArea">
             <summary>
             Returns a <b>TextArea</b> object containing the overflow text.
             </summary>
             <returns>Returns a <b>TextArea</b> object.</returns>
             <remarks>This method returns a new <b>TextArea</b> object that contains the remaining text that did not fit.</remarks>
            ^TextArea.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetOverflowTextArea(System.Single,System.Single)">
             <summary>
             Returns a <b>TextArea</b> object containing the overflow text.
             </summary>
             <param name="x">X coordinate of the new text area.</param>
             <param name="y">Y coordinate of the new text area.</param>
             <returns>Returns a <b>TextArea</b> object.</returns>
             <remarks>This method returns a new <b>TextArea</b> object that contains the remaining text that did not fit.</remarks>
            ^TextArea.Example3
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetOverflowTextArea(System.Single,System.Single,System.Single,System.Single)">
             <summary>
             Returns a <b>TextArea</b> object containing the overflow text.
             </summary>
             <param name="x">X coordinate of the new text area.</param>
             <param name="y">Y coordinate of the new text area.</param>
             <param name="width">Width of the new text area.</param>
             <param name="height">Height of the new text area.</param>
             <returns>Returns a <b>TextArea</b> object.</returns>
             <remarks>This method returns a new <b>TextArea</b> object that contains the remaining text that did not fit.</remarks>
            ^TextArea.Example4
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.HasOverflowText">
            <summary>
            Returns a value indicating if there is text remaining that will not be drawn to the text area.
            </summary>
            <returns>Value indication whether or not overflow text exists.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetKerningValues">
             <summary>
             Gets the Kerning values.
             </summary>
             <returns><see cref="T:ceTe.DynamicPDF.Text.KerningValues"/>The kerning values.</returns>
             <exception> <see cref="T:ceTe.DynamicPDF.GeneratorException"/>If <see cref="P:ceTe.DynamicPDF.PageElements.TextArea.KerningEnabled"/> is set to false.</exception>
            ^TextArea.Example5
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetVisibleLineCount">
            <summary>
            Returns the number of lines that will be displayed in the current text area.
            </summary>
            <returns>The number are lines that will display.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextArea.GetLineTextWidth(System.Int32)">
            <summary>
            Returns the width of the given line index with kerning spaces.
            </summary>
            <param name="lineIndex">Line number of the text area.</param>
            <returns>Width of the line with kerning spaces.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration that specifies the text alignment of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.TextArea.VAlign"/> enumeration that specifies the vertical text alignment of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Underline">
            <summary>
            Gets or sets a value indicating if the text area is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Strikethrough">
            <summary>
            Gets or sets the strike through to use for the text of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.RightToLeft">
            <summary>
            Gets or sets a value indicating if text should be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Text">
            <summary>
            Gets or sets the text of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.TextOutlineWidth">
            <summary>
            Gets or sets the line width to use for the text outline of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.TextArea.Font"/> object used to specify the font of the text for the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.FontSize">
            <summary>
            Gets or sets the font size for the text of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Leading">
            <summary>
            Gets or sets the leading for the text of the text area.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.PageElements.TextArea.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.AutoLeading">
            <summary>
            Gets or sets a value indicating whether the leading of the text area should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.PageElements.TextArea.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indenting for the paragraphs of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.CleanParagraphBreaks">
            <summary>
            Gets or sets the clean paragraph breaks for the paragraphs of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Width">
            <summary>
            Gets or sets the width of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.Height">
            <summary>
            Gets or sets the height of the text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextArea.KerningEnabled">
            <summary>
            Enable or disable the kerning property of the text.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.TransformationGroup">
             <summary>
             Represents a group of page elements to transform.
             </summary>
             <remarks>This class can be used to transform entire groups of page elements. Any page element that is placed in this group
             will be displayed with the transformation values and attributes of this group.</remarks>
            ^TransformationGroup
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TransformationGroup.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TransformationGroup"/> class.
            </summary>
            <param name="x">X coordinate of the transformation group.</param>
            <param name="y">Y coordinate of the transformation group.</param>
            <param name="width">Width of the transformation group.</param>
            <param name="height">Height of the transformation group.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TransformationGroup.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TransformationGroup"/> class.
            </summary>
            <param name="x">X coordinate of the transformation group.</param>
            <param name="y">Y coordinate of the transformation group.</param>
            <param name="width">Width of the transformation group.</param>
            <param name="height">Height of the transformation group.</param>
            <param name="angle">Angle of the transformation group in degrees.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TransformationGroup.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the transformation group to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the transformation group's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransformationGroup.Angle">
            <summary>
            Gets or sets the Angle of the transformation group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransformationGroup.ScaleX">
            <summary>
            Gets or sets the X scale of the transformation group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransformationGroup.ScaleY">
            <summary>
            Gets or sets the Y scale of the transformation group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransformationGroup.X">
            <summary>
            Gets or sets the X coordinate of the transformation group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransformationGroup.Y">
            <summary>
            Gets or sets the Y coordinate of the transformation group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransformationGroup.Width">
            <summary>
            Gets or sets the width of the transformation group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransformationGroup.Height">
            <summary>
            Gets or sets the height of the transformation group.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.TransparencyGroup">
             <summary>
             Represents a group of page elements that will have transparency.
             </summary>
             <remarks>This class can be used to add transparency to page elements. Any page element that is placed in this group
             will be displayed with the transparency values and attributes of this group.</remarks>
            ^TransparencyGroup
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TransparencyGroup.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TransparencyGroup"/> class.
            </summary>
            <param name="alpha">Amount of transparency the group will have.</param>
            <remarks>An alpha value of 0 represents full transparency meaning the page elements will not be visible. An alpha value of 1
            means the page elements will have no transparency.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TransparencyGroup.#ctor(System.Single,ceTe.DynamicPDF.BlendMode)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TransparencyGroup"/> class.
            </summary>
            <param name="alpha">Amount of transparency the group will have.</param>
            <param name="blendMode">Blend mode to use for the transparency group.</param>
            <remarks>An alpha value of 0 represents full transparency meaning the page elements will not be visible. An alpha value of 1
            means the page elements will have no transparency.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TransparencyGroup.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the transparency group to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the transparency group's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransparencyGroup.StrokeAlpha">
            <summary>
            Gets or sets the stroke alpha value. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransparencyGroup.FillAlpha">
            <summary>
            Gets or sets the fill alpha value. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TransparencyGroup.BlendMode">
            <summary>
            Gets or sets the blend mode value. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.UnorderedList">
             <summary>
             Represents the unordered list.
             </summary>
             <remarks>See the <a href="Lists.html">Lists</a> topic for more on unordered lists.
             <p/><b>NOTE:</b> This page element cannot be used within a table cell, or transformation group.</remarks>
            ^UnorderedList.Example1
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.UnorderedList.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creating new Instance of the UnorderedList.
            </summary>
            <param name="x">X coordinate of the UnorderedList.</param>
            <param name="y">Y coordinate of the UnorderedList.</param>
            <param name="width">Width of the UnorderedList.</param>
            <param name="height">Height of the UnorderedList.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.UnorderedList.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,ceTe.DynamicPDF.PageElements.UnorderedListStyle)">
            <summary>
            Creating new Instance of the UnorderedList.
            </summary>
            <param name="x">X coordinate of the UnorderedList.</param>
            <param name="y">Y coordinate of the UnorderedList.</param>
            <param name="width">Width of the UnorderedList.</param>
            <param name="height">Height of the UnorderedList.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> of the UnorderedList.</param>
            <param name="fontSize">FontSize of the UnorderedList.</param>
            <param name="bullet"><see cref="T:ceTe.DynamicPDF.PageElements.UnorderedListStyle"/> of the UnorderedList.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.UnorderedList.#ctor(System.Single,System.Single,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Creating new Instance of the UnorderedList.
            </summary>
            <param name="x">X coordinate of the UnorderedList.</param>
            <param name="y">Y coordinate of the UnorderedList.</param>
            <param name="width">Width of the UnorderedList.</param>
            <param name="height">Height of the UnorderedList.</param>
            <param name="font"><see cref="T:ceTe.DynamicPDF.Font"/> of the UnorderedList.</param>
            <param name="fontSize">FontSize of the UnorderedList.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.UnorderedList.GetRequiredHeight">
            <summary>
            Gets the height required to fit all of the text supplied.
            </summary>
            <returns>The float value indicating required height to display all text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.UnorderedList.GetOverFlowList">
             <summary>
             Gets a UnorderedList object containing the List Text.
             </summary>
             <returns>Returns a UnorderedList object.</returns>
             <remarks>This method returns a new <b>UnorderedList</b> object that contains the remaining text that did not fit.</remarks>
            ^UnorderedList.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.UnorderedList.GetOverFlowList(System.Single,System.Single)">
             <summary>
             Gets a UnorderedList object containing the List Text.
             </summary>
             <param name="x">New X coordinate of the UnorderedList.</param>
             <param name="y">New Y coordinate of the UnorderedList.</param>
             <returns>Returns a UnorderedList object.</returns>
             <remarks>This method returns a new <b>UnorderedList</b> object that contains the remaining text that did not fit.</remarks>
            ^UnorderedList.Example3
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.UnorderedList.BulletStyle">
            <summary>
            Gets or Sets the BulletStyle of the List.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.UnorderedListItemList">
             <summary>
             Description of UnorderedListItemList.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.UnorderedListStyle">
             <summary>
             Represents the UnorderedListStyle.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.UnorderedListStyle.#ctor(System.String,ceTe.DynamicPDF.Font)">
            <summary>
            Creates Custom Bullets.
            </summary>
            <param name="type">Custom bullet String.</param>
            <param name="font">Font of the Custom bullet.</param>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.UnorderedListStyle.None">
            <summary>
            None specified.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.UnorderedListStyle.Asterisk">
            <summary>
            UnorderedListStyle Asterisk.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.UnorderedListStyle.Circle">
            <summary>
            UnorderedListStyle Circle.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.UnorderedListStyle.Dash">
            <summary>
            UnorderedListStyle Dash.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.UnorderedListStyle.Disc">
            <summary>
            UnorderedListStyle Disc.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.UnorderedListStyle.Square">
            <summary>
            UnorderedListStyle Square.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.UnorderedSubList">
             <summary>
             Represents the UnorderedSubList.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.UnorderedSubList.BulletStyle">
            <summary>
            Gets or Sets the BulletStyle of the SubList.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageLayout">
            <summary>
            Specifies page layout for the document.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageLayout.SinglePage">
            <summary>
            One page at a time.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageLayout.OneColumn">
            <summary>
            Pages in a column.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageLayout.TwoColumnLeft">
            <summary>
            Pages in two columns, odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageLayout.TwoColumnRight">
            <summary>
            Pages in two columns, odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageLayout.TwoPageLeft">
            <summary>
            Two pages at a time, odd-numbered pages on the left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageLayout.TwoPageRight">
            <summary>
            Two pages at a time, odd-numbered pages on the right.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageList">
             <summary>
             Represents a collection of pages associated with a document.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.PageList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageList"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageList.Add(ceTe.DynamicPDF.Page)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.Page"/> to the end of the <see cref="T:ceTe.DynamicPDF.PageList"/>.
            </summary>
            <param name="page">The <see cref="T:ceTe.DynamicPDF.Page"/> to be added to the end of the <see cref="T:ceTe.DynamicPDF.PageList"/>.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.PageList"/> index at which the <i>page</i> has been added.</returns>
            <remarks>
            <b>NOTE:</b> If the Page to be added is of type AppendedPage(pages retrieved from a MergeDocument are of type AppendedPage),
            the form fields of the AppendedPage may not be merged correctly. This behavior is expected, please use the MergeDocument.Append()
            method instead.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.PageList.Insert(System.Int32,ceTe.DynamicPDF.Page)">
            <summary>
            Inserts a <see cref="T:ceTe.DynamicPDF.Page"/> into the <see cref="T:ceTe.DynamicPDF.PageList"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <i>page</i> should be inserted.</param>
            <param name="page">The <see cref="T:ceTe.DynamicPDF.Page"/> to insert.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the <see cref="T:ceTe.DynamicPDF.PageList"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> for the entire <see cref="T:ceTe.DynamicPDF.PageList"/></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.PageList.Item(System.Int32)">
            <summary>
            Gets the page at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageList.Count">
            <summary>
            Gets the number of pages in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PdfFormat">
            <summary>
            Specifies the format for the PDF. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfFormat.SinglePass">
            <summary>
            The single pass PDF format is used.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfFormat.Linearized">
            <summary>
            The linearized PDF format is used.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PdfVersion">
            <summary>
            Specifies a version of PDF.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfVersion.v1_3">
            <summary>
            PDF version 1.3.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfVersion.v1_4">
            <summary>
            PDF version 1.4.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfVersion.v1_5">
            <summary>
            PDF version 1.5.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfVersion.v1_6">
            <summary>
            PDF version 1.6.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfVersion.v1_7">
            <summary>
            PDF version 1.7.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfVersion.v2_0">
            <summary>
            PDF version 2.0.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PdfXVersion">
            <summary>
            Specifies the PDF/X version.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.None">
            <summary>
            None specified.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.PDF_X_1_1999">
            <summary>
            PDF/X version 1 1999.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.PDF_X_1_2001">
            <summary>
            PDF/X version 1 2001.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.PDF_X_1a_2001">
            <summary>
            PDF/X version 1a 2001.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.PDF_X_1a_2003">
            <summary>
            PDF/X version 1a 2003.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.PDF_X_2_2003">
            <summary>
            PDF/X version 2 2003.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.PDF_X_3_2002">
            <summary>
            PDF/X version 3 2002.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PdfXVersion.PDF_X_3_2003">
            <summary>
            PDF/X version 3 2003.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PickTrayByPdfSize">
            <summary>
            Specifies how the printers tray is chosen.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PickTrayByPdfSize.ViewerDefault">
            <summary>
            The viewers default is used.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PickTrayByPdfSize.Yes">
            <summary>
            The tray is chosen based on the size of the PDF.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PickTrayByPdfSize.No">
            <summary>
            The tray is not chosen based on the size of the PDF.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Prepress">
             <summary>
             Represents the prepress settings.
             </summary>
             <remarks>For more details on creating PDF/X documents take a look at the <a href="PDFX.html">PDF/X</a> topic.</remarks>
            ^Prepress
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.Prepress.PdfXVersion">
            <summary>
            Gets or sets the PDF/X version for the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Prepress.Trapped">
            <summary>
            Gets or sets a value indicating if trapping information is present in the <b>Document</b>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Prepress.OutputIntents">
            <summary>
            Gets the output intent list for the <b>Document</b>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ResourceType">
             <summary>
             Specifies the resource type.
             </summary>
            ^Lic.Merger.Pro
        </member>
        <member name="F:ceTe.DynamicPDF.ResourceType.PageContents">
            <summary>
            Page contents resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ResourceType.Annotation">
            <summary>
            Annotation resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ResourceType.Default">
            <summary>
            Default resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ResourceType.XObject">
            <summary>
            XObject resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ResourceType.Font">
            <summary>
            Font resource.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.ResourceType.MergerFont">
            <summary>
            MergerFont resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.RgbColor">
             <summary>
             Represents an RGB color.
             </summary>
             <remarks>See the <a href="Colors.html">Colors</a> topic for more on RGB colors.</remarks>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.RgbColor"/> class.
            </summary>
            <param name="red">The red intensity.</param>
            <param name="green">The green intensity.</param>
            <param name="blue">The blue intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.RgbColor"/> class.
            </summary>
            <param name="red">The red intensity.</param>
            <param name="green">The green intensity.</param>
            <param name="blue">The blue intensity.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.Equals(System.Object)">
            <summary>
            Tests equality of colors.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <b>Color</b>.</param>
            <returns><b>true</b> if the two colors are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <b>Color</b>.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.ToStringBuilder(System.Text.StringBuilder)">
            <summary>
            Appends the color information to the given <see cref="T:System.Text.StringBuilder"/> object.
            </summary>
            <param name="stringBuilder"><see cref="T:System.Text.StringBuilder"/> to receive the color information.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.DrawStroke(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>OperatorWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.DrawFill(ceTe.DynamicPDF.IO.OperatorWriter)">
            <summary>
            Draws the color data to the given <b>PageWriter</b> object.
            </summary>
            <param name="writer"><b>OperatorWriter</b> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.SetColor(System.Single,System.Single,System.Single)">
            <summary>
            Sets the color.
            </summary>
            <param name="red">Red value to set.</param>
            <param name="green">Green value to set.</param>
            <param name="blue">Blue value to set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.RgbColor.SetColor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Sets the color.
            </summary>
            <param name="red">Red value to set.</param>
            <param name="green">Green value to set.</param>
            <param name="blue">Blue value to set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Components">
            <summary>
            Gets the number of components for the device color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.ColorSpace">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.R">
            <summary>
            Gets or sets the red value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.G">
            <summary>
            Gets or sets the green value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.B">
            <summary>
            Gets or sets the blue value.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Black">
            <summary>Gets the color black.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Silver">
            <summary>Gets the color silver.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkGray">
            <summary>Gets the color dark gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Gray">
            <summary>Gets the color gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DimGray">
            <summary>Gets the color dim gray. </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.White">
            <summary>Gets the color white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Red">
            <summary>Gets the color red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Green">
            <summary>Gets the color green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Lime">
            <summary>Gets the color lime.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Aqua">
            <summary>Gets the color aqua.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Purple">
            <summary>Gets the color purple.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Blue">
            <summary>Gets the color blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Cyan">
            <summary>Gets the color cyan. </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Magenta">
            <summary>Gets the color magenta.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Yellow">
            <summary>Gets the color yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.AliceBlue">
            <summary>Gets the color alice blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.AntiqueWhite">
            <summary>Gets the color antique white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Aquamarine">
            <summary>Gets the color aquamarine.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Azure">
            <summary>Gets the color azure.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Beige">
            <summary>Gets the color beige.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Bisque">
            <summary>Gets the color bisque.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.BlanchedAlmond">
            <summary>Gets the color blanched almond.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.BlueViolet">
            <summary>Gets the color blue violet.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Brown">
            <summary>Gets the color brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.BurlyWood">
            <summary>Gets the color burly wood.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.CadetBlue">
            <summary>Gets the color cadet blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Chartreuse">
            <summary>Gets the color chartreuse.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Chocolate">
            <summary>Gets the color chocolate.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Coral">
            <summary>Gets the color coral.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.CornflowerBlue">
            <summary>Gets the color cornflower blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Cornsilk">
            <summary>Gets the color cornsilk.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Crimson">
            <summary>Gets the color crimson.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkBlue">
            <summary>Gets the color dark blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkCyan">
            <summary>Gets the color dark cyan.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkGoldenRod">
            <summary>Gets the color dark golden rod.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkGreen">
            <summary>Gets the color dark green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkKhaki">
            <summary>Gets the color dark khaki.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkMagenta">
            <summary>Gets the color dark magenta.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkOliveGreen">
            <summary>Gets the color dark olive green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkOrange">
            <summary>Gets the color dark orange.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkOrchid">
            <summary>Gets the color dark orchid.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkRed">
            <summary>Gets the color dark red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkSalmon">
            <summary>Gets the color dark salmon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkSeaGreen">
            <summary>Gets the color dark sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkSlateBlue">
            <summary>Gets the color dark slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkSlateGray">
            <summary>Gets the color dark slate gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkTurquoise">
            <summary>Gets the color dark turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DarkViolet">
            <summary>Gets the color dark violet.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DeepPink">
            <summary>Gets the color deep pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DeepSkyBlue">
            <summary>Gets the color deep sky blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.DodgerBlue">
            <summary>Gets the color dodger blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Feldspar">
            <summary>Gets the color feldspar.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.FireBrick">
            <summary>Gets the color fire brick.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.FloralWhite">
            <summary>Gets the color floral white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.ForestGreen">
            <summary>Gets the color forest green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Fuchsia">
            <summary>Gets the color fuchsia.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Gainsboro">
            <summary>Gets the color gainsboro.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.GhostWhite">
            <summary>Gets the color ghost white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Gold">
            <summary>Gets the color gold.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.GoldenRod">
            <summary>Gets the color golden rod.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.GreenYellow">
            <summary>Gets the color green yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.HoneyDew">
            <summary>Gets the color honey dew.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.HotPink">
            <summary>Gets the color hot pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.IndianRed">
            <summary>Gets the color indian red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Indigo">
            <summary>Gets the color indigo.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Ivory">
            <summary>Gets the color ivory.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Khaki">
            <summary>Gets the color khaki.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Lavender">
            <summary>Gets the color lavender.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LavenderBlush">
            <summary>Gets the color lavender blush.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LawnGreen">
            <summary>Gets the color lawn green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LemonChiffon">
            <summary>Gets the color lemon chiffon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightBlue">
            <summary>Gets the color light blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightCoral">
            <summary>Gets the color light coral.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightCyan">
            <summary>Gets the color light cyan.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightGoldenRodYellow">
            <summary>Gets the color light golden rod yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightGrey">
            <summary>Gets the color light grey.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightGreen">
            <summary>Gets the color light green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightPink">
            <summary>Gets the color light pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightSalmon">
            <summary>Gets the color light salmon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightSeaGreen">
            <summary>Gets the color light sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightSkyBlue">
            <summary>Gets the color light sky blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightSlateBlue">
            <summary>Gets the color light slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightSlateGray">
            <summary>Gets the color light slate gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightSteelBlue">
            <summary>Gets the color light steel blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LightYellow">
            <summary>Gets the color light yellow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.LimeGreen">
            <summary>Gets the color lime green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Linen">
            <summary>Gets the color linen.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Maroon">
            <summary>Gets the color maroon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumAquaMarine">
            <summary>Gets the color medium aqua marine.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumBlue">
            <summary>Gets the color medium blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumOrchid">
            <summary>Gets the color medium orchid.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumPurple">
            <summary>Gets the color medium purple.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumSeaGreen">
            <summary>Gets the color medium sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumSlateBlue">
            <summary>Gets the color medium slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumSpringGreen">
            <summary>Gets the color medium spring green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumTurquoise">
            <summary>Gets the color medium turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MediumVioletRed">
            <summary>Gets the color medium violet red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MidnightBlue">
            <summary>Gets the color midnight blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MintCream">
            <summary>Gets the color mint cream.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.MistyRose">
            <summary>Gets the color misty rose.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Moccasin">
            <summary>Gets the color moccasin.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.NavajoWhite">
            <summary>Gets the color navajo white.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Navy">
            <summary>Gets the color navy.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.OldLace">
            <summary>Gets the color old lace.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Olive">
            <summary>Gets the color olive.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.OliveDrab">
            <summary>Gets the color olive drab.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Orange">
            <summary>Gets the color orange.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.OrangeRed">
            <summary>Gets the color orange red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Orchid">
            <summary>Gets the color orchid.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.PaleGoldenRod">
            <summary>Gets the color pale golden rod.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.PaleGreen">
            <summary>Gets the color pale green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.PaleTurquoise">
            <summary>Gets the color pale turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.PaleVioletRed">
            <summary>Gets the color pale violet red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.PapayaWhip">
            <summary>Gets the color papaya whip.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.PeachPuff">
            <summary>Gets the color peach puff.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Peru">
            <summary>Gets the color peru.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Pink">
            <summary>Gets the color pink.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Plum">
            <summary>Gets the color plum.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.PowderBlue">
            <summary>Gets the color powder blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.RosyBrown">
            <summary>Gets the color rosy brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.RoyalBlue">
            <summary>Gets the color royal blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SaddleBrown">
            <summary>Gets the color saddle brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Salmon">
            <summary>Gets the color salmon.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SandyBrown">
            <summary>Gets the color sandy brown.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SeaGreen">
            <summary>Gets the color sea green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SeaShell">
            <summary>Gets the color sea shell.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Sienna">
            <summary>Gets the color sienna.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SkyBlue">
            <summary>Gets the color sky blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SlateBlue">
            <summary>Gets the color slate blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SlateGray">
            <summary>Gets the color slate gray.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Snow">
            <summary>Gets the color snow.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SpringGreen">
            <summary>Gets the color spring green.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.SteelBlue">
            <summary>Gets the color steel blue.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Tan">
            <summary>Gets the color tan.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Teal">
            <summary>Gets the color teal.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Thistle">
            <summary>Gets the color thistle.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Tomato">
            <summary>Gets the color tomato.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Turquoise">
            <summary>Gets the color turquoise.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Violet">
            <summary>Gets the color violet.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.VioletRed">
            <summary>Gets the color violet red.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.Wheat">
            <summary>Gets the color wheat.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.WhiteSmoke">
            <summary>Gets the color white smoke.</summary>
        </member>
        <member name="P:ceTe.DynamicPDF.RgbColor.YellowGreen">
            <summary>Gets the color yellow green.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Section">
             <summary>
             Represents a section associated with a document.
             </summary>
             <remarks>For more details on sections take a look at the <a href="Document Sectioning.html">Document Sectioning</a> topic.</remarks>
            ^Section
            ^Lic.Generator.Comm
        </member>
        <member name="P:ceTe.DynamicPDF.Section.NumberingStyle">
            <summary>
            Gets or sets the numbering style for the section.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Section.Prefix">
            <summary>
            Gets or sets the prefix string for the section.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Section.StartingPageNumber">
            <summary>
            Gets or sets the starting page number for the section.
            </summary>
            <remarks>This must be a value greater than or equal to 1.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Section.PageIndex">
            <summary>
            Gets the page index for the start of the section.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Section.Template">
            <summary>
            Gets or sets the Template for the section.
            </summary>
            <remarks>This template will be used for all pages in this section that have their
            <see cref="P:ceTe.DynamicPDF.Page.ApplySectionTemplate"/> property set to <b>true</b>(the default value).</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Section.StampTemplate">
            <summary>
            Gets or sets the StampTemplate for the section.
            </summary>
            <remarks>This stamp template will be used for all pages in this section that have their
            <see cref="P:ceTe.DynamicPDF.Page.ApplySectionTemplate"/> property set to <b>true</b>(the default value).</remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.SectionList">
             <summary>
             Represents a collection of sections associated with a document.
             </summary>
             <remarks>For more details on sections take a look at the <a href="Document Sectioning.html">Document Sectioning</a> topic.</remarks>
            ^SectionList 
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin">
            <summary>
            Begins a section in the document.
            </summary>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin(ceTe.DynamicPDF.NumberingStyle)">
            <summary>
            Begins a section in the document.
            </summary>
            <param name="numberingStyle">The <see cref="T:ceTe.DynamicPDF.NumberingStyle"/> to use for the section.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin(System.String)">
            <summary>
            Begins a section in the document.
            </summary>
            <param name="prefix">The prefix to use for the section.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin(ceTe.DynamicPDF.Template)">
            <summary>
            Begins a section in the document.
            </summary>
            <param name="template">The <see cref="T:ceTe.DynamicPDF.Template"/> to use for the section.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin(ceTe.DynamicPDF.NumberingStyle,System.String)">
            <summary>
            Begins a section in the document.
            </summary>
            <param name="numberingStyle">The <see cref="T:ceTe.DynamicPDF.NumberingStyle"/> to use for the section.</param>
            <param name="prefix">The prefix to use for the section.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin(ceTe.DynamicPDF.NumberingStyle,ceTe.DynamicPDF.Template)">
            <summary>
            Begins a section in the document.
            </summary>
            <param name="numberingStyle">The <see cref="T:ceTe.DynamicPDF.NumberingStyle"/> to use for the section.</param>
            <param name="template">The <see cref="T:ceTe.DynamicPDF.Template"/> to use for the section.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin(System.String,ceTe.DynamicPDF.Template)">
            <summary>
            Begins a section in the document.
            </summary>
            <param name="prefix">The prefix to use for the section.</param>
            <param name="template">The <see cref="T:ceTe.DynamicPDF.Template"/> to use for the section.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SectionList.Begin(ceTe.DynamicPDF.NumberingStyle,System.String,ceTe.DynamicPDF.Template)">
            <summary>
            Begins a section in the document.
            </summary>
            <param name="numberingStyle">The <see cref="T:ceTe.DynamicPDF.NumberingStyle"/> to use for the section.</param>
            <param name="prefix">The prefix to use for the section.</param>
            <param name="template">The <see cref="T:ceTe.DynamicPDF.Template"/> to use for the section.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Section"/> object that was begun.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.SpotColor">
             <summary>
             Represents a spot color.
             </summary>
             <remarks>See the <a href="Colors.html">Colors</a> topic for more on Spot Colors colors.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColor.#ctor(System.Single,ceTe.DynamicPDF.SpotColorInk)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.SpotColor"/> class.
            </summary>
            <param name="tint">Value between 0 and 1 specifying a percentage of the color to come through.</param>
            <param name="ink">The <see cref="T:ceTe.DynamicPDF.SpotColorInk"/> to be used.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColor.Equals(System.Object)">
            <summary>
            Tests equality of colors.
            </summary>
            <param name="obj"><b>Object</b> to compare to the current <b>Color</b>.</param>
            <returns><b>true</b> if the two colors are equal</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColor.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in
            hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current <see cref="T:ceTe.DynamicPDF.Color"/> object.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColor.DrawStroke(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the color data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColor.DrawFill(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the color data to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the color data.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.SpotColor.ColorSpace">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.SpotColor.Tint">
            <summary>
            Gets the color space for the color.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.SpotColorInk">
             <summary>
             Represents a spot color ink.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColorInk.#ctor(System.String,ceTe.DynamicPDF.CmykColor)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.SpotColorInk"/> class.
            </summary>
            <param name="name">Name of the spot color ink to be used.</param>
            <param name="alternateColor">The CMYK color to be used when the device does not contain the sopt color specified.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColorInk.DrawName(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the spot color ink name to the specified <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> to take the spot color ink name.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColorInk.DrawColorSpace(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the color space to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to take the color space.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.SpotColorInk.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the spot color ink to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to take the spot color ink.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.SpotColorInk.Name">
            <summary>
            Gets or sets the name of the ink to be used.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.SpotColorInk.AlternateColor">
            <summary>
            Gets or sets the CMYK color to be used as the alternative color.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.FooterHtmlLayout">
            <summary>
            Represents a footer html layout of the page element.
            </summary>
            <remarks>This class can be used to place Footer Html Layout on a page.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.FooterHtmlLayout.Left">
             <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement"/> object that represents the  left element of the footer.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FooterHtmlLayout.Right">
             <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement"/> object that represents the right element of the footer.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FooterHtmlLayout.Center">
             <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement"/> object that represents the center element of the footer.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FooterHtmlLayout.TopPadding">
            <summary>
            Gets or sets the top padding of the footer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FooterHtmlLayout.RightMargin">
            <summary>
            Gets or sets the right margin of the footer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FooterHtmlLayout.LeftMargin">
            <summary>
            Gets or sets the left margin of the footer.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.FooterHtmlLayout.BottomMargin">
            <summary>
            Gets or sets the bottom margin of the footer.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement">
            <summary>
            Represents a header footer html layout element of the <see cref="T:ceTe.DynamicPDF.HeaderHtmlLayout"/> and <see cref="T:ceTe.DynamicPDF.FooterHtmlLayout"/>.
            </summary>
            <remarks>This class can be used to place <see cref="T:ceTe.DynamicPDF.HeaderHtmlLayout"/> and <see cref="T:ceTe.DynamicPDF.FooterHtmlLayout"/> on a page.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement.Text">
             <summary>
            Get/Set. The HTML text for the element. Should share the CSS and styles of the body HTML.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement.ShowOnFirstPage">
             <summary>
            Get/Set. True by default. If false, the element will not show on the first page.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement.ShowOnLastPage">
             <summary>
            Get/Set. True by default. If false, the element will not show on the last page.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement.HasPageNumbers">
             <summary>
            Get/Set. False by default. 
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement.Width">
            <summary>
            Gets or sets width of the element.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.HeaderHtmlLayout">
            <summary>
            Represents a header html layout of the page element.
            </summary>
            <remarks>This class can be used to place Header Html Layout on a page.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderHtmlLayout.Left">
             <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement"/> object that represents the left element of the header.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderHtmlLayout.Right">
             <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement"/> object that represents the right element of the header.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderHtmlLayout.Center">
             <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.HeaderFooterHtmlLayoutElement"/> object that represents the center element of the header.
             </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderHtmlLayout.TopMargin">
            <summary>
            Gets or sets the top margin of the header.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderHtmlLayout.LeftMargin">
            <summary>
            Gets or sets the left margin of the header.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderHtmlLayout.RightMargin">
            <summary>
            Gets or sets the right margin of the header.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderHtmlLayout.BottomPadding">
            <summary>
            Gets or sets the bottom padding of the header.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.HtmlLayout">
             <summary>
             Represents a html layout of the document.
             </summary>
             <remarks>This class can be used to place html layout on a document.</remarks>
            ^HtmlLayout.Example1
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.#ctor(System.Uri,ceTe.DynamicPDF.PageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HtmlLayout"/> class.
            </summary>
            <param name="uri">Physical Html file path of the Html Layout.</param>
            <param name="pageInfo">The <see cref="T:ceTe.DynamicPDF.PageInfo"/> representing the size of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.#ctor(System.IO.Stream,ceTe.DynamicPDF.PageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HtmlLayout"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the HTML data for the Html Layout.</param>
            <param name="pageInfo">The <see cref="T:ceTe.DynamicPDF.PageInfo"/> representing the size of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.#ctor(System.String,ceTe.DynamicPDF.PageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HtmlLayout"/> class.
            </summary>
            <param name="text">Html text to display in the Html Layout.</param>
            <param name="pageInfo">The <see cref="T:ceTe.DynamicPDF.PageInfo"/> representing the size of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.#ctor(System.Uri,System.Uri,ceTe.DynamicPDF.PageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HtmlLayout"/> class.
            </summary>
            <param name="uri">Physical Html file path of the Html Layout.</param>
            <param name="baseRef">Physical file path of the Html resources.</param>
            <param name="pageInfo">The <see cref="T:ceTe.DynamicPDF.PageInfo"/> representing the size of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.#ctor(System.IO.Stream,System.Uri,ceTe.DynamicPDF.PageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HtmlLayout"/> class.
            </summary>
            <param name="stream"><see cref="T:System.IO.Stream"/> object containing the HTML data for the Html Layout.</param>
            <param name="baseRef">Physical file path of the Html resources.</param>
            <param name="pageInfo">The <see cref="T:ceTe.DynamicPDF.PageInfo"/> representing the size of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.#ctor(System.String,System.Uri,ceTe.DynamicPDF.PageInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HtmlLayout"/> class.
            </summary>
            <param name="text">Html text to display in the Html Layout.</param>
            <param name="baseRef">Physical file path of the Html resources.</param>
            <param name="pageInfo">The <see cref="T:ceTe.DynamicPDF.PageInfo"/> representing the size of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.Layout">
             <summary>
             Gets a <see cref="T:ceTe.DynamicPDF.Document"/> containing the paginated pages.
             </summary>
            ^HtmlLayout.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.HtmlLayout.Layout(ceTe.DynamicPDF.Document)">
             <summary>
             Adds the paginated pages to the supplied <see cref="T:ceTe.DynamicPDF.Document"/>.
             </summary>
            ^HtmlLayout.Example3
        </member>
        <member name="P:ceTe.DynamicPDF.HtmlLayout.Header">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.HeaderHtmlLayout"/> object that represents the the header properties.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HtmlLayout.Footer">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.FooterHtmlLayout"/> object that represents the footer properties.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HtmlLayout.BaseRef">
            <summary>
            Gets or sets the base ref of the Html Layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HtmlLayout.TopMargin">
            <summary>
            Gets or sets the top margin of the Html Layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HtmlLayout.RightMargin">
            <summary>
            Gets or sets the right margin of the Html Layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HtmlLayout.BottomMargin">
            <summary>
            Gets or sets the bottom margin of the Html Layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HtmlLayout.LeftMargin">
            <summary>
            Gets or sets the left margin of the Html Layout.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageInfo">
            <summary>
            Represents a page information of the HTML layout.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageInfo.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageInfo"/> class.
            </summary>
            <param name="size">The <see cref="T:ceTe.DynamicPDF.PageSize"/> representing the size of the page.</param>
            <param name="orientation">The <see cref="T:ceTe.DynamicPDF.PageOrientation"/> representing the orientation of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageInfo.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageInfo"/> class.
            </summary>
            <param name="width">The width representing the width of the page.</param>
            <param name="height">The height representing the height of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageInfo.#ctor(ceTe.DynamicPDF.Merger.PdfPage)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageInfo"/> class.
            </summary>
            <param name="inputPage"><see cref="T:ceTe.DynamicPDF.Merger.PdfPage"/> object to import.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageInfo.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageInfo"/> class.
            </summary>
            <param name="filePath">Physical file path of the PDF document to import.</param>
            <param name="pageNumber">Page number to import.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.CeTeBullets">
             <summary>
             Represents a CeTeBullets font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.CeTeBullets.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the font definition to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the core font's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.CeTeBullets.GetGlyphWidth(System.Char)">
            <summary>
            Return the width of the glyph.
            </summary>
            <param name="glyph">Glyph to return the width for.</param>
            <returns>The width of the glyph.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CeTeBullets.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CeTeBullets.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CeTeBullets.LineGap">
            <summary>
            Gets the line gap for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CeTeBullets.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the Zapf Dingbats font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CeTeBullets.Name">
            <summary>
            Gets the name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CeTeBullets.LineBreaker">
            <summary>
            Gets the default line breaker for the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.CoreLatinFont">
             <summary>
             Represents a core Latin font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.CoreLatinFont.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the font definition to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the core font's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.CoreLatinFont.GetGlyphWidth(System.Char)">
            <summary>
            Returns the mwidth of a glyph.
            </summary>
            <param name="glyph">Glyph whose mwidth is to be returned.</param>
            <returns>Mwidth of glyph.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CoreLatinFont.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CoreLatinFont.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CoreLatinFont.LineGap">
            <summary>
            Gets the line gap for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CoreLatinFont.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the core Latin font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CoreLatinFont.Name">
            <summary>
            Gets the name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CoreLatinFont.SingleByteEncoder">
            <summary>
            Gets the single byte encoder for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CoreLatinFont.LineBreaker">
            <summary>
            Gets the default line breaker for the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.Courier">
             <summary>
             Represents the core PDF Courier font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Courier.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.Courier"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Courier.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.CourierBold">
             <summary>
             Represents the core PDF Courier Bold font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.CourierBold.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.CourierBold"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CourierBold.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.CourierBoldOblique">
             <summary>
             Represents the core PDF Courier Bold Oblique font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.CourierBoldOblique.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.CourierBoldOblique"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CourierBoldOblique.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.CourierOblique">
             <summary>
             Represents the core PDF Courier Oblique font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.CourierOblique.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.CourierOblique"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.CourierOblique.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.FontFamilyList">
             <summary>
             Represents a collection of font families.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.FontFamilyList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.FontFamilyList"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.FontFamilyList.Add(ceTe.DynamicPDF.FontFamily)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.FontFamily"/> to the collection.
            </summary>
            <param name="fontFamily">The <see cref="T:ceTe.DynamicPDF.FontFamily"/> object to add.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.FontFamilyList.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> for the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.FontFamilyList.Count">
            <summary>
            Gets the total number of font families in the collection.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.FontFamilyList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.FontFamily"/> at the specified index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.FontFamilyList.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.FontFamily"/> with the specified name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.Helvetica">
             <summary>
             Represents the core PDF Helvetica font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Helvetica.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.Helvetica"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Helvetica.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Helvetica.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Helvetica.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.HelveticaBold">
             <summary>
             Represents the core PDF Helvetica Bold font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaBold.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.HelveticaBold"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaBold.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaBold.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.HelveticaBold.FormFontName">
            <summary>
            Gets the four character name of the font. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.HelveticaBoldOblique">
             <summary>
             Represents the core PDF Helvetica Bold Oblique font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaBoldOblique.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.HelveticaBoldOblique"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaBoldOblique.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kern pairs.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaBoldOblique.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.HelveticaBoldOblique.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.HelveticaOblique">
             <summary>
             Represents the core PDF Helvetica Oblique font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaOblique.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.HelveticaOblique"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaOblique.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.HelveticaOblique.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.HelveticaOblique.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.IFontSubsettable">
            <summary>
            Represents a contract implemented by subsettable fonts.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.IFontSubsettable.GetFontSubsetter">
            <summary>
            Returns a font subsetter for the font.
            </summary>
            <returns><see cref="T:ceTe.DynamicPDF.IO.FontSubsetter"/> object to use for the font.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.TextLineList">
             <summary>
             Represents a list of text lines.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.#ctor(System.Char[],System.Int32,System.Int32,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> class.
            </summary>
            <param name="text">Text of the text line list.</param>
            <param name="start">Start index of the text for the text line list.</param>
            <param name="length">Length of the text for the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="font">Font to use for text of the text line list.</param>
            <param name="fontSize">Font size to use for text of the text line list.</param>
            <param name="initialLineIsNewParagraph">Specifies if the first line of the text line list is a new paragraph.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.#ctor(System.Int32,System.Single,System.Single,System.Boolean,ceTe.DynamicPDF.Text.TextLineList)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> class.
            </summary>
            <param name="start">Start index of the text for the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="initialLineIsNewParagraph">Specifies if the first line of the text line list is a new paragraph.</param>
            <param name="textLineList">Previous text line list.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.SetLines(System.Boolean)">
            <summary>
            Sets the lines of the line list.
            </summary>
            <param name="setAllLines">Specifies if all lines should be set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.CalculateLines(ceTe.DynamicPDF.Text.TextLineList.LineCalculationMode)">
            <summary>
            Calculates the lines of the text line list.
            </summary>
            <param name="mode">Mode to use for the calculation.</param>
            <returns>A value indicating if all the lines were calculated.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.InitializeLines(System.Boolean)">
            <summary>
            Initializes the text line list.
            </summary>
            <param name="newParagraph"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetOverflow(System.Single,System.Single)">
            <summary>
            Returns an overflow <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/>.
            </summary>
            <param name="width">Width of the overflow text line list.</param>
            <param name="height">Height of the overflow text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> containing the overflowed lines.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.HasOverflow">
            <summary>
            Returns a value indicating if the text line list has overflow lines.
            </summary>
            <returns>A value indicating if overflow lines exist.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetOverflowText">
            <summary>
            Returns the overflow text of the text line list.
            </summary>
            <returns>The overflow text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetText">
            <summary>
            returns the text of the text line list.
            </summary>
            <returns>Text of the text line list.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.SetText(System.String)">
            <summary>
            Sets the text of the text line list to a new value.
            </summary>
            <param name="text">Text to set as the text of the text line list.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.SetText(System.Char[])">
            <summary>
            Sets the text of the text line list to a new value.
            </summary>
            <param name="text">Character array to set as the text of the text line list.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.Add(ceTe.DynamicPDF.Text.TextLine)">
            <summary>
            Add a text line to the text line list.
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetRequiredHeight(System.Int32)">
            <summary>
            Returns the required height for the all the text to display.
            </summary>
            <param name="startLine">Start text line index.</param>
            <returns>The required height of the text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetTextHeight(System.Int32)">
            <summary>
            Returns the height of the visible text.
            </summary>
            <param name="lineCount">Number of lines to use for the calculation.</param>
            <returns>The height of the text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetMaximunWidth">
            <summary>
            Get the maximum width of text in the line list.
            </summary>
            <returns></returns>
            <remarks><font color="red">NOTE: This method is obsolete.</font>Use GetMaximumWidth() method instead.</remarks>  
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetMaximumWidth">
            <summary>
            Get the maximum width of text in the line list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetTextHeight">
            <summary>
            Returns the height of the visible text.
            </summary>
            <returns>The height of the text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.GetLineCount(System.Int32,System.Single)">
            <summary>
            Returns the number of lines that will draw for the given height.
            </summary>
            <param name="startLine">Start text line index.</param>
            <param name="height">Height used for the calculation.</param>
            <returns>the number of lines that will be drawn.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.Draw(ceTe.DynamicPDF.IO.OperatorWriter,System.Single,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color,System.Boolean,System.Boolean)">
            <summary>
            Draws the text line list to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.OperatorWriter"/> object to receive the link's output.</param>
            <param name="x">X coordinate of the text.</param>
            <param name="y">Y coordinate of the text.</param>
            <param name="align">Alignment of the text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="underline">Specifies if the text should be underlined.</param>
            <param name="rightToLeft">Specifies if the text should be drawn right to left.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.Draw(ceTe.DynamicPDF.IO.OperatorWriter,System.Single,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Draws the text line list to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.OperatorWriter"/> object to receive the link's output.</param>
            <param name="x">X coordinate of the text.</param>
            <param name="y">Y coordinate of the text.</param>
            <param name="align">Alignment of the text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="underline">Specifies if the text should be underlined.</param>
            <param name="startLine">Start line for the text.</param>
            <param name="lineCount">Number of lines to draw.</param>
            <param name="rightToLeft">Specifies if the text should be drawn right to left.</param>
            <param name="strikeThrough">Specifies if the text should be StrikeThrough.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLineList.Draw(ceTe.DynamicPDF.IO.OperatorWriter,System.Single,System.Single,ceTe.DynamicPDF.TextAlign,ceTe.DynamicPDF.Color,System.Boolean,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Draws the text line list to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.OperatorWriter"/> object to receive the link's output.</param>
            <param name="x">X coordinate of the text.</param>
            <param name="y">Y coordinate of the text.</param>
            <param name="align">Alignment of the text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="underline">Specifies if the text should be underlined.</param>
            <param name="startLine">Start line for the text.</param>
            <param name="lineCount">Number of lines to draw.</param>
            <param name="rightToLeft">Specifies if the text should be drawn right to left.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.Start">
            <summary>
            Gets or sets the start index for text in the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.End">
            <summary>
            Gets or sets the ending index for text in the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.LineCount">
            <summary>
            Gets the line count of the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.VisibleLineCount">
            <summary>
            Gets the number of lines that will be drawn. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.BaseLine">
            <summary>
            Gets the baseline value for the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.Item(System.Int32)">
            <summary>
            Gets the text line at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.TextArray">
            <summary>
            Gets or sets the text of the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.Width">
            <summary>
            Gets or set the width of the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.CleanParagraphBreaks">
            <summary>
            Gets or sets if the text line list should have clean paragraph breaks.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.Height">
            <summary>
            Gets or sets the height of the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.Font">
            <summary>
            Gets or sets the font of the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.FontSize">
            <summary>
            Gets or sets the font size of the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.Leading">
            <summary>
            Gets or sets the leading of the text line list.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.Text.TextLineList.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.AutoLeading">
            <summary>
            Gets or sets whether the leading of the text line list should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.Text.TextLineList.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.Count">
            <summary>
            Gets the number of lines in the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indention of the text line list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLineList.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing of the text line list.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.TextLineList.LineCalculationMode">
            <summary>
            Specifies a line calculation mode.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Text.TextLineList.LineCalculationMode.OneLine">
            <summary>Calculate one line.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Text.TextLineList.LineCalculationMode.ToHeight">
            <summary>Calculate lines to the given height.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Text.TextLineList.LineCalculationMode.All">
            <summary>Calculate all lines.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.KerningValues">
             <summary>
             Represents a kerning value collection.
             </summary>
            ^KerningValues 
        </member>
        <member name="P:ceTe.DynamicPDF.Text.KerningValues.Text">
            <summary>
            Gets the character array of the text that is kerned.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.KerningValues.Spacing">
            <summary>
            Gets the spacing array corresponding to the text array.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.LatinLineBreaker">
             <summary>
             Represents a Latin line breaker.
             </summary>
            ^Lic.Generator.NoReport
        </member>
        <member name="T:ceTe.DynamicPDF.Text.LineBreaker">
             <summary>
             Represents a line breaker for text.
             </summary>
            ^Lic.Generator.NoReport
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LineBreaker.GetLines(System.Char[],System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> with the text broken into lines.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LineBreaker.GetLines(System.Char[],System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> with the text broken into lines.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LineBreaker.GetLines(System.Char[],System.Int32,System.Int32,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> with the text broken into lines.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="start">Start index for the text of the text line list.</param>
            <param name="length">Length of the text of the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LineBreaker.GetLines(System.Char[],System.Int32,System.Int32,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> with the text broken into lines.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="start">Start index for the text of the text line list.</param>
            <param name="length">Length of the text of the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given text.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.LineBreaker.Latin">
            <summary>
            Gets the Latin line breaker.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.LineBreaker.Universal">
            <summary>
            Gets the universal line breaker.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.LineBreaker.Default">
            <summary>
            Gets or sets the default line breaker.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LatinLineBreaker.GetLines(System.Char[],System.Int32,System.Int32,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> with the text broken into lines for Latin text.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="start">Start index for the text of the text line list.</param>
            <param name="length">Length of the text of the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given text.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.LatinTextLineList">
             <summary>
             Represents a Latin text line list.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LatinTextLineList.#ctor(System.Char[],System.Int32,System.Int32,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.LatinTextLineList"/> class.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="start">Start index for the text of the text line list.</param>
            <param name="length">Length of the text of the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LatinTextLineList.GetOverflowText">
            <summary>
            Returns the overflow text of the text line list.
            </summary>
            <returns>Overflow text of the line list.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LatinTextLineList.HasOverflow">
            <summary>
            Returns a value indicating if the text line list has overflow lines.
            </summary>
            <returns>A value indicating if the line list has overflow text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LatinTextLineList.GetOverflow(System.Single,System.Single)">
            <summary>
            Returns the overflow lines for the text line list.
            </summary>
            <param name="width">Width of the returned text line list.</param>
            <param name="height">Height of the returned text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> containing the overflow lines.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LatinTextLineList.InitializeLines(System.Boolean)">
            <summary>
            Initializes the text line list.
            </summary>
            <param name="newParagraph">Specifies if the first line in the list is a new paragraph.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.LatinTextLineList.CalculateLines(ceTe.DynamicPDF.Text.TextLineList.LineCalculationMode)">
            <summary>
            Calculates the lines.
            </summary>
            <param name="mode">Line calculation mode to use.</param>
            <returns>A value indicating if all the lines were calculated.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.OpenTypeFont">
             <summary>
             Represents an OpenType font.
             </summary>
             <remarks>See the <a href="Open_Type_Fonts.html">OpenType Fonts</a> topic for more on OpenType fonts. </remarks>
            ^OpenTypeFont
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="filePath">Physical file path of the OpenType font file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="filePath">Physical file path of the OpenType font file.</param>
            <param name="useCharacterShaping">Value indicating whether to use the advance typographic tables (GSUB, GPOS) when writing the text. Setting this property to true will turn on character shaping.</param>
            <remarks>
            This constructor is now obsolete and character shaping will be enabled always for the supported fonts.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.#ctor(System.String,ceTe.DynamicPDF.Text.LineBreaker)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="filePath">Physical file path of the opentype / true type font file.</param>
            <param name="lineBreaker">Line breaker to use for the opentype font. </param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.#ctor(System.String,ceTe.DynamicPDF.Text.LineBreaker,System.Boolean)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="filePath">Physical file path of the opentype / true type font file.</param>
            <param name="lineBreaker">Line breaker to use for the opentype font. </param>
            <param name="useCharacterShaping">Value indicating whether to use the advance typographic tables (GSUB, GPOS) when writing the text. Setting this property to true will turn on character shaping.</param>
            <remarks>
            This constructor is now obsolete and character shaping will be enabled always for the supported fonts.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.#ctor(System.IO.Stream)">
            <summary>
            Intializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="stream">Stream containing the opentype  / truetype font data.</param>      
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.#ctor(System.IO.Stream,ceTe.DynamicPDF.Text.LineBreaker)">
            <summary>
            Intializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="stream">Stream containing the opentype  / truetype font data.</param>
            <param name="lineBreaker">Line breaker to use for the opentype font.</param>  
            <remarks>
            This constructor is now obsolete and character shaping will be enabled always for the supported fonts.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.#ctor(System.IO.Stream,ceTe.DynamicPDF.Text.LineBreaker,System.Boolean)">
            <summary>
            Intializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="stream">Stream containing the opentype  / truetype font data.</param>
            <param name="lineBreaker">Line breaker to use for the opentype font.</param>
            <param name="useCharacterShaping">Value indicating whether to use the advance typographic tables (GSUB, GPOS) when writing the text. Setting this property to true will turn on character shaping.</param>
            <remarks>
            This constructor is now obsolete and character shaping will be enabled always for the supported fonts.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draw the opentype font data to the <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object used to receive the opentype font output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.GetGlyphWidth(System.Char)">
            <summary>
            Returns the mwidth of the given char.
            </summary>
            <param name="glyph">Glyph whose mwidth is required.</param>
            <returns>mwdith of the given glyph.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.GetFontSubsetter">
            <summary>
            eturns a font subsetter for the opentype font.
            </summary>
            <returns><see cref="T:ceTe.DynamicPDF.IO.FontSubsetter"/> object used for the font.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFont.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.LineBreaker">
            <summary>
            Gets the instance of <see cref="P:ceTe.DynamicPDF.Text.OpenTypeFont.LineBreaker"/> used for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.Name">
            <summary>
            Gets the font name for the file given.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.RequiredPdfObjects">
            <summary>
            Gets the required pdf objects.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.ResourceType">
            <summary>
            Gets the value of <see cref="P:ceTe.DynamicPDF.Text.OpenTypeFont.ResourceType"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.LineGap">
            <summary>
            Gets the line gap for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.Embed">
            <summary>
            Gets or sets a value indicating whether the font need to be embedded in to the pdf.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.Subset">
            <summary>
            Gets or sets a value indicating whether the font need to subset while embedding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.OutLineType">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.Text.OpenTypeFont.OutLineType"/> of the opentype font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.OpenTypeFont.UseCharacterShaping">
            <summary>
            Gets a value indicating whether to use the advance typographic tables (GSUB, GPOS) when writing the text. 
            </summary>
            <remarks>
            This property is now obsolete. Character shapping will be enabled always for the supported fonts.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.OpenTypeFontTables.OutLineType">
            <summary>
            Indicates the font outline types in a opentype font.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Text.OpenTypeFontTables.OutLineType.TrueTypeOutline">
            <summary>
            Indicates Truetype outline.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Text.OpenTypeFontTables.OutLineType.PostScriptOutLine">
            <summary>
            Indicates Postscript (CFF) outline.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Text.OpenTypeFontTables.TrueTypeFontWriter.offsetTable">
            *0000:*/ 0x00, 0x01, 0x00, 0x00, 0x00, 0x0B, 0x00, 0x80, 0x00, 0x03, 0x00, 0x10, /*head*/ 0x68, 0x65, 0x61, 0x64, 
            *0010:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*hhea*/ 0x68, 0x68, 0x65, 0x61, 
            *0020:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*hmtx*/ 0x68, 0x6D, 0x74, 0x78, 
            *0030:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*cvt */ 0x63, 0x76, 0x74, 0x20, 
            *0040:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*fpgm*/ 0x66, 0x70, 0x67, 0x6D, 
            *0050:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*maxp*/ 0x6D, 0x61, 0x78, 0x70, 
            *0060:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*prep*/ 0x70, 0x72, 0x65, 0x70, 
            *0070:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*glyf*/ 0x67, 0x6C, 0x79, 0x66, 
            *0080:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*loca*/ 0x6C, 0x6F, 0x63, 0x61, 
            *0090:*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /*name*/ 0x6E, 0x61, 0x6D, 0x65,
        </member>
        <member name="T:ceTe.DynamicPDF.Text.SingleByteEncodingResource">
             <summary>
             Represents a single byte encoding resource.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.SingleByteEncodingResource.#ctor(System.Int64,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.SingleByteEncodingResource"/> font class.
            </summary>
            <param name="uid">The unique ID of the encoder.</param>
            <param name="data">Byte array containing the encoders output steam.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.SingleByteEncodingResource.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the encoder to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the encoder's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SingleByteEncodingResource.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the single byte encoding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SingleByteEncodingResource.ResourceType">
            <summary>
            Gets the resource type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.SinoTypeSongLight">
             <summary>
             Represents the Asian Font Pack, Sino Type Song Light font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.SinoTypeSongLight.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the font definition to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the font's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.SinoTypeSongLight.GetGlyphWidth(System.Char)">
            <summary>
            Returns the mwidth of a glyph.
            </summary>
            <param name="glyph">Glyph whose mwidth is to be returned.</param>
            <returns>Mwidth of glyph.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SinoTypeSongLight.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SinoTypeSongLight.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SinoTypeSongLight.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the Sino Type Song Light font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SinoTypeSongLight.Name">
            <summary>
            Gets the name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.SinoTypeSongLight.LineBreaker">
            <summary>
            Gets the default line breaker for the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.Symbol">
             <summary>
             Represents the core PDF Symbol font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Symbol.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the font definition to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the core font's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Symbol.GetGlyphWidth(System.Char)">
            <summary>
            Returns the mwidth of a glyph.
            </summary>
            <param name="glyph">Glyph whose mwidth is to be returned.</param>
            <returns>Mwidth of glyph.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Symbol.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Symbol.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Symbol.LineGap">
            <summary>
            Gets the line gap for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Symbol.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the Symbol font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Symbol.Name">
            <summary>
            Gets the name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Symbol.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Symbol.LineBreaker">
            <summary>
            Gets the default line breaker for the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.TextLine">
             <summary>
             Represents a line of text.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLine.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.TextLine"/> class.
            </summary>
            <param name="start">Start index for the text.</param>
            <param name="length">Length of the text.</param>
            <param name="mWidth">MWidth of the text.</param>
            <param name="yOffset">Y offset for the line.</param>
            <param name="spaceCount">Number of spaces in the line.</param>
            <param name="newParagraph">Specifies if the line begins a paragraph.</param>
            <param name="hardReturn">Specifies if the line ends with a hard return.</param>
            <param name="hyphenate">Specifies if the line ends with a hyphenation.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TextLine.GetWidth(System.Single)">
            <summary>
            Returns the width of the line's text in points.
            </summary>
            <param name="fontSize">Font size to use for the width.</param>
            <returns>the width of the lines text.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.Start">
            <summary>
            Gets or sets the start index of the lines text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.Length">
            <summary>
            Gets or sets the length of the lines text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.HardReturn">
            <summary>
            Gets or sets a value indicating if the line ends with a hard return.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.NewParagraph">
            <summary>
            Gets or sets a value indicating if the line begins a paragraph.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.Hyphenate">
            <summary>
            Gets or sets a value indicating if the line is to be hyphenated.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.SpaceCount">
            <summary>
            Gets or sets the space count for the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.MWidth">
            <summary>
            Gets or sets the mwidth of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TextLine.YOffset">
            <summary>
            Gets or sets the y offset of the line.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.TimesBold">
             <summary>
             Represents the core PDF Times Bold font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesBold.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.TimesBold"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesBold.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesBold.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TimesBold.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.TimesBoldItalic">
             <summary>
             Represents the core PDF Times Bold Italic font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesBoldItalic.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.TimesBoldItalic"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesBoldItalic.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesBoldItalic.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TimesBoldItalic.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.TimesItalic">
             <summary>
             Represents the core PDF Times Italic font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesItalic.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.TimesItalic"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesItalic.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesItalic.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TimesItalic.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.TimesRoman">
             <summary>
             Represents the core PDF Times Roman font.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesRoman.#ctor(ceTe.DynamicPDF.Text.SingleByteEncoder)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.TimesRoman"/> font class.
            </summary>
            <param name="encoder">Single byte encoding to use for the font.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesRoman.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.TimesRoman.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.TimesRoman.FormFontName">
            <summary>
            Gets the four character name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.Type1Font">
             <summary>
             Represents a Type1Font font.
             </summary>
             <remarks>See the <a href="Type1 Fonts.html">Type1 Fonts</a> topic for more on Type1 fonts.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Type1Font.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.Type1Font"/> class.
            </summary>
            <param name="metricsFile">Physical file path to the .PFM or .AFM font metrics file.</param>
            <param name="fontFile">Physical file path to the Type 1 (.PFB) font file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Type1Font.GetGlyphWidth(System.Char)">
            <summary>
            Returns the mwidth of a glyph.
            </summary>
            <param name="glyph">Glyph whose mwidth is to be returned.</param>
            <returns>Mwidth of glyph.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.Type1Font.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the Type 1 font to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the Type 1 font's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Type1Font.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the type 1 font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Type1Font.LineBreaker">
            <summary>
            Gets the default line breaker for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Type1Font.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Type1Font.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Type1Font.LineGap">
            <summary>
            Gets the line gap for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.Type1Font.Name">
            <summary>
            Gets the name of the font.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.UniversalLineBreaker">
             <summary>
             Represents a universal line breaker.
             </summary>
             <remarks>This line breaker works well for both CJK and many other types of text.</remarks>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.UniversalLineBreaker.GetLines(System.Char[],System.Int32,System.Int32,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Returns a <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> with the text broken into lines for Latin or CJK text.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="start">Start index for the text of the text line list.</param>
            <param name="length">Length of the text of the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> for the given text.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.UniversalTextLineList">
             <summary>
             Represents a universal text line list.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.UniversalTextLineList.#ctor(System.Char[],System.Int32,System.Int32,System.Single,System.Single,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Text.UniversalTextLineList"/> class.
            </summary>
            <param name="text">Text for the text line list.</param>
            <param name="start">Start index for the text of the text line list.</param>
            <param name="length">Length of the text of the text line list.</param>
            <param name="width">Width of the text line list.</param>
            <param name="height">Height of the text line list.</param>
            <param name="font">Font to use for the text of the text line list.</param>
            <param name="fontSize">Font size to use for the text of the text line list.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.UniversalTextLineList.GetOverflowText">
            <summary>
            Returns the overflow text of the text line list.
            </summary>
            <returns>Overflow text of the line list.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.UniversalTextLineList.HasOverflow">
            <summary>
            Returns a value indicating if the text line list has overflow lines.
            </summary>
            <returns>A value indicating if the line list has overflow text.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.UniversalTextLineList.GetOverflow(System.Single,System.Single)">
            <summary>
            Returns the overflow lines for the text line list.
            </summary>
            <param name="width">Width of the returned text line list.</param>
            <param name="height">Height of the returned text line list.</param>
            <returns>A <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/> containing the overflow lines.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.UniversalTextLineList.InitializeLines(System.Boolean)">
            <summary>
            Initializes the text line list.
            </summary>
            <param name="newParagraph">Specifies if the first line in the list is a new paragraph.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.UniversalTextLineList.CalculateLines(ceTe.DynamicPDF.Text.TextLineList.LineCalculationMode)">
            <summary>
            Calculates the lines.
            </summary>
            <param name="mode">Line calculation mode to use.</param>
            <returns>A value indicating if all the lines were calculated.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.Trapped">
            <summary>
            Indicates if trapping information is present.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Trapped.Unknown">
            <summary>
            Trapping information is incomplete or unknown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Trapped.True">
            <summary>
            Trapping information is present and complete.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Trapped.False">
            <summary>
            Trapping information is not present.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.UrlAction">
             <summary>
             Represents an action linking to an external URL.
             </summary>
             <remarks>This class can be used to specify a URL when defining a <see cref="T:ceTe.DynamicPDF.PageElements.Link"/> or a <see cref="T:ceTe.DynamicPDF.PageElements.Bookmark"/>.</remarks>
            ^UrlAction 
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.UrlAction.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.UrlAction"/> class.
            </summary>
            <param name="url">URL the action launches.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.UrlAction.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the action to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer">The <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the actions output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.UrlAction.URL">
            <summary>
            Gets or sets the URL launched by the action.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ViewerPreferences">
             <summary>
             Represents the viewer preferences for a document.
             </summary>
            ^ViewerPreferences 
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.ViewerPreferences.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the encrypter viewer preferences dictionary to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.HideToolbar">
            <summary>
            A flag specifying whether to hide the viewer application�s tool bars when the document is active.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.HideMenubar">
            <summary>
            A flag specifying whether to hide the viewer application�s menu bar when the document is active.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.HideWindowUI">
            <summary>
            A flag specifying whether to hide user interface elements in the document�s window (such as scroll
            bars and navigation controls), leaving only the document�s contents displayed.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.FitWindow">
            <summary>
            A flag specifying whether to resize the document�s window to fit the size of the first displayed page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.CenterWindow">
            <summary>
            A flag specifying whether to position the document�s window in the center of the screen.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.DisplayDocTitle">
            <summary>
            A flag specifying whether the window�s title bar should display the document title taken 
            from the Title entry of the document of the PDF file containing the document.
            </summary>
            <remarks>This does not affect the title bar of most web browsers. The title bar in most web browsers
            will display the file's URL and ignore this setting.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.NonFullScreenPageMode">
            <summary>
            Specifies the page mode when the documents page mode is set to full screen.
            </summary>
            <remarks>This value is ignored if the documents page mode is not set to full screen.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.RightToLeft">
            <summary>
            A flag specifying if right to left text is predominately used by this document.
            </summary>
            <remarks>This does not affect the right to left property of text objects for text added to the document.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.ViewArea">
            <summary>
            Specifies the view area for the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.ViewClip">
            <summary>
            Specifies the view clip area for the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.PrintArea">
            <summary>
            Specifies the print area for the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.PrintClip">
            <summary>
            Specifies the print clip area for the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.NoPrintScaling">
            <summary>
            A flag specifying if scaling should be used when printing the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.Duplex">
            <summary>
            Specifies the default duplex printing mode for the document.
            </summary>
            <remarks>NOTE: This feature is only recognized by Acrobat 8 or greater.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.PrintPageRange">
            <summary>
            Specifies the default page ranges to be used for printing.
            </summary>
            <remarks>NOTE: This feature is only recognized by Acrobat 8 or greater.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.PickTrayByPdfSize">
            <summary>
            Specifies if the printing tray should be picked based on the size of the PDF document.
            </summary>
            <remarks>NOTE: This feature is only recognized by Acrobat 8 or greater.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.ViewerPreferences.NumberOfCopies">
            <summary>
            Specifies the default number of copies to be printed.
            </summary>
            <remarks>NOTE: This feature is only recognized by Acrobat 8 or greater.</remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.WebColor">
             <summary>
             Represents an RGB color created using the web hexadecimal convention.
             </summary>
             <remarks>See the <a href="Colors.html">Colors</a> topic for more on web colors.</remarks>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.WebColor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.WebColor"/> class.
            </summary>
            <param name="webColor">The hexadecimal string representing the color.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpSchema">
             <summary>
             Represents the base class for all XMP schemas.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpSchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the XMP schema data to the document.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to write xmp schema output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.BasicJobTicketSchema">
             <summary>
             Class represents XMP Basic Job Ticket Schema.
             </summary>
             <remarks>The following schema describes very simple workflow or job information.</remarks>
            ^BasicJobTicketSchema 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.BasicJobTicketSchema.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Xmp.BasicJobTicketSchema"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.BasicJobTicketSchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the Basic Job Ticket Schema to the given <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to receive the Basic Job Ticket Schema's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.BasicJobTicketSchema.JobRef">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpJob"/> object to set. , references an external job
            management file for a job process in which the document is being 
            used. Use of job names is under user control. Typical use would be
            to identify all documents that are part of a particular job or contract.
            There are multiple values because there can be more than one job using
            a particular document at any time, and it can also be useful to keep
            historical information about what jobs a document was part of previously.
            </summary>
            <remarks>
            This references an external job management file for a job process 
            in which the document is being used. 
            Use of job names is under user control. Typical use would be
            to identify all documents that are part of a particular job or contract.
            There are multiple values because there can be more than one job using
            a particular document at any time, and it can also be useful to keep
            historical information about what jobs a document was part of previously.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.BasicSchema">
             <summary>
             Class represents the XMP Basic Schema.
             </summary>
             <remarks>The XMP Basic Schema contains properties that provide basic descriptive information.</remarks>
            ^BasicSchema
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.BasicSchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the Basic Schema to the given <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to receive the Basic Schema's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.BasicSchema.Advisory">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set the
            advisory property to specify properties that
            were edited outside the authoring application.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.BasicSchema.Nickname">
            <summary>
            Gets or sets a short informal name for the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.BasicSchema.Thumbnails">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpThumbnail"/> object to set an 
            alternative array of thumbnail images for a file, which
            can differ in characteristics such as size or image encoding.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.CopyrightStatus">
            <summary>
            The type of Copyright Status to use.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.CopyrightStatus.Unknown">
            <summary>
            Copyright status Unknown.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.CopyrightStatus.Copyrighted">
            <summary>
            Copyright status Copyrighted.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.CopyrightStatus.PublicDomain">
            <summary>
            Copyright status public domain.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.DublinCoreSchema">
             <summary>
             Class represents the Dublin Core Schema.
             </summary>
             <remarks>The Dublin Core schema provides a set of commonly used properties.</remarks>
            ^DublinCoreSchema 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the Dublin Core Schema to the given <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to receive the Dublin Core Schema's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Contributors">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set the
            contributors of the resource(other than the author).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Coverage">
            <summary>
            Gets or sets the coverage property representing the extent 
            or scope of the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Creators">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set the authors 
            of the resource(listed in order of precedence, if significant).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Date">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set the Date(s)
            that something important happened to the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Description">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpLangAltList"/> to set the 
            textual description of the content of the resource.
            Multiple values may be present for different languages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Identifier">
            <summary>
            Gets or sets the unique identifier of the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Publisher">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set the publishers of the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Relation">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set relationships to other documents.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Rights">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpLangAltList"/> object to set the informal
            rights statement, selected by language.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Source">
            <summary>
            Gets or sets the unique identifier of the work from which
            the resource was derived.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Subject">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set the descriptive
            phrases or keywords that specify the topic of the content of 
            the resource. By default the keywords set in <see cref="T:ceTe.DynamicPDF.Document"/>
            class will also append along with this phrases. 
            If not required set the ImportKeywords to false.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Title">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpLangAltList"/> object to set the title
            of the document, or the name given to the resource.
            </summary>
            <remarks>
            Typically, it will be a name by which the resource is formally known.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.Type">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.XmpArray"/> object to set the document type.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.DublinCoreSchema.ImportKeywords">
            <summary>
            Gets or sets a boolean value to signify the keywords to be imported from
            <see cref="T:ceTe.DynamicPDF.Document"/> class. By default it is set to true.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.PagedTextSchema">
             <summary>
             Class represents the XMP Paged-Text Schema.
             </summary>
             <remarks>The Paged-Text schema is used for text appearing on a page in a document.</remarks>
            ^PagedTextSchema 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.PagedTextSchema.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Xmp.PagedTextSchema"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.PagedTextSchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the Paged-Text Schema to the given <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to receive the Paged-Text Schema's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.PdfASchema">
             <summary>
             Class represents PdfA Schema.
             </summary>
            ^PdfASchema 
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.PdfASchema.#ctor(ceTe.DynamicPDF.Xmp.PdfAStandard)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Xmp.PdfASchema"/> class.
            </summary>
            <param name="standard">The <see cref="T:ceTe.DynamicPDF.Xmp.PdfAStandard"/> of conformance level.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.PdfASchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the Pdf/A Schema to the given <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to receive the Pdf/A Schema's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.PdfAStandard">
             <summary>
             Specifies a PDF/A Standard.
             </summary>
            ^Lic.Generator.Ent.Enum
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PDF_A_1a_2005">
            <summary>
            Pdf/A standard 1a.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PDF_A_1b_2005">
            <summary>
             Pdf/A standard 1b.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PdfA2a">
            <summary>
             Pdf/A standard 2a.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PdfA2b">
            <summary>
             Pdf/A standard 2b.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PdfA2u">
            <summary>
             Pdf/A standard 2u.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PdfA3a">
            <summary>
             Pdf/A standard 3a.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PdfA3b">
            <summary>
             Pdf/A standard 3b.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Xmp.PdfAStandard.PdfA3u">
            <summary>
             Pdf/A standard 3u.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.RightsManagementSchema">
             <summary>
             Class represents the XMP Rights Management Schema.
             </summary>
             <remarks>This schema includes properties related to rights management.
             These properties specify information regarding the legal
             restrictions associated with a resource.</remarks>
            ^RightsManagementSchema 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.RightsManagementSchema.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Xmp.RightsManagementSchema"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.RightsManagementSchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the Rights Management Schema to the given <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to receive the Rights Management Schema's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.RightsManagementSchema.Certificate">
            <summary>
            Gets or sets the online rights management certificate.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.RightsManagementSchema.Marked2">
            <summary>
            Gets or sets the value indicating that this is a rights-managed resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.RightsManagementSchema.Owner">
            <summary>
            Sets the legal owner(s) of a resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.RightsManagementSchema.UsageTerms">
            <summary>
            Sets the text instructions on how a resource can be legally used.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.RightsManagementSchema.WebStatement">
            <summary>
            Sets the location of a web page describing the owner 
            and/or rights statement for this resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpArray">
             <summary>
             Class represents the XMP array data type.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpCollection">
             <summary>
             This class represents the base class for all the XMP data structures.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpDataType">
             <summary>
             This class represents the base class for all xmp data types.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpCollection.Count">
            <summary>
            Gets the number of elements present in the collection.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpArray.Add(System.String)">
            <summary>
            Adds the text to the property.
            </summary>
            <param name="data">Text to set as value for field.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpArray.Add(System.DateTime)">
            <summary>
            Adds the date to the property.
            </summary>
            <param name="date">The date to be added.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpArray.Count">
            <summary>
            Gets the number of elements present in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpJob">
             <summary>
             This class represents the XMP job data structure.
             <remarks>Describes a job for a job-management system.</remarks>
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpJob.Add(System.String,System.String,System.Uri)">
            <summary>
            Adds the fields of Job data type.
            </summary>
            <param name="name">Informal name of job. This name is for user display and informal systems.</param>
            <param name="id">Unique ID for the job. This field is a reference into some external job management system.</param>
            <param name="uri">A file URL referencing an external job management file.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpJob.Count">
            <summary>
            Gets the number of elements present in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpLangAltList">
             <summary>
             This class represents a language alternative, which is an array of type
             that has a language property qualifier.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpLangAltList.AddLang(System.String,System.String)">
            <summary>
            Adds the default country language and text in the specified language.
            </summary>
            <param name="langCountry">Specifying the country of the language. For e.g: "en-us", "fr-fr", "it-it" and etc.</param>
            <param name="text">Representing some text in country language.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpLangAltList.DefaultText">
            <summary>
            Gets or sets the default country language and text representing the language.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpLangAltList.Count">
            <summary>
            Gets the number of elements present in the collection.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpMetadata">
             <summary>
             This class represents the XMP metadata for a PDF document.
             </summary>
             <remarks>For more details on using XMP metadata take a look at the <a href="XMP Metadata.html">XMP Metadata</a> topic.</remarks>
            ^XmpMetadata 
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpMetadata.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Xmp.XmpMetadata"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpMetadata.AddSchema(ceTe.DynamicPDF.Xmp.XmpSchema)">
            <summary>
            Adds a given Xmp Schema to the schema list.
            </summary>
            <param name="schema"><see cref="T:ceTe.DynamicPDF.Xmp.XmpSchema"/> object to add to the schema list.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpMetadata.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the xmp metadata to the <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to write xmp output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpMetadata.DublinCore">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Xmp.DublinCoreSchema"/> schema object.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpMetadata.BasicSchema">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.Xmp.XmpMetadata.BasicSchema"/> schema object.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpMetadata.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpThumbnail">
             <summary>
             This class represents the data structure for a thumbnail image for a file.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpThumbnail.Add(System.Int32,System.Int32,System.String,System.Byte[])">
            <summary>
            Adds a thumbnail image for a file.
            </summary>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <param name="format">The image encoding.</param>
            <param name="image">The thumbnail image (pixel data only).</param>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.XmpWriter">
             <summary>
             Represents the writer for writing XMP metadata to a document.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.#ctor(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> class.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the metadata output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.BeginDescription(System.String,System.String,System.String)">
            <summary>
            Writes the RDF description for a given schema.
            </summary>
            <param name="urlnamespace">The schema namespace URI</param>
            <param name="alias">The preferred schema namespace prefix</param>
            <param name="about">The rdf attribute on the rdf description element is a
            required attribute that identifies the resource whose metadata this
            XMP describes. Must follow URI syntax and may be an empty string.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.BeginDescription(System.String,System.String)">
            <summary>
            Writes the RDF description for a given schema.
            </summary>
            <param name="urlnamespace">The schema namespace URI</param>
            <param name="alias">The preferred schema namespace prefix</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.BeginDescription">
            <summary>
            Writes the RDF description.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.EndDescription">
            <summary>
            Writes the end of RDF description.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.ToUtf8(System.String)">
            <summary>
            Does the UTF-8 encoding for a given string text.
            </summary>
            <param name="text">String representing the text to convert to UTF-8 encoding.</param>
            <returns>The UTF-8 encoded text, as a byte array.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.Draw(System.String)">
            <summary>
            Writes the given value to the XMP Packet.
            </summary>
            <param name="text">A text to be written.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.Draw(System.Boolean)">
            <summary>
            Writes the boolean value to the XMP Packet.
            </summary>
            <param name="val">A boolean value to be written.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.Draw(System.DateTime)">
            <summary>
            Writes the given date to the XMP Packet in W3C recommended date format.
            </summary>
            <param name="date">A date to be written.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.XmpWriter.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the XMP contents buffer to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the XMP buffer's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpWriter.Producer">
            <summary>
            Gets the name of the tool that created the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpWriter.Author">
            <summary>
            Gets the authors of the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpWriter.Title">
            <summary>
            Gets the document title of the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpWriter.TotalPages">
            <summary>
            Gets the number of pages in the document (including any in contained documents).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpWriter.Keywords">
            <summary>
            Gets the keywords that specify the topic of the content of the resource.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpWriter.Date">
            <summary>
            Gets the date that the resource was originally created.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Xmp.XmpWriter.PdfVersion">
            <summary>
            Gets the PDF version of the PDF document.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.XYDestination">
             <summary>
             Represents a destination to a coordinate on a page.
             </summary>
             <remarks>This class can be used to specify a certain page and X Y location for defining a <see cref="T:ceTe.DynamicPDF.PageElements.Link"/> or a <see cref="T:ceTe.DynamicPDF.PageElements.Bookmark"/>.</remarks>
            ^XYDestination 
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.XYDestination.#ctor(System.Int32,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.XYDestination"/> class.
            </summary>
            <param name="pageNumber">Page number targeted by the destination.</param>
            <param name="x">X coordinate targeted by the destination.</param>
            <param name="y">Y coordinate targeted by the destination.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.XYDestination.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the destination to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the destinations output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.XYDestination.X">
            <summary>
            Gets or sets the X coordinate targeted by the destination.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.XYDestination.Y">
            <summary>
            Gets or sets the Y coordinate targeted by the destination.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.ZoomDestination">
             <summary>
             Represents a destination to a page at a given zoom.
             </summary>
             <remarks>This class can be used to specify a certain page at a certain zoom when defining a <see cref="T:ceTe.DynamicPDF.PageElements.Link"/> or a <see cref="T:ceTe.DynamicPDF.PageElements.Bookmark"/>.</remarks>
            ^ZoomDestination 
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.ZoomDestination.#ctor(System.Int32,ceTe.DynamicPDF.PageZoom)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.ZoomDestination"/> class.
            </summary>
            <param name="pageNumber">Page number targeted by the destination.</param>
            <param name="zoom">Zoom used to display the destination.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.ZoomDestination.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the destination to the specified <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the destinations output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.ZoomDestination.Zoom">
            <summary>
            Gets or sets the zoom used to display the destination.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.GlobalSettings">
            <summary>
            Represents the class that contains the global settings used by the library.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.GlobalSettings.UseLegacyTextHeightCalculations">
            <summary>
            Gets or sets a boolean. Setting true will add a extra line gap to the required text height.
            </summary>
            <remarks>
            Setting this boolean true will add a extra line gap to the required height of the <see cref="T:ceTe.DynamicPDF.Text.TextLineList"/>. 
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.GlobalSettings.UseLegacyPageDimensions">
            <summary>
            Gets or sets a boolean. Setting true will set page dimension as <see cref="T:ceTe.DynamicPDF.ExtendedPageDimensions"/>.
            </summary>
            <remarks>
            Setting true will set page dimension as <see cref="T:ceTe.DynamicPDF.ExtendedPageDimensions"/>.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.GlobalSettings.DefaultOutputPdfVersion">
            <summary>
            Gets or sets the default version for the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.GlobalSettings.DefaultOutputPdfFormat">
            <summary>
            Gets or sets the default format for the PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.GlobalSettings.PathToFontsResourceDirectory">
            <summary>
            Path to default fonts resource directory. On Windows environment it will be default to Windows fonts directory.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.GlobalSettings.UseCharacterShaping">
            <summary>
            Gets or sets the character shaping usage for the fonts. Setting true will give perfect output for the Indic and right to left languags.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.HeaderFooterText">
             <summary>
             Represents a Header Footer Text of the page element.
             </summary>
             <remarks>This class can be used for header footer template to place Header Footer Text on a page.</remarks>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.HeaderFooterText.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HeaderFooterText"/> class.
            </summary>
            <param name="text">This text can be used for header footer template to display the text on the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HeaderFooterText.#ctor(System.String,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HeaderFooterText"/> class.
            </summary>
            <param name="text">This text can be used for header footer template to display the text on the page.</param>
            <param name="font">The <see cref="P:ceTe.DynamicPDF.HeaderFooterText.Font"/> representing font of the header footer text.</param>
            <param name="fontSize">The font size representing size of the header footer text.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterText.Text">
            <summary>
            Gets or sets the text for the header footer text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterText.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.HeaderFooterText.Font"/> for the header footer text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterText.FontSize">
            <summary>
            Gets or sets the font size for the header footer text.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.HeaderFooterTemplate">
             <summary>
             Represents a Header Footer Template of the page element.
             </summary>
             <remarks>This class can be used to place Header Footer Template on a page.</remarks>
            ^HeaderFooterTemplate
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.HeaderFooterTemplate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HeaderFooterTemplate"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.HeaderFooterTemplate.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HeaderFooterTemplate"/> class.
            </summary>
            <param name="footerText">The <see cref="T:ceTe.DynamicPDF.HeaderFooterText"/> representing the footer text of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HeaderFooterTemplate.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HeaderFooterTemplate"/> class.
            </summary>
            <param name="headerText">The <see cref="T:ceTe.DynamicPDF.HeaderFooterText"/> representing the header text of the page.</param>
            <param name="footerText">The <see cref="T:ceTe.DynamicPDF.HeaderFooterText"/> representing the footer text of the page.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HeaderFooterTemplate.#ctor(System.String,System.String,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.HeaderFooterTemplate"/> class.
            </summary>
            <param name="headerText">The <see cref="T:ceTe.DynamicPDF.HeaderFooterText"/> representing the header text of the page.</param>
            <param name="footerText">The <see cref="T:ceTe.DynamicPDF.HeaderFooterText"/> representing the footer text of the page.</param>
            <param name="font">The <see cref="T:ceTe.DynamicPDF.Font"/> representing font of the header footer text.</param>
            <param name="fontsize">The font size representing size of the header footer text.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.HeaderFooterTemplate.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the header footer template's page elements to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the template's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterTemplate.HeaderCenter">
            <summary>
            Gets or sets the center header footer text for the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterTemplate.HeaderLeft">
            <summary>
            Gets or sets the left header text for the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterTemplate.HeaderRight">
            <summary>
            Gets or sets the right header text for the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterTemplate.FooterCenter">
            <summary>
            Gets or sets the center footer text for the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterTemplate.FooterLeft">
            <summary>
            Gets or sets the left footer text for the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.HeaderFooterTemplate.FooterRight">
            <summary>
            Gets or sets the right footer text for the page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AttachmentLayout">
            <summary>
            Specifies the type of attachment layout.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttachmentLayout.Detailed">
            <summary>
            Attachment layout will be displayed in detailed view.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttachmentLayout.Tile">
            <summary>
            Attachment layout will be displayed in tile view. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttachmentLayout.Hidden">
            <summary>
            Attachment layout view will be hidden. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AttachmentListingOrderBy">
            <summary>
             Specifies the order in which the attachment should be sorted. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttachmentListingOrderBy.Index">
            <summary>
            Attachment listing order by index. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttachmentListingOrderBy.Name">
            <summary>
            Attachment listing order by name. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttachmentListingOrderBy.Size">
            <summary>
            Attachment listing order by size. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.AttachmentListingOrderBy.ModifiedDate">
            <summary>
            Attachment listing order by date. 
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.DocumentPackage">
             <summary>
             Represents a package PDF.
             </summary>
            ^DocumentPackage
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentPackage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.DocumentPackage"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentPackage.#ctor(ceTe.DynamicPDF.AttachmentLayout)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.DocumentPackage"/> class with the specified attachment layout type.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.DocumentPackage.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the resource to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the resource's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentPackage.ViewList">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.AttachmentLayout"/>. Default is detailed layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentPackage.OrderBy">
            <summary>
            Gets or sets the listing order by using the specified <see cref="T:ceTe.DynamicPDF.AttachmentListingOrderBy"/> enum element.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentPackage.AscendingOrder">
            <summary>
            Gets or sets a boolean which specifies the ordering in ascending or descending. Default value is true(Ascending order). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DocumentPackage.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.CollectionType">
            <summary>
            Specifies CollectionType.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.CollectionType.None">
            <summary>
             Collection type none.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.CollectionType.Package">
            <summary>
            Collection type package.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.CollectionType.AdobePortfolio">
            <summary>
            Collection type adobe portfolio.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.BarCoding.MailerIDLength">
            <summary>
            Specifies mailer ID length.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.MailerIDLength.Length6">
            <summary>Length is 6.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.BarCoding.MailerIDLength.Length9">
            <summary>Length is 9.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.ImageWatermark">
             <summary>
             Represents a Image Watermark.
             </summary>
             <remarks>This class can be used to place Image Watermark on the PDF.</remarks>
            ^ImageWatermark
            ^Lic.Generator.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Watermark">
             <summary>
             Base class from which TextWatermark and ImageWatermark are derived.
             </summary>
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Watermark.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the watermark to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the watermark's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.Watermark.DrawAnnotation(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the textWatermark to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the textWatermark's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Watermark.Name">
            <summary>
            Gets or sets the Name of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Watermark.AlternateName">
            <summary>
            Gets or sets the Name of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Watermark.XOffset">
            <summary>
            Gets or sets the Horizontal Distance of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Watermark.YOffset">
            <summary>
            Gets or sets the Vertical Distance of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Watermark.Position">
            <summary>
            Gets or sets the Position of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Watermark.Angle">
            <summary>
            Gets or sets the heights of the angle of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Watermark.Opacity">
            <summary>
            Gets or sets the opacity of the WaterMark.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ImageWatermark.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.ImageWatermark"/> class.
            </summary>
            <param name="filePath">Physical file path of the image.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ImageWatermark.#ctor(ceTe.DynamicPDF.Imaging.ImageData)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.ImageWatermark"/> class.
            </summary>
            <param name="imageData"><see cref="P:ceTe.DynamicPDF.PageElements.ImageWatermark.ImageData"/> object containing the image data.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ImageWatermark.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the ImageWatermark to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the imageWatermark's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.ImageWatermark.DrawAnnotation(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the ImageWatermark to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the textWatermark's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ImageWatermark.ImageData">
            <summary>
            Gets or sets <see cref="T:ceTe.DynamicPDF.Imaging.ImageData"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ImageWatermark.ScaleX">
            <summary>
            Gets or sets the horizontal scale of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.ImageWatermark.ScaleY">
            <summary>
            Gets or sets the vertical scale of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.TextWatermark">
             <summary>
             Represents a Text Watermark.
             </summary>
             <remarks>This class can be used to place Text Watermark on the PDF.</remarks>
            ^TextWatermark
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextWatermark.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextWatermark"/> class.
            </summary>
            <param name="text">Text to display in the Watermark.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextWatermark.#ctor(System.String,ceTe.DynamicPDF.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextWatermark"/> class.
            </summary>
            <param name="text">Text to display in the Watermark.</param>
            <param name="font">Font for the text of the Watermark.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextWatermark.#ctor(System.String,ceTe.DynamicPDF.Font,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.PageElements.TextWatermark"/> class.
            </summary>
            <param name="text">Text to display in the Watermark.</param>
            <param name="font">Font for the text of the Watermark.</param>
            <param name="fontSize">Font size of the text of the Watermark.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextWatermark.Draw(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the TextWatermark to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the textWatermark's output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.PageElements.TextWatermark.DrawAnnotation(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the TextWatermark to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object to receive the textWatermark's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.Text">
            <summary>
            Gets or sets the Text of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.TextWatermark.Font"/> object to use for the text of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.FontSize">
            <summary>
            Gets or sets the font size for the text of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.ScalingPercentage">
            <summary>
            Gets or sets the Scale Percentage of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.AutoScale">
            <summary>
            Gets or sets the AutoScale Property of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.TextOutlineWidth">
            <summary>
            Gets or sets the line width to use for the text outline of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.Strikethrough">
            <summary>
            Gets or sets the strike through to use for the text of the WaterMark.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.TextWatermark.Underline">
            <summary>
            Gets or sets a value indicating if the WaterMark is underlined.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.WatermarkPosition">
            <summary>
            Specifies the position of watermark.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.TopLeft">
            <summary>
            position Top Left of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.TopCenter">
            <summary>
            position Top Center of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.TopRight">
            <summary>
            position Top Left of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.MiddleLeft">
            <summary>
            position Middle Left of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.Center">
            <summary>
            position Center of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.MiddleRight">
            <summary>
            position Middle Right of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.BottomLeft">
            <summary>
            position Bottom Left of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.BottomCenter">
            <summary>
            position Bottom Center of the page.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.WatermarkPosition.BottomRight">
            <summary>
            position Bottom Right of the page.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.AdvancedTextLineList.GetText">
            <summary>
            returns the text of the text line list.
            </summary>
            <returns>Text of the text line list.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.AdvancedTextLineList.GetOverflowText">
            <summary>
            Returns the overflow text of the text line list.
            </summary>
            <returns>Overflow text of the line list.</returns>
        </member>
        <member name="M:ceTe.Imaging.Png.PngReader.ImageBuffer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.Imaging.Png.PngReader.ImageBuffer"/> class.
            </summary>
            <param name="initialSize">Initial size of the buffer.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.DiskBufferingOptions">
             <summary>
             Represents a disk buffering options.
             </summary>
            ^DiskBufferingOptions
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.DiskBufferingOptions.#ctor">
            <summary>
            Initializes a new instance of the disk buffering options class.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DiskBufferingOptions.Location">
            <summary>
            The location where to store the temporary file.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DiskBufferingOptions.Enabled">
            <summary>
            Gets or sets disk buffering options.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.DiskBufferingOptions.Current">
            <summary>
            Gets the default disk buffering options.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.AlternateRow">
            <summary>
            Specifies the type of alternating row to display
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.AlternateRow.All">
            <summary>
            Display on every row.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.AlternateRow.Even">
            <summary>
            Display on only even rows.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.AlternateRow.Odd">
            <summary>
            Display on only odd rows.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout">
             <summary>
             Represents a Document based on the supplied DLEX file.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/> class.
            </summary>
            <param name="filePath">The physical file path of the DLEX file to use.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.#ctor(ceTe.DynamicPDF.LayoutEngine.DlexFile)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/> class.
            </summary>
            <param name="dlex">The <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> to use to create the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/> class.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.GetElementById(System.String)">
            <summary>
            Returns the <see cref="T:System.Object"/> that matches the supplied id.
            </summary>
            <param name="id">The id of the object to retrieve.</param>
            <returns>The element with the supplied id.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.GetLayoutElementById(System.String)">
            <summary>
            Returns the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElement"/> that matches the supplied id.
            </summary>
            <param name="id">The id of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElement"/> to retrieve.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElement"/> with the supplied id.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.GetReportPartById(System.String)">
            <summary>
            Returns the <see cref="T:ceTe.DynamicPDF.LayoutEngine.ReportPart"/> that matches the supplied id.
            </summary>
            <param name="id">The id of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.ReportPart"/> to retrieve.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.LayoutEngine.ReportPart"/> with the supplied id.</returns>
            <remarks><font color="red">NOTE: This method is obsolete.</font> Use GetElementById(string id) method instead and it is not available for .NET standard.</remarks>            
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Layout(ceTe.DynamicPDF.LayoutEngine.LayoutData)">
            <summary>
            Creates a <see cref="T:ceTe.DynamicPDF.Document"/> object that contians the report as defined in the DLEX file.
            </summary>
            <param name="layoutData">The <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutData"/> to use for creating the report.</param>
            <returns>The <see cref="T:ceTe.DynamicPDF.Document"/> object containing just created.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Layout(ceTe.DynamicPDF.LayoutEngine.LayoutData,ceTe.DynamicPDF.Document)">
            <summary>
            Appends the report to the given <see cref="T:ceTe.DynamicPDF.Document"/> object.
            </summary>
            <param name="layoutData">The <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutData"/> to use for creating the report.</param>
            <param name="document"><see cref="T:ceTe.DynamicPDF.Document"/> object to which the report is appended.</param>
            <remarks>NOTE: The documents metadata (title, author etc.) will not be overwritten.</remarks>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.ReportDataRequired">
            <summary>
            Occurs when report data is required for a Report or SubReport.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.FormatProvider">
            <summary>
            Gets or sets the <see cref="T:System.IFormatProvider"/> of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.LayoutParts">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPartList"/> of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.BasePhysicalPath">
            <summary>
            Gets or sets the base physical path of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Fonts">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.FontList"/> object of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.FontFamilies">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.FontFamilyList"/> object of the document layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Id">
            <summary>
            Gets or sets the ID of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Author">
            <summary>
            Gets or sets the author of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Keywords">
            <summary>
            Gets or sets the keywords of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Title">
            <summary>
            Gets or sets the title of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Subject">
            <summary>
            Gets or sets the subject of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayout"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayout.Tag">
            <summary>
            Gets or sets a value indicating whether document is tagged.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequiredEventHandler">
            <summary>
            Represents the method that will handle the ReportDataRequired event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequiredEventArgs">
            <summary>
            Provides data for the DataRequired event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequiredEventArgs.Data">
            <summary>
            Gets the Data property of the ReportDataRequired Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequiredEventArgs.ReportData">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequiredEventArgs.ReportData"/> argument of the ReportDataRequired Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequiredEventArgs.ElementId">
            <summary>
            Gets the ElementID of the Report or SubReport that triggered the ReportDataRequiredEvent Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequiredEventArgs.DataName">
            <summary>
            Gets the DataName specified by the Report or SubReport that triggered the ReportDataRequiredEvent Event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData">
             <summary>
             Represents a record set based off of a data reader
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportData">
            <summary>
            Represents the base class for which all report data is derived.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.DataProvider">
            <summary>
            Data provider for the layout engine.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataProvider.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportData.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportData"/> contains data.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData.#ctor(System.Data.IDbConnection,System.Data.IDataReader)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData"/> class.
            </summary>
            <param name="connection">Database connection used to create the data reader.</param>
            <param name="reader">The data reader for the record set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData"/> contains data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData.Connection">
            <summary>
            Gets the database connection of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData.DataReader">
            <summary>
            Gets the <see cref="T:System.Data.IDataReader"/> of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataReaderReportData"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.EventDrivenLayoutData">
            <summary>
            Represents event driven data used to layout a document.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutData">
            <summary>
            Represents data used to layout a document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.LayoutData.#ctor">
            <summary>
            Creates new instance of the name value layout data (only available in version 10.27+).
            </summary>
            <remarks>This constructor is only available with version 10.27 and later.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.LayoutData.#ctor(System.Object)">
            <summary>
            Creates new instance of the layout data (only available in version 10.27+).
            </summary>
            <param name="data">Data to be used when laying out a document.</param>
            <remarks>This constructor is only available with version 10.27 and later.</remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.LayoutData.Add(System.String,System.Object)">
            <summary>
            Adds the provided key-value entry to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.
            </summary>
            <param name="key"><b>String</b> to be added as the key to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.</param>
            <param name="value"><see cref="T:System.Object"/> value to be added to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutData.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> corresponding to the provided key.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.Data.EventDrivenLayoutData.Add(System.String,System.Object)">
            <summary>
            Adds the provided key-value entry to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.
            </summary>
            <param name="key"><b>String</b> to be added as the key to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.</param>
            <param name="value"><see cref="T:System.Object"/> value to be added to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.</param>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.Data.EventDrivenLayoutData.ReportDataRequested">
            <summary>
            Occurs when report data is requested from the data provider.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.EventDrivenLayoutData.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> corresponding to the provided key.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequestedEventHandler">
            <summary>
            Represents the method that will handle the ReportDataRequested event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequestedEventArgs">
            <summary>
            Provides data for the DataNeeded event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequestedEventArgs.DataProviders">
            <summary>
            Gets the DataProviders property of the ReportDataRequested Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequestedEventArgs.ReportData">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportData"/> argument of the ReportDataRequested Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequestedEventArgs.ElementId">
            <summary>
            Gets the elementid of the ReportDataRequested Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.ReportDataRequestedEventArgs.DataName">
            <summary>
            Gets the DataName of the ReportDataRequested Event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.DataProviderStack">
            <summary>
            Represents data provider stack of layout engine.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataProviderStack.Top">
            <summary>
            Returns top of the data provider from the data provider stack.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataProviderStack.Current">
            <summary>
            Returns the current data provider from the data provider stack.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataProviderStack.Item(System.String)">
            <summary>
            Returns the specified data from the current data that is being used to layout the document.
            </summary>
            <param name="dataName">The name of the data to be returned.</param>
            <returns>The specified data from the current data that is being used to layout the document.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataProviderStack.CurrentReportData">
            <summary>
            Returns the current report data from the data provider stack.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData">
             <summary>
             Represents a record set based off of a data table
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData"/> class.
            </summary>
            <param name="dataTable">The data table for the record set.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData.#ctor(System.Data.IDbConnection,System.Data.DataTable)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData"/> class.
            </summary>
            <param name="connection">Database connection used to create the data table.</param>
            <param name="dataTable">The data table for the record set.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData"/> contains data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData.Connection">
            <summary>
            Gets the database connection of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.DataTableReportData"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.EnumerableReportData">
            <summary>
            Represents a record set based on a list of objects.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.Data.EnumerableReportData.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.EnumerableReportData"/> class.
            </summary>
            <param name="enumerable">A list of objects that implements the <see cref="T:System.Collections.IEnumerable"/> interface.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.EnumerableReportData.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the given name.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Data.EnumerableReportData.HasData">
            <summary>
            Gets a value indicating whether the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Data.ReportData"/> contains data.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType">
            <summary>
            Specifies the type of parameter.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.BigInt">
            <summary>
            BigInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Bit">
            <summary>
            Bit parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Boolean">
            <summary>
            Boolean parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Bstr">
            <summary>
            Bstr parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Byte">
            <summary>
            Byte parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Char">
            <summary>
            Char parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Currency">
            <summary>
            Currency parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Date">
            <summary>
            Date parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.DateTime">
            <summary>
            DateTime parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.DBDate">
            <summary>
            DBDate parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.DBTime">
            <summary>
            DBTime parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.DBTimestamp">
            <summary>
            DBTimestamp parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Decimal">
            <summary>
            Decimal parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Double">
            <summary>
            Double parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Filetime">
            <summary>
            File time parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Float">
            <summary>
            Float parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Guid">
            <summary>
            Guid parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Int">
            <summary>
            Int parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Int16">
            <summary>
            Int16 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Int32">
            <summary>
            Int32 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Integer">
            <summary>
            Integer parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.IntervalDayToSecond">
            <summary>
            IntervalDayToSecond parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.IntervalYearToMonth">
            <summary>
            IntervalYearToMonth parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.LongVarChar">
            <summary>
            LongVarChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.LongVarWChar">
            <summary>
            LongVarWChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Money">
            <summary>
            Money parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.NChar">
            <summary>
            NChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.NText">
            <summary>
            NText parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Number">
            <summary>
            Number parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Numeric">
            <summary>
            Numeric parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.NVarChar">
            <summary>
            NVarChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Real">
            <summary>
            Real parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.RowId">
            <summary>
            RowId parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.SByte">
            <summary>
            SByte parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Single">
            <summary>
            Single parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.SmallDateTime">
            <summary>
            SmallDateTime parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.SmallInt">
            <summary>
            SmallInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.SmallMoney">
            <summary>
            SmallMoney parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Text">
            <summary>
            Text parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Time">
            <summary>
            Time parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.Timestamp">
            <summary>
            Timestamp parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.TimestampLocal">
            <summary>
            TimestampLocal parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.TimestampWithTZ">
            <summary>
            TimestampWithTZ parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.TinyInt">
            <summary>
            TinyInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.UInt16">
            <summary>
            UInt16 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.UInt32">
            <summary>
            UInt32 parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.UniqueIdentifier">
            <summary>
            UniqueIdentifier parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.UnsignedBigInt">
            <summary>
            UnsignedBigInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.UnsignedInt">
            <summary>
            UnsignedInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.UnsignedSmallInt">
            <summary>
            UnsignedSmallInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.UnsignedTinyInt">
            <summary>
            UnsignedTinyInt parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.VarChar">
            <summary>
            VarChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.VarNumeric">
            <summary>
            VarNumeric parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.VarWChar">
            <summary>
            VarWChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.WChar">
            <summary>
            WChar parameter type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ParameterType.RefCursor">
            <summary>
            RefCursor parameter type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Data.ProviderType">
            <summary>
            Specifies the type of database provider.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ProviderType.MsSql">
            <summary>
            Microsoft SQL provider type. 
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ProviderType.Odbc">
            <summary>
            ODBC provider type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ProviderType.OleDb">
            <summary>
            OLE-DB provider type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.Data.ProviderType.Oracle">
            <summary>
            Oracle provider type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.DetailReportPart">
             <summary>
             Represents the detail of a report.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.ReportPart">
            <summary>
            Represents a part of a report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.ReportPart.HasElements">
            <summary>
            Gets a value indicating whether the report part contains elements.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.ReportPart.Elements">
            <summary>
            Gets a list of report elements.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.ReportPart.Height">
            <summary>
            Gets or sets the height of the report part.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.ReportPart.Id">
            <summary>
            Gets or sets a unique ID for the report part.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DetailReportPart.AutoSplit">
            <summary>
            Gets or sets a value indicating whether the report's detail can be split.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.DetailSubReportPart">
             <summary>
             Represents the detail of a subreport.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DetailSubReportPart.AutoSplit">
            <summary>
            Gets or sets a value indicating whether the sub report's detail can be split.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPart">
            <summary>
            Represents a part of Document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPart.DocumentLayout">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPart.DocumentLayout"/> object of the report.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPartList">
            <summary>
            Represents a list of reports and fixed pages.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPartList.Count">
            <summary>
            Gets the total number of reports.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPartList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DocumentLayoutPart"/> for the given index.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.DlexFile">
             <summary>
             Represents a DLEX file for reuse.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexFile.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> class.
            </summary>
            <param name="filePath">The file path to the DLEX file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexFile.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> class.
            </summary>
            <param name="stream">The <b>Stream</b> object containing DLEX file data.</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexFile.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> class.
            </summary>
            <param name="stream">The <b>Stream</b> object containing DLEX file data.</param>        
            <param name="basePath">The physical base path to use for resources referenced in the DLEX file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexFile.#ctor(System.IO.Stream,ceTe.DynamicPDF.LayoutEngine.ResourceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> class.
            </summary>
            <param name="stream">The <b>Stream</b> object containing DLEX file data.</param>        
            <param name="resourceProvider">A resource provider to use to retrieve resources referenced in the DLEX file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexFile.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> class.
            </summary>
            <param name="byteArray">The <b>byteArray</b> object containing DLEX file data in the form of byte[].</param>        
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexFile.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> class.
            </summary>
            <param name="byteArray">The <b>byteArray</b> object containing DLEX file data in the form of byte[].</param>        
            <param name="basePath">The physical base path to use for resources referenced in the DLEX file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexFile.#ctor(System.Byte[],ceTe.DynamicPDF.LayoutEngine.ResourceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexFile"/> class.
            </summary>
            <param name="byteArray">The <b>byteArray</b> object containing DLEX file data in the form of byte[].</param>        
            <param name="resourceProvider">A resource provider to use to retrieve resources referenced in the DLEX file.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.DlexParseException">
             <summary>
             The exception that is thrown for an error encountered when parsing the DLEX file.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.DlexParseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DlexParseException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.SymbolType">
            <summary>
            Specifies symbol type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.Check1">
            <summary>
            Check1
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.Check2">
            <summary>
            Check2
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.Circle">
            <summary>
            Circle
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.Square">
            <summary>
            Square
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.X1">
            <summary>
            X1
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.X2">
            <summary>
            X2
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.X3">
            <summary>
            X3
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.X4">
            <summary>
            X4
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.LayoutEngine.SymbolType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.FixedPage">
             <summary>
             Represents a fixed page.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.FixedPage.Id">
            <summary>
            Gets the ID of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.FixedPage.PreserveTemplateLinks">
            <summary>
            Gets or sets link annotation preserving status in the fixed page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.FixedPage.Template">
            <summary>
            Gets or sets the PDF page to use as the template of the fixed page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.FontFamilyList">
             <summary>
             Represents a list of font families.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.FontFamilyList.Add(ceTe.DynamicPDF.FontFamily)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.FontFamily"/> to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.FontFamilyList"/>.
            </summary>
            <param name="FontFamily">The <see cref="T:ceTe.DynamicPDF.FontFamily"/> to add.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.FontFamilyList.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.FontFamily"/> with the specified name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.FontList">
             <summary>
             Represents a list of fonts.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.FontList.Add(ceTe.DynamicPDF.Font)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.Font"/> to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.FontList"/>.
            </summary>
            <param name="font">The <see cref="T:ceTe.DynamicPDF.Font"/> to add.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.FontList.Item(System.String)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Font"/> with the specified name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutWriter">
             <summary>
             Represents a writer classs for a layout.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutWriter.Data">
            <summary>
            The current data being used to layout the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutWriter.Document">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutWriter.Document"/> for the layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutWriter.Parameters">
            <summary>
            Gets or sets the parameters of the layout.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutWriter.DocumentLayout">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutWriter.DocumentLayout"/> of the layout. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.IO.DocumentLayoutWriter.Data">
            <summary>
            The current data being used to layout the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.IO.FixedPageWriter.Data">
            <summary>
            The current data being used to layout the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.IO.ReportPartWriter.Data">
            <summary>
            The current data being used to layout the document.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea">
             <summary>
             Represents an layout text area.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.DrawRotated(ceTe.DynamicPDF.IO.PageWriter)">
            <summary>
            Draws the rotated page element to the given <see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.PageWriter"/> object to receive the page element's output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration that specifies the text alignment of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.VAlign"/> enumeration that specifies the vertical text alignment of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.Underline">
            <summary>
            Gets or sets a value indicating if the report text area is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.RightToLeft">
            <summary>
            Gets or sets a value indicating if text should be displayed right to left.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.TextOutlineWidth">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.Font"/> object used to specify the font of the text for the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.FontSize">
            <summary>
            Gets or sets the font size for the text of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.Leading">
            <summary>
            Gets or sets the leading for the text of the report text area.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.AutoLeading">
            <summary>
            Gets or sets a value indicating whether the leading of the report text area should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indenting for the paragraphs of the report text area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea.CleanParagraphBreaks">
            <summary>
            Gets or sets the clean paragraph breaks for the paragraphs of the report text area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData">
            <summary>
            Represents name value data used to layout a document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData.#ctor">
            <summary>
            Creates new instance of the name value layout data.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData.Add(System.String,System.Object)">
            <summary>
            Adds the provided key-value entry to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.
            </summary>
            <param name="key"><b>String</b> to be added as the key to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.</param>
            <param name="value"><see cref="T:System.Object"/> value to be added to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData"/>.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.NameValueLayoutData.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> corresponding to the provided key.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary">
             <summary>
             Represents a dictionary of parameters.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary"/> class.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary.Add(System.String,System.Object)">
            <summary>
            Adds the provided key-value entry to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary"/>.
            </summary>
            <param name="key"><b>String</b> to be added as the key to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary"/>.</param>
            <param name="value"><see cref="T:System.Object"/> value to be added to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary"/>.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.ParameterDictionary.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> corresponding to the provided key.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.Report">
             <summary>
             Represents a report.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Report.Id">
            <summary>
            Gets the ID of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Report.Header">
            <summary>
            Gets the header of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Report.Footer">
            <summary>
            Gets the footer of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Report.Detail">
            <summary>
            Gets the detail of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Report.Template">
            <summary>
            Gets or sets the PDF page to use as the template of the report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.Report.PreserveTemplateLinks">
            <summary>
            Gets or sets link annotation preserving status in the fixed page.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElement">
             <summary>
             Base class from which all report elements are derived.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElementList">
             <summary>
             Represents a list of report elements.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.LayoutElementList.Add(ceTe.DynamicPDF.LayoutEngine.LayoutElement)">
            <summary>
            Adds a <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElement"/> to the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElementList"/>.
            </summary>
            <param name="element"><see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElement"/> to add.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElementList.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElement"/> at the given index.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElementList.Count">
            <summary>
            Gets the number of report elements contained in the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElementList"/>.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ContentGroup">
             <summary>
             Represents a group of report elements.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ContentGroup.Height">
            <summary>
            Gets or sets the height of the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ContentGroup.Elements">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElementList"/> of elements in the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ContentGroup.Width">
            <summary>
            Gets or sets the width of the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ContentGroup.X">
            <summary>
            Gets or sets the X coordinate of the content group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ContentGroup.Y">
            <summary>
            Gets or sets the Y coordinate of the content group.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea">
             <summary>
             Represents an area for a formatted record.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.LayingOut">
            <summary>
            Occurs before the formatted text area is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.LaidOut">
            <summary>
            Occurs after the formatted text area has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.Text">
            <summary>
            Gets or sets the text for the formatted record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.Splittable">
            <summary>
            Gets or sets a value indicating if the formatted record area is splittable.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.Expandable">
            <summary>
            Gets or sets a value indicating if the formatted record area is expandable.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.X">
            <summary>
            Gets or sets the X coordinate of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.Y">
            <summary>
            Gets or sets the Y coordinate of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.Width">
            <summary>
            Gets or sets the width of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.Height">
            <summary>
            Gets or sets the height of the formatted record area group.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.InitialStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.FormattedTextAreaStyle"/> object used to specify the initial style of the formatted record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.VAlign">
            <summary>
            Gets or sets a value indicating the vertical alignment of the formatted record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea.Angle">
            <summary>
            Gets or sets a value indicating the angle of the formatted record area.
            </summary>
            
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image">
             <summary>
             Represents an image report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.LayingOut">
            <summary>
            Occurs before the image is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.LaidOut">
            <summary>
            Occurs after the image has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.Angle">
            <summary>
            Gets or sets the angle of the image in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.Height">
            <summary>
            Gets or sets the height of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.Width">
            <summary>
            Gets or sets the width of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.X">
            <summary>
            Gets or sets the X coordinate of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.Y">
            <summary>
            Gets or sets the Y coordinate of the image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.ImageData">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.ImageData"/> of the Image.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.AlternateText">
            <summary>
            Gets or sets the alternate text of the image.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label">
             <summary>
             Represents a label report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.LayingOut">
            <summary>
            Occurs before the label is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.LaidOut">
            <summary>
            Occurs after the label has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Align">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Align"/> enumeration that specifies the text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Font"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.FontSize">
            <summary>
            Gets or sets the font size for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Text">
            <summary>
            Gets or sets the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Underline">
            <summary>
            Gets or sets a value indicating if the label is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.VAlign"/> enumeration that specifies the vertical text alignment of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Angle">
            <summary>
            Gets or sets the angle of the label in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Height">
            <summary>
            Gets or sets the height of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Width">
            <summary>
            Gets or sets the width of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.X">
            <summary>
            Gets or sets the X coordinate of the label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.Y">
            <summary>
            Gets or sets the Y coordinate of the label.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line">
             <summary>
             Represents a line report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.LayingOut">
            <summary>
            Occurs before the line is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.LaidOut">
            <summary>
            Occurs after the line has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.X1">
            <summary>
            Gets or sets the first X coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.X2">
            <summary>
            Gets or sets the second X coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.Y1">
            <summary>
            Gets or sets the first Y coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.Y2">
            <summary>
            Gets or sets the second Y coordinate of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.Width">
            <summary>
            Gets or sets the width of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.Cap">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineCap"/> enumeration used to specify the line cap style of the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.Color"/> object to use for the line.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.LineStyle">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.LineStyle"/> object to use for the style of the line.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.NoSplitZone">
            <summary>
            Summary description for NoSplitZone.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.NoSplitZone.Top">
            <summary>
            Gets or sets the top Y coordinate of the nosplitzone.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.NoSplitZone.Bottom">
            <summary>
            Gets or sets the bottom Y coordinate of the nosplitzone.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageBreak">
            <summary>
            Summary description for PageBreak.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageBreak.Y">
            <summary>
            Gets or sets the Y coordinate of the pagebreak.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel">
             <summary>
             Represents a page numbering report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.LayingOut">
            <summary>
            Occurs before the page numbering label is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.LaidOut">
            <summary>
            Occurs after the page numbering label has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Align">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Align"/> enumeration that specifies the text alignment of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Font"/> object to use for the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.FontSize">
            <summary>
            Gets or sets the font size for the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Text">
            <summary>
            Gets or sets the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Underline">
            <summary>
            Gets or sets a value indicating if the page numbering label is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.VAlign"/> enumeration that specifies the vertical text alignment of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Angle">
            <summary>
            Gets or sets the angle of the page numbering label in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Height">
            <summary>
            Gets or sets the height of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Width">
            <summary>
            Gets or sets the width of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.X">
            <summary>
            Gets or sets the X coordinate of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.Y">
            <summary>
            Gets or sets the Y coordinate of the page numbering label.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.PageTotalOffset">
            <summary>
            Gets or sets the page total offset for page numbering.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.PageOffset">
            <summary>
            Gets or sets the page offset for page numbering.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder">
             <summary>
             Represents a place holder report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder.LaidOut">
            <summary>
            Occurs after the place holder has been laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder.LayingOut">
            <summary>
            Occurs before the place holder is laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder.X">
            <summary>
            Gets or sets the X coordinate of the place holder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder.Y">
            <summary>
            Gets or sets the Y coordinate of the place holder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder.Width">
            <summary>
            Gets or sets the width of the place holder.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder.Height">
            <summary>
            Gets or sets the height of the place holder.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolderLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder">PlaceHolder's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolderLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolderLaidOutEventArgs.LayoutWriter"/> argument of the PlaceHolder's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolderLaidOutEventArgs.ContentArea">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolderLaidOutEventArgs.ContentArea"/> argument of the PlaceHolder's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolderLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolder"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PlaceHolderLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LayingOutEventArgs">
             <summary>
             Provides data for the LayingOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LayingOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LayingOutEventArgs.LayoutWriter"/> argument of the LayingOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LayingOutEventArgs.Layout">
            <summary>
            Gets or sets a value indicating whether the element should be layed out.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LayingOutEventHandler">
             <summary>
             Represents the method that will handle the LayingOut event.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LayingOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSetEventArgs">
             <summary>
             Provides data for the TextSet event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSetEventArgs.LayoutTextArea">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSetEventArgs.LayoutTextArea"/> that will output the text.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSetEventArgs.Text">
            <summary>
            Gets the value of the text that will be output.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSetEventHandler">
             <summary>
             Represents the method that will handle the TextSet event for the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox"/> and <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea"/> layout elements.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSetEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSettingEventArgs">
             <summary>
             Provides data for the TextSetting event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSettingEventArgs.Text">
            <summary>
            Gets or sets the value of the text to be output.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSettingEventHandler">
             <summary>
             Represents the method that will handle the TextSetting event for the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox"/> and <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea"/> layout elements.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.TextSettingEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordAreaLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea">FormattedRecordArea's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordAreaLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordAreaLaidOutEventArgs.LayoutWriter"/> argument of the FormattedRecordArea's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordAreaLaidOutEventArgs.FormattedTextArea">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordAreaLaidOutEventArgs.FormattedTextArea"/> element of the FormattedRecordArea's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordAreaLaidOutEventHandler">
             <summary>
             Represents the method that will handle the formatted record area LaidOut event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordArea"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.FormattedRecordAreaLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventArgs.Image">Image's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventArgs.LayoutWriter"/> argument of the Image's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventArgs.Image">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventArgs.Image"/> element of the Image's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Image"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.ImageLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventArgs.Label">Label's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventArgs.LayoutWriter"/> argument of the Label's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventArgs.Label">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventArgs.Label"/> element of the Label's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Label"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LabelLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventArgs.Line">Line's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventArgs.LayoutWriter"/> argument of the Line's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventArgs.Line">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventArgs.Line"/> element of the Line's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Line"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.LineLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventArgs.PageNumberingLabel">PageNumberingLabel's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventArgs.LayoutWriter"/> argument of the PageNumberingLabel's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventArgs.PageNumberingLabel">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventArgs.PageNumberingLabel"/> element of the PageNumberingLabel's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabel"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.PageNumberingLabelLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordAreaLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea">RecordArea's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordAreaLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordAreaLaidOutEventArgs.LayoutWriter"/> argument of the RecordArea's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordAreaLaidOutEventArgs.ReportTextArea">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea"/> element of the RecordArea's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordAreaLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordAreaLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBoxLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox">RecordBox's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBoxLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBoxLaidOutEventArgs.LayoutWriter"/> argument of the RecordBox's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBoxLaidOutEventArgs.ReportTextArea">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Layout.LayoutTextArea"/> element of the RecordBox's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBoxLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBoxLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventArgs.Rectangle">Rectangle's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventArgs.LayoutWriter"/> argument of the Rectangle's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventArgs.Rectangle">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventArgs.Rectangle"/> element of the Rectangle's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RectangleLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventArgs">
             <summary>
             Provides data for the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventArgs.Symbol">Symbol's</see> LaidOut event.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventArgs.LayoutWriter">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventArgs.LayoutWriter"/> argument of the Symbol's LaidOut Event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventArgs.Symbol">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventArgs.Symbol"/> element of the Symbol's LaidOut event.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventHandler">
             <summary>
             Represents the method that will handle the <see cref="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.LaidOut"/> event of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol"/>.
             </summary>
             <param name="sender">Reference of type <see cref="T:System.Object"/>.</param>
             <param name="e">Reference of type <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SymbolLaidOutEventArgs"/>.</param>
            ^Lic.Report.Pro
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea">
             <summary>
             Represents a record area report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.LayingOut">
            <summary>
            Occurs before the record area is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.LaidOut">
            <summary>
            Occurs after the record area has been laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.TextSetting">
            <summary>
            Occurs before the text is set for the record area.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.TextSet">
            <summary>
            Occurs after the text has been set for the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration that specifies the text alignment of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.AutoLeading">
            <summary>
            Gets or sets a value indicating whether the leading of the record area should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.CleanParagraphBreaks">
            <summary>
            Gets or sets the clean paragraph breaks for the paragraphs of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Expandable">
            <summary>
            Gets or sets a value indicating whether the record area will expand if all the text is not visible.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Splittable">
            <summary>
            Gets or sets a value indicating whether the text within the record area will split if the record area reaches the end of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Font"/> object used to specify the font of the text for the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.FontSize">
            <summary>
            Gets or sets the font size for the text of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Leading">
            <summary>
            Gets or sets the leading for the text of the record area.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indenting for the paragraphs of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Text">
            <summary>
            Gets or sets the text of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.TextOutlineWidth">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Underline">
            <summary>
            Gets or sets a value indicating if the record area is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.VAlign"/> enumeration that specifies the vertical text alignment of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Angle">
            <summary>
            Gets or sets the angle of the record area in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Height">
            <summary>
            Gets or sets the height of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Width">
            <summary>
            Gets or sets the width of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.X">
            <summary>
            Gets or sets the X coordinate of the record area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordArea.Y">
            <summary>
            Gets or sets the Y coordinate of the record area.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox">
             <summary>
             Represents a record box report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.LayingOut">
            <summary>
            Occurs before the record box is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.LaidOut">
            <summary>
            Occurs after the record box has been laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.TextSetting">
            <summary>
            Occurs before the text is set for the record box.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.TextSet">
            <summary>
            Occurs after the text has been set for the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Align">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.TextAlign"/> enumeration that specifies the text alignment of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.AutoLeading">
            <summary>
            Gets or sets a value indicating whether the leading of the record box should be calculated automatically.
            </summary>
            <remarks>This property is automatically set to false any time the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Leading"/> property is set.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.CleanParagraphBreaks">
            <summary>
            Gets or sets the clean paragraph breaks for the paragraphs of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Expandable">
            <summary>
            Gets or sets a value indicating whether the record box will expand if all the text is not visible.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Splittable">
            <summary>
            Gets or sets a value indicating whether the text within the record box will split if the record area reaches the end of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Font"/> object used to specify the font of the text for the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.FontSize">
            <summary>
            Gets or sets the font size for the text of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Leading">
            <summary>
            Gets or sets the leading for the text of the record box.
            </summary>
            <remarks>Setting this property will automatically set the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.AutoLeading"/> property to false.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.ParagraphIndent">
            <summary>
            Gets or sets the paragraph indenting for the paragraphs of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.ParagraphSpacing">
            <summary>
            Gets or sets the paragraph spacing for the paragraphs of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.TextColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.TextOutlineColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.TextOutlineWidth">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the text outline of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Underline">
            <summary>
            Gets or sets a value indicating if the record box is underlined.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.VAlign">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.VAlign"/> enumeration that specifies the vertical text alignment of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.DataFormat">
            <summary>
            Gets or sets the format to be used for the data of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.DataName">
            <summary>
            Gets or sets the name of the data to be used in the record box
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Angle">
            <summary>
            Gets or sets the angle of the record box in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Height">
            <summary>
            Gets or sets the height of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Width">
            <summary>
            Gets or sets the width of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.X">
            <summary>
            Gets or sets the X coordinate of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.Y">
            <summary>
            Gets or sets the Y coordinate of the record box.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.RecordBox.FormatProvider">
            <summary>
            Gets or sets the format provider of the record box.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle">
             <summary>
             Represents a rectangle report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.LayingOut">
            <summary>
            Occurs before the record area is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.LaidOut">
            <summary>
            Occurs after the record area has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.BorderColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the border of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.BorderStyle">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LineStyle"/> object used to specify the border style of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.BorderWidth">
            <summary>
            Gets or sets the border width of the rectangle.
            </summary>
            <remarks>To force the borders not to appear set the border width to any value 0 or less.</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.CornerRadius">
            <summary>
            Gets or sets the corner radius of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.FillColor">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.Color"/> object to use for the fill of the rectangle.
            </summary>
            <remarks>To force no color to appear in the rectangle (only borders) set the fill color to null (Nothing in Visual Basic).</remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.ShowAlternateRow">
            <summary>
            Gets or sets a value indicating whether the rectangle should be displayed on alternating records.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.Angle">
            <summary>
            Gets or sets the angle of the rectangle in degrees.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.X">
            <summary>
            Gets or sets the X coordinate of the rectangle.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Rectangle.Y">
            <summary>
            Gets or sets the Y coordinate of the rectangle.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SoftBreak">
            <summary>
            Summary description for SoftBreak.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SoftBreak.Y">
            <summary>
            Gets or sets the Y coordinate of the softbreak.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport">
             <summary>
             Represents a sub report report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport.Height">
            <summary>
            Gets or sets the height of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport.X">
            <summary>
            Gets or sets the X coordinate of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport.Y">
            <summary>
            Gets or sets the X coordinate of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport.Width">
            <summary>
            Gets or sets the width of the sub report.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport.Header">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.SubReportHeader"/> object of the sub report. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport.Footer">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.SubReportFooter"/> object of the sub report. 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.SubReport.Detail">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.DetailSubReportPart"/> object of the sub report.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol">
             <summary>
             Represents a symbol report element.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.LayingOut">
            <summary>
            Occurs before the symbol is laid out.
            </summary>
        </member>
        <member name="E:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.LaidOut">
            <summary>
            Occurs after the symbol has been laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Font"/> object to use for the character of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.CustomCharacter">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.CustomCharacter"/> of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.VisibilityCondition">
            <summary>
            Gets or sets the <see cref="T:ceTe.DynamicPDF.LayoutEngine.Condition"/> of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.SymbolType">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.SymbolType"/> of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Size">
            <summary>
            Gets or sets the font size for the character of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Color">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Color"/> object to use for the character of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Height">
            <summary>
            Gets or sets the height of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Width">
            <summary>
            Gets or sets the width of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.X">
            <summary>
            Gets or sets the X coordinate of the Symbol.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.LayoutElements.Symbol.Y">
            <summary>
            Gets or sets the Y coordinate of the Symbol.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.ReportFooter">
             <summary>
             Represents the footer of a report.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.ReportFooter.Height">
            <summary>
            Gets the height of the footer.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.ReportHeader">
             <summary>
             Represents the header of a report.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.ReportHeader.Height">
            <summary>
            Gets the height of the header.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.LayoutEngineException">
             <summary>
             The exception that is thrown when a layout engine error occurs.
             </summary>
            ^Lic.Layout.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.LayoutEngineException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.LayoutEngine.LayoutEngineException"/> class.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.SubReportFooter">
             <summary>
             Represents the footer of a sub report.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.SubReportFooter.Height">
            <summary>
            Gets the height of the footer.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.SubReportHeader">
             <summary>
             Represents the header of a sub report.
             </summary>
            ^Lic.Report.Pro
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.SubReportHeader.Height">
            <summary>
            Gets the height of the header.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the X9ECParameters object for the named curve represented by
             the passed in object identifier. Null if the curve isn't present.
            
             @param oid an object identifier representing a named curve, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Anssi.AnssiNamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Encodable.GetDerEncoded">
             Return the DER encoding of the object, null if the DER encoding can not be made.
            
             @return a DER byte array, null otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Asn1EncodableVector">
            Mutable class for building ASN.1 constructed objects such as SETs or SEQUENCEs.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Asn1InputStream">
            a general purpose ASN.1 decoder - note: this class differs from the
            others in that it returns null after it has read the last object in
            the stream. If an ASN.1 Null is encountered a Der/BER Null object is
            returned.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1InputStream.#ctor(System.IO.Stream,System.Int32)">
             Create an ASN1InputStream where no DER object will be longer than limit.
            
             @param input stream containing ASN.1 encoded data.
             @param limit maximum size of a DER encoded object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1InputStream.#ctor(System.Byte[])">
             Create an ASN1InputStream based on the input byte array. The length of DER objects in
             the stream is automatically limited to the length of the input array.
            
             @param input array containing ASN.1 encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1InputStream.BuildObject(System.Int32,System.Int32,System.Int32)">
            build an object given its tag and the number of bytes to construct it from.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Asn1Null">
            A Null object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Object.FromByteArray(System.Byte[])">
            <summary>Create a base ASN.1 object from a byte array.</summary>
            <param name="data">The byte array to parse.</param>
            <returns>The base ASN.1 object represented by the byte array.</returns>
            <exception> <see cref="T:System.IO.IOException"/>
            If there is a problem parsing the data, or parsing an object did not exhaust the available data.
            </exception>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Object.FromStream(System.IO.Stream)">
            <summary>Read a base ASN.1 object from a stream.</summary>
            <param name="inStr">The stream to parse.</param>
            <returns>The base ASN.1 object represented by the byte array.</returns>
            <exception> <see cref="T:System.IO.IOException"/>If there is a problem parsing the data.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1OctetString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Octet string from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                          be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1OctetString.GetInstance(System.Object)">
             return an Octet string from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1OctetString.#ctor(System.Byte[])">
            @param string the octets making up the octet string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Sequence.GetInstance(System.Object)">
             return an Asn1Sequence from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Sequence.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             Return an ASN1 sequence from a tagged object. There is a special
             case here, if an object appears to have been explicitly tagged on
             reading but we were expecting it to be implicitly tagged in the
             normal course of events it indicates that we lost the surrounding
             sequence - so we need to add it back (this will happen if the tagged
             object is a sequence that contains other sequences). If you are
             dealing with implicitly tagged sequences you really <b>should</b>
             be using this method.
            
             @param obj the tagged object.
             @param explicitly true if the object is meant to be explicitly tagged,
                      false otherwise.
             @exception ArgumentException if the tagged object cannot
                      be converted.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Asn1Sequence.Item(System.Int32)">
             return the object at the sequence position indicated by index.
            
             @param index the sequence number (starting at zero) of the object
             @return the object at the sequence position indicated by index.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Set.GetInstance(System.Object)">
             return an ASN1Set from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1Set.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             Return an ASN1 set from a tagged object. There is a special
             case here, if an object appears to have been explicitly tagged on
             reading but we were expecting it to be implicitly tagged in the
             normal course of events it indicates that we lost the surrounding
             set - so we need to add it back (this will happen if the tagged
             object is a sequence that contains other sequences). If you are
             dealing with implicitly tagged sets you really <b>should</b>
             be using this method.
            
             @param obj the tagged object.
             @param explicitly true if the object is meant to be explicitly tagged
                      false otherwise.
             @exception ArgumentException if the tagged object cannot
                      be converted.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Asn1Set.Item(System.Int32)">
             return the object at the set position indicated by index.
            
             @param index the set number (starting at zero) of the object
             @return the object at the set position indicated by index.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Asn1TaggedObject">
            ASN.1 TaggedObject - in ASN.1 notation this is any object preceded by
            a [n] where n is some number - these are assumed to follow the construction
            rules (as with sequences).
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.#ctor(System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.#ctor(System.Boolean,System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param explicitly true if the object is explicitly tagged.
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.IsExplicit">
            return whether or not the object may be explicitly tagged.
            <p>
            Note: if the object has been read from an input stream, the only
            time you can be sure if isExplicit is returning the true state of
            affairs is if it returns false. An implicitly tagged object may appear
            to be explicitly tagged, so you need to understand the context under
            which the reading was done as well, see GetObject below.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.GetObject">
            return whatever was following the tag.
            <p>
            Note: tagged objects are generally context dependent if you're
            trying to extract a tagged object you should be going via the
            appropriate GetInstance method.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Asn1TaggedObject.GetObjectParser(System.Int32,System.Boolean)">
            Return the object held in this tagged object as a parser assuming it has
            the type of the passed in tag. If the object doesn't have a parser
            associated with it, the base object is returned.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc">
            iso.org.dod.internet.private.enterprise.legion-of-the-bouncy-castle
            <p>1.3.6.1.4.1.22554</p>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe">
            pbe(1) algorithms
            <p>1.3.6.1.4.1.22554.1</p>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha1">
            SHA-1(1)
            <p>1.3.6.1.4.1.22554.1.1</p>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha256">
            SHA-2.SHA-256; 1.3.6.1.4.1.22554.1.2.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha384">
            SHA-2.SHA-384; 1.3.6.1.4.1.22554.1.2.2 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha512">
            SHA-2.SHA-512; 1.3.6.1.4.1.22554.1.2.3 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha224">
            SHA-2.SHA-224; 1.3.6.1.4.1.22554.1.2.4 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha1_pkcs5">
            PKCS-5(1)|PKCS-12(2)
            SHA-1.PKCS5;  1.3.6.1.4.1.22554.1.1.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha1_pkcs12">
            SHA-1.PKCS12; 1.3.6.1.4.1.22554.1.1.2 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha256_pkcs5">
            SHA-256.PKCS12; 1.3.6.1.4.1.22554.1.2.1.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha256_pkcs12">
            SHA-256.PKCS12; 1.3.6.1.4.1.22554.1.2.1.2 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes128_cbc">
            AES(1) . (CBC-128(2)|CBC-192(22)|CBC-256(42))
            1.3.6.1.4.1.22554.1.1.2.1.2 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes192_cbc">
            1.3.6.1.4.1.22554.1.1.2.1.22 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha1_pkcs12_aes256_cbc">
            1.3.6.1.4.1.22554.1.1.2.1.42 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes128_cbc">
            1.3.6.1.4.1.22554.1.1.2.2.2 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes192_cbc">
            1.3.6.1.4.1.22554.1.1.2.2.22 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_pbe_sha256_pkcs12_aes256_cbc">
            1.3.6.1.4.1.22554.1.1.2.2.42 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_sig">
            signature(2) algorithms
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.sphincs256">
            Sphincs-256
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.xmss">
            XMSS
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.xmss_mt">
            XMSS^MT
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_exch">
            key_exchange(3) algorithms
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.newHope">
            NewHope
        </member>
        <member name="F:Org.BouncyCastle.Asn1.BC.BCObjectIdentifiers.bc_ext">
            X.509 extension(4) values
            <p>
            1.3.6.1.4.1.22554.4
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.BC.LinkedCertificate">
            Extension to tie an alternate certificate to the containing certificate.
            <pre>
                LinkedCertificate := SEQUENCE {
                    digest        DigestInfo,                   -- digest of PQC certificate
                    certLocation  GeneralName,                  -- location of PQC certificate
                    certIssuer    [0] Name OPTIONAL,            -- issuer of PQC cert (if different from current certificate)
                    cACerts       [1] GeneralNames OPTIONAL,    -- CA certificates for PQC cert (one of more locations)
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerApplicationSpecific">
            Base class for an application specific object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerApplicationSpecific.GetObject">
             Return the enclosed object assuming explicit tagging.
            
             @return  the resulting object
             @throws IOException if reconstruction fails.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerApplicationSpecific.GetObject(System.Int32)">
             Return the enclosed object assuming implicit tagging.
            
             @param derTagNo the type tag that should be applied to the object's contents.
             @return  the resulting object
             @throws IOException if reconstruction fails.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IAsn1String">
            basic interface for Der string objects.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.GetInstance(System.Object)">
             return a Bit string from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Bit string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.#ctor(System.Byte[],System.Int32)">
            @param data the octets making up the bit string.
            @param padBits the number of extra bits at the end of the string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBitString.GetOctets">
             Return the octets contained in this BIT STRING, checking that this BIT STRING really
             does represent an octet aligned string. Only use this method when the standard you are
             following dictates that the BIT STRING will be octet aligned.
            
             @return a copy of the octet aligned data.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerBitString.IntValue">
            @return the value of the bit string as an int (truncating if necessary)
        </member>
        <member name="T:Org.BouncyCastle.Asn1.BerNull">
            A BER Null object.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerNull">
            A Null object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerOctetString.#ctor(System.Byte[])">
            <param name="str">The octets making up the octet string.</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerOctetString.GetEnumerator">
            return the DER octets that make up this string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSequence.#ctor">
            create an empty sequence
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            create a sequence containing one object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            create a sequence containing a vector of objects.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSequence.#ctor">
            create an empty sequence
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            create a sequence containing one object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSequence.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            create a sequence containing a vector of objects.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerSet">
            A Der encoded set object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSet.#ctor">
            create an empty set
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSet.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param obj - a single object that makes up the set.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerSet.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            @param v - a vector of objects making up the set.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSet.#ctor">
            create an empty sequence
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSet.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            create a set containing one object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerSet.#ctor(Org.BouncyCastle.Asn1.Asn1EncodableVector)">
            create a set containing a vector of objects.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.BerTaggedObject">
            BER TaggedObject - in ASN.1 notation this is any object preceded by
            a [n] where n is some number - these are assumed to follow the construction
            rules (as with sequences).
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerTaggedObject">
            DER TaggedObject - in ASN.1 notation this is any object preceded by
            a [n] where n is some number - these are assumed to follow the construction
            rules (as with sequences).
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerTaggedObject.#ctor(System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerTaggedObject.#ctor(System.Boolean,System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param explicitly true if an explicitly tagged object.
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerTaggedObject.#ctor(System.Int32)">
            create an implicitly tagged object that contains a zero
            length sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerTaggedObject.#ctor(System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerTaggedObject.#ctor(System.Boolean,System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param explicitly true if an explicitly tagged object.
            @param tagNo the tag number for this object.
            @param obj the tagged object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.BerTaggedObject.#ctor(System.Int32)">
            create an implicitly tagged object that contains a zero
            length sequence.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers">
            <remarks>See https://www.bsi.bund.de/cae/servlet/contentblob/471398/publicationFile/30615/BSI-TR-03111_pdf.pdf</remarks>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.algorithm">
            0.4.0.127.0.7.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_X963kdf">
            ElGamal Elliptic Curve Key Agreement and Key Derivation according to X963 OID: 0.4.0.127.0.7.1.1.5.1.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_X963kdf_SHA1">
            ElGamal Elliptic Curve Key Agreement and Key Derivation according to X963
            with hash function SHA-1
            OID: 0.4.0.127.0.7.1.1.5.1.1.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_X963kdf_SHA224">
            ElGamal Elliptic Curve Key Agreement and Key Derivation according to X963
            with hash function SHA224
            OID: 0.4.0.127.0.7.1.1.5.1.1.2 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_X963kdf_SHA256">
            ElGamal Elliptic Curve Key Agreement and Key Derivation according to X963
            with hash function SHA256
            OID: 0.4.0.127.0.7.1.1.5.1.1.3 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_X963kdf_SHA384">
            ElGamal Elliptic Curve Key Agreement and Key Derivation according to X963
            with hash function SHA384
            OID: 0.4.0.127.0.7.1.1.5.1.1.4 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_X963kdf_SHA512">
            ElGamal Elliptic Curve Key Agreement and Key Derivation according to X963
            with hash function SHA512
            OID: 0.4.0.127.0.7.1.1.5.1.1.5 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_X963kdf_RIPEMD160">
            ElGamal Elliptic Curve Key Agreement and Key Derivation according to X963
            with hash function RIPEMD160
            OID: 0.4.0.127.0.7.1.1.5.1.1.6 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Bsi.BsiObjectIdentifiers.ecka_eg_SessionKDF">
            Key Derivation Function for Session Keys
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CAKeyUpdAnnContent.ToAsn1Object">
            <pre>
            CAKeyUpdAnnContent ::= SEQUENCE {
                                        oldWithNew   CmpCertificate, -- old pub signed with new priv
                                        newWithOld   CmpCertificate, -- new pub signed with old priv
                                        newWithNew   CmpCertificate  -- new pub signed with new priv
             }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CertConfirmContent.ToAsn1Object">
            <pre>
            CertConfirmContent ::= SEQUENCE OF CertStatus
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CertifiedKeyPair.ToAsn1Object">
            <pre>
            CertifiedKeyPair ::= SEQUENCE {
                                             certOrEncCert       CertOrEncCert,
                                             privateKey      [0] EncryptedValue      OPTIONAL,
                                             -- see [CRMF] for comment on encoding
                                             publicationInfo [1] PKIPublicationInfo  OPTIONAL
                  }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IAsn1Choice">
            Marker interface for CHOICE objects - if you implement this in a roll-your-own
            object, any attempt to tag the object implicitly will convert the tag to an
            explicit one as the encoding rules require.
            <p>
            If you use this interface your class should also implement the getInstance
            pattern which takes a tag object and the tagging mode used. 
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CertOrEncCert.ToAsn1Object">
            <pre>
            CertOrEncCert ::= CHOICE {
                                 certificate     [0] CMPCertificate,
                                 encryptedCert   [1] EncryptedValue
                      }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CertRepMessage.ToAsn1Object">
            <pre>
            CertRepMessage ::= SEQUENCE {
                                     caPubs       [1] SEQUENCE SIZE (1..MAX) OF CMPCertificate
                                                                                        OPTIONAL,
                                     response         SEQUENCE OF CertResponse
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CertResponse.ToAsn1Object">
            <pre>
            CertResponse ::= SEQUENCE {
                                       certReqId           INTEGER,
                                       -- to match this response with corresponding request (a value
                                       -- of -1 is to be used if certReqId is not specified in the
                                       -- corresponding request)
                                       status              PKIStatusInfo,
                                       certifiedKeyPair    CertifiedKeyPair    OPTIONAL,
                                       rspInfo             OCTET STRING        OPTIONAL
                                       -- analogous to the id-regInfo-utf8Pairs string defined
                                       -- for regInfo in CertReqMsg [CRMF]
                        }
            </pre> 
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CertStatus.ToAsn1Object">
            <pre>
            CertStatus ::= SEQUENCE {
                              certHash    OCTET STRING,
                              -- the hash of the certificate, using the same hash algorithm
                              -- as is used to create and verify the certificate signature
                              certReqId   INTEGER,
                              -- to match this confirmation with the corresponding req/rep
                              statusInfo  PKIStatusInfo OPTIONAL
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.Challenge.ToAsn1Object">
             <pre>
             Challenge ::= SEQUENCE {
                             owf                 AlgorithmIdentifier  OPTIONAL,
            
                             -- MUST be present in the first Challenge; MAY be omitted in
                             -- any subsequent Challenge in POPODecKeyChallContent (if
                             -- omitted, then the owf used in the immediately preceding
                             -- Challenge is to be used).
            
                             witness             OCTET STRING,
                             -- the result of applying the one-way function (owf) to a
                             -- randomly-generated INTEGER, A.  [Note that a different
                             -- INTEGER MUST be used for each Challenge.]
                             challenge           OCTET STRING
                             -- the encryption (under the public key for which the cert.
                             -- request is being made) of Rand, where Rand is specified as
                             --   Rand ::= SEQUENCE {
                             --      int      INTEGER,
                             --       - the randomly-generated INTEGER A (above)
                             --      sender   GeneralName
                             --       - the sender's name (as included in PKIHeader)
                             --   }
                  }
             </pre>
             @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CmpCertificate.#ctor(Org.BouncyCastle.Asn1.X509.AttributeCertificate)">
            Note: the addition of attribute certificates is a BC extension.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CmpCertificate.ToAsn1Object">
             <pre>
             CMPCertificate ::= CHOICE {
                        x509v3PKCert        Certificate
                        x509v2AttrCert      [1] AttributeCertificate
              }
             </pre>
             Note: the addition of attribute certificates is a BC extension.
            
             @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.CrlAnnContent.ToAsn1Object">
            <pre>
            CrlAnnContent ::= SEQUENCE OF CertificateList
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.ErrorMsgContent.ToAsn1Object">
            <pre>
            ErrorMsgContent ::= SEQUENCE {
                                   pKIStatusInfo          PKIStatusInfo,
                                   errorCode              INTEGER           OPTIONAL,
                                   -- implementation-specific error codes
                                   errorDetails           PKIFreeText       OPTIONAL
                                   -- implementation-specific error details
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.GenMsgContent.ToAsn1Object">
            <pre>
            GenMsgContent ::= SEQUENCE OF InfoTypeAndValue
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.GenRepContent.ToAsn1Object">
            <pre>
            GenRepContent ::= SEQUENCE OF InfoTypeAndValue
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cmp.InfoTypeAndValue">
             Example InfoTypeAndValue contents include, but are not limited
             to, the following (un-comment in this ASN.1 module and use as
             appropriate for a given environment):
             <pre>
               id-it-caProtEncCert    OBJECT IDENTIFIER ::= {id-it 1}
                  CAProtEncCertValue      ::= CMPCertificate
               id-it-signKeyPairTypes OBJECT IDENTIFIER ::= {id-it 2}
                 SignKeyPairTypesValue   ::= SEQUENCE OF AlgorithmIdentifier
               id-it-encKeyPairTypes  OBJECT IDENTIFIER ::= {id-it 3}
                 EncKeyPairTypesValue    ::= SEQUENCE OF AlgorithmIdentifier
               id-it-preferredSymmAlg OBJECT IDENTIFIER ::= {id-it 4}
                  PreferredSymmAlgValue   ::= AlgorithmIdentifier
               id-it-caKeyUpdateInfo  OBJECT IDENTIFIER ::= {id-it 5}
                  CAKeyUpdateInfoValue    ::= CAKeyUpdAnnContent
               id-it-currentCRL       OBJECT IDENTIFIER ::= {id-it 6}
                  CurrentCRLValue         ::= CertificateList
               id-it-unsupportedOIDs  OBJECT IDENTIFIER ::= {id-it 7}
                  UnsupportedOIDsValue    ::= SEQUENCE OF OBJECT IDENTIFIER
               id-it-keyPairParamReq  OBJECT IDENTIFIER ::= {id-it 10}
                  KeyPairParamReqValue    ::= OBJECT IDENTIFIER
               id-it-keyPairParamRep  OBJECT IDENTIFIER ::= {id-it 11}
                  KeyPairParamRepValue    ::= AlgorithmIdentifer
               id-it-revPassphrase    OBJECT IDENTIFIER ::= {id-it 12}
                  RevPassphraseValue      ::= EncryptedValue
               id-it-implicitConfirm  OBJECT IDENTIFIER ::= {id-it 13}
                  ImplicitConfirmValue    ::= NULL
               id-it-confirmWaitTime  OBJECT IDENTIFIER ::= {id-it 14}
                  ConfirmWaitTimeValue    ::= GeneralizedTime
               id-it-origPKIMessage   OBJECT IDENTIFIER ::= {id-it 15}
                  OrigPKIMessageValue     ::= PKIMessages
               id-it-suppLangTags     OBJECT IDENTIFIER ::= {id-it 16}
                  SuppLangTagsValue       ::= SEQUENCE OF UTF8String
            
             where
            
               id-pkix OBJECT IDENTIFIER ::= {
                  iso(1) identified-organization(3)
                  dod(6) internet(1) security(5) mechanisms(5) pkix(7)}
             and
                  id-it   OBJECT IDENTIFIER ::= {id-pkix 4}
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.InfoTypeAndValue.ToAsn1Object">
            <pre>
            InfoTypeAndValue ::= SEQUENCE {
                                    infoType               OBJECT IDENTIFIER,
                                    infoValue              ANY DEFINED BY infoType  OPTIONAL
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.KeyRecRepContent.ToAsn1Object">
            <pre>
            KeyRecRepContent ::= SEQUENCE {
                                    status                  PKIStatusInfo,
                                    newSigCert          [0] CMPCertificate OPTIONAL,
                                    caCerts             [1] SEQUENCE SIZE (1..MAX) OF
                                                                      CMPCertificate OPTIONAL,
                                    keyPairHist         [2] SEQUENCE SIZE (1..MAX) OF
                                                                      CertifiedKeyPair OPTIONAL
                         }
            </pre> 
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.OobCertHash.ToAsn1Object">
            <pre>
            OobCertHash ::= SEQUENCE {
                                 hashAlg     [0] AlgorithmIdentifier     OPTIONAL,
                                 certId      [1] CertId                  OPTIONAL,
                                 hashVal         BIT STRING
                                 -- hashVal is calculated over the Der encoding of the
                                 -- self-signed certificate with the identifier certID.
                  }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PbmParameter.ToAsn1Object">
            <pre>
             PbmParameter ::= SEQUENCE {
                                   salt                OCTET STRING,
                                   -- note:  implementations MAY wish to limit acceptable sizes
                                   -- of this string to values appropriate for their environment
                                   -- in order to reduce the risk of denial-of-service attacks
                                   owf                 AlgorithmIdentifier,
                                   -- AlgId for a One-Way Function (SHA-1 recommended)
                                   iterationCount      INTEGER,
                                   -- number of times the OWF is applied
                                   -- note:  implementations MAY wish to limit acceptable sizes
                                   -- of this integer to values appropriate for their environment
                                   -- in order to reduce the risk of denial-of-service attacks
                                   mac                 AlgorithmIdentifier
                                   -- the MAC AlgId (e.g., DES-MAC, Triple-DES-MAC [PKCS11],
               }   -- or HMAC [RFC2104, RFC2202])
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiBody.#ctor(System.Int32,Org.BouncyCastle.Asn1.Asn1Encodable)">
            Creates a new PkiBody.
            @param type one of the TYPE_* constants
            @param content message content
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiBody.ToAsn1Object">
            <pre>
            PkiBody ::= CHOICE {       -- message-specific body elements
                   ir       [0]  CertReqMessages,        --Initialization Request
                   ip       [1]  CertRepMessage,         --Initialization Response
                   cr       [2]  CertReqMessages,        --Certification Request
                   cp       [3]  CertRepMessage,         --Certification Response
                   p10cr    [4]  CertificationRequest,   --imported from [PKCS10]
                   popdecc  [5]  POPODecKeyChallContent, --pop Challenge
                   popdecr  [6]  POPODecKeyRespContent,  --pop Response
                   kur      [7]  CertReqMessages,        --Key Update Request
                   kup      [8]  CertRepMessage,         --Key Update Response
                   krr      [9]  CertReqMessages,        --Key Recovery Request
                   krp      [10] KeyRecRepContent,       --Key Recovery Response
                   rr       [11] RevReqContent,          --Revocation Request
                   rp       [12] RevRepContent,          --Revocation Response
                   ccr      [13] CertReqMessages,        --Cross-Cert. Request
                   ccp      [14] CertRepMessage,         --Cross-Cert. Response
                   ckuann   [15] CAKeyUpdAnnContent,     --CA Key Update Ann.
                   cann     [16] CertAnnContent,         --Certificate Ann.
                   rann     [17] RevAnnContent,          --Revocation Ann.
                   crlann   [18] CRLAnnContent,          --CRL Announcement
                   pkiconf  [19] PKIConfirmContent,      --Confirmation
                   nested   [20] NestedMessageContent,   --Nested Message
                   genm     [21] GenMsgContent,          --General Message
                   genp     [22] GenRepContent,          --General Response
                   error    [23] ErrorMsgContent,        --Error Message
                   certConf [24] CertConfirmContent,     --Certificate confirm
                   pollReq  [25] PollReqContent,         --Polling request
                   pollRep  [26] PollRepContent          --Polling response
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiConfirmContent.ToAsn1Object">
            <pre>
            PkiConfirmContent ::= NULL
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cmp.PkiFailureInfo">
            <pre>
            PKIFailureInfo ::= BIT STRING {
            badAlg               (0),
              -- unrecognized or unsupported Algorithm Identifier
            badMessageCheck      (1), -- integrity check failed (e.g., signature did not verify)
            badRequest           (2),
              -- transaction not permitted or supported
            badTime              (3), -- messageTime was not sufficiently close to the system time, as defined by local policy
            badCertId            (4), -- no certificate could be found matching the provided criteria
            badDataFormat        (5),
              -- the data submitted has the wrong format
            wrongAuthority       (6), -- the authority indicated in the request is different from the one creating the response token
            incorrectData        (7), -- the requester's data is incorrect (for notary services)
            missingTimeStamp     (8), -- when the timestamp is missing but should be there (by policy)
            badPOP               (9)  -- the proof-of-possession failed
            certRevoked         (10),
            certConfirmed       (11),
            wrongIntegrity      (12),
            badRecipientNonce   (13), 
            timeNotAvailable    (14),
              -- the TSA's time source is not available
            unacceptedPolicy    (15),
              -- the requested TSA policy is not supported by the TSA
            unacceptedExtension (16),
              -- the requested extension is not supported by the TSA
            addInfoNotAvailable (17)
              -- the additional information requested could not be understood
              -- or is not available
            badSenderNonce      (18),
            badCertTemplate     (19),
            signerNotTrusted    (20),
            transactionIdInUse  (21),
            unsupportedVersion  (22),
            notAuthorized       (23),
            systemUnavail       (24),    
            systemFailure       (25),
              -- the request cannot be handled due to system failure
            duplicateCertReq    (26) 
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiFailureInfo.#ctor(System.Int32)">
            Basic constructor.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiFreeText.ToAsn1Object">
            <pre>
            PkiFreeText ::= SEQUENCE SIZE (1..MAX) OF UTF8String
            </pre>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Cmp.PkiFreeText.Size">
             Return the number of string elements present.
            
             @return number of elements present.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Cmp.PkiFreeText.Item(System.Int32)">
             Return the UTF8STRING at index.
            
             @param index index of the string of interest
             @return the string at index.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Cmp.PkiHeader.NULL_NAME">
            Value for a "null" recipient or sender.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiHeader.ToAsn1Object">
            <pre>
             PkiHeader ::= SEQUENCE {
                       pvno                INTEGER     { cmp1999(1), cmp2000(2) },
                       sender              GeneralName,
                       -- identifies the sender
                       recipient           GeneralName,
                       -- identifies the intended recipient
                       messageTime     [0] GeneralizedTime         OPTIONAL,
                       -- time of production of this message (used when sender
                       -- believes that the transport will be "suitable"; i.e.,
                       -- that the time will still be meaningful upon receipt)
                       protectionAlg   [1] AlgorithmIdentifier     OPTIONAL,
                       -- algorithm used for calculation of protection bits
                       senderKID       [2] KeyIdentifier           OPTIONAL,
                       recipKID        [3] KeyIdentifier           OPTIONAL,
                       -- to identify specific keys used for protection
                       transactionID   [4] OCTET STRING            OPTIONAL,
                       -- identifies the transaction; i.e., this will be the same in
                       -- corresponding request, response, certConf, and PKIConf
                       -- messages
                       senderNonce     [5] OCTET STRING            OPTIONAL,
                       recipNonce      [6] OCTET STRING            OPTIONAL,
                       -- nonces used to provide replay protection, senderNonce
                       -- is inserted by the creator of this message; recipNonce
                       -- is a nonce previously inserted in a related message by
                       -- the intended recipient of this message
                       freeText        [7] PKIFreeText             OPTIONAL,
                       -- this may be used to indicate context-specific instructions
                       -- (this field is intended for human consumption)
                       generalInfo     [8] SEQUENCE SIZE (1..MAX) OF
                                            InfoTypeAndValue     OPTIONAL
                       -- this may be used to convey context-specific information
                       -- (this field not primarily intended for human consumption)
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiHeaderBuilder.Build">
            <pre>
             PKIHeader ::= SEQUENCE {
                       pvno                INTEGER     { cmp1999(1), cmp2000(2) },
                       sender              GeneralName,
                       -- identifies the sender
                       recipient           GeneralName,
                       -- identifies the intended recipient
                       messageTime     [0] GeneralizedTime         OPTIONAL,
                       -- time of production of this message (used when sender
                       -- believes that the transport will be "suitable"; i.e.,
                       -- that the time will still be meaningful upon receipt)
                       protectionAlg   [1] AlgorithmIdentifier     OPTIONAL,
                       -- algorithm used for calculation of protection bits
                       senderKID       [2] KeyIdentifier           OPTIONAL,
                       recipKID        [3] KeyIdentifier           OPTIONAL,
                       -- to identify specific keys used for protection
                       transactionID   [4] OCTET STRING            OPTIONAL,
                       -- identifies the transaction; i.e., this will be the same in
                       -- corresponding request, response, certConf, and PKIConf
                       -- messages
                       senderNonce     [5] OCTET STRING            OPTIONAL,
                       recipNonce      [6] OCTET STRING            OPTIONAL,
                       -- nonces used to provide replay protection, senderNonce
                       -- is inserted by the creator of this message; recipNonce
                       -- is a nonce previously inserted in a related message by
                       -- the intended recipient of this message
                       freeText        [7] PKIFreeText             OPTIONAL,
                       -- this may be used to indicate context-specific instructions
                       -- (this field is intended for human consumption)
                       generalInfo     [8] SEQUENCE SIZE (1..MAX) OF
                                            InfoTypeAndValue     OPTIONAL
                       -- this may be used to convey context-specific information
                       -- (this field not primarily intended for human consumption)
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiMessage.#ctor(Org.BouncyCastle.Asn1.Cmp.PkiHeader,Org.BouncyCastle.Asn1.Cmp.PkiBody,Org.BouncyCastle.Asn1.DerBitString,Org.BouncyCastle.Asn1.Cmp.CmpCertificate[])">
             Creates a new PkiMessage.
            
             @param header message header
             @param body message body
             @param protection message protection (may be null)
             @param extraCerts extra certificates (may be null)
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiMessage.ToAsn1Object">
            <pre>
            PkiMessage ::= SEQUENCE {
                             header           PKIHeader,
                             body             PKIBody,
                             protection   [0] PKIProtection OPTIONAL,
                             extraCerts   [1] SEQUENCE SIZE (1..MAX) OF CMPCertificate
                                                                                OPTIONAL
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiMessages.ToAsn1Object">
            <pre>
            PkiMessages ::= SEQUENCE SIZE (1..MAX) OF PkiMessage
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo.#ctor(System.Int32)">
            @param status
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo.#ctor(System.Int32,Org.BouncyCastle.Asn1.Cmp.PkiFreeText)">
            @param status
            @param statusString
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PkiStatusInfo.ToAsn1Object">
             <pre>
             PkiStatusInfo ::= SEQUENCE {
                 status        PKIStatus,                (INTEGER)
                 statusString  PkiFreeText     OPTIONAL,
                 failInfo      PkiFailureInfo  OPTIONAL  (BIT STRING)
             }
            
             PKIStatus:
               granted                (0), -- you got exactly what you asked for
               grantedWithMods        (1), -- you got something like what you asked for
               rejection              (2), -- you don't get it, more information elsewhere in the message
               waiting                (3), -- the request body part has not yet been processed, expect to hear more later
               revocationWarning      (4), -- this message contains a warning that a revocation is imminent
               revocationNotification (5), -- notification that a revocation has occurred
               keyUpdateWarning       (6)  -- update already done for the oldCertId specified in CertReqMsg
            
             PkiFailureInfo:
               badAlg           (0), -- unrecognized or unsupported Algorithm Identifier
               badMessageCheck  (1), -- integrity check failed (e.g., signature did not verify)
               badRequest       (2), -- transaction not permitted or supported
               badTime          (3), -- messageTime was not sufficiently close to the system time, as defined by local policy
               badCertId        (4), -- no certificate could be found matching the provided criteria
               badDataFormat    (5), -- the data submitted has the wrong format
               wrongAuthority   (6), -- the authority indicated in the request is different from the one creating the response token
               incorrectData    (7), -- the requester's data is incorrect (for notary services)
               missingTimeStamp (8), -- when the timestamp is missing but should be there (by policy)
               badPOP           (9)  -- the proof-of-possession failed
            
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PollRepContent.ToAsn1Object">
            <pre>
            PollRepContent ::= SEQUENCE OF SEQUENCE {
                    certReqId              INTEGER,
                    checkAfter             INTEGER,  -- time in seconds
                    reason                 PKIFreeText OPTIONAL
                }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PollReqContent.ToAsn1Object">
            <pre>
            PollReqContent ::= SEQUENCE OF SEQUENCE {
                                   certReqId              INTEGER
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PopoDecKeyChallContent.ToAsn1Object">
            <pre>
            PopoDecKeyChallContent ::= SEQUENCE OF Challenge
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.PopoDecKeyRespContent.ToAsn1Object">
            <pre>
            PopoDecKeyRespContent ::= SEQUENCE OF INTEGER
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.ProtectedPart.ToAsn1Object">
            <pre>
            ProtectedPart ::= SEQUENCE {
                               header    PKIHeader,
                               body      PKIBody
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.RevAnnContent.ToAsn1Object">
            <pre>
            RevAnnContent ::= SEQUENCE {
                  status              PKIStatus,
                  certId              CertId,
                  willBeRevokedAt     GeneralizedTime,
                  badSinceDate        GeneralizedTime,
                  crlDetails          Extensions  OPTIONAL
                   -- extra CRL details (e.g., crl number, reason, location, etc.)
            }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.RevDetails.ToAsn1Object">
            <pre>
            RevDetails ::= SEQUENCE {
                             certDetails         CertTemplate,
                              -- allows requester to specify as much as they can about
                              -- the cert. for which revocation is requested
                              -- (e.g., for cases in which serialNumber is not available)
                              crlEntryDetails     Extensions       OPTIONAL
                              -- requested crlEntryExtensions
                        }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.RevRepContent.ToAsn1Object">
            <pre>
            RevRepContent ::= SEQUENCE {
                   status       SEQUENCE SIZE (1..MAX) OF PKIStatusInfo,
                   -- in same order as was sent in RevReqContent
                   revCerts [0] SEQUENCE SIZE (1..MAX) OF CertId OPTIONAL,
                   -- IDs for which revocation was requested
                   -- (same order as status)
                   crls     [1] SEQUENCE SIZE (1..MAX) OF CertificateList OPTIONAL
                   -- the resulting CRLs (there may be more than one)
              }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cmp.RevReqContent.ToAsn1Object">
            <pre>
            RevReqContent ::= SEQUENCE OF RevDetails
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Attribute.GetInstance(System.Object)">
             return an Attribute object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Attribute.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Attribute ::= SEQUENCE {
                attrType OBJECT IDENTIFIER,
                attrValues SET OF AttributeValue
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Attributes.ToAsn1Object">
            <pre>
            Attributes ::=
              SET SIZE(1..MAX) OF Attribute -- according to RFC 5652
            </pre>
            @return
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AttributeTable.GetAll(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             Return all the attributes matching the OBJECT IDENTIFIER oid. The vector will be
             empty if there are no attributes of the required type present.
            
             @param oid type of attribute required.
             @return a vector of all the attributes found of type oid.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AttributeTable.Add(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.Asn1Encodable)">
             Return a new table with the passed in attribute added.
            
             @param attrType
             @param attrValue
             @return
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Cms.AttributeTable.Item(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            <summary>Return the first attribute matching the given OBJECT IDENTIFIER</summary>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AuthenticatedData.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an AuthenticatedData object from a tagged object.
            
             @param obj      the tagged object holding the object we want.
             @param isExplicit true if the object is meant to be explicitly
                             tagged false otherwise.
             @throws ArgumentException if the object held by the
                                              tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AuthenticatedData.GetInstance(System.Object)">
             return an AuthenticatedData object from the given object.
            
             @param obj the object we want converted.
             @throws ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AuthenticatedData.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
             AuthenticatedData ::= SEQUENCE {
                   version CMSVersion,
                   originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
                   recipientInfos RecipientInfos,
                   macAlgorithm MessageAuthenticationCodeAlgorithm,
                   digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,
                   encapContentInfo EncapsulatedContentInfo,
                   authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,
                   mac MessageAuthenticationCode,
                   unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }
            
             AuthAttributes ::= SET SIZE (1..MAX) OF Attribute
            
             UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute
            
             MessageAuthenticationCode ::= OCTET STRING
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.AuthenticatedDataParser">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
             AuthenticatedData ::= SEQUENCE {
                   version CMSVersion,
                   originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
                   recipientInfos RecipientInfos,
                   macAlgorithm MessageAuthenticationCodeAlgorithm,
                   digestAlgorithm [1] DigestAlgorithmIdentifier OPTIONAL,
                   encapContentInfo EncapsulatedContentInfo,
                   authAttrs [2] IMPLICIT AuthAttributes OPTIONAL,
                   mac MessageAuthenticationCode,
                   unauthAttrs [3] IMPLICIT UnauthAttributes OPTIONAL }
            
             AuthAttributes ::= SET SIZE (1..MAX) OF Attribute
            
             UnauthAttributes ::= SET SIZE (1..MAX) OF Attribute
            
             MessageAuthenticationCode ::= OCTET STRING
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AuthEnvelopedData.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an AuthEnvelopedData object from a tagged object.
            
             @param obj      the tagged object holding the object we want.
             @param isExplicit true if the object is meant to be explicitly
                             tagged false otherwise.
             @throws ArgumentException if the object held by the
                                              tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AuthEnvelopedData.GetInstance(System.Object)">
             return an AuthEnvelopedData object from the given object.
            
             @param obj the object we want converted.
             @throws ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.AuthEnvelopedData.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            AuthEnvelopedData ::= SEQUENCE {
              version CMSVersion,
              originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
              recipientInfos RecipientInfos,
              authEncryptedContentInfo EncryptedContentInfo,
              authAttrs [1] IMPLICIT AuthAttributes OPTIONAL,
              mac MessageAuthenticationCode,
              unauthAttrs [2] IMPLICIT UnauthAttributes OPTIONAL }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.AuthEnvelopedDataParser">
            Produce an object suitable for an Asn1OutputStream.
            
            <pre>
            AuthEnvelopedData ::= SEQUENCE {
              version CMSVersion,
              originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
              recipientInfos RecipientInfos,
              authEncryptedContentInfo EncryptedContentInfo,
              authAttrs [1] IMPLICIT AuthAttributes OPTIONAL,
              mac MessageAuthenticationCode,
              unauthAttrs [2] IMPLICIT UnauthAttributes OPTIONAL }
            </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Cms.CmsObjectIdentifiers.id_ri">
            The other Revocation Info arc
            id-ri OBJECT IDENTIFIER ::= { iso(1) identified-organization(3)
                                              dod(6) internet(1) security(5) mechanisms(5) pkix(7) ri(16) }
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.CompressedData">
            RFC 3274 - CMS Compressed Data.
            <pre>
            CompressedData ::= Sequence {
             version CMSVersion,
             compressionAlgorithm CompressionAlgorithmIdentifier,
             encapContentInfo EncapsulatedContentInfo
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.CompressedData.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a CompressedData object from a tagged object.
            
             @param ato the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.CompressedData.GetInstance(System.Object)">
             return a CompressedData object from the given object.
            
             @param _obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.CompressedDataParser">
            RFC 3274 - CMS Compressed Data.
            <pre>
            CompressedData ::= SEQUENCE {
             version CMSVersion,
             compressionAlgorithm CompressionAlgorithmIdentifier,
             encapContentInfo EncapsulatedContentInfo
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.ContentInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            ContentInfo ::= Sequence {
                     contentType ContentType,
                     content
                     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.ContentInfoParser">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            ContentInfo ::= SEQUENCE {
                     contentType ContentType,
                     content
                     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Ecc.MQVuserKeyingMaterial.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an AuthEnvelopedData object from a tagged object.
            
             @param obj      the tagged object holding the object we want.
             @param isExplicit true if the object is meant to be explicitly
                             tagged false otherwise.
             @throws ArgumentException if the object held by the
                                              tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Ecc.MQVuserKeyingMaterial.GetInstance(System.Object)">
             return an AuthEnvelopedData object from the given object.
            
             @param obj the object we want converted.
             @throws ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Ecc.MQVuserKeyingMaterial.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            MQVuserKeyingMaterial ::= SEQUENCE {
              ephemeralPublicKey OriginatorPublicKey,
              addedukm [0] EXPLICIT UserKeyingMaterial OPTIONAL  }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo.GetInstance(System.Object)">
             return an EncryptedContentInfo object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.EncryptedContentInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            EncryptedContentInfo ::= Sequence {
                contentType ContentType,
                contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,
                encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.EncryptedContentInfoParser">
            <pre>
            EncryptedContentInfo ::= SEQUENCE {
                contentType ContentType,
                contentEncryptionAlgorithm ContentEncryptionAlgorithmIdentifier,
                encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.EncryptedData.ToAsn1Object">
            <pre>
                  EncryptedData ::= SEQUENCE {
                                version CMSVersion,
                                encryptedContentInfo EncryptedContentInfo,
                                unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.EnvelopedData.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an EnvelopedData object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.EnvelopedData.GetInstance(System.Object)">
             return an EnvelopedData object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.EnvelopedData.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            EnvelopedData ::= Sequence {
                version CMSVersion,
                originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
                recipientInfos RecipientInfos,
                encryptedContentInfo EncryptedContentInfo,
                unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.EnvelopedDataParser">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            EnvelopedData ::= SEQUENCE {
                version CMSVersion,
                originatorInfo [0] IMPLICIT OriginatorInfo OPTIONAL,
                recipientInfos RecipientInfos,
                encryptedContentInfo EncryptedContentInfo,
                unprotectedAttrs [1] IMPLICIT UnprotectedAttributes OPTIONAL
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KekIdentifier.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a KekIdentifier object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KekIdentifier.GetInstance(System.Object)">
             return a KekIdentifier object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KekIdentifier.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            KekIdentifier ::= Sequence {
                keyIdentifier OCTET STRING,
                date GeneralizedTime OPTIONAL,
                other OtherKeyAttribute OPTIONAL
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KekRecipientInfo.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a KekRecipientInfo object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KekRecipientInfo.GetInstance(System.Object)">
             return a KekRecipientInfo object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KekRecipientInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            KekRecipientInfo ::= Sequence {
                version CMSVersion,  -- always set to 4
                kekID KekIdentifier,
                keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
                encryptedKey EncryptedKey
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an KeyAgreeRecipientIdentifier object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param isExplicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier.GetInstance(System.Object)">
             return an KeyAgreeRecipientIdentifier object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientIdentifier.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            KeyAgreeRecipientIdentifier ::= CHOICE {
                issuerAndSerialNumber IssuerAndSerialNumber,
                rKeyId [0] IMPLICIT RecipientKeyIdentifier
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a KeyAgreeRecipientInfo object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo.GetInstance(System.Object)">
             return a KeyAgreeRecipientInfo object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyAgreeRecipientInfo.ToAsn1Object">
                     * Produce an object suitable for an Asn1OutputStream.
                     * <pre>
                     * KeyAgreeRecipientInfo ::= Sequence {
                     *     version CMSVersion,  -- always set to 3
                     *     originator [0] EXPLICIT OriginatorIdentifierOrKey,
                     *     ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,
                     *     keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
                     *     recipientEncryptedKeys RecipientEncryptedKeys
                     * }
            		 *
            		 * UserKeyingMaterial ::= OCTET STRING
                     * </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyTransRecipientInfo.GetInstance(System.Object)">
             return a KeyTransRecipientInfo object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.KeyTransRecipientInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            KeyTransRecipientInfo ::= Sequence {
                version CMSVersion,  -- always set to 0 or 2
                rid RecipientIdentifier,
                keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
                encryptedKey EncryptedKey
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.MetaData.ToAsn1Object">
            <pre>
            MetaData ::= SEQUENCE {
              hashProtected        BOOLEAN,
              fileName             UTF8String OPTIONAL,
              mediaType            IA5String OPTIONAL,
              otherMetaData        Attributes OPTIONAL
            }
            </pre>
            @return
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an OriginatorIdentifierOrKey object from a tagged object.
            
             @param o the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey.GetInstance(System.Object)">
             return an OriginatorIdentifierOrKey object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorIdentifierOrKey.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
             OriginatorIdentifierOrKey ::= CHOICE {
                 issuerAndSerialNumber IssuerAndSerialNumber,
                 subjectKeyIdentifier [0] SubjectKeyIdentifier,
                 originatorKey [1] OriginatorPublicKey
             }
            
             SubjectKeyIdentifier ::= OCTET STRING
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorInfo.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an OriginatorInfo object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorInfo.GetInstance(System.Object)">
             return an OriginatorInfo object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            OriginatorInfo ::= Sequence {
                certs [0] IMPLICIT CertificateSet OPTIONAL,
                crls [1] IMPLICIT CertificateRevocationLists OPTIONAL
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an OriginatorPublicKey object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey.GetInstance(System.Object)">
             return an OriginatorPublicKey object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OriginatorPublicKey.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            OriginatorPublicKey ::= Sequence {
                algorithm AlgorithmIdentifier,
                publicKey BIT STRING
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute.GetInstance(System.Object)">
             return an OtherKeyAttribute object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherKeyAttribute.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            OtherKeyAttribute ::= Sequence {
                keyAttrId OBJECT IDENTIFIER,
                keyAttr ANY DEFINED BY keyAttrId OPTIONAL
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherRecipientInfo.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a OtherRecipientInfo object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherRecipientInfo.GetInstance(System.Object)">
             return a OtherRecipientInfo object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherRecipientInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            OtherRecipientInfo ::= Sequence {
               oriType OBJECT IDENTIFIER,
               oriValue ANY DEFINED BY oriType }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherRevocationInfoFormat.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a OtherRevocationInfoFormat object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception IllegalArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherRevocationInfoFormat.GetInstance(System.Object)">
             return a OtherRevocationInfoFormat object from the given object.
            
             @param obj the object we want converted.
             @exception IllegalArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.OtherRevocationInfoFormat.ToAsn1Object">
            Produce an object suitable for an ASN1OutputStream.
            <pre>
            OtherRevocationInfoFormat ::= SEQUENCE {
                 otherRevInfoFormat OBJECT IDENTIFIER,
                 otherRevInfo ANY DEFINED BY otherRevInfoFormat }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a PasswordRecipientInfo object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo.GetInstance(System.Object)">
             return a PasswordRecipientInfo object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.PasswordRecipientInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            PasswordRecipientInfo ::= Sequence {
              version CMSVersion,   -- Always set to 0
              keyDerivationAlgorithm [0] KeyDerivationAlgorithmIdentifier
                                        OPTIONAL,
             keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
             encryptedKey EncryptedKey }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientEncryptedKey.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an RecipientEncryptedKey object from a tagged object.
            
             @param obj the tagged object holding the object we want.
             @param isExplicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientEncryptedKey.GetInstance(System.Object)">
             return a RecipientEncryptedKey object from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientEncryptedKey.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            RecipientEncryptedKey ::= SEQUENCE {
                rid KeyAgreeRecipientIdentifier,
                encryptedKey EncryptedKey
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientIdentifier.GetInstance(System.Object)">
             return a RecipientIdentifier object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientIdentifier.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
             RecipientIdentifier ::= CHOICE {
                 issuerAndSerialNumber IssuerAndSerialNumber,
                 subjectKeyIdentifier [0] SubjectKeyIdentifier
             }
            
             SubjectKeyIdentifier ::= OCTET STRING
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            RecipientInfo ::= CHOICE {
                ktri KeyTransRecipientInfo,
                kari [1] KeyAgreeRecipientInfo,
                kekri [2] KekRecipientInfo,
                pwri [3] PasswordRecipientInfo,
                ori [4] OtherRecipientInfo }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a RecipientKeyIdentifier object from a tagged object.
            
             @param _ato the tagged object holding the object we want.
             @param _explicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the object held by the
                      tagged object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier.GetInstance(System.Object)">
             return a RecipientKeyIdentifier object from the given object.
            
             @param _obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.RecipientKeyIdentifier.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
             RecipientKeyIdentifier ::= Sequence {
                 subjectKeyIdentifier SubjectKeyIdentifier,
                 date GeneralizedTime OPTIONAL,
                 other OtherKeyAttribute OPTIONAL
             }
            
             SubjectKeyIdentifier ::= OCTET STRING
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.ScvpReqRes.ToAsn1Object">
            <pre>
               ScvpReqRes ::= SEQUENCE {
               request  [0] EXPLICIT ContentInfo OPTIONAL,
               response     ContentInfo }
            </pre>
            @return  the ASN.1 primitive representation.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.SignedData">
            a signed data object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.SignedData.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            SignedData ::= Sequence {
                version CMSVersion,
                digestAlgorithms DigestAlgorithmIdentifiers,
                encapContentInfo EncapsulatedContentInfo,
                certificates [0] IMPLICIT CertificateSet OPTIONAL,
                crls [1] IMPLICIT CertificateRevocationLists OPTIONAL,
                signerInfos SignerInfos
              }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Cms.SignedDataParser">
            <pre>
            SignedData ::= SEQUENCE {
                version CMSVersion,
                digestAlgorithms DigestAlgorithmIdentifiers,
                encapContentInfo EncapsulatedContentInfo,
                certificates [0] IMPLICIT CertificateSet OPTIONAL,
                crls [1] IMPLICIT CertificateRevocationLists OPTIONAL,
                signerInfos SignerInfos
              }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.SignerIdentifier.GetInstance(System.Object)">
             return a SignerIdentifier object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.SignerIdentifier.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
             SignerIdentifier ::= CHOICE {
                 issuerAndSerialNumber IssuerAndSerialNumber,
                 subjectKeyIdentifier [0] SubjectKeyIdentifier
             }
            
             SubjectKeyIdentifier ::= OCTET STRING
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.SignerInfo.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
              SignerInfo ::= Sequence {
                  version Version,
                  SignerIdentifier sid,
                  digestAlgorithm DigestAlgorithmIdentifier,
                  authenticatedAttributes [0] IMPLICIT Attributes OPTIONAL,
                  digestEncryptionAlgorithm DigestEncryptionAlgorithmIdentifier,
                  encryptedDigest EncryptedDigest,
                  unauthenticatedAttributes [1] IMPLICIT Attributes OPTIONAL
              }
            
              EncryptedDigest ::= OCTET STRING
            
              DigestAlgorithmIdentifier ::= AlgorithmIdentifier
            
              DigestEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Time.#ctor(System.DateTime)">
            creates a time object from a given date - if the date is between 1950
            and 2049 a UTCTime object is Generated, otherwise a GeneralizedTime
            is used.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.Time.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Time ::= CHOICE {
                        utcTime        UTCTime,
                        generalTime    GeneralizedTime }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.TimeStampAndCrl.ToAsn1Object">
            <pre>
            TimeStampAndCRL ::= SEQUENCE {
                timeStamp   TimeStampToken,          -- according to RFC 3161
                crl         CertificateList OPTIONAL -- according to RFC 5280
             }
            </pre>
            @return
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.TimeStampedData.ToAsn1Object">
            <pre>
            TimeStampedData ::= SEQUENCE {
              version              INTEGER { v1(1) },
              dataUri              IA5String OPTIONAL,
              metaData             MetaData OPTIONAL,
              content              OCTET STRING OPTIONAL,
              temporalEvidence     Evidence
            }
            </pre>
            @return
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Cms.TimeStampTokenEvidence.ToAsn1Object">
            <pre>
            TimeStampTokenEvidence ::=
               SEQUENCE SIZE(1..MAX) OF TimeStampAndCrl
            </pre>
            @return
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.AttributeTypeAndValue.ToAsn1Object">
            <pre>
            AttributeTypeAndValue ::= SEQUENCE {
                      type         OBJECT IDENTIFIER,
                      value        ANY DEFINED BY type }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertId.ToAsn1Object">
            <pre>
            CertId ::= SEQUENCE {
                            issuer           GeneralName,
                            serialNumber     INTEGER }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertReqMessages.ToAsn1Object">
            <pre>
            CertReqMessages ::= SEQUENCE SIZE (1..MAX) OF CertReqMsg
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertReqMsg.#ctor(Org.BouncyCastle.Asn1.Crmf.CertRequest,Org.BouncyCastle.Asn1.Crmf.ProofOfPossession,Org.BouncyCastle.Asn1.Crmf.AttributeTypeAndValue[])">
            Creates a new CertReqMsg.
            @param certReq CertRequest
            @param popo may be null
            @param regInfo may be null
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertReqMsg.ToAsn1Object">
            <pre>
            CertReqMsg ::= SEQUENCE {
                               certReq   CertRequest,
                               pop       ProofOfPossession  OPTIONAL,
                               -- content depends upon key type
                               regInfo   SEQUENCE SIZE(1..MAX) OF AttributeTypeAndValue OPTIONAL }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertRequest.ToAsn1Object">
            <pre>
            CertRequest ::= SEQUENCE {
                                 certReqId     INTEGER,          -- ID for matching request and reply
                                 certTemplate  CertTemplate,  -- Selected fields of cert to be issued
                                 controls      Controls OPTIONAL }   -- Attributes affecting issuance
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertTemplate.ToAsn1Object">
            <pre>
             CertTemplate ::= SEQUENCE {
                 version      [0] Version               OPTIONAL,
                 serialNumber [1] INTEGER               OPTIONAL,
                 signingAlg   [2] AlgorithmIdentifier   OPTIONAL,
                 issuer       [3] Name                  OPTIONAL,
                 validity     [4] OptionalValidity      OPTIONAL,
                 subject      [5] Name                  OPTIONAL,
                 publicKey    [6] SubjectPublicKeyInfo  OPTIONAL,
                 issuerUID    [7] UniqueIdentifier      OPTIONAL,
                 subjectUID   [8] UniqueIdentifier      OPTIONAL,
                 extensions   [9] Extensions            OPTIONAL }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertTemplateBuilder.SetVersion(System.Int32)">
            Sets the X.509 version. Note: for X509v3, use 2 here. 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertTemplateBuilder.SetIssuerUID(Org.BouncyCastle.Asn1.DerBitString)">
            Sets the issuer unique ID (deprecated in X.509v3) 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertTemplateBuilder.SetSubjectUID(Org.BouncyCastle.Asn1.DerBitString)">
            Sets the subject unique ID (deprecated in X.509v3) 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.CertTemplateBuilder.Build">
            <pre>
             CertTemplate ::= SEQUENCE {
                 version      [0] Version               OPTIONAL,
                 serialNumber [1] INTEGER               OPTIONAL,
                 signingAlg   [2] AlgorithmIdentifier   OPTIONAL,
                 issuer       [3] Name                  OPTIONAL,
                 validity     [4] OptionalValidity      OPTIONAL,
                 subject      [5] Name                  OPTIONAL,
                 publicKey    [6] SubjectPublicKeyInfo  OPTIONAL,
                 issuerUID    [7] UniqueIdentifier      OPTIONAL,
                 subjectUID   [8] UniqueIdentifier      OPTIONAL,
                 extensions   [9] Extensions            OPTIONAL }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.Controls.ToAsn1Object">
            <pre>
            Controls  ::= SEQUENCE SIZE(1..MAX) OF AttributeTypeAndValue
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.EncKeyWithID.ToAsn1Object">
            <pre>
            EncKeyWithID ::= SEQUENCE {
                 privateKey           PrivateKeyInfo,
                 identifier CHOICE {
                    string               UTF8String,
                    generalName          GeneralName
                } OPTIONAL
            }
            </pre>
            @return
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.EncryptedKey.ToAsn1Object">
            <pre>
               EncryptedKey ::= CHOICE {
                   encryptedValue        EncryptedValue, -- deprecated
                   envelopedData     [0] EnvelopedData }
                   -- The encrypted private key MUST be placed in the envelopedData
                   -- encryptedContentInfo encryptedContent OCTET STRING.
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.EncryptedValue.ToAsn1Object">
            <pre>
            EncryptedValue ::= SEQUENCE {
                                intendedAlg   [0] AlgorithmIdentifier  OPTIONAL,
                                -- the intended algorithm for which the value will be used
                                symmAlg       [1] AlgorithmIdentifier  OPTIONAL,
                                -- the symmetric algorithm used to encrypt the value
                                encSymmKey    [2] BIT STRING           OPTIONAL,
                                -- the (encrypted) symmetric key used to encrypt the value
                                keyAlg        [3] AlgorithmIdentifier  OPTIONAL,
                                -- algorithm used to encrypt the symmetric key
                                valueHint     [4] OCTET STRING         OPTIONAL,
                                -- a brief description or identifier of the encValue content
                                -- (may be meaningful only to the sending entity, and used only
                                -- if EncryptedValue might be re-examined by the sending entity
                                -- in the future)
                                encValue       BIT STRING }
                                -- the encrypted value itself
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.OptionalValidity.ToAsn1Object">
            <pre>
            OptionalValidity ::= SEQUENCE {
                                   notBefore  [0] Time OPTIONAL,
                                   notAfter   [1] Time OPTIONAL } --at least one MUST be present
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PkiArchiveOptions.ToAsn1Object">
            <pre>
             PkiArchiveOptions ::= CHOICE {
                 encryptedPrivKey     [0] EncryptedKey,
                 -- the actual value of the private key
                 keyGenParameters     [1] KeyGenParameters,
                 -- parameters which allow the private key to be re-generated
                 archiveRemGenPrivKey [2] BOOLEAN }
                 -- set to TRUE if sender wishes receiver to archive the private
                 -- key of a key pair that the receiver generates in response to
                 -- this request; set to FALSE if no archival is desired.
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PkiPublicationInfo.ToAsn1Object">
            <pre>
            PkiPublicationInfo ::= SEQUENCE {
                             action     INTEGER {
                                            dontPublish (0),
                                            pleasePublish (1) },
                             pubInfos  SEQUENCE SIZE (1..MAX) OF SinglePubInfo OPTIONAL }
            -- pubInfos MUST NOT be present if action is "dontPublish"
            -- (if action is "pleasePublish" and pubInfos is omitted,
            -- "dontCare" is assumed)
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Crmf.PKMacValue">
            Password-based MAC value for use with POPOSigningKeyInput.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PKMacValue.#ctor(Org.BouncyCastle.Asn1.Cmp.PbmParameter,Org.BouncyCastle.Asn1.DerBitString)">
            Creates a new PKMACValue.
            @param params parameters for password-based MAC
            @param value MAC of the DER-encoded SubjectPublicKeyInfo
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PKMacValue.#ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier,Org.BouncyCastle.Asn1.DerBitString)">
            Creates a new PKMACValue.
            @param aid CMPObjectIdentifiers.passwordBasedMAC, with PBMParameter
            @param value MAC of the DER-encoded SubjectPublicKeyInfo
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PKMacValue.ToAsn1Object">
            <pre>
            PKMACValue ::= SEQUENCE {
                 algId  AlgorithmIdentifier,
                 -- algorithm value shall be PasswordBasedMac 1.2.840.113533.7.66.13
                 -- parameter value is PBMParameter
                 value  BIT STRING }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PopoPrivKey.ToAsn1Object">
            <pre>
            PopoPrivKey ::= CHOICE {
                   thisMessage       [0] BIT STRING,         -- Deprecated
                    -- possession is proven in this message (which contains the private
                    -- key itself (encrypted for the CA))
                   subsequentMessage [1] SubsequentMessage,
                    -- possession will be proven in a subsequent message
                   dhMAC             [2] BIT STRING,         -- Deprecated
                   agreeMAC          [3] PKMACValue,
                   encryptedKey      [4] EnvelopedData }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PopoSigningKey.#ctor(Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput,Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier,Org.BouncyCastle.Asn1.DerBitString)">
            Creates a new Proof of Possession object for a signing key.
            @param poposkIn the PopoSigningKeyInput structure, or null if the
                CertTemplate includes both subject and publicKey values.
            @param aid the AlgorithmIdentifier used to sign the proof of possession.
            @param signature a signature over the DER-encoded value of poposkIn,
                or the DER-encoded value of certReq if poposkIn is null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PopoSigningKey.ToAsn1Object">
            <pre>
            PopoSigningKey ::= SEQUENCE {
                                 poposkInput           [0] PopoSigningKeyInput OPTIONAL,
                                 algorithmIdentifier   AlgorithmIdentifier,
                                 signature             BIT STRING }
             -- The signature (using "algorithmIdentifier") is on the
             -- DER-encoded value of poposkInput.  NOTE: If the CertReqMsg
             -- certReq CertTemplate contains the subject and publicKey values,
             -- then poposkInput MUST be omitted and the signature MUST be
             -- computed on the DER-encoded value of CertReqMsg certReq.  If
             -- the CertReqMsg certReq CertTemplate does not contain the public
             -- key and subject values, then poposkInput MUST be present and
             -- MUST be signed.  This strategy ensures that the public key is
             -- not present in both the poposkInput and CertReqMsg certReq
             -- CertTemplate fields.
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput.#ctor(Org.BouncyCastle.Asn1.X509.GeneralName,Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo)">
            Creates a new PopoSigningKeyInput with sender name as authInfo. 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput.#ctor(Org.BouncyCastle.Asn1.Crmf.PKMacValue,Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo)">
            Creates a new PopoSigningKeyInput using password-based MAC. 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput.ToAsn1Object">
            <pre>
            PopoSigningKeyInput ::= SEQUENCE {
                   authInfo             CHOICE {
                                            sender              [0] GeneralName,
                                            -- used only if an authenticated identity has been
                                            -- established for the sender (e.g., a DN from a
                                            -- previously-issued and currently-valid certificate
                                            publicKeyMac        PKMacValue },
                                            -- used if no authenticated GeneralName currently exists for
                                            -- the sender; publicKeyMac contains a password-based MAC
                                            -- on the DER-encoded value of publicKey
                   publicKey           SubjectPublicKeyInfo }  -- from CertTemplate
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput.Sender">
            Returns the sender field, or null if authInfo is publicKeyMac 
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Crmf.PopoSigningKeyInput.PublicKeyMac">
            Returns the publicKeyMac field, or null if authInfo is sender 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.ProofOfPossession.#ctor">
            Creates a ProofOfPossession with type raVerified. 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.ProofOfPossession.#ctor(Org.BouncyCastle.Asn1.Crmf.PopoSigningKey)">
            Creates a ProofOfPossession for a signing key. 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.ProofOfPossession.#ctor(System.Int32,Org.BouncyCastle.Asn1.Crmf.PopoPrivKey)">
            Creates a ProofOfPossession for key encipherment or agreement.
            @param type one of TYPE_KEY_ENCIPHERMENT or TYPE_KEY_AGREEMENT
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.ProofOfPossession.ToAsn1Object">
            <pre>
            ProofOfPossession ::= CHOICE {
                                      raVerified        [0] NULL,
                                      -- used if the RA has already verified that the requester is in
                                      -- possession of the private key
                                      signature         [1] PopoSigningKey,
                                      keyEncipherment   [2] PopoPrivKey,
                                      keyAgreement      [3] PopoPrivKey }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Crmf.SinglePubInfo.ToAsn1Object">
            <pre>
            SinglePubInfo ::= SEQUENCE {
                   pubMethod    INTEGER {
                      dontCare    (0),
                      x500        (1),
                      web         (2),
                      ldap        (3) },
                  pubLocation  GeneralName OPTIONAL }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerInteger.GetInstance(System.Object)">
             return an integer from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerInteger.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Integer from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param isExplicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerInteger.IsMalformed(System.Byte[])">
             Apply the correct validation for an INTEGER primitive following the BER rules.
            
             @param bytes The raw encoding of the integer.
             @return true if the (in)put fails this validation.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerInteger.PositiveValue">
            in some cases positive values Get crammed into a space,
            that's not quite big enough...
        </member>
        <member name="T:Org.BouncyCastle.Asn1.CryptoPro.ECGost3410NamedCurves">
            <summary>
            Table of the available named parameters for GOST 3410-2001 / 2012.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.CryptoPro.ECGost3410NamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the ECDomainParameters object for the given OID, null if it
             isn't present.
            
             @param oid an object identifier representing a named parameters, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.CryptoPro.ECGost3410NamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.CryptoPro.ECGost3410NamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.CryptoPro.Gost28147Parameters.ToAsn1Object">
             <pre>
             Gost28147-89-Parameters ::=
                           SEQUENCE {
                                   iv                   Gost28147-89-IV,
                                   encryptionParamSet   OBJECT IDENTIFIER
                            }
            
               Gost28147-89-IV ::= OCTET STRING (SIZE (8))
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.CryptoPro.Gost3410NamedParameters">
            table of the available named parameters for GOST 3410-94.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.CryptoPro.Gost3410NamedParameters.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the GOST3410ParamSetParameters object for the given OID, null if it
             isn't present.
            
             @param oid an object identifier representing a named parameters, if present.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.CryptoPro.Gost3410NamedParameters.Names">
            returns an enumeration containing the name strings for parameters
            contained in this structure.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerBmpString">
            Der BMPString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.GetInstance(System.Object)">
             return a BMP string from the given object.
            
             @param obj the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a BMP string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                          be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBmpString.#ctor(System.String)">
            basic constructor
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBoolean.GetInstance(System.Object)">
             return a bool from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBoolean.GetInstance(System.Boolean)">
            return a DerBoolean from the passed in bool.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerBoolean.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Boolean from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerEnumerated.GetInstance(System.Object)">
             return an integer from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerEnumerated.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Enumerated from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerExternal">
            Class representing the DER-type External
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerExternal.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.DerInteger,Org.BouncyCastle.Asn1.Asn1Object,Org.BouncyCastle.Asn1.DerTaggedObject)">
            Creates a new instance of DerExternal
            See X.690 for more informations about the meaning of these parameters
            @param directReference The direct reference or <code>null</code> if not set.
            @param indirectReference The indirect reference or <code>null</code> if not set.
            @param dataValueDescriptor The data value descriptor or <code>null</code> if not set.
            @param externalData The external data in its encoded form.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerExternal.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.DerInteger,Org.BouncyCastle.Asn1.Asn1Object,System.Int32,Org.BouncyCastle.Asn1.Asn1Object)">
            Creates a new instance of DerExternal.
            See X.690 for more informations about the meaning of these parameters
            @param directReference The direct reference or <code>null</code> if not set.
            @param indirectReference The indirect reference or <code>null</code> if not set.
            @param dataValueDescriptor The data value descriptor or <code>null</code> if not set.
            @param encoding The encoding to be used for the external data
            @param externalData The external data
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerExternal.Encoding">
            The encoding of the content. Valid values are
            <ul>
            <li><code>0</code> single-ASN1-type</li>
            <li><code>1</code> OCTET STRING</li>
            <li><code>2</code> BIT STRING</li>
            </ul>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerGeneralizedTime">
            Generalized time object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.GetInstance(System.Object)">
             return a generalized time from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Generalized Time object from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.#ctor(System.String)">
             The correct format for this is YYYYMMDDHHMMSS[.f]Z, or without the Z
             for local time, or Z+-HHMM on the end, for difference between local
             time and UTC time. The fractional second amount f must consist of at
             least one number with trailing zeroes removed.
            
             @param time the time string.
             @exception ArgumentException if string is an illegal format.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.#ctor(System.DateTime)">
            base constructor from a local time object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGeneralizedTime.GetTime">
            return the time - always in the form of
             YYYYMMDDhhmmssGMT(+hh:mm|-hh:mm).
            <p>
            Normally in a certificate we would expect "Z" rather than "GMT",
            however adding the "GMT" means we can just use:
            <pre>
                dateF = new SimpleDateFormat("yyyyMMddHHmmssz");
            </pre>
            To read in the time and Get a date which is compatible with our local
            time zone.</p>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerGeneralizedTime.TimeString">
            Return the time.
            @return The time string as it appeared in the encoded object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGraphicString.GetInstance(System.Object)">
             return a Graphic String from the passed in object
            
             @param obj a DerGraphicString or an object that can be converted into one.
             @exception IllegalArgumentException if the object cannot be converted.
             @return a DerGraphicString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGraphicString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Graphic String from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception IllegalArgumentException if the tagged object cannot
                           be converted.
             @return a DerGraphicString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerGraphicString.#ctor(System.Byte[])">
            basic constructor - with bytes.
            @param string the byte encoding of the characters making up the string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerIA5String">
            Der IA5String object - this is an ascii string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.GetInstance(System.Object)">
             return a IA5 string from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an IA5 string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.#ctor(System.Byte[])">
            basic constructor - with bytes.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.#ctor(System.String)">
            basic constructor - without validation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.#ctor(System.String,System.Boolean)">
             Constructor with optional validation.
            
             @param string the base string to wrap.
             @param validate whether or not to check the string.
             @throws ArgumentException if validate is true and the string
             contains characters that should not be in an IA5String.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerIA5String.IsIA5String(System.String)">
             return true if the passed in String can be represented without
             loss as an IA5String, false otherwise.
            
             @return true if in printable set, false otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerNumericString">
            Der NumericString object - this is an ascii string of characters {0,1,2,3,4,5,6,7,8,9, }.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.GetInstance(System.Object)">
             return a Numeric string from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an Numeric string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.#ctor(System.Byte[])">
            basic constructor - with bytes.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.#ctor(System.String)">
            basic constructor -  without validation..
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.#ctor(System.String,System.Boolean)">
             Constructor with optional validation.
            
             @param string the base string to wrap.
             @param validate whether or not to check the string.
             @throws ArgumentException if validate is true and the string
             contains characters that should not be in a NumericString.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerNumericString.IsNumericString(System.String)">
             Return true if the string can be represented as a NumericString ('0'..'9', ' ')
            
             @param str string to validate.
             @return true if numeric, fale otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerObjectIdentifier.GetInstance(System.Object)">
             return an Oid from the passed in object
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerObjectIdentifier.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an object Identifier from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerObjectIdentifier.On(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            Return  true if this oid is an extension of the passed in branch, stem.
            @param stem the arc or branch that is a possible parent.
            @return  true if the branch is on the passed in stem, false otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerPrintableString">
            Der PrintableString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.GetInstance(System.Object)">
             return a printable string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Printable string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.#ctor(System.String)">
            basic constructor - this does not validate the string
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.#ctor(System.String,System.Boolean)">
             Constructor with optional validation.
            
             @param string the base string to wrap.
             @param validate whether or not to check the string.
             @throws ArgumentException if validate is true and the string
             contains characters that should not be in a PrintableString.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerPrintableString.IsPrintableString(System.String)">
             return true if the passed in String can be represented without
             loss as a PrintableString, false otherwise.
            
             @return true if in printable set, false otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerT61String">
            Der T61String (also the teletex string) - 8-bit characters
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.GetInstance(System.Object)">
             return a T61 string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an T61 string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.#ctor(System.Byte[])">
            basic constructor - with bytes.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerT61String.#ctor(System.String)">
            basic constructor - with string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerUniversalString">
            Der UniversalString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUniversalString.GetInstance(System.Object)">
             return a Universal string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUniversalString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Universal string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUniversalString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerUtcTime">
            UTC time object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.GetInstance(System.Object)">
             return an UTC Time from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an UTC Time from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.#ctor(System.String)">
            The correct format for this is YYMMDDHHMMSSZ (it used to be that seconds were
            never encoded. When you're creating one of these objects from scratch, that's
            what you want to use, otherwise we'll try to deal with whatever Gets read from
            the input stream... (this is why the input format is different from the GetTime()
            method output).
            <p>
            @param time the time string.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.#ctor(System.DateTime)">
            base constructor from a DateTime object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.ToDateTime">
             return the time as a date based on whatever a 2 digit year will return. For
             standardised processing use ToAdjustedDateTime().
            
             @return the resulting date
             @exception ParseException if the date string cannot be parsed.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtcTime.ToAdjustedDateTime">
             return the time as an adjusted date
             in the range of 1950 - 2049.
            
             @return a date in the range of 1950 to 2049.
             @exception ParseException if the date string cannot be parsed.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerUtcTime.TimeString">
            return the time - always in the form of
             YYMMDDhhmmssGMT(+hh:mm|-hh:mm).
            <p>
            Normally in a certificate we would expect "Z" rather than "GMT",
            however adding the "GMT" means we can just use:
            <pre>
                dateF = new SimpleDateFormat("yyMMddHHmmssz");
            </pre>
            To read in the time and Get a date which is compatible with our local
            time zone.</p>
            <p>
            <b>Note:</b> In some cases, due to the local date processing, this
            may lead to unexpected results. If you want to stick the normal
            convention of 1950 to 2049 use the GetAdjustedTime() method.</p>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.DerUtcTime.AdjustedTimeString">
            <summary>
            Return a time string as an adjusted date with a 4 digit year.
            This goes in the range of 1950 - 2049.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerUtf8String">
            Der UTF8String object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.GetInstance(System.Object)">
             return an UTF8 string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return an UTF8 string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerUtf8String.#ctor(System.String)">
            basic constructor
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVideotexString.GetInstance(System.Object)">
             return a Videotex String from the passed in object
            
             @param obj a DERVideotexString or an object that can be converted into one.
             @exception IllegalArgumentException if the object cannot be converted.
             @return a DERVideotexString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVideotexString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Videotex String from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicit true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception IllegalArgumentException if the tagged object cannot
                           be converted.
             @return a DERVideotexString instance, or null.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVideotexString.#ctor(System.Byte[])">
            basic constructor - with bytes.
            @param string the byte encoding of the characters making up the string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.DerVisibleString">
            Der VisibleString object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.GetInstance(System.Object)">
             return a Visible string from the passed in object.
            
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             return a Visible string from a tagged object.
            
             @param obj the tagged object holding the object we want
             @param explicitly true if the object is meant to be explicitly
                          tagged false otherwise.
             @exception ArgumentException if the tagged object cannot
                           be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.#ctor(System.Byte[])">
            basic constructor - byte encoded string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.DerVisibleString.#ctor(System.String)">
            basic constructor
        </member>
        <member name="T:Org.BouncyCastle.Asn1.EdEC.EdECObjectIdentifiers">
            Edwards Elliptic Curve Object Identifiers (RFC 8410)
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CertificateValues">
            <remarks>
            RFC 3126: 4.3.1 Certificate Values Attribute Definition
            <code>
            CertificateValues ::= SEQUENCE OF Certificate
            </code>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Esf.CommitmentTypeIndication.ToAsn1Object">
            <pre>
            CommitmentTypeIndication ::= SEQUENCE {
                 commitmentTypeId   CommitmentTypeIdentifier,
                 commitmentTypeQualifier   SEQUENCE SIZE (1..MAX) OF
                         CommitmentTypeQualifier OPTIONAL }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier">
             Commitment type qualifiers, used in the Commitment-Type-Indication attribute (RFC3126).
            
             <pre>
               CommitmentTypeQualifier ::= SEQUENCE {
                   commitmentTypeIdentifier  CommitmentTypeIdentifier,
                   qualifier          ANY DEFINED BY commitmentTypeIdentifier OPTIONAL }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             Creates a new <code>CommitmentTypeQualifier</code> instance.
            
             @param commitmentTypeIdentifier a <code>CommitmentTypeIdentifier</code> value
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.Asn1Encodable)">
             Creates a new <code>CommitmentTypeQualifier</code> instance.
            
             @param commitmentTypeIdentifier a <code>CommitmentTypeIdentifier</code> value
             @param qualifier the qualifier, defined by the above field.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Creates a new <code>CommitmentTypeQualifier</code> instance.
            
             @param as <code>CommitmentTypeQualifier</code> structure
             encoded as an Asn1Sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Esf.CommitmentTypeQualifier.ToAsn1Object">
             Returns a DER-encodable representation of this instance.
            
             @return a <code>Asn1Object</code> value
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CompleteCertificateRefs">
            <remarks>
            RFC 3126: 4.2.1 Complete Certificate Refs Attribute Definition
            <code>
            CompleteCertificateRefs ::= SEQUENCE OF OtherCertID
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CompleteRevocationRefs">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            CompleteRevocationRefs ::= SEQUENCE OF CrlOcspRef
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CrlIdentifier">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            CrlIdentifier ::= SEQUENCE 
            {
            	crlissuer		Name,
            	crlIssuedTime	UTCTime,
            	crlNumber		INTEGER OPTIONAL
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CrlListID">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            CRLListID ::= SEQUENCE 
            {
            	crls	SEQUENCE OF CrlValidatedID
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CrlOcspRef">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            CrlOcspRef ::= SEQUENCE {
            	crlids		[0] CRLListID		OPTIONAL,
            	ocspids		[1] OcspListID		OPTIONAL,
            	otherRev	[2] OtherRevRefs	OPTIONAL
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.CrlValidatedID">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            CrlValidatedID ::= SEQUENCE {
            	crlHash			OtherHash,
            	crlIdentifier	CrlIdentifier OPTIONAL}
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OcspIdentifier">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            OcspIdentifier ::= SEQUENCE {
            	ocspResponderID		ResponderID,
            		-- As in OCSP response data
            	producedAt			GeneralizedTime
            		-- As in OCSP response data
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OcspListID">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            OcspListID ::=  SEQUENCE {
            	ocspResponses	SEQUENCE OF OcspResponsesID
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OcspResponsesID">
            <remarks>
            RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
            <code>
            OcspResponsesID ::= SEQUENCE {
            	ocspIdentifier	OcspIdentifier,
            	ocspRepHash		OtherHash OPTIONAL
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OtherCertID">
            <remarks>
            <code>
            OtherCertID ::= SEQUENCE {
            	otherCertHash	OtherHash,
            	issuerSerial	IssuerSerial OPTIONAL
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OtherHash">
            <remarks>
            <code>
            OtherHash ::= CHOICE {
            	sha1Hash	OtherHashValue, -- This contains a SHA-1 hash
            	otherHash	OtherHashAlgAndValue
            }
            
            OtherHashValue ::= OCTET STRING
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OtherHashAlgAndValue">
            <summary>
            Summary description for OtherHashAlgAndValue.
            </summary>
            <remarks>
            <code>
            OtherHashAlgAndValue ::= SEQUENCE {
            	hashAlgorithm	AlgorithmIdentifier,
            	hashValue		OtherHashValue
            }
            
            OtherHashValue ::= OCTET STRING
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OtherRevRefs">
             <remarks>
             RFC 3126: 4.2.2 Complete Revocation Refs Attribute Definition
             <code>
             OtherRevRefs ::= SEQUENCE 
             {
            		otherRevRefType      OtherRevRefType,
            		otherRevRefs         ANY DEFINED BY otherRevRefType
             }
            
             OtherRevRefType ::= OBJECT IDENTIFIER
             </code>
             </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OtherRevVals">
             <remarks>
             RFC 3126: 4.3.2 Revocation Values Attribute Definition
             <code>
             OtherRevVals ::= SEQUENCE 
             {
            		otherRevValType      OtherRevValType,
            		otherRevVals         ANY DEFINED BY otherRevValType
             }
            
             OtherRevValType ::= OBJECT IDENTIFIER
             </code>
             </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.OtherSigningCertificate">
            <remarks>
            <code>
            OtherSigningCertificate ::= SEQUENCE {
            	certs		SEQUENCE OF OtherCertID,
            	policies	SEQUENCE OF PolicyInformation OPTIONAL
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.RevocationValues">
            <remarks>
            RFC 5126: 6.3.4.  revocation-values Attribute Definition
            <code>
            RevocationValues ::=  SEQUENCE {
            	crlVals			[0] SEQUENCE OF CertificateList     OPTIONAL,
            	ocspVals		[1] SEQUENCE OF BasicOCSPResponse   OPTIONAL,
            	otherRevVals	[2] OtherRevVals OPTIONAL
            }
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.SignaturePolicyId">
            <remarks>
            <code>
            SignaturePolicyId ::= SEQUENCE {
            	sigPolicyIdentifier		SigPolicyId,
            	sigPolicyHash			SigPolicyHash,
            	sigPolicyQualifiers		SEQUENCE SIZE (1..MAX) OF SigPolicyQualifierInfo OPTIONAL
            }
            
            SigPolicyId ::= OBJECT IDENTIFIER
            
            SigPolicyHash ::= OtherHashAlgAndValue
            </code>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.SignaturePolicyIdentifier">
            <remarks>
            <code>
            SignaturePolicyIdentifier ::= CHOICE {
            	SignaturePolicyId		SignaturePolicyId,
            	SignaturePolicyImplied	SignaturePolicyImplied
            }
            
            SignaturePolicyImplied ::= NULL
            </code>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Esf.SignerAttribute.ToAsn1Object">
            
             <pre>
              SignerAttribute ::= SEQUENCE OF CHOICE {
                  claimedAttributes   [0] ClaimedAttributes,
                  certifiedAttributes [1] CertifiedAttributes }
            
              ClaimedAttributes ::= SEQUENCE OF Attribute
              CertifiedAttributes ::= AttributeCertificate -- as defined in RFC 3281: see clause 4.1.
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.SignerLocation">
             Signer-Location attribute (RFC3126).
            
             <pre>
               SignerLocation ::= SEQUENCE {
                   countryName        [0] DirectoryString OPTIONAL,
                   localityName       [1] DirectoryString OPTIONAL,
                   postalAddress      [2] PostalAddress OPTIONAL }
            
               PostalAddress ::= SEQUENCE SIZE(1..6) OF DirectoryString
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Esf.SignerLocation.ToAsn1Object">
             <pre>
               SignerLocation ::= SEQUENCE {
                   countryName        [0] DirectoryString OPTIONAL,
                   localityName       [1] DirectoryString OPTIONAL,
                   postalAddress      [2] PostalAddress OPTIONAL }
            
               PostalAddress ::= SEQUENCE SIZE(1..6) OF DirectoryString
            
               DirectoryString ::= CHOICE {
                     teletexString           TeletexString (SIZE (1..MAX)),
                     printableString         PrintableString (SIZE (1..MAX)),
                     universalString         UniversalString (SIZE (1..MAX)),
                     utf8String              UTF8String (SIZE (1.. MAX)),
                     bmpString               BMPString (SIZE (1..MAX)) }
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Esf.SigPolicyQualifierInfo">
            <remarks>
            <code>
            SigPolicyQualifierInfo ::= SEQUENCE {
            	sigPolicyQualifierId  SigPolicyQualifierId,
            	sigQualifier          ANY DEFINED BY sigPolicyQualifierId
            }
            
            SigPolicyQualifierId ::= OBJECT IDENTIFIER
            </code>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.ContentHints.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            constructor
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.ContentHints.ToAsn1Object">
            <pre>
            ContentHints ::= SEQUENCE {
              contentDescription UTF8String (SIZE (1..MAX)) OPTIONAL,
              contentType ContentType }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.ContentIdentifier.#ctor(Org.BouncyCastle.Asn1.Asn1OctetString)">
            Create from OCTET STRING whose octets represent the identifier.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.ContentIdentifier.#ctor(System.Byte[])">
            Create from byte array representing the identifier.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.ContentIdentifier.ToAsn1Object">
            The definition of ContentIdentifier is
            <pre>
            ContentIdentifier ::=  OCTET STRING
            </pre>
            id-aa-contentIdentifier OBJECT IDENTIFIER ::= { iso(1)
             member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
             smime(16) id-aa(2) 7 }
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.EssCertID.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            constructor
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.EssCertID.ToAsn1Object">
            <pre>
            EssCertID ::= SEQUENCE {
                certHash Hash,
                issuerSerial IssuerSerial OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.EssCertIDv2.ToAsn1Object">
             <pre>
             EssCertIDv2 ::=  SEQUENCE {
                 hashAlgorithm     AlgorithmIdentifier
                          DEFAULT {algorithm id-sha256},
                 certHash          Hash,
                 issuerSerial      IssuerSerial OPTIONAL
             }
            
             Hash ::= OCTET STRING
            
             IssuerSerial ::= SEQUENCE {
                 issuer         GeneralNames,
                 serialNumber   CertificateSerialNumber
             }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.OtherCertID.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            constructor
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.OtherCertID.ToAsn1Object">
             <pre>
             OtherCertID ::= SEQUENCE {
                 otherCertHash    OtherHash,
                 issuerSerial     IssuerSerial OPTIONAL }
            
             OtherHash ::= CHOICE {
                 sha1Hash     OCTET STRING,
                 otherHash    OtherHashAlgAndValue }
            
             OtherHashAlgAndValue ::= SEQUENCE {
                 hashAlgorithm    AlgorithmIdentifier,
                 hashValue        OCTET STRING }
            
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.OtherSigningCertificate.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            constructors
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.OtherSigningCertificate.ToAsn1Object">
            The definition of OtherSigningCertificate is
            <pre>
            OtherSigningCertificate ::=  SEQUENCE {
                 certs        SEQUENCE OF OtherCertID,
                 policies     SEQUENCE OF PolicyInformation OPTIONAL
            }
            </pre>
            id-aa-ets-otherSigCert OBJECT IDENTIFIER ::= { iso(1)
             member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
             smime(16) id-aa(2) 19 }
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.SigningCertificate.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            constructors
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.SigningCertificate.ToAsn1Object">
            The definition of SigningCertificate is
            <pre>
            SigningCertificate ::=  SEQUENCE {
                 certs        SEQUENCE OF EssCertID,
                 policies     SEQUENCE OF PolicyInformation OPTIONAL
            }
            </pre>
            id-aa-signingCertificate OBJECT IDENTIFIER ::= { iso(1)
             member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
             smime(16) id-aa(2) 12 }
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ess.SigningCertificateV2.ToAsn1Object">
            The definition of SigningCertificateV2 is
            <pre>
            SigningCertificateV2 ::=  SEQUENCE {
                 certs        SEQUENCE OF EssCertIDv2,
                 policies     SEQUENCE OF PolicyInformation OPTIONAL
            }
            </pre>
            id-aa-signingCertificateV2 OBJECT IDENTIFIER ::= { iso(1)
               member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
               smime(16) id-aa(2) 47 }
        </member>
        <member name="M:Org.BouncyCastle.Asn1.GM.GMNamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the X9ECParameters object for the named curve represented by
             the passed in object identifier. Null if the curve isn't present.
            
             @param oid an object identifier representing a named curve, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.GM.GMNamedCurves.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.GM.GMNamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.GM.GMNamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Gnu.GnuObjectIdentifiers.EllipticCurve">
            1.3.6.1.4.1.11591.15 - ellipticCurve 
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Icao.CscaMasterList">
             The CscaMasterList object. This object can be wrapped in a
             CMSSignedData to be published in LDAP.
            
             <pre>
             CscaMasterList ::= SEQUENCE {
               version                CscaMasterListVersion,
               certList               SET OF Certificate }
               
             CscaMasterListVersion :: INTEGER {v0(0)}
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Icao.DataGroupHash">
             The DataGroupHash object.
             <pre>
             DataGroupHash  ::=  SEQUENCE {
                  dataGroupNumber         DataGroupNumber,
                  dataGroupHashValue     OCTET STRING }
            
             DataGroupNumber ::= INTEGER {
                     dataGroup1    (1),
                     dataGroup1    (2),
                     dataGroup1    (3),
                     dataGroup1    (4),
                     dataGroup1    (5),
                     dataGroup1    (6),
                     dataGroup1    (7),
                     dataGroup1    (8),
                     dataGroup1    (9),
                     dataGroup1    (10),
                     dataGroup1    (11),
                     dataGroup1    (12),
                     dataGroup1    (13),
                     dataGroup1    (14),
                     dataGroup1    (15),
                     dataGroup1    (16) }
            
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Icao.LdsSecurityObject">
             The LDSSecurityObject object (V1.8).
             <pre>
             LDSSecurityObject ::= SEQUENCE {
               version                LDSSecurityObjectVersion,
               hashAlgorithm          DigestAlgorithmIdentifier,
               dataGroupHashValues    SEQUENCE SIZE (2..ub-DataGroups) OF DataHashGroup,
               ldsVersionInfo         LDSVersionInfo OPTIONAL
                 -- if present, version MUST be v1 }
            
             DigestAlgorithmIdentifier ::= AlgorithmIdentifier,
            
             LDSSecurityObjectVersion :: INTEGER {V0(0)}
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Icao.LdsVersionInfo.ToAsn1Object">
            <pre>
            LDSVersionInfo ::= SEQUENCE {
               ldsVersion PRINTABLE STRING
               unicodeVersion PRINTABLE STRING
             }
            </pre>
            @return
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttCPAccredited">
            The id-isismtt-cp-accredited OID indicates that the certificate is a
            qualified certificate according to Directive 1999/93/EC of the European
            Parliament and of the Council of 13 December 1999 on a Community
            Framework for Electronic Signatures, which additionally conforms the
            special requirements of the SigG and has been issued by an accredited CA.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATDateOfCertGen">
             Certificate extensionDate of certificate generation
             
             <pre>
            		DateOfCertGenSyntax ::= GeneralizedTime
             </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATProcuration">
            Attribute to indicate that the certificate holder may sign in the name of
            a third person. May also be used as extension in a certificate.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATAdmission">
            Attribute to indicate admissions to certain professions. May be used as
            attribute in attribute certificate or as extension in a certificate
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATMonetaryLimit">
            Monetary limit for transactions. The QcEuMonetaryLimit QC statement MUST
            be used in new certificates in place of the extension/attribute
            MonetaryLimit since January 1, 2004. For the sake of backward
            compatibility with certificates already in use, SigG conforming
            components MUST support MonetaryLimit (as well as QcEuLimitValue).
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATDeclarationOfMajority">
            A declaration of majority. May be used as attribute in attribute
            certificate or as extension in a certificate
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATIccsn">
             
             Serial number of the smart card containing the corresponding private key
             
             <pre>
            		ICCSNSyntax ::= OCTET STRING (SIZE(8..20))
             </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATPKReference">
             
             Reference for a file of a smartcard that stores the public key of this
             certificate and that is used as �security anchor�.
             
             <pre>
            		PKReferenceSyntax ::= OCTET STRING (SIZE(20))
             </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATRestriction">
             Some other restriction regarding the usage of this certificate. May be
             used as attribute in attribute certificate or as extension in a
             certificate.
             
             <pre>
            		RestrictionSyntax ::= DirectoryString (SIZE(1..1024))
             </pre>
             
             @see Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATRetrieveIfAllowed">
             
             (Single)Request extension: Clients may include this extension in a
             (single) Request to request the responder to send the certificate in the
             response message along with the status information. Besides the LDAP
             service, this extension provides another mechanism for the distribution
             of certificates, which MAY optionally be provided by certificate
             repositories.
             
             <pre>
            		RetrieveIfAllowed ::= BOOLEAN
             </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATRequestedCertificate">
            SingleOCSPResponse extension: The certificate requested by the client by
            inserting the RetrieveIfAllowed extension in the request, will be
            returned in this extension.
            
            @see Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATNamingAuthorities">
            Base ObjectIdentifier for naming authorities
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATCertInDirSince">
             SingleOCSPResponse extension: Date, when certificate has been published
             in the directory and status information has become available. Currently,
             accrediting authorities enforce that SigG-conforming OCSP servers include
             this extension in the responses.
             
             <pre>
            		CertInDirSince ::= GeneralizedTime
             </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATCertHash">
             Hash of a certificate in OCSP.
            
             @see Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATNameAtBirth">
             <pre>
            		NameAtBirth ::= DirectoryString(SIZE(1..64)
             </pre>
             
             Used in
             {@link Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes SubjectDirectoryAttributes}
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATAdditionalInformation">
            Some other information of non-restrictive nature regarding the usage of
            this certificate. May be used as attribute in atribute certificate or as
            extension in a certificate.
            
            <pre>
                          AdditionalInformationSyntax ::= DirectoryString (SIZE(1..2048))
            </pre>
            
            @see Org.BouncyCastle.Asn1.IsisMtt.X509.AdditionalInformationSyntax
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.IsisMttObjectIdentifiers.IdIsisMttATLiabilityLimitationFlag">
             Indicates that an attribute certificate exists, which limits the
             usability of this public key certificate. Whenever verifying a signature
             with the help of this certificate, the content of the corresponding
             attribute certificate should be concerned. This extension MUST be
             included in a PKC, if a corresponding attribute certificate (having the
             PKC as base certificate) contains some attribute that restricts the
             usability of the PKC too. Attribute certificates with restricting content
             MUST always be included in the signed document.
             
             <pre>
            		LiabilityLimitationFlagSyntax ::= BOOLEAN
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash">
            ISIS-MTT PROFILE: The responder may include this extension in a response to
            send the hash of the requested certificate to the responder. This hash is
            cryptographically bound to the certificate and serves as evidence that the
            certificate is known to the responder (i.e. it has been issued and is present
            in the directory). Hence, this extension is a means to provide a positive
            statement of availability as described in T8.[8]. As explained in T13.[1],
            clients may rely on this information to be able to validate signatures after
            the expiry of the corresponding certificate. Hence, clients MUST support this
            extension. If a positive statement of availability is to be delivered, this
            extension syntax and OID MUST be used.
            <p/>
            <p/>
            <pre>
                CertHash ::= SEQUENCE {
                  hashAlgorithm AlgorithmIdentifier,
                  certificateHash OCTET STRING
                }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             The sequence is of type CertHash:
             <p/>
             <pre>
                 CertHash ::= SEQUENCE {
                   hashAlgorithm AlgorithmIdentifier,
                   certificateHash OCTET STRING
                 }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash.#ctor(Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier,System.Byte[])">
             Constructor from a given details.
            
             @param hashAlgorithm   The hash algorithm identifier.
             @param certificateHash The hash of the whole DER encoding of the certificate.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.Ocsp.CertHash.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                 CertHash ::= SEQUENCE {
                   hashAlgorithm AlgorithmIdentifier,
                   certificateHash OCTET STRING
                 }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate">
            ISIS-MTT-Optional: The certificate requested by the client by inserting the
            RetrieveIfAllowed extension in the request, will be returned in this
            extension.
            <p/>
            ISIS-MTT-SigG: The signature act allows publishing certificates only then,
            when the certificate owner gives his isExplicit permission. Accordingly, there
            may be �nondownloadable� certificates, about which the responder must provide
            status information, but MUST NOT include them in the response. Clients may
            get therefore the following three kind of answers on a single request
            including the RetrieveIfAllowed extension:
            <ul>
            <li> a) the responder supports the extension and is allowed to publish the
            certificate: RequestedCertificate returned including the requested
            certificate</li>
            <li>b) the responder supports the extension but is NOT allowed to publish
            the certificate: RequestedCertificate returned including an empty OCTET
            STRING</li>
            <li>c) the responder does not support the extension: RequestedCertificate is
            not included in the response</li>
            </ul>
            Clients requesting RetrieveIfAllowed MUST be able to handle these cases. If
            any of the OCTET STRING options is used, it MUST contain the DER encoding of
            the requested certificate.
            <p/>
            <pre>
                       RequestedCertificate ::= CHOICE {
                         Certificate Certificate,
                         publicKeyCertificate [0] EXPLICIT OCTET STRING,
                         attributeCertificate [1] EXPLICIT OCTET STRING
                       }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate.#ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure)">
             Constructor from a given details.
             <p/>
             Only one parameter can be given. All other must be <code>null</code>.
            
             @param certificate Given as Certificate
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.Ocsp.RequestedCertificate.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                        RequestedCertificate ::= CHOICE {
                          Certificate Certificate,
                          publicKeyCertificate [0] EXPLICIT OCTET STRING,
                          attributeCertificate [1] EXPLICIT OCTET STRING
                        }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.AdditionalInformationSyntax">
            Some other information of non-restrictive nature regarding the usage of this
            certificate.
            
            <pre>
               AdditionalInformationSyntax ::= DirectoryString (SIZE(1..2048))
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.AdditionalInformationSyntax.#ctor(System.String)">
             Constructor from a given details.
            
             @param information The describtion of the information.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.AdditionalInformationSyntax.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
               AdditionalInformationSyntax ::= DirectoryString (SIZE(1..2048))
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions">
             An Admissions structure.
             <p/>
             <pre>
                        Admissions ::= SEQUENCE
                        {
                          admissionAuthority [0] EXPLICIT GeneralName OPTIONAL
                          namingAuthority [1] EXPLICIT NamingAuthority OPTIONAL
                          professionInfos SEQUENCE OF ProfessionInfo
                        }
             <p/>
             </pre>
            
             @see Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax
             @see Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo
             @see Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             The sequence is of type ProcurationSyntax:
             <p/>
             <pre>
                        Admissions ::= SEQUENCE
                        {
                          admissionAuthority [0] EXPLICIT GeneralName OPTIONAL
                          namingAuthority [1] EXPLICIT NamingAuthority OPTIONAL
                          professionInfos SEQUENCE OF ProfessionInfo
                        }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions.#ctor(Org.BouncyCastle.Asn1.X509.GeneralName,Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority,Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo[])">
             Constructor from a given details.
             <p/>
             Parameter <code>professionInfos</code> is mandatory.
            
             @param admissionAuthority The admission authority.
             @param namingAuthority    The naming authority.
             @param professionInfos    The profession infos.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                   Admissions ::= SEQUENCE
                   {
                     admissionAuthority [0] EXPLICIT GeneralName OPTIONAL
                     namingAuthority [1] EXPLICIT NamingAuthority OPTIONAL
                     professionInfos SEQUENCE OF ProfessionInfo
                   }
             <p/>
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax">
             Attribute to indicate admissions to certain professions.
             <p/>
             <pre>
                 AdmissionSyntax ::= SEQUENCE
                 {
                   admissionAuthority GeneralName OPTIONAL,
                   contentsOfAdmissions SEQUENCE OF Admissions
                 }
             <p/>
                 Admissions ::= SEQUENCE
                 {
                   admissionAuthority [0] EXPLICIT GeneralName OPTIONAL
                   namingAuthority [1] EXPLICIT NamingAuthority OPTIONAL
                   professionInfos SEQUENCE OF ProfessionInfo
                 }
             <p/>
                 NamingAuthority ::= SEQUENCE
                 {
                   namingAuthorityId OBJECT IDENTIFIER OPTIONAL,
                   namingAuthorityUrl IA5String OPTIONAL,
                   namingAuthorityText DirectoryString(SIZE(1..128)) OPTIONAL
                 }
             <p/>
                 ProfessionInfo ::= SEQUENCE
                 {
                   namingAuthority [0] EXPLICIT NamingAuthority OPTIONAL,
                   professionItems SEQUENCE OF DirectoryString (SIZE(1..128)),
                   professionOIDs SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
                   registrationNumber PrintableString(SIZE(1..128)) OPTIONAL,
                   addProfessionInfo OCTET STRING OPTIONAL
                 }
             </pre>
             <p/>
             <p/>
             ISIS-MTT PROFILE: The relatively complex structure of AdmissionSyntax
             supports the following concepts and requirements:
             <ul>
             <li> External institutions (e.g. professional associations, chambers, unions,
             administrative bodies, companies, etc.), which are responsible for granting
             and verifying professional admissions, are indicated by means of the data
             field admissionAuthority. An admission authority is indicated by a
             GeneralName object. Here an X.501 directory name (distinguished name) can be
             indicated in the field directoryName, a URL address can be indicated in the
             field uniformResourceIdentifier, and an object identifier can be indicated in
             the field registeredId.</li>
             <li> The names of authorities which are responsible for the administration of
             title registers are indicated in the data field namingAuthority. The name of
             the authority can be identified by an object identifier in the field
             namingAuthorityId, by means of a text string in the field
             namingAuthorityText, by means of a URL address in the field
             namingAuthorityUrl, or by a combination of them. For example, the text string
             can contain the name of the authority, the country and the name of the title
             register. The URL-option refers to a web page which contains lists with
             officially registered professions (text and possibly OID) as well as
             further information on these professions. Object identifiers for the
             component namingAuthorityId are grouped under the OID-branch
             id-isis-at-namingAuthorities and must be applied for.</li>
             <li>See http://www.teletrust.de/anwend.asp?Id=30200&amp;Sprache=E_&amp;HomePG=0
             for an application form and http://www.teletrust.de/links.asp?id=30220,11
             for an overview of registered naming authorities.</li>
             <li> By means of the data type ProfessionInfo certain professions,
             specializations, disciplines, fields of activity, etc. are identified. A
             profession is represented by one or more text strings, resp. profession OIDs
             in the fields professionItems and professionOIDs and by a registration number
             in the field registrationNumber. An indication in text form must always be
             present, whereas the other indications are optional. The component
             addProfessionInfo may contain additional applicationspecific information in
             DER-encoded form.</li>
             </ul>
             <p/>
             By means of different namingAuthority-OIDs or profession OIDs hierarchies of
             professions, specializations, disciplines, fields of activity, etc. can be
             expressed. The issuing admission authority should always be indicated (field
             admissionAuthority), whenever a registration number is presented. Still,
             information on admissions can be given without indicating an admission or a
             naming authority by the exclusive use of the component professionItems. In
             this case the certification authority is responsible for the verification of
             the admission information.
             <p/>
             <p/>
             <p/>
             This attribute is single-valued. Still, several admissions can be captured in
             the sequence structure of the component contentsOfAdmissions of
             AdmissionSyntax or in the component professionInfos of Admissions. The
             component admissionAuthority of AdmissionSyntax serves as default value for
             the component admissionAuthority of Admissions. Within the latter component
             the default value can be overwritten, in case that another authority is
             responsible. The component namingAuthority of Admissions serves as a default
             value for the component namingAuthority of ProfessionInfo. Within the latter
             component the default value can be overwritten, in case that another naming
             authority needs to be recorded.
             <p/>
             The length of the string objects is limited to 128 characters. It is
             recommended to indicate a namingAuthorityURL in all issued attribute
             certificates. If a namingAuthorityURL is indicated, the field professionItems
             of ProfessionInfo should contain only registered titles. If the field
             professionOIDs exists, it has to contain the OIDs of the professions listed
             in professionItems in the same order. In general, the field professionInfos
             should contain only one entry, unless the admissions that are to be listed
             are logically connected (e.g. they have been issued under the same admission
             number).
            
             @see Org.BouncyCastle.Asn1.IsisMtt.X509.Admissions
             @see Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo
             @see Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             The sequence is of type ProcurationSyntax:
             <p/>
             <pre>
                 AdmissionSyntax ::= SEQUENCE
                 {
                   admissionAuthority GeneralName OPTIONAL,
                   contentsOfAdmissions SEQUENCE OF Admissions
                 }
             <p/>
                 Admissions ::= SEQUENCE
                 {
                   admissionAuthority [0] EXPLICIT GeneralName OPTIONAL
                   namingAuthority [1] EXPLICIT NamingAuthority OPTIONAL
                   professionInfos SEQUENCE OF ProfessionInfo
                 }
             <p/>
                 NamingAuthority ::= SEQUENCE
                 {
                   namingAuthorityId OBJECT IDENTIFIER OPTIONAL,
                   namingAuthorityUrl IA5String OPTIONAL,
                   namingAuthorityText DirectoryString(SIZE(1..128)) OPTIONAL
                 }
             <p/>
                 ProfessionInfo ::= SEQUENCE
                 {
                   namingAuthority [0] EXPLICIT NamingAuthority OPTIONAL,
                   professionItems SEQUENCE OF DirectoryString (SIZE(1..128)),
                   professionOIDs SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
                   registrationNumber PrintableString(SIZE(1..128)) OPTIONAL,
                   addProfessionInfo OCTET STRING OPTIONAL
                 }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax.#ctor(Org.BouncyCastle.Asn1.X509.GeneralName,Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from given details.
            
             @param admissionAuthority   The admission authority.
             @param contentsOfAdmissions The admissions.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                 AdmissionSyntax ::= SEQUENCE
                 {
                   admissionAuthority GeneralName OPTIONAL,
                   contentsOfAdmissions SEQUENCE OF Admissions
                 }
             <p/>
                 Admissions ::= SEQUENCE
                 {
                   admissionAuthority [0] EXPLICIT GeneralName OPTIONAL
                   namingAuthority [1] EXPLICIT NamingAuthority OPTIONAL
                   professionInfos SEQUENCE OF ProfessionInfo
                 }
             <p/>
                 NamingAuthority ::= SEQUENCE
                 {
                   namingAuthorityId OBJECT IDENTIFIER OPTIONAL,
                   namingAuthorityUrl IA5String OPTIONAL,
                   namingAuthorityText DirectoryString(SIZE(1..128)) OPTIONAL
                 }
             <p/>
                 ProfessionInfo ::= SEQUENCE
                 {
                   namingAuthority [0] EXPLICIT NamingAuthority OPTIONAL,
                   professionItems SEQUENCE OF DirectoryString (SIZE(1..128)),
                   professionOIDs SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
                   registrationNumber PrintableString(SIZE(1..128)) OPTIONAL,
                   addProfessionInfo OCTET STRING OPTIONAL
                 }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax.GetContentsOfAdmissions">
            @return Returns the contentsOfAdmissions.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax.AdmissionAuthority">
            @return Returns the admissionAuthority if present, null otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority">
            A declaration of majority.
            <p/>
            <pre>
                      DeclarationOfMajoritySyntax ::= CHOICE
                      {
                        notYoungerThan [0] IMPLICIT INTEGER,
                        fullAgeAtCountry [1] IMPLICIT SEQUENCE
                        {
                          fullAge BOOLEAN DEFAULT TRUE,
                          country PrintableString (SIZE(2))
                        }
                        dateOfBirth [2] IMPLICIT GeneralizedTime
                      }
            </pre>
            <p/>
            fullAgeAtCountry indicates the majority of the owner with respect to the laws
            of a specific country.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                       DeclarationOfMajoritySyntax ::= CHOICE
                       {
                         notYoungerThan [0] IMPLICIT INTEGER,
                         fullAgeAtCountry [1] IMPLICIT SEQUENCE
                         {
                           fullAge BOOLEAN DEFAULT TRUE,
                           country PrintableString (SIZE(2))
                         }
                         dateOfBirth [2] IMPLICIT GeneralizedTime
                       }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.DeclarationOfMajority.NotYoungerThan">
            @return notYoungerThan if that's what we are, -1 otherwise
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.MonetaryLimit">
            Monetary limit for transactions. The QcEuMonetaryLimit QC statement MUST be
            used in new certificates in place of the extension/attribute MonetaryLimit
            since January 1, 2004. For the sake of backward compatibility with
            certificates already in use, components SHOULD support MonetaryLimit (as well
            as QcEuLimitValue).
            <p/>
            Indicates a monetary limit within which the certificate holder is authorized
            to act. (This value DOES NOT express a limit on the liability of the
            certification authority).
            <p/>
            <pre>
               MonetaryLimitSyntax ::= SEQUENCE
               {
                 currency PrintableString (SIZE(3)),
                 amount INTEGER,
                 exponent INTEGER
               }
            </pre>
            <p/>
            currency must be the ISO code.
            <p/>
            value = amount�10*exponent
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.MonetaryLimit.#ctor(System.String,System.Int32,System.Int32)">
             Constructor from a given details.
             <p/>
             <p/>
             value = amount�10^exponent
            
             @param currency The currency. Must be the ISO code.
             @param amount   The amount
             @param exponent The exponent
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.MonetaryLimit.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                MonetaryLimitSyntax ::= SEQUENCE
                {
                  currency PrintableString (SIZE(3)),
                  amount INTEGER,
                  exponent INTEGER
                }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority">
            Names of authorities which are responsible for the administration of title
            registers.
            
            <pre>
                        NamingAuthority ::= SEQUENCE 
                        {
                          namingAuthorityID OBJECT IDENTIFIER OPTIONAL,
                          namingAuthorityUrl IA5String OPTIONAL,
                          namingAuthorityText DirectoryString(SIZE(1..128)) OPTIONAL
                        }
            </pre>
            @see Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax
            
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority.IdIsisMttATNamingAuthoritiesRechtWirtschaftSteuern">
            Profession OIDs should always be defined under the OID branch of the
            responsible naming authority. At the time of this writing, the work group
            �Recht, Wirtschaft, Steuern� (�Law, Economy, Taxes�) is registered as the
            first naming authority under the OID id-isismtt-at-namingAuthorities.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             <p/>
             <pre>
                         NamingAuthority ::= SEQUENCE
                         {
                           namingAuthorityID OBJECT IDENTIFIER OPTIONAL,
                           namingAuthorityUrl IA5String OPTIONAL,
                           namingAuthorityText DirectoryString(SIZE(1..128)) OPTIONAL
                         }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.String,Org.BouncyCastle.Asn1.X500.DirectoryString)">
             Constructor from given details.
             <p/>
             All parameters can be combined.
            
             @param namingAuthorityID   ObjectIdentifier for naming authority.
             @param namingAuthorityUrl  URL for naming authority.
             @param namingAuthorityText Textual representation of naming authority.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                         NamingAuthority ::= SEQUENCE
                         {
                           namingAuthorityID OBJECT IDENTIFIER OPTIONAL,
                           namingAuthorityUrl IA5String OPTIONAL,
                           namingAuthorityText DirectoryString(SIZE(1..128)) OPTIONAL
                         }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority.NamingAuthorityID">
            @return Returns the namingAuthorityID.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority.NamingAuthorityText">
            @return Returns the namingAuthorityText.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority.NamingAuthorityUrl">
            @return Returns the namingAuthorityUrl.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax">
            Attribute to indicate that the certificate holder may sign in the name of a
            third person.
            <p>
            ISIS-MTT PROFILE: The corresponding ProcurationSyntax contains either the
            name of the person who is represented (subcomponent thirdPerson) or a
            reference to his/her base certificate (in the component signingFor,
            subcomponent certRef), furthermore the optional components country and
            typeSubstitution to indicate the country whose laws apply, and respectively
            the type of procuration (e.g. manager, procuration, custody).
            </p>
            <p>
            ISIS-MTT PROFILE: The GeneralName MUST be of type directoryName and MAY only
            contain: - RFC3039 attributes, except pseudonym (countryName, commonName,
            surname, givenName, serialNumber, organizationName, organizationalUnitName,
            stateOrProvincename, localityName, postalAddress) and - SubjectDirectoryName
            attributes (title, dateOfBirth, placeOfBirth, gender, countryOfCitizenship,
            countryOfResidence and NameAtBirth).
            </p>
            <pre>
                          ProcurationSyntax ::= SEQUENCE {
                            country [1] EXPLICIT PrintableString(SIZE(2)) OPTIONAL,
                            typeOfSubstitution [2] EXPLICIT DirectoryString (SIZE(1..128)) OPTIONAL,
                            signingFor [3] EXPLICIT SigningFor 
                          }
                          
                          SigningFor ::= CHOICE 
                          { 
                            thirdPerson GeneralName,
                            certRef IssuerSerial 
                          }
            </pre>
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             The sequence is of type ProcurationSyntax:
             <p/>
             <pre>
                           ProcurationSyntax ::= SEQUENCE {
                             country [1] EXPLICIT PrintableString(SIZE(2)) OPTIONAL,
                             typeOfSubstitution [2] EXPLICIT DirectoryString (SIZE(1..128)) OPTIONAL,
                             signingFor [3] EXPLICIT SigningFor
                           }
             <p/>
                           SigningFor ::= CHOICE
                           {
                             thirdPerson GeneralName,
                             certRef IssuerSerial
                           }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax.#ctor(System.String,Org.BouncyCastle.Asn1.X500.DirectoryString,Org.BouncyCastle.Asn1.X509.IssuerSerial)">
             Constructor from a given details.
             <p/>
             <p/>
             Either <code>generalName</code> or <code>certRef</code> MUST be
             <code>null</code>.
            
             @param country            The country code whose laws apply.
             @param typeOfSubstitution The type of procuration.
             @param certRef            Reference to certificate of the person who is represented.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax.#ctor(System.String,Org.BouncyCastle.Asn1.X500.DirectoryString,Org.BouncyCastle.Asn1.X509.GeneralName)">
             Constructor from a given details.
             <p/>
             <p/>
             Either <code>generalName</code> or <code>certRef</code> MUST be
             <code>null</code>.
            
             @param country            The country code whose laws apply.
             @param typeOfSubstitution The type of procuration.
             @param thirdPerson        The GeneralName of the person who is represented.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProcurationSyntax.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                           ProcurationSyntax ::= SEQUENCE {
                             country [1] EXPLICIT PrintableString(SIZE(2)) OPTIONAL,
                             typeOfSubstitution [2] EXPLICIT DirectoryString (SIZE(1..128)) OPTIONAL,
                             signingFor [3] EXPLICIT SigningFor
                           }
             <p/>
                           SigningFor ::= CHOICE
                           {
                             thirdPerson GeneralName,
                             certRef IssuerSerial
                           }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo">
            Professions, specializations, disciplines, fields of activity, etc.
            
            <pre>
                          ProfessionInfo ::= SEQUENCE 
                          {
                            namingAuthority [0] EXPLICIT NamingAuthority OPTIONAL,
                            professionItems SEQUENCE OF DirectoryString (SIZE(1..128)),
                            professionOids SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
                            registrationNumber PrintableString(SIZE(1..128)) OPTIONAL,
                            addProfessionInfo OCTET STRING OPTIONAL 
                          }
            </pre>
            
            @see Org.BouncyCastle.Asn1.IsisMtt.X509.AdmissionSyntax
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Rechtsanwltin">
            Rechtsanw�ltin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Rechtsanwalt">
            Rechtsanwalt
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Rechtsbeistand">
            Rechtsbeistand
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Steuerberaterin">
            Steuerberaterin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Steuerberater">
            Steuerberater
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Steuerbevollmchtigte">
            Steuerbevollm�chtigte
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Steuerbevollmchtigter">
            Steuerbevollm�chtigter
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Notarin">
            Notarin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Notar">
            Notar
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Notarvertreterin">
            Notarvertreterin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Notarvertreter">
            Notarvertreter
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Notariatsverwalterin">
            Notariatsverwalterin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Notariatsverwalter">
            Notariatsverwalter
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Wirtschaftsprferin">
            Wirtschaftspr�ferin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Wirtschaftsprfer">
            Wirtschaftspr�fer
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.VereidigteBuchprferin">
            Vereidigte Buchpr�ferin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.VereidigterBuchprfer">
            Vereidigter Buchpr�fer
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Patentanwltin">
            Patentanw�ltin
        </member>
        <member name="F:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.Patentanwalt">
            Patentanwalt
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             <p/>
             <pre>
                           ProfessionInfo ::= SEQUENCE
                           {
                             namingAuthority [0] EXPLICIT NamingAuthority OPTIONAL,
                             professionItems SEQUENCE OF DirectoryString (SIZE(1..128)),
                             professionOids SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
                             registrationNumber PrintableString(SIZE(1..128)) OPTIONAL,
                             addProfessionInfo OCTET STRING OPTIONAL
                           }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.#ctor(Org.BouncyCastle.Asn1.IsisMtt.X509.NamingAuthority,Org.BouncyCastle.Asn1.X500.DirectoryString[],Org.BouncyCastle.Asn1.DerObjectIdentifier[],System.String,Org.BouncyCastle.Asn1.Asn1OctetString)">
             Constructor from given details.
             <p/>
             <code>professionItems</code> is mandatory, all other parameters are
             optional.
            
             @param namingAuthority    The naming authority.
             @param professionItems    Directory strings of the profession.
             @param professionOids     DERObjectIdentfier objects for the
                                       profession.
             @param registrationNumber Registration number.
             @param addProfessionInfo  Additional infos in encoded form.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                           ProfessionInfo ::= SEQUENCE
                           {
                             namingAuthority [0] EXPLICIT NamingAuthority OPTIONAL,
                             professionItems SEQUENCE OF DirectoryString (SIZE(1..128)),
                             professionOids SEQUENCE OF OBJECT IDENTIFIER OPTIONAL,
                             registrationNumber PrintableString(SIZE(1..128)) OPTIONAL,
                             addProfessionInfo OCTET STRING OPTIONAL
                           }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.GetProfessionItems">
            @return Returns the professionItems.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.GetProfessionOids">
            @return Returns the professionOids.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.AddProfessionInfo">
            @return Returns the addProfessionInfo.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.NamingAuthority">
            @return Returns the namingAuthority.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.IsisMtt.X509.ProfessionInfo.RegistrationNumber">
            @return Returns the registrationNumber.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction">
            Some other restriction regarding the usage of this certificate.
            <p/>
            <pre>
             RestrictionSyntax ::= DirectoryString (SIZE(1..1024))
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction.#ctor(Org.BouncyCastle.Asn1.X500.DirectoryString)">
             Constructor from DirectoryString.
             <p/>
             The DirectoryString is of type RestrictionSyntax:
             <p/>
             <pre>
                  RestrictionSyntax ::= DirectoryString (SIZE(1..1024))
             </pre>
            
             @param restriction A IAsn1String.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction.#ctor(System.String)">
             Constructor from a given details.
            
             @param restriction The description of the restriction.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.IsisMtt.X509.Restriction.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                  RestrictionSyntax ::= DirectoryString (SIZE(1..1024))
             <p/>
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Misc.Cast5CbcParameters.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            cast5CBCParameters ::= Sequence {
                                      iv         OCTET STRING DEFAULT 0,
                                             -- Initialization vector
                                      keyLength  Integer
                                             -- Key length, in bits
                                 }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Misc.IdeaCbcPar.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            IDEA-CBCPar ::= Sequence {
                                 iv    OCTET STRING OPTIONAL -- exactly 8 octets
                             }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Misc.NetscapeCertType">
            The NetscapeCertType object.
            <pre>
               NetscapeCertType ::= BIT STRING {
                    SSLClient               (0),
                    SSLServer               (1),
                    S/MIME                  (2),
                    Object Signing          (3),
                    Reserved                (4),
                    SSL CA                  (5),
                    S/MIME CA               (6),
                    Object Signing CA       (7) }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Misc.NetscapeCertType.#ctor(System.Int32)">
             Basic constructor.
            
             @param usage - the bitwise OR of the Key Usage flags giving the
             allowed uses for the key.
             e.g. (X509NetscapeCertType.sslCA | X509NetscapeCertType.smimeCA)
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Mozilla.PublicKeyAndChallenge">
             This is designed to parse
             the PublicKeyAndChallenge created by the KEYGEN tag included by
             Mozilla based browsers.
              <pre>
              PublicKeyAndChallenge ::= SEQUENCE {
                spki SubjectPublicKeyInfo,
                challenge IA5STRING
              }
            
              </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Nist.NistNamedCurves">
            Utility class for fetching curves using their NIST names as published in FIPS-PUB 186-3
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Nist.NistNamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the X9ECParameters object for the named curve represented by
             the passed in object identifier. Null if the curve isn't present.
            
             @param oid an object identifier representing a named curve, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Nist.NistNamedCurves.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Nist.NistNamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Nist.NistNamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdDsaWithSha3_224">
            2.16.840.1.101.3.4.3.5 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdDsaWithSha3_256">
            2.16.840.1.101.3.4.3.6 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdDsaWithSha3_384">
            2.16.840.1.101.3.4.3.7 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdDsaWithSha3_512">
            2.16.840.1.101.3.4.3.8 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdEcdsaWithSha3_224">
            2.16.840.1.101.3.4.3.9 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdEcdsaWithSha3_256">
            2.16.840.1.101.3.4.3.10 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdEcdsaWithSha3_384">
            2.16.840.1.101.3.4.3.11 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdEcdsaWithSha3_512">
            2.16.840.1.101.3.4.3.12 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdRsassaPkcs1V15WithSha3_224">
            2.16.840.1.101.3.4.3.9 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdRsassaPkcs1V15WithSha3_256">
            2.16.840.1.101.3.4.3.10 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdRsassaPkcs1V15WithSha3_384">
            2.16.840.1.101.3.4.3.11 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Nist.NistObjectIdentifiers.IdRsassaPkcs1V15WithSha3_512">
            2.16.840.1.101.3.4.3.12 
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Ntt.NttObjectIdentifiers">
            <summary>From RFC 3657</summary>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.BasicOcspResponse.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            BasicOcspResponse       ::= Sequence {
                 tbsResponseData      ResponseData,
                 signatureAlgorithm   AlgorithmIdentifier,
                 signature            BIT STRING,
                 certs                [0] EXPLICIT Sequence OF Certificate OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.CertID.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            CertID          ::=     Sequence {
                hashAlgorithm       AlgorithmIdentifier,
                issuerNameHash      OCTET STRING, -- Hash of Issuer's DN
                issuerKeyHash       OCTET STRING, -- Hash of Issuers public key
                serialNumber        CertificateSerialNumber }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.CertStatus.#ctor">
            create a CertStatus object with a tag of zero.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.CertStatus.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             CertStatus ::= CHOICE {
                             good        [0]     IMPLICIT Null,
                             revoked     [1]     IMPLICIT RevokedInfo,
                             unknown     [2]     IMPLICIT UnknownInfo }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.CrlID.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            CrlID ::= Sequence {
                crlUrl               [0]     EXPLICIT IA5String OPTIONAL,
                crlNum               [1]     EXPLICIT Integer OPTIONAL,
                crlTime              [2]     EXPLICIT GeneralizedTime OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.OcspRequest.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            OcspRequest     ::=     Sequence {
                tbsRequest                  TBSRequest,
                optionalSignature   [0]     EXPLICIT Signature OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.OcspResponse.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            OcspResponse ::= Sequence {
                responseStatus         OcspResponseStatus,
                responseBytes          [0] EXPLICIT ResponseBytes OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.OcspResponseStatus.#ctor(System.Int32)">
            The OcspResponseStatus enumeration.
            <pre>
            OcspResponseStatus ::= Enumerated {
                successful            (0),  --Response has valid confirmations
                malformedRequest      (1),  --Illegal confirmation request
                internalError         (2),  --Internal error in issuer
                tryLater              (3),  --Try again later
                                            --(4) is not used
                sigRequired           (5),  --Must sign the request
                unauthorized          (6)   --Request unauthorized
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.Request.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Request         ::=     Sequence {
                reqCert                     CertID,
                singleRequestExtensions     [0] EXPLICIT Extensions OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.ResponderID.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            ResponderID ::= CHOICE {
                 byName          [1] Name,
                 byKey           [2] KeyHash }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.ResponseBytes.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            ResponseBytes ::=       Sequence {
                responseType   OBJECT IDENTIFIER,
                response       OCTET STRING }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.ResponseData.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            ResponseData ::= Sequence {
                version              [0] EXPLICIT Version DEFAULT v1,
                responderID              ResponderID,
                producedAt               GeneralizedTime,
                responses                Sequence OF SingleResponse,
                responseExtensions   [1] EXPLICIT Extensions OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.RevokedInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            RevokedInfo ::= Sequence {
                 revocationTime              GeneralizedTime,
                 revocationReason    [0]     EXPLICIT CRLReason OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.ServiceLocator.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            ServiceLocator ::= Sequence {
                issuer    Name,
                locator   AuthorityInfoAccessSyntax OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.Signature.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Signature       ::=     Sequence {
                signatureAlgorithm      AlgorithmIdentifier,
                signature               BIT STRING,
                certs               [0] EXPLICIT Sequence OF Certificate OPTIONAL}
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.SingleResponse.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             SingleResponse ::= Sequence {
                     certID                       CertID,
                     certStatus                   CertStatus,
                     thisUpdate                   GeneralizedTime,
                     nextUpdate         [0]       EXPLICIT GeneralizedTime OPTIONAL,
                     singleExtensions   [1]       EXPLICIT Extensions OPTIONAL }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Ocsp.TbsRequest.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            TBSRequest      ::=     Sequence {
                version             [0]     EXPLICIT Version DEFAULT v1,
                requestorName       [1]     EXPLICIT GeneralName OPTIONAL,
                requestList                 Sequence OF Request,
                requestExtensions   [2]     EXPLICIT Extensions OPTIONAL }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.OidTokenizer">
            class for breaking up an Oid into it's component tokens, ala
            java.util.StringTokenizer. We need this class as some of the
            lightweight Java environment don't support classes like
            StringTokenizer.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.AttributePkcs.GetInstance(System.Object)">
             return an Attribute object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.AttributePkcs.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Attr ::= Sequence {
                attrType OBJECT IDENTIFIER,
                attrValues Set OF AttributeValue
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Pkcs.CertificationRequest">
            Pkcs10 Certfication request object.
            <pre>
            CertificationRequest ::= Sequence {
              certificationRequestInfo  CertificationRequestInfo,
              signatureAlgorithm        AlgorithmIdentifier{{ SignatureAlgorithms }},
              signature                 BIT STRING
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Pkcs.CertificationRequestInfo">
             Pkcs10 CertificationRequestInfo object.
             <pre>
              CertificationRequestInfo ::= Sequence {
               version             Integer { v1(0) } (v1,...),
               subject             Name,
               subjectPKInfo   SubjectPublicKeyInfo{{ PKInfoAlgorithms }},
               attributes          [0] Attributes{{ CRIAttributes }}
              }
            
              Attributes { ATTRIBUTE:IOSet } ::= Set OF Attr{{ IOSet }}
            
              Attr { ATTRIBUTE:IOSet } ::= Sequence {
                type    ATTRIBUTE.&amp;id({IOSet}),
                values  Set SIZE(1..MAX) OF ATTRIBUTE.&amp;Type({IOSet}{\@type})
              }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.ContentInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            ContentInfo ::= Sequence {
                     contentType ContentType,
                     content
                     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Pkcs.EncryptedData">
             The EncryptedData object.
             <pre>
                  EncryptedData ::= Sequence {
                       version Version,
                       encryptedContentInfo EncryptedContentInfo
                  }
            
            
                  EncryptedContentInfo ::= Sequence {
                      contentType ContentType,
                      contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,
                      encryptedContent [0] IMPLICIT EncryptedContent OPTIONAL
                }
            
                EncryptedContent ::= OCTET STRING
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.EncryptedPrivateKeyInfo.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
             EncryptedPrivateKeyInfo ::= Sequence {
                  encryptionAlgorithm AlgorithmIdentifier {{KeyEncryptionAlgorithms}},
                  encryptedData EncryptedData
             }
            
             EncryptedData ::= OCTET STRING
            
             KeyEncryptionAlgorithms ALGORITHM-IDENTIFIER ::= {
                      ... -- For local profiles
             }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
                 AlgorithmIdentifier ::= Sequence {
                                       algorithm OBJECT IDENTIFIER,
                                       parameters ANY DEFINED BY algorithm OPTIONAL }
            </pre>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier.Algorithm">
            <summary>
            Return the OID in the Algorithm entry of this identifier.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier.Parameters">
            <summary>
            Return the parameters structure in the Parameters entry of this identifier.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.MacData.ToAsn1Object">
            <pre>
            MacData ::= SEQUENCE {
                mac      DigestInfo,
                macSalt  OCTET STRING,
                iterations INTEGER DEFAULT 1
                -- Note: The default is for historic reasons and its use is deprecated. A
                -- higher value, like 1024 is recommended.
            </pre>
            @return the basic DERObject construction.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Pkcs.Pfx">
            the infamous Pfx from Pkcs12
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.Sha512_224WithRSAEncryption">
            PKCS#1: 1.2.840.113549.1.1.15 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.Sha512_256WithRSAEncryption">
            PKCS#1: 1.2.840.113549.1.1.16 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.IdAlgAeadChaCha20Poly1305">
             <pre>
             id-alg-AEADChaCha20Poly1305 OBJECT IDENTIFIER ::=
             { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
                pkcs9(9) smime(16) alg(3) 18 }
            
             AEADChaCha20Poly1305Nonce ::= OCTET STRING (SIZE(12))
             </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.IdAADecryptKeyID">
            PKCS#9: 1.2.840.113549.1.9.16.2.37 - <a href="https://tools.ietf.org/html/rfc4108#section-2.2.5">RFC 4108</a> 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.IdAAImplCryptoAlgs">
            PKCS#9: 1.2.840.113549.1.9.16.2.38 - <a href="https://tools.ietf.org/html/rfc4108#section-2.2.6">RFC 4108</a> 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.IdAAAsymmDecryptKeyID">
            PKCS#9: 1.2.840.113549.1.9.16.2.54 <a href="https://tools.ietf.org/html/rfc7030">RFC7030</a>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.IdAAImplCompressAlgs">
            PKCS#9: 1.2.840.113549.1.9.16.2.43   <a href="https://tools.ietf.org/html/rfc7030">RFC7030</a>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Pkcs.PkcsObjectIdentifiers.IdAACommunityIdentifiers">
            PKCS#9: 1.2.840.113549.1.9.16.2.40   <a href="https://tools.ietf.org/html/rfc7030">RFC7030</a>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo">
              RFC 5958
            
              <pre>
              [IMPLICIT TAGS]
            
              OneAsymmetricKey ::= SEQUENCE {
                  version                   Version,
                  privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,
                  privateKey                PrivateKey,
                  attributes            [0] Attributes OPTIONAL,
                  ...,
                  [[2: publicKey        [1] PublicKey OPTIONAL ]],
                  ...
              }
            
              PrivateKeyInfo ::= OneAsymmetricKey
            
              Version ::= INTEGER { v1(0), v2(1) } (v1, ..., v2)
            
              PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier
                                                 { PUBLIC-KEY,
                                                   { PrivateKeyAlgorithms } }
            
              PrivateKey ::= OCTET STRING
                                 -- Content varies based on type of key.  The
                                 -- algorithm identifier dictates the format of
                                 -- the key.
            
              PublicKey ::= BIT STRING
                                 -- Content varies based on type of key.  The
                                 -- algorithm identifier dictates the format of
                                 -- the key.
            
              Attributes ::= SET OF Attribute { { OneAsymmetricKeyAttributes } }
              </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo.ParsePublicKey">
            <summary>For when the public key is an ASN.1 encoding.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo.HasPublicKey">
            <summary>Return true if a public key is present, false otherwise.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo.PublicKeyData">
            <summary>Return the public key as a raw bit string.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.RsaesOaepParameters.#ctor">
            The default version
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.RsaesOaepParameters.ToAsn1Object">
             <pre>
              RSAES-OAEP-params ::= SEQUENCE {
                 hashAlgorithm      [0] OAEP-PSSDigestAlgorithms     DEFAULT sha1,
                 maskGenAlgorithm   [1] PKCS1MGFAlgorithms  DEFAULT mgf1SHA1,
                 pSourceAlgorithm   [2] PKCS1PSourceAlgorithms  DEFAULT pSpecifiedEmpty
               }
            
               OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {
                 { OID id-sha1 PARAMETERS NULL   }|
                 { OID id-sha256 PARAMETERS NULL }|
                 { OID id-sha384 PARAMETERS NULL }|
                 { OID id-sha512 PARAMETERS NULL },
                 ...  -- Allows for future expansion --
               }
               PKCS1MGFAlgorithms    ALGORITHM-IDENTIFIER ::= {
                 { OID id-mgf1 PARAMETERS OAEP-PSSDigestAlgorithms },
                ...  -- Allows for future expansion --
               }
               PKCS1PSourceAlgorithms    ALGORITHM-IDENTIFIER ::= {
                 { OID id-pSpecified PARAMETERS OCTET STRING },
                 ...  -- Allows for future expansion --
              }
             </pre>
             @return the asn1 primitive representing the parameters.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.RsaPrivateKeyStructure.ToAsn1Object">
             This outputs the key in Pkcs1v2 format.
             <pre>
                  RsaPrivateKey ::= Sequence {
                                      version Version,
                                      modulus Integer, -- n
                                      publicExponent Integer, -- e
                                      privateExponent Integer, -- d
                                      prime1 Integer, -- p
                                      prime2 Integer, -- q
                                      exponent1 Integer, -- d mod (p-1)
                                      exponent2 Integer, -- d mod (q-1)
                                      coefficient Integer -- (inverse of q) mod p
                                  }
            
                  Version ::= Integer
             </pre>
             <p>This routine is written to output Pkcs1 version 0, private keys.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.RsassaPssParameters.#ctor">
            The default version
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.RsassaPssParameters.ToAsn1Object">
             <pre>
             RSASSA-PSS-params ::= SEQUENCE {
               hashAlgorithm      [0] OAEP-PSSDigestAlgorithms  DEFAULT sha1,
                maskGenAlgorithm   [1] PKCS1MGFAlgorithms  DEFAULT mgf1SHA1,
                saltLength         [2] INTEGER  DEFAULT 20,
                trailerField       [3] TrailerField  DEFAULT trailerFieldBC
              }
            
             OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {
                { OID id-sha1 PARAMETERS NULL   }|
                { OID id-sha256 PARAMETERS NULL }|
                { OID id-sha384 PARAMETERS NULL }|
                { OID id-sha512 PARAMETERS NULL },
                ...  -- Allows for future expansion --
             }
            
             PKCS1MGFAlgorithms    ALGORITHM-IDENTIFIER ::= {
               { OID id-mgf1 PARAMETERS OAEP-PSSDigestAlgorithms },
                ...  -- Allows for future expansion --
             }
            
             TrailerField ::= INTEGER { trailerFieldBC(1) }
             </pre>
             @return the asn1 primitive representing the parameters.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Pkcs.SignedData">
            a Pkcs#7 signed data object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.SignedData.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             SignedData ::= Sequence {
                 version Version,
                 digestAlgorithms DigestAlgorithmIdentifiers,
                 contentInfo ContentInfo,
                 certificates
                     [0] IMPLICIT ExtendedCertificatesAndCertificates
                              OPTIONAL,
                 crls
                     [1] IMPLICIT CertificateRevocationLists OPTIONAL,
                 signerInfos SignerInfos }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Pkcs.SignerInfo">
            a Pkcs#7 signer info object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Pkcs.SignerInfo.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
              SignerInfo ::= Sequence {
                  version Version,
                  issuerAndSerialNumber IssuerAndSerialNumber,
                  digestAlgorithm DigestAlgorithmIdentifier,
                  authenticatedAttributes [0] IMPLICIT Attributes OPTIONAL,
                  digestEncryptionAlgorithm DigestEncryptionAlgorithmIdentifier,
                  encryptedDigest EncryptedDigest,
                  unauthenticatedAttributes [1] IMPLICIT Attributes OPTIONAL
              }
            
              EncryptedDigest ::= OCTET STRING
            
              DigestAlgorithmIdentifier ::= AlgorithmIdentifier
            
              DigestEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Sec.ECPrivateKeyStructure">
            the elliptic curve private key object from SEC 1
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Sec.ECPrivateKeyStructure.ToAsn1Object">
            ECPrivateKey ::= SEQUENCE {
                version INTEGER { ecPrivkeyVer1(1) } (ecPrivkeyVer1),
                privateKey OCTET STRING,
                parameters [0] Parameters OPTIONAL,
                publicKey [1] BIT STRING OPTIONAL }
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Sec.SecNamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the X9ECParameters object for the named curve represented by
             the passed in object identifier. Null if the curve isn't present.
            
             @param oid an object identifier representing a named curve, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Sec.SecNamedCurves.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Sec.SecNamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.Sec.SecNamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Sec.SecObjectIdentifiers.EllipticCurve">
            EllipticCurve OBJECT IDENTIFIER ::= {
                  iso(1) identified-organization(3) certicom(132) curve(0)
            }
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Smime.SmimeCapabilities">
            Handler class for dealing with S/MIME Capabilities
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Smime.SmimeCapabilities.PreferSignedData">
            general preferences
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Smime.SmimeCapabilities.Aes256Cbc">
            encryption algorithms preferences
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Smime.SmimeCapabilities.GetInstance(System.Object)">
             return an Attr object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Smime.SmimeCapabilities.GetCapabilitiesForOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            returns an ArrayList with 0 or more objects of all the capabilities
            matching the passed in capability Oid. If the Oid passed is null the
            entire set is returned.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Smime.SmimeCapabilities.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            SMIMECapabilities ::= Sequence OF SMIMECapability
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttributeX509.GetInstance(System.Object)">
             return an Attr object from the given object.
            
             @param o the object we want converted.
             @exception ArgumentException if the object cannot be converted.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttributeX509.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Attr ::= Sequence {
                attrType OBJECT IDENTIFIER,
                attrValues Set OF AttributeValue
            }
            </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Smime.SmimeCapability.PreferSignedData">
            general preferences
        </member>
        <member name="F:Org.BouncyCastle.Asn1.Smime.SmimeCapability.DesCbc">
            encryption algorithms preferences
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Smime.SmimeCapability.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            SMIMECapability ::= Sequence {
                capabilityID OBJECT IDENTIFIER,
                parameters ANY DEFINED BY capabilityID OPTIONAL
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Smime.SmimeCapabilityVector">
            Handler for creating a vector S/MIME Capabilities
        </member>
        <member name="T:Org.BouncyCastle.Asn1.Smime.SmimeEncryptionKeyPreferenceAttribute">
            The SmimeEncryptionKeyPreference object.
            <pre>
            SmimeEncryptionKeyPreference ::= CHOICE {
                issuerAndSerialNumber   [0] IssuerAndSerialNumber,
                receipentKeyId          [1] RecipientKeyIdentifier,
                subjectAltKeyIdentifier [2] SubjectKeyIdentifier
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Smime.SmimeEncryptionKeyPreferenceAttribute.#ctor(Org.BouncyCastle.Asn1.Asn1OctetString)">
            @param sKeyId the subjectKeyIdentifier value (normally the X.509 one)
        </member>
        <member name="T:Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves">
            elliptic curves defined in "ECC Brainpool Standard Curves and Curve Generation"
            http://www.ecc-brainpool.org/download/draft_pkix_additional_ecc_dp.txt
        </member>
        <member name="M:Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the X9ECParameters object for the named curve represented by
             the passed in object identifier. Null if the curve isn't present.
            
             @param oid an object identifier representing a named curve, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.TeleTrust.TeleTrusTNamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Tsp.Accuracy.ToAsn1Object">
            <pre>
            Accuracy ::= SEQUENCE {
                        seconds        INTEGER              OPTIONAL,
                        millis     [0] INTEGER  (1..999)    OPTIONAL,
                        micros     [1] INTEGER  (1..999)    OPTIONAL
                        }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Tsp.MessageImprint.ToAsn1Object">
            <pre>
               MessageImprint ::= SEQUENCE  {
                  hashAlgorithm                AlgorithmIdentifier,
                  hashedMessage                OCTET STRING  }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Tsp.TimeStampReq.ToAsn1Object">
            <pre>
            TimeStampReq ::= SEQUENCE  {
             version                      INTEGER  { v1(1) },
             messageImprint               MessageImprint,
               --a hash algorithm OID and the hash value of the data to be
               --time-stamped
             reqPolicy             TSAPolicyId              OPTIONAL,
             nonce                 INTEGER                  OPTIONAL,
             certReq               BOOLEAN                  DEFAULT FALSE,
             extensions            [0] IMPLICIT Extensions  OPTIONAL
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Tsp.TimeStampResp.ToAsn1Object">
            <pre>
            TimeStampResp ::= SEQUENCE  {
              status                  PkiStatusInfo,
              timeStampToken          TimeStampToken     OPTIONAL  }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Tsp.TstInfo.ToAsn1Object">
             <pre>
            
                 TstInfo ::= SEQUENCE  {
                    version                      INTEGER  { v1(1) },
                    policy                       TSAPolicyId,
                    messageImprint               MessageImprint,
                      -- MUST have the same value as the similar field in
                      -- TimeStampReq
                    serialNumber                 INTEGER,
                     -- Time-Stamping users MUST be ready to accommodate integers
                     -- up to 160 bits.
                    genTime                      GeneralizedTime,
                    accuracy                     Accuracy                 OPTIONAL,
                    ordering                     BOOLEAN             DEFAULT FALSE,
                    nonce                        INTEGER                  OPTIONAL,
                      -- MUST be present if the similar field was present
                      -- in TimeStampReq.  In that case it MUST have the same value.
                    tsa                          [0] GeneralName          OPTIONAL,
                    extensions                   [1] IMPLICIT Extensions   OPTIONAL  }
            
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers">
            Ukrainian object identifiers
            <p>
            {iso(1) member-body(2) Ukraine(804) root(2) security(1) cryptography(1) pki(1)}
            </p>
            <p>
            { ...  pki-alg(1) pki-alg-sym(3) Dstu4145WithGost34311(1) PB(1)}
            </p>
            <p>
            DSTU4145 in polynomial basis has 2 oids, one for little-endian representation and one for big-endian
            </p>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.UaOid">
            Base OID: 1.2.804.2.1.1.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu4145le">
            DSTU4145 Little Endian presentation.  OID: 1.2.804.2.1.1.1.1.3.1.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu4145be">
            DSTU4145 Big Endian presentation.  OID: 1.2.804.2.1.1.1.1.3.1.1.1 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7564digest_256">
            DSTU7564 256-bit digest presentation. 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7564digest_384">
            DSTU7564 384-bit digest presentation. 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7564digest_512">
            DSTU7564 512-bit digest presentation. 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7564mac_256">
            DSTU7564 256-bit mac presentation. 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7564mac_384">
            DSTU7564 384-bit mac presentation. 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7564mac_512">
            DSTU7564 512-bit mac presentation. 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ecb_128">
            DSTU7624 in ECB mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ecb_256">
            DSTU7624 in ECB mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ecb_512">
            DSTU7624 in ECB mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ctr_128">
            DSTU7624 in CTR mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ctr_256">
            DSTU7624 in CTR mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ctr_512">
            DSTU7624 in CTR mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cfb_128">
            DSTU7624 in CFB mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cfb_256">
            DSTU7624 in CFB mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cfb_512">
            DSTU7624 in CFB mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cmac_128">
            DSTU7624 in MAC mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cmac_256">
            DSTU7624 in MAC mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cmac_512">
            DSTU7624 in MAC mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cbc_128">
            DSTU7624 in CBC mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cbc_256">
            DSTU7624 in CBC mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624cbc_512">
            DSTU7624 in CBC mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ofb_128">
            DSTU7624 in OFB mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ofb_256">
            DSTU7624 in OFB mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ofb_512">
            DSTU7624 in OFB mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624gmac_128">
            DSTU7624 in GMAC (GCM witout encryption) mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624gmac_256">
            DSTU7624 in GMAC (GCM witout encryption) mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624gmac_512">
            DSTU7624 in GMAC (GCM witout encryption) mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ccm_128">
            DSTU7624 in CCM mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ccm_256">
            DSTU7624 in CCM mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624ccm_512">
            DSTU7624 in CCM mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624xts_128">
            DSTU7624 in XTS mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624xts_256">
            DSTU7624 in XTS mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624xts_512">
            DSTU7624 in XTS mode with 512 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624kw_128">
            DSTU7624 in key wrap (KW) mode with 128 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624kw_256">
            DSTU7624 in key wrap (KW) mode with 256 bit block/key presentation 
        </member>
        <member name="F:Org.BouncyCastle.Asn1.UA.UAObjectIdentifiers.dstu7624kw_512">
            DSTU7624 in key wrap (KW) mode with 512 bit block/key presentation 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Utilities.Asn1Dump.AsString(System.String,System.Boolean,Org.BouncyCastle.Asn1.Asn1Object,System.Text.StringBuilder)">
             dump a Der object as a formatted string with indentation
            
             @param obj the Asn1Object to be dumped out.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Utilities.Asn1Dump.DumpAsString(Org.BouncyCastle.Asn1.Asn1Encodable)">
             dump out a DER object as a formatted string, in non-verbose mode
            
             @param obj the Asn1Encodable to be dumped out.
             @return  the resulting string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.Utilities.Asn1Dump.DumpAsString(Org.BouncyCastle.Asn1.Asn1Encodable,System.Boolean)">
             Dump out the object as a string
            
             @param obj the Asn1Encodable to be dumped out.
             @param verbose  if true, dump out the contents of octet and bit strings.
             @return  the resulting string.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X500.AttributeTypeAndValue">
            Holding class for the AttributeTypeAndValue structures that make up an RDN.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X500.AttributeTypeAndValue.ToAsn1Object">
            <pre>
            AttributeTypeAndValue ::= SEQUENCE {
                      type         OBJECT IDENTIFIER,
                      value        ANY DEFINED BY type }
            </pre>
            @return a basic ASN.1 object representation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X500.DirectoryString.ToAsn1Object">
            <pre>
             DirectoryString ::= CHOICE {
               teletexString               TeletexString (SIZE (1..MAX)),
               printableString             PrintableString (SIZE (1..MAX)),
               universalString             UniversalString (SIZE (1..MAX)),
               utf8String                  UTF8String (SIZE (1..MAX)),
               bmpString                   BMPString (SIZE (1..MAX))  }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X500.Rdn">
            Holding class for a single Relative Distinguished Name (RDN).
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X500.Rdn.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.Asn1Encodable)">
             Create a single valued RDN.
            
             @param oid RDN type.
             @param value RDN value.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X500.Rdn.#ctor(Org.BouncyCastle.Asn1.X500.AttributeTypeAndValue[])">
             Create a multi-valued RDN.
            
             @param aAndVs attribute type/value pairs making up the RDN
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X500.Rdn.ToAsn1Object">
                     * <pre>
                     * RelativeDistinguishedName ::=
                     *                     SET OF AttributeTypeAndValue
            
                     * AttributeTypeAndValue ::= SEQUENCE {
                     *        type     AttributeType,
                     *        value    AttributeValue }
                     * </pre>
                     * @return this object as its ASN1Primitive type
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X500.Rdn.Count">
             Return the number of AttributeTypeAndValue objects in this RDN,
            
             @return size of RDN, greater than 1 if multi-valued.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.AccessDescription">
            The AccessDescription object.
            <pre>
            AccessDescription  ::=  SEQUENCE {
                  accessMethod          OBJECT IDENTIFIER,
                  accessLocation        GeneralName  }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AccessDescription.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.X509.GeneralName)">
            create an AccessDescription with the oid and location provided.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.AccessDescription.AccessMethod">
            
             @return the access method.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.AccessDescription.AccessLocation">
            
             @return the access location
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttCertIssuer.#ctor(Org.BouncyCastle.Asn1.X509.GeneralNames)">
            <summary>
            Don't use this one if you are trying to be RFC 3281 compliant.
            Use it for v1 attribute certificates only.
            </summary>
            <param name="names">Our GeneralNames structure</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttCertIssuer.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             AttCertIssuer ::= CHOICE {
                  v1Form   GeneralNames,  -- MUST NOT be used in this
                                          -- profile
                  v2Form   [0] V2Form     -- v2 only
             }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttCertValidityPeriod.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             AttCertValidityPeriod  ::= Sequence {
                  notBeforeTime  GeneralizedTime,
                  notAfterTime   GeneralizedTime
             }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttributeCertificate.GetInstance(System.Object)">
            @param obj
            @return
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttributeCertificate.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             AttributeCertificate ::= Sequence {
                  acinfo               AttributeCertificateInfo,
                  signatureAlgorithm   AlgorithmIdentifier,
                  signatureValue       BIT STRING
             }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AttributeCertificateInfo.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <pre>
              AttributeCertificateInfo ::= Sequence {
                   version              AttCertVersion -- version is v2,
                   holder               Holder,
                   issuer               AttCertIssuer,
                   signature            AlgorithmIdentifier,
                   serialNumber         CertificateSerialNumber,
                   attrCertValidityPeriod   AttCertValidityPeriod,
                   attributes           Sequence OF Attr,
                   issuerUniqueID       UniqueIdentifier OPTIONAL,
                   extensions           Extensions OPTIONAL
              }
            
              AttCertVersion ::= Integer { v2(1) }
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.AuthorityInformationAccess">
             The AuthorityInformationAccess object.
             <pre>
             id-pe-authorityInfoAccess OBJECT IDENTIFIER ::= { id-pe 1 }
            
             AuthorityInfoAccessSyntax  ::=
                  Sequence SIZE (1..MAX) OF AccessDescription
             AccessDescription  ::=  Sequence {
                   accessMethod          OBJECT IDENTIFIER,
                   accessLocation        GeneralName  }
            
             id-ad OBJECT IDENTIFIER ::= { id-pkix 48 }
             id-ad-caIssuers OBJECT IDENTIFIER ::= { id-ad 2 }
             id-ad-ocsp OBJECT IDENTIFIER ::= { id-ad 1 }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AuthorityInformationAccess.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.X509.GeneralName)">
            create an AuthorityInformationAccess with the oid and location provided.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier">
             The AuthorityKeyIdentifier object.
             <pre>
             id-ce-authorityKeyIdentifier OBJECT IDENTIFIER ::=  { id-ce 35 }
            
               AuthorityKeyIdentifier ::= Sequence {
                  keyIdentifier             [0] IMPLICIT KeyIdentifier           OPTIONAL,
                  authorityCertIssuer       [1] IMPLICIT GeneralNames            OPTIONAL,
                  authorityCertSerialNumber [2] IMPLICIT CertificateSerialNumber OPTIONAL  }
            
               KeyIdentifier ::= OCTET STRING
             </pre>
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier.#ctor(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo)">
                     *
                     * Calulates the keyidentifier using a SHA1 hash over the BIT STRING
                     * from SubjectPublicKeyInfo as defined in RFC2459.
                     *
                     * Example of making a AuthorityKeyIdentifier:
                     * <pre>
            	     *   SubjectPublicKeyInfo apki = new SubjectPublicKeyInfo((ASN1Sequence)new ASN1InputStream(
            		 *       publicKey.getEncoded()).readObject());
                     *   AuthorityKeyIdentifier aki = new AuthorityKeyIdentifier(apki);
                     * </pre>
                     *
                     *
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier.#ctor(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo,Org.BouncyCastle.Asn1.X509.GeneralNames,Org.BouncyCastle.Math.BigInteger)">
            create an AuthorityKeyIdentifier with the GeneralNames tag and
            the serial number provided as well.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier.#ctor(Org.BouncyCastle.Asn1.X509.GeneralNames,Org.BouncyCastle.Math.BigInteger)">
            create an AuthorityKeyIdentifier with the GeneralNames tag and
            the serial number provided.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier.#ctor(System.Byte[])">
            create an AuthorityKeyIdentifier with a precomputed key identifier
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier.#ctor(System.Byte[],Org.BouncyCastle.Asn1.X509.GeneralNames,Org.BouncyCastle.Math.BigInteger)">
            create an AuthorityKeyIdentifier with a precomupted key identifier
            and the GeneralNames tag and the serial number provided as well.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.AuthorityKeyIdentifier.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.BasicConstraints.#ctor(System.Int32)">
             create a cA=true object for the given path length constraint.
            
             @param pathLenConstraint
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.BasicConstraints.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            BasicConstraints := Sequence {
               cA                  Boolean DEFAULT FALSE,
               pathLenConstraint   Integer (0..MAX) OPTIONAL
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.CertificateList">
             PKIX RFC-2459
            
             The X.509 v2 CRL syntax is as follows.  For signature calculation,
             the data that is to be signed is ASN.1 Der encoded.
            
             <pre>
             CertificateList  ::=  Sequence  {
                  tbsCertList          TbsCertList,
                  signatureAlgorithm   AlgorithmIdentifier,
                  signatureValue       BIT STRING  }
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.CertificatePair">
             This class helps to support crossCerfificatePairs in a LDAP directory
             according RFC 2587
            
             <pre>
                 crossCertificatePairATTRIBUTE::={
                   WITH SYNTAX   CertificatePair
                   EQUALITY MATCHING RULE certificatePairExactMatch
                   ID joint-iso-ccitt(2) ds(5) attributeType(4) crossCertificatePair(40)}
             </pre>
            
             <blockquote> The forward elements of the crossCertificatePair attribute of a
             CA's directory entry shall be used to store all, except self-issued
             certificates issued to this CA. Optionally, the reverse elements of the
             crossCertificatePair attribute, of a CA's directory entry may contain a
             subset of certificates issued by this CA to other CAs. When both the forward
             and the reverse elements are present in a single attribute value, issuer name
             in one certificate shall match the subject name in the other and vice versa,
             and the subject public key in one certificate shall be capable of verifying
             the digital signature on the other certificate and vice versa.
            
             When a reverse element is present, the forward element value and the reverse
             element value need not be stored in the same attribute value; in other words,
             they can be stored in either a single attribute value or two attribute
             values. </blockquote>
            
             <pre>
                   CertificatePair ::= SEQUENCE {
                     forward		[0]	Certificate OPTIONAL,
                     reverse		[1]	Certificate OPTIONAL,
                     -- at least one of the pair shall be present -- }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.CertificatePair.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             The sequence is of type CertificatePair:
             <p/>
             <pre>
                   CertificatePair ::= SEQUENCE {
                     forward		[0]	Certificate OPTIONAL,
                     reverse		[1]	Certificate OPTIONAL,
                     -- at least one of the pair shall be present -- }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.CertificatePair.#ctor(Org.BouncyCastle.Asn1.X509.X509CertificateStructure,Org.BouncyCastle.Asn1.X509.X509CertificateStructure)">
             Constructor from a given details.
            
             @param forward Certificates issued to this CA.
             @param reverse Certificates issued by this CA to other CAs.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.CertificatePair.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                   CertificatePair ::= SEQUENCE {
                     forward		[0]	Certificate OPTIONAL,
                     reverse		[1]	Certificate OPTIONAL,
                     -- at least one of the pair shall be present -- }
             </pre>
            
             @return a DERObject
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.CertificatePair.Forward">
            @return Returns the forward.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.CertificatePair.Reverse">
            @return Returns the reverse.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.CertificatePolicies.#ctor(Org.BouncyCastle.Asn1.X509.PolicyInformation)">
            Construct a CertificatePolicies object containing one PolicyInformation.
            
            @param name the name to be contained.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.CertificatePolicies.ToAsn1Object">
            Produce an object suitable for an ASN1OutputStream.
            <pre>
            CertificatePolicies ::= SEQUENCE SIZE {1..MAX} OF PolicyInformation
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.CertPolicyID">
             CertPolicyId, used in the CertificatePolicies and PolicyMappings
             X509V3 Extensions.
            
             <pre>
                 CertPolicyId ::= OBJECT IDENTIFIER
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.CrlDistPoint.GetDistributionPoints">
             Return the distribution points making up the sequence.
            
             @return DistributionPoint[]
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.CrlDistPoint.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            CrlDistPoint ::= Sequence SIZE {1..MAX} OF DistributionPoint
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.CrlNumber">
            The CRLNumber object.
            <pre>
            CRLNumber::= Integer(0..MAX)
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.CrlReason">
            The CRLReason enumeration.
            <pre>
            CRLReason ::= Enumerated {
             unspecified             (0),
             keyCompromise           (1),
             cACompromise            (2),
             affiliationChanged      (3),
             superseded              (4),
             cessationOfOperation    (5),
             certificateHold         (6),
             removeFromCRL           (8),
             privilegeWithdrawn      (9),
             aACompromise           (10)
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.DigestInfo">
            The DigestInfo object.
            <pre>
            DigestInfo::=Sequence{
                     digestAlgorithm  AlgorithmIdentifier,
                     digest OCTET STRING }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.DisplayText">
             <code>DisplayText</code> class, used in
             <code>CertificatePolicies</code> X509 V3 extensions (in policy qualifiers).
            
             <p>It stores a string in a chosen encoding.
             <pre>
             DisplayText ::= CHOICE {
                  ia5String        IA5String      (SIZE (1..200)),
                  visibleString    VisibleString  (SIZE (1..200)),
                  bmpString        BMPString      (SIZE (1..200)),
                  utf8String       UTF8String     (SIZE (1..200)) }
             </pre></p>
             @see PolicyQualifierInfo
             @see PolicyInformation
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.DisplayText.ContentTypeIA5String">
             Constant corresponding to ia5String encoding.
            
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.DisplayText.ContentTypeBmpString">
             Constant corresponding to bmpString encoding.
            
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.DisplayText.ContentTypeUtf8String">
             Constant corresponding to utf8String encoding.
            
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.DisplayText.ContentTypeVisibleString">
             Constant corresponding to visibleString encoding.
            
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.DisplayText.DisplayTextMaximumSize">
             Describe constant <code>DisplayTextMaximumSize</code> here.
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.DisplayText.#ctor(System.Int32,System.String)">
             Creates a new <code>DisplayText</code> instance.
            
             @param type the desired encoding type for the text.
             @param text the text to store. Strings longer than 200
             characters are truncated.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.DisplayText.#ctor(System.String)">
             Creates a new <code>DisplayText</code> instance.
            
             @param text the text to encapsulate. Strings longer than 200
             characters are truncated.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.DisplayText.#ctor(Org.BouncyCastle.Asn1.IAsn1String)">
             Creates a new <code>DisplayText</code> instance.
             <p>Useful when reading back a <code>DisplayText</code> class
             from it's Asn1Encodable form.</p>
            
             @param contents an <code>Asn1Encodable</code> instance.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.DisplayText.GetString">
             Returns the stored <code>string</code> object.
            
             @return the stored text as a <code>string</code>.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.DistributionPoint">
            The DistributionPoint object.
            <pre>
            DistributionPoint ::= Sequence {
                 distributionPoint [0] DistributionPointName OPTIONAL,
                 reasons           [1] ReasonFlags OPTIONAL,
                 cRLIssuer         [2] GeneralNames OPTIONAL
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.DistributionPointName">
            The DistributionPointName object.
            <pre>
            DistributionPointName ::= CHOICE {
                fullName                 [0] GeneralNames,
                nameRelativeToCRLIssuer  [1] RDN
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.ExtendedKeyUsage">
            The extendedKeyUsage object.
            <pre>
                 extendedKeyUsage ::= Sequence SIZE (1..MAX) OF KeyPurposeId
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.ExtendedKeyUsage.GetAllUsages">
            Returns all extended key usages.
            The returned ArrayList contains DerObjectIdentifier instances.
            @return An ArrayList with all key purposes.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.GeneralName">
             The GeneralName object.
             <pre>
             GeneralName ::= CHOICE {
                  otherName                       [0]     OtherName,
                  rfc822Name                      [1]     IA5String,
                  dNSName                         [2]     IA5String,
                  x400Address                     [3]     ORAddress,
                  directoryName                   [4]     Name,
                  ediPartyName                    [5]     EDIPartyName,
                  uniformResourceIdentifier       [6]     IA5String,
                  iPAddress                       [7]     OCTET STRING,
                  registeredID                    [8]     OBJECT IDENTIFIER}
            
             OtherName ::= Sequence {
                  type-id    OBJECT IDENTIFIER,
                  value      [0] EXPLICIT ANY DEFINED BY type-id }
            
             EDIPartyName ::= Sequence {
                  nameAssigner            [0]     DirectoryString OPTIONAL,
                  partyName               [1]     DirectoryString }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.GeneralName.#ctor(Org.BouncyCastle.Asn1.Asn1Object,System.Int32)">
             When the subjectAltName extension contains an Internet mail address,
             the address MUST be included as an rfc822Name. The format of an
             rfc822Name is an "addr-spec" as defined in RFC 822 [RFC 822].
            
             When the subjectAltName extension contains a domain name service
             label, the domain name MUST be stored in the dNSName (an IA5String).
             The name MUST be in the "preferred name syntax," as specified by RFC
             1034 [RFC 1034].
            
             When the subjectAltName extension contains a URI, the name MUST be
             stored in the uniformResourceIdentifier (an IA5String). The name MUST
             be a non-relative URL, and MUST follow the URL syntax and encoding
             rules specified in [RFC 1738].  The name must include both a scheme
             (e.g., "http" or "ftp") and a scheme-specific-part.  The scheme-
             specific-part must include a fully qualified domain name or IP
             address as the host.
            
             When the subjectAltName extension contains a iPAddress, the address
             MUST be stored in the octet string in "network byte order," as
             specified in RFC 791 [RFC 791]. The least significant bit (LSB) of
             each octet is the LSB of the corresponding byte in the network
             address. For IP Version 4, as specified in RFC 791, the octet string
             MUST contain exactly four octets.  For IP Version 6, as specified in
             RFC 1883, the octet string MUST contain exactly sixteen octets [RFC
             1883].
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.GeneralName.#ctor(System.Int32,System.String)">
             Create a GeneralName for the given tag from the passed in string.
             <p>
             This constructor can handle:
             <ul>
             <li>rfc822Name</li>
             <li>iPAddress</li>
             <li>directoryName</li>
             <li>dNSName</li>
             <li>uniformResourceIdentifier</li>
             <li>registeredID</li>
             </ul>
             For x400Address, otherName and ediPartyName there is no common string
             format defined.
             </p><p>
             Note: A directory name can be encoded in different ways into a byte
             representation. Be aware of this if the byte representation is used for
             comparing results.
             </p>
            
             @param tag tag number
             @param name string representation of name
             @throws ArgumentException if the string encoding is not correct or
                         not supported.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.GeneralNames.#ctor(Org.BouncyCastle.Asn1.X509.GeneralName)">
            <summary>Construct a GeneralNames object containing one GeneralName.</summary>
            <param name="name">The name to be contained.</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.GeneralNames.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            GeneralNames ::= Sequence SIZE {1..MAX} OF GeneralName
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.GeneralSubtree">
             Class for containing a restriction object subtrees in NameConstraints. See
             RFC 3280.
            
             <pre>
            
                   GeneralSubtree ::= SEQUENCE
                   {
                     baseName                    GeneralName,
                     minimum         [0]     BaseDistance DEFAULT 0,
                     maximum         [1]     BaseDistance OPTIONAL
                   }
             </pre>
            
             @see org.bouncycastle.asn1.x509.NameConstraints
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.GeneralSubtree.#ctor(Org.BouncyCastle.Asn1.X509.GeneralName,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
             Constructor from a given details.
            
             According RFC 3280, the minimum and maximum fields are not used with any
             name forms, thus minimum MUST be zero, and maximum MUST be absent.
             <p>
             If minimum is <code>null</code>, zero is assumed, if
             maximum is <code>null</code>, maximum is absent.</p>
            
             @param baseName
                        A restriction.
             @param minimum
                        Minimum
            
             @param maximum
                        Maximum
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.GeneralSubtree.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
            
             Returns:
            
             <pre>
                   GeneralSubtree ::= SEQUENCE
                   {
                     baseName                    GeneralName,
                     minimum         [0]     BaseDistance DEFAULT 0,
                     maximum         [1]     BaseDistance OPTIONAL
                   }
             </pre>
            
             @return a DERObject
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Holder">
            The Holder object.
            <p>
            For an v2 attribute certificate this is:
            
            <pre>
                       Holder ::= SEQUENCE {
                             baseCertificateID   [0] IssuerSerial OPTIONAL,
                                      -- the issuer and serial number of
                                      -- the holder's Public Key Certificate
                             entityName          [1] GeneralNames OPTIONAL,
                                      -- the name of the claimant or role
                             objectDigestInfo    [2] ObjectDigestInfo OPTIONAL
                                      -- used to directly authenticate the holder,
                                      -- for example, an executable
                       }
            </pre>
            </p>
            <p>
            For an v1 attribute certificate this is:
            
            <pre>
                    subject CHOICE {
                     baseCertificateID [0] IssuerSerial,
                     -- associated with a Public Key Certificate
                     subjectName [1] GeneralNames },
                     -- associated with a name
            </pre>
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Holder.#ctor(Org.BouncyCastle.Asn1.Asn1TaggedObject)">
            Constructor for a holder for an v1 attribute certificate.
            
            @param tagObj The ASN.1 tagged holder object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Holder.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Constructor for a holder for an v2 attribute certificate. *
            
            @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Holder.#ctor(Org.BouncyCastle.Asn1.X509.IssuerSerial,System.Int32)">
            Constructs a holder from a IssuerSerial.
            @param baseCertificateID The IssuerSerial.
            @param version The version of the attribute certificate. 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Holder.#ctor(Org.BouncyCastle.Asn1.X509.GeneralNames)">
            Constructs a holder with an entityName for v2 attribute certificates or
            with a subjectName for v1 attribute certificates.
            
            @param entityName The entity or subject name.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Holder.#ctor(Org.BouncyCastle.Asn1.X509.GeneralNames,System.Int32)">
            Constructs a holder with an entityName for v2 attribute certificates or
            with a subjectName for v1 attribute certificates.
            
            @param entityName The entity or subject name.
            @param version The version of the attribute certificate. 
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Holder.#ctor(Org.BouncyCastle.Asn1.X509.ObjectDigestInfo)">
            Constructs a holder from an object digest info.
            
            @param objectDigestInfo The object digest info object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Holder.ToAsn1Object">
            The Holder object.
            <pre>
             Holder ::= Sequence {
                   baseCertificateID   [0] IssuerSerial OPTIONAL,
                            -- the issuer and serial number of
                            -- the holder's Public Key Certificate
                   entityName          [1] GeneralNames OPTIONAL,
                            -- the name of the claimant or role
                   objectDigestInfo    [2] ObjectDigestInfo OPTIONAL
                            -- used to directly authenticate the holder,
                            -- for example, an executable
             }
            </pre>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.Holder.Version">
            Returns 1 for v2 attribute certificates or 0 for v1 attribute
            certificates. 
            @return The version of the attribute certificate.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.Holder.EntityName">
            Returns the entityName for an v2 attribute certificate or the subjectName
            for an v1 attribute certificate.
            
            @return The entityname or subjectname.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.IetfAttrSyntax">
            Implementation of <code>IetfAttrSyntax</code> as specified by RFC3281.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.IetfAttrSyntax.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.IetfAttrSyntax.ToAsn1Object">
            
             <pre>
            
              IetfAttrSyntax ::= Sequence {
                policyAuthority [0] GeneralNames OPTIONAL,
                values Sequence OF CHOICE {
                  octets OCTET STRING,
                  oid OBJECT IDENTIFIER,
                  string UTF8String
                }
              }
            
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.IssuerSerial.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             IssuerSerial  ::=  Sequence {
                  issuer         GeneralNames,
                  serial         CertificateSerialNumber,
                  issuerUid      UniqueIdentifier OPTIONAL
             }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint">
            <pre>
            IssuingDistributionPoint ::= SEQUENCE { 
              distributionPoint          [0] DistributionPointName OPTIONAL, 
              onlyContainsUserCerts      [1] BOOLEAN DEFAULT FALSE, 
              onlyContainsCACerts        [2] BOOLEAN DEFAULT FALSE, 
              onlySomeReasons            [3] ReasonFlags OPTIONAL, 
              indirectCRL                [4] BOOLEAN DEFAULT FALSE,
              onlyContainsAttributeCerts [5] BOOLEAN DEFAULT FALSE }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint.#ctor(Org.BouncyCastle.Asn1.X509.DistributionPointName,System.Boolean,System.Boolean,Org.BouncyCastle.Asn1.X509.ReasonFlags,System.Boolean,System.Boolean)">
            Constructor from given details.
            
            @param distributionPoint
                       May contain an URI as pointer to most current CRL.
            @param onlyContainsUserCerts Covers revocation information for end certificates.
            @param onlyContainsCACerts Covers revocation information for CA certificates.
            
            @param onlySomeReasons
                       Which revocation reasons does this point cover.
            @param indirectCRL
                       If <code>true</code> then the CRL contains revocation
                       information about certificates ssued by other CAs.
            @param onlyContainsAttributeCerts Covers revocation information for attribute certificates.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Constructor from Asn1Sequence
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint.DistributionPoint">
            @return Returns the distributionPoint.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.IssuingDistributionPoint.OnlySomeReasons">
            @return Returns the onlySomeReasons.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.KeyPurposeID">
            The KeyPurposeID object.
            <pre>
                KeyPurposeID ::= OBJECT IDENTIFIER
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.KeyUsage">
             The KeyUsage object.
             <pre>
                id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }
            
                KeyUsage ::= BIT STRING {
                     digitalSignature        (0),
                     nonRepudiation          (1),
                     keyEncipherment         (2),
                     dataEncipherment        (3),
                     keyAgreement            (4),
                     keyCertSign             (5),
                     cRLSign                 (6),
                     encipherOnly            (7),
                     decipherOnly            (8) }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.KeyUsage.#ctor(System.Int32)">
             Basic constructor.
            
             @param usage - the bitwise OR of the Key Usage flags giving the
             allowed uses for the key.
             e.g. (KeyUsage.keyEncipherment | KeyUsage.dataEncipherment)
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.NameConstraints.#ctor(System.Collections.IList,System.Collections.IList)">
             Constructor from a given details.
            
             <p>permitted and excluded are Vectors of GeneralSubtree objects.</p>
            
             @param permitted Permitted subtrees
             @param excluded Excluded subtrees
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.NoticeReference">
             <code>NoticeReference</code> class, used in
             <code>CertificatePolicies</code> X509 V3 extensions
             (in policy qualifiers).
            
             <pre>
              NoticeReference ::= Sequence {
                  organization     DisplayText,
                  noticeNumbers    Sequence OF Integer }
            
             </pre>
            
             @see PolicyQualifierInfo
             @see PolicyInformation
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.NoticeReference.#ctor(System.String,System.Collections.IList)">
             Creates a new <code>NoticeReference</code> instance.
            
             @param organization a <code>String</code> value
             @param numbers a <code>Vector</code> value
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.NoticeReference.#ctor(System.String,Org.BouncyCastle.Asn1.Asn1EncodableVector)">
             Creates a new <code>NoticeReference</code> instance.
            
             @param organization a <code>String</code> value
             @param noticeNumbers an <code>ASN1EncodableVector</code> value
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.NoticeReference.#ctor(Org.BouncyCastle.Asn1.X509.DisplayText,Org.BouncyCastle.Asn1.Asn1EncodableVector)">
             Creates a new <code>NoticeReference</code> instance.
            
             @param organization displayText
             @param noticeNumbers an <code>ASN1EncodableVector</code> value
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.NoticeReference.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Creates a new <code>NoticeReference</code> instance.
             <p>Useful for reconstructing a <code>NoticeReference</code>
             instance from its encodable/encoded form.</p>
            
             @param as an <code>Asn1Sequence</code> value obtained from either
             calling @{link ToAsn1Object()} for a <code>NoticeReference</code>
             instance or from parsing it from a Der-encoded stream.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.NoticeReference.ToAsn1Object">
             Describe <code>ToAsn1Object</code> method here.
            
             @return a <code>Asn1Object</code> value
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.ObjectDigestInfo">
            ObjectDigestInfo ASN.1 structure used in v2 attribute certificates.
            
            <pre>
             
               ObjectDigestInfo ::= SEQUENCE {
                    digestedObjectType  ENUMERATED {
                            publicKey            (0),
                            publicKeyCert        (1),
                            otherObjectTypes     (2) },
                                    -- otherObjectTypes MUST NOT
                                    -- be used in this profile
                    otherObjectTypeID   OBJECT IDENTIFIER OPTIONAL,
                    digestAlgorithm     AlgorithmIdentifier,
                    objectDigest        BIT STRING
               }
              
            </pre>
            
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.ObjectDigestInfo.PublicKey">
            The public key is hashed.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.ObjectDigestInfo.PublicKeyCert">
            The public key certificate is hashed.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.ObjectDigestInfo.OtherObjectDigest">
            An other object is hashed.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.ObjectDigestInfo.#ctor(System.Int32,System.String,Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier,System.Byte[])">
            Constructor from given details.
            <p>
            If <code>digestedObjectType</code> is not {@link #publicKeyCert} or
            {@link #publicKey} <code>otherObjectTypeID</code> must be given,
            otherwise it is ignored.</p>
            
            @param digestedObjectType The digest object type.
            @param otherObjectTypeID The object type ID for
                       <code>otherObjectDigest</code>.
            @param digestAlgorithm The algorithm identifier for the hash.
            @param objectDigest The hash value.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.ObjectDigestInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            
            <pre>
             
               ObjectDigestInfo ::= SEQUENCE {
                    digestedObjectType  ENUMERATED {
                            publicKey            (0),
                            publicKeyCert        (1),
                            otherObjectTypes     (2) },
                                    -- otherObjectTypes MUST NOT
                                    -- be used in this profile
                    otherObjectTypeID   OBJECT IDENTIFIER OPTIONAL,
                    digestAlgorithm     AlgorithmIdentifier,
                    objectDigest        BIT STRING
               }
              
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.OtherName">
            The OtherName object.
            <pre>
            OtherName ::= SEQUENCE {
                 type-id    OBJECT IDENTIFIER,
                 value      [0] EXPLICIT ANY DEFINED BY type-id }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.OtherName.GetInstance(System.Object)">
            OtherName factory method.
            @param obj the object used to construct an instance of <code>
            OtherName</code>. It must be an instance of <code>OtherName
            </code> or <code>ASN1Sequence</code>.
            @return the instance of <code>OtherName</code> built from the
            supplied object.
            @throws java.lang.IllegalArgumentException if the object passed
            to the factory is not an instance of <code>OtherName</code> or something that
            can be converted into an appropriate <code>ASN1Sequence</code>.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.OtherName.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.Asn1Encodable)">
            Base constructor.
            @param typeID the type of the other name.
            @param value the ANY object that represents the value.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.PolicyMappings">
             PolicyMappings V3 extension, described in RFC3280.
             <pre>
                PolicyMappings ::= Sequence SIZE (1..MAX) OF Sequence {
                  issuerDomainPolicy      CertPolicyId,
                  subjectDomainPolicy     CertPolicyId }
             </pre>
            
             @see <a href="http://www.faqs.org/rfc/rfc3280.txt">RFC 3280, section 4.2.1.6</a>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.PolicyMappings.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Creates a new <code>PolicyMappings</code> instance.
            
             @param seq an <code>Asn1Sequence</code> constructed as specified
             in RFC 3280
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.PolicyMappings.#ctor(System.Collections.IDictionary)">
             Creates a new <code>PolicyMappings</code> instance.
            
             @param mappings a <code>HashMap</code> value that maps
             <code>string</code> oids
             to other <code>string</code> oids.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.PolicyQualifierID">
             PolicyQualifierId, used in the CertificatePolicies
             X509V3 extension.
            
             <pre>
                id-qt          OBJECT IDENTIFIER ::=  { id-pkix 2 }
                id-qt-cps      OBJECT IDENTIFIER ::=  { id-qt 1 }
                id-qt-unotice  OBJECT IDENTIFIER ::=  { id-qt 2 }
              PolicyQualifierId ::=
                   OBJECT IDENTIFIER ( id-qt-cps | id-qt-unotice )
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo">
             Policy qualifiers, used in the X509V3 CertificatePolicies
             extension.
            
             <pre>
               PolicyQualifierInfo ::= Sequence {
                   policyQualifierId  PolicyQualifierId,
                   qualifier          ANY DEFINED BY policyQualifierId }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo.#ctor(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Asn1.Asn1Encodable)">
             Creates a new <code>PolicyQualifierInfo</code> instance.
            
             @param policyQualifierId a <code>PolicyQualifierId</code> value
             @param qualifier the qualifier, defined by the above field.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo.#ctor(System.String)">
             Creates a new <code>PolicyQualifierInfo</code> containing a
             cPSuri qualifier.
            
             @param cps the CPS (certification practice statement) uri as a
             <code>string</code>.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Creates a new <code>PolicyQualifierInfo</code> instance.
            
             @param as <code>PolicyQualifierInfo</code> X509 structure
             encoded as an Asn1Sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.PolicyQualifierInfo.ToAsn1Object">
             Returns a Der-encodable representation of this instance.
            
             @return a <code>Asn1Object</code> value
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.PrivateKeyUsagePeriod">
            <remarks>
            <pre>
            PrivateKeyUsagePeriod ::= SEQUENCE
            {
            notBefore       [0]     GeneralizedTime OPTIONAL,
            notAfter        [1]     GeneralizedTime OPTIONAL }
            </pre>
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Qualified.BiometricData">
            The BiometricData object.
            <pre>
            BiometricData  ::=  SEQUENCE {
                  typeOfBiometricData  TypeOfBiometricData,
                  hashAlgorithm        AlgorithmIdentifier,
                  biometricDataHash    OCTET STRING,
                  sourceDataUri        IA5String OPTIONAL  }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Qualified.Iso4217CurrencyCode">
            The Iso4217CurrencyCode object.
            <pre>
            Iso4217CurrencyCode  ::=  CHOICE {
                  alphabetic              PrintableString (SIZE 3), --Recommended
                  numeric              INTEGER (1..999) }
            -- Alphabetic or numeric currency code as defined in ISO 4217
            -- It is recommended that the Alphabetic form is used
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Qualified.MonetaryValue">
            The MonetaryValue object.
            <pre>
            MonetaryValue  ::=  SEQUENCE {
                  currency              Iso4217CurrencyCode,
                  amount               INTEGER,
                  exponent             INTEGER }
            -- value = amount * 10^exponent
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Qualified.QCStatement">
            The QCStatement object.
            <pre>
            QCStatement ::= SEQUENCE {
              statementId        OBJECT IDENTIFIER,
              statementInfo      ANY DEFINED BY statementId OPTIONAL}
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Qualified.SemanticsInformation">
             The SemanticsInformation object.
             <pre>
                   SemanticsInformation ::= SEQUENCE {
                     semanticsIdentifier        OBJECT IDENTIFIER   OPTIONAL,
                     nameRegistrationAuthorities NameRegistrationAuthorities
                                                                     OPTIONAL }
                     (WITH COMPONENTS {..., semanticsIdentifier PRESENT}|
                      WITH COMPONENTS {..., nameRegistrationAuthorities PRESENT})
            
                 NameRegistrationAuthorities ::=  SEQUENCE SIZE (1..MAX) OF
                     GeneralName
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Qualified.TypeOfBiometricData">
             The TypeOfBiometricData object.
             <pre>
             TypeOfBiometricData ::= CHOICE {
               predefinedBiometricType   PredefinedBiometricType,
               biometricDataOid          OBJECT IDENTIFIER }
            
             PredefinedBiometricType ::= INTEGER {
               picture(0),handwritten-signature(1)}
               (picture|handwritten-signature)
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.ReasonFlags">
            The ReasonFlags object.
            <pre>
            ReasonFlags ::= BIT STRING {
               unused(0),
               keyCompromise(1),
               cACompromise(2),
               affiliationChanged(3),
               superseded(4),
               cessationOfOperation(5),
               certficateHold(6)
            }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.ReasonFlags.#ctor(System.Int32)">
            @param reasons - the bitwise OR of the Key Reason flags giving the
            allowed uses for the key.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.RoleSyntax">
             Implementation of the RoleSyntax object as specified by the RFC3281.
            
             <pre>
             RoleSyntax ::= SEQUENCE {
                             roleAuthority  [0] GeneralNames OPTIONAL,
                             roleName       [1] GeneralName
                       }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.GetInstance(System.Object)">
            RoleSyntax factory method.
            @param obj the object used to construct an instance of <code>
            RoleSyntax</code>. It must be an instance of <code>RoleSyntax
            </code> or <code>Asn1Sequence</code>.
            @return the instance of <code>RoleSyntax</code> built from the
            supplied object.
            @throws java.lang.ArgumentException if the object passed
            to the factory is not an instance of <code>RoleSyntax</code> or
            <code>Asn1Sequence</code>.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.#ctor(Org.BouncyCastle.Asn1.X509.GeneralNames,Org.BouncyCastle.Asn1.X509.GeneralName)">
            Constructor.
            @param roleAuthority the role authority of this RoleSyntax.
            @param roleName    the role name of this RoleSyntax.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.#ctor(Org.BouncyCastle.Asn1.X509.GeneralName)">
            Constructor. Invoking this constructor is the same as invoking
            <code>new RoleSyntax(null, roleName)</code>.
            @param roleName    the role name of this RoleSyntax.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.#ctor(System.String)">
            Utility constructor. Takes a <code>string</code> argument representing
            the role name, builds a <code>GeneralName</code> to hold the role name
            and calls the constructor that takes a <code>GeneralName</code>.
            @param roleName
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Constructor that builds an instance of <code>RoleSyntax</code> by
            extracting the encoded elements from the <code>Asn1Sequence</code>
            object supplied.
            @param seq    an instance of <code>Asn1Sequence</code> that holds
            the encoded elements used to build this <code>RoleSyntax</code>.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.GetRoleNameAsString">
            Gets the role name as a <code>java.lang.string</code> object.
            @return    the role name of this RoleSyntax represented as a
            <code>string</code> object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.GetRoleAuthorityAsString">
            Gets the role authority as a <code>string[]</code> object.
            @return the role authority of this RoleSyntax represented as a
            <code>string[]</code> array.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RoleSyntax.ToAsn1Object">
             Implementation of the method <code>ToAsn1Object</code> as
             required by the superclass <code>ASN1Encodable</code>.
            
             <pre>
             RoleSyntax ::= SEQUENCE {
                             roleAuthority  [0] GeneralNames OPTIONAL,
                             roleName       [1] GeneralName
                       }
             </pre>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.RoleSyntax.RoleAuthority">
            Gets the role authority of this RoleSyntax.
            @return    an instance of <code>GeneralNames</code> holding the
            role authority of this RoleSyntax.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.RoleSyntax.RoleName">
            Gets the role name of this RoleSyntax.
            @return    an instance of <code>GeneralName</code> holding the
            role name of this RoleSyntax.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.RsaPublicKeyStructure.ToAsn1Object">
            This outputs the key in Pkcs1v2 format.
            <pre>
                 RSAPublicKey ::= Sequence {
                                     modulus Integer, -- n
                                     publicExponent Integer, -- e
                                 }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym">
            Structure for a name or pseudonym.
            
            <pre>
                  NameOrPseudonym ::= CHOICE {
                	   surAndGivenName SEQUENCE {
                	     surName DirectoryString,
                	     givenName SEQUENCE OF DirectoryString 
                    },
                	   pseudonym DirectoryString 
                  }
            </pre>
            
            @see org.bouncycastle.asn1.x509.sigi.PersonalData
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym.#ctor(Org.BouncyCastle.Asn1.X500.DirectoryString)">
            Constructor from DERString.
            <p/>
            The sequence is of type NameOrPseudonym:
            <p/>
            <pre>
                  NameOrPseudonym ::= CHOICE {
                	   surAndGivenName SEQUENCE {
                	     surName DirectoryString,
                	     givenName SEQUENCE OF DirectoryString
                    },
                	   pseudonym DirectoryString
                  }
            </pre>
            @param pseudonym pseudonym value to use.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             The sequence is of type NameOrPseudonym:
             <p/>
             <pre>
                   NameOrPseudonym ::= CHOICE {
                 	   surAndGivenName SEQUENCE {
                 	     surName DirectoryString,
                 	     givenName SEQUENCE OF DirectoryString
                     },
                 	   pseudonym DirectoryString
                   }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym.#ctor(System.String)">
             Constructor from a given details.
            
             @param pseudonym The pseudonym.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym.#ctor(Org.BouncyCastle.Asn1.X500.DirectoryString,Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from a given details.
            
             @param surname   The surname.
             @param givenName A sequence of directory strings making up the givenName
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                   NameOrPseudonym ::= CHOICE {
                 	   surAndGivenName SEQUENCE {
                 	     surName DirectoryString,
                 	     givenName SEQUENCE OF DirectoryString
                     },
                 	   pseudonym DirectoryString
                   }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.SigI.PersonalData">
             Contains personal data for the otherName field in the subjectAltNames
             extension.
             <p/>
             <pre>
                 PersonalData ::= SEQUENCE {
                   nameOrPseudonym NameOrPseudonym,
                   nameDistinguisher [0] INTEGER OPTIONAL,
                   dateOfBirth [1] GeneralizedTime OPTIONAL,
                   placeOfBirth [2] DirectoryString OPTIONAL,
                   gender [3] PrintableString OPTIONAL,
                   postalAddress [4] DirectoryString OPTIONAL
                   }
             </pre>
            
             @see org.bouncycastle.asn1.x509.sigi.NameOrPseudonym
             @see org.bouncycastle.asn1.x509.sigi.SigIObjectIdentifiers
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.PersonalData.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
             <p/>
             The sequence is of type NameOrPseudonym:
             <p/>
             <pre>
                 PersonalData ::= SEQUENCE {
                   nameOrPseudonym NameOrPseudonym,
                   nameDistinguisher [0] INTEGER OPTIONAL,
                   dateOfBirth [1] GeneralizedTime OPTIONAL,
                   placeOfBirth [2] DirectoryString OPTIONAL,
                   gender [3] PrintableString OPTIONAL,
                   postalAddress [4] DirectoryString OPTIONAL
                   }
             </pre>
            
             @param seq The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.PersonalData.#ctor(Org.BouncyCastle.Asn1.X509.SigI.NameOrPseudonym,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Asn1.DerGeneralizedTime,Org.BouncyCastle.Asn1.X500.DirectoryString,System.String,Org.BouncyCastle.Asn1.X500.DirectoryString)">
             Constructor from a given details.
            
             @param nameOrPseudonym  Name or pseudonym.
             @param nameDistinguisher Name distinguisher.
             @param dateOfBirth      Date of birth.
             @param placeOfBirth     Place of birth.
             @param gender           Gender.
             @param postalAddress    Postal Address.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SigI.PersonalData.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
             <p/>
             Returns:
             <p/>
             <pre>
                 PersonalData ::= SEQUENCE {
                   nameOrPseudonym NameOrPseudonym,
                   nameDistinguisher [0] INTEGER OPTIONAL,
                   dateOfBirth [1] GeneralizedTime OPTIONAL,
                   placeOfBirth [2] DirectoryString OPTIONAL,
                   gender [3] PrintableString OPTIONAL,
                   postalAddress [4] DirectoryString OPTIONAL
                   }
             </pre>
            
             @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers">
            Object Identifiers of SigI specifciation (German Signature Law
            Interoperability specification).
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers.IdSigIKP">
            Key purpose IDs for German SigI (Signature Interoperability
            Specification)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers.IdSigICP">
            Certificate policy IDs for German SigI (Signature Interoperability
            Specification)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers.IdSigION">
            Other Name IDs for German SigI (Signature Interoperability Specification)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers.IdSigIKPDirectoryService">
            To be used for for the generation of directory service certificates.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers.IdSigIONPersonalData">
            ID for PersonalData
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.SigI.SigIObjectIdentifiers.IdSigICPSigConform">
            Certificate is conform to german signature law.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes">
             This extension may contain further X.500 attributes of the subject. See also
             RFC 3039.
            
             <pre>
                 SubjectDirectoryAttributes ::= Attributes
                 Attributes ::= SEQUENCE SIZE (1..MAX) OF Attribute
                 Attribute ::= SEQUENCE
                 {
                   type AttributeType
                   values SET OF AttributeValue
                 }
            
                 AttributeType ::= OBJECT IDENTIFIER
                 AttributeValue ::= ANY DEFINED BY AttributeType
             </pre>
            
             @see org.bouncycastle.asn1.x509.X509Name for AttributeType ObjectIdentifiers.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
            
             The sequence is of type SubjectDirectoryAttributes:
            
             <pre>
                  SubjectDirectoryAttributes ::= Attributes
                  Attributes ::= SEQUENCE SIZE (1..MAX) OF Attribute
                  Attribute ::= SEQUENCE
                  {
                    type AttributeType
                    values SET OF AttributeValue
                  }
            
                  AttributeType ::= OBJECT IDENTIFIER
                  AttributeValue ::= ANY DEFINED BY AttributeType
             </pre>
            
             @param seq
                        The ASN.1 sequence.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes.#ctor(System.Collections.IList)">
             Constructor from an ArrayList of attributes.
            
             The ArrayList consists of attributes of type {@link Attribute Attribute}
            
             @param attributes The attributes.
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes.ToAsn1Object">
             Produce an object suitable for an Asn1OutputStream.
            
             Returns:
            
             <pre>
                  SubjectDirectoryAttributes ::= Attributes
                  Attributes ::= SEQUENCE SIZE (1..MAX) OF Attribute
                  Attribute ::= SEQUENCE
                  {
                    type AttributeType
                    values SET OF AttributeValue
                  }
            
                  AttributeType ::= OBJECT IDENTIFIER
                  AttributeValue ::= ANY DEFINED BY AttributeType
             </pre>
            
             @return a DERObject
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.SubjectDirectoryAttributes.Attributes">
            @return Returns the attributes.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier">
            The SubjectKeyIdentifier object.
            <pre>
            SubjectKeyIdentifier::= OCTET STRING
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier.#ctor(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo)">
             Calculates the keyIdentifier using a SHA1 hash over the BIT STRING
             from SubjectPublicKeyInfo as defined in RFC3280.
            
             @param spki the subject public key info.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier.CreateSha1KeyIdentifier(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo)">
            Return a RFC 3280 type 1 key identifier. As in:
            <pre>
            (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the
            value of the BIT STRING subjectPublicKey (excluding the tag,
            length, and number of unused bits).
            </pre>
            @param keyInfo the key info object containing the subjectPublicKey field.
            @return the key identifier.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectKeyIdentifier.CreateTruncatedSha1KeyIdentifier(Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo)">
            Return a RFC 3280 type 2 key identifier. As in:
            <pre>
            (2) The keyIdentifier is composed of a four bit type field with
            the value 0100 followed by the least significant 60 bits of the
            SHA-1 hash of the value of the BIT STRING subjectPublicKey.
            </pre>
            @param keyInfo the key info object containing the subjectPublicKey field.
            @return the key identifier.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo">
            The object that contains the public key stored in a certficate.
            <p>
            The GetEncoded() method in the public keys in the JCE produces a DER
            encoded one of these.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo.ParsePublicKey">
             for when the public key is an encoded object - if the bitstring
             can't be decoded this routine raises an IOException.
            
             @exception IOException - if the bit string doesn't represent a Der
             encoded object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo.GetPublicKey">
             for when the public key is an encoded object - if the bitstring
             can't be decoded this routine raises an IOException.
            
             @exception IOException - if the bit string doesn't represent a Der
             encoded object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            SubjectPublicKeyInfo ::= Sequence {
                                     algorithm AlgorithmIdentifier,
                                     publicKey BIT STRING }
            </pre>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.SubjectPublicKeyInfo.PublicKeyData">
            for when the public key is raw bits...
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Target">
            Target structure used in target information extension for attribute
            certificates from RFC 3281.
            
            <pre>
                Target  ::= CHOICE {
                  targetName          [0] GeneralName,
                  targetGroup         [1] GeneralName,
                  targetCert          [2] TargetCert
                }
            </pre>
            
            <p>
            The targetCert field is currently not supported and must not be used
            according to RFC 3281.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Target.GetInstance(System.Object)">
            Creates an instance of a Target from the given object.
            <p>
            <code>obj</code> can be a Target or a {@link Asn1TaggedObject}</p>
            
            @param obj The object.
            @return A Target instance.
            @throws ArgumentException if the given object cannot be
                        interpreted as Target.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Target.#ctor(Org.BouncyCastle.Asn1.Asn1TaggedObject)">
            Constructor from Asn1TaggedObject.
            
            @param tagObj The tagged object.
            @throws ArgumentException if the encoding is wrong.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Target.#ctor(Org.BouncyCastle.Asn1.X509.Target.Choice,Org.BouncyCastle.Asn1.X509.GeneralName)">
             Constructor from given details.
             <p>
             Exactly one of the parameters must be not <code>null</code>.</p>
            
             @param type the choice type to apply to the name.
             @param name the general name.
             @throws ArgumentException if type is invalid.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Target.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            
            Returns:
            
            <pre>
                Target  ::= CHOICE {
                  targetName          [0] GeneralName,
                  targetGroup         [1] GeneralName,
                  targetCert          [2] TargetCert
                }
            </pre>
            
            @return an Asn1Object
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.Target.TargetGroup">
            @return Returns the targetGroup.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.Target.TargetName">
            @return Returns the targetName.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.TargetInformation">
            Target information extension for attributes certificates according to RFC
            3281.
            
            <pre>
                      SEQUENCE OF Targets
            </pre>
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.TargetInformation.GetInstance(System.Object)">
            Creates an instance of a TargetInformation from the given object.
            <p>
            <code>obj</code> can be a TargetInformation or a {@link Asn1Sequence}</p>
            
            @param obj The object.
            @return A TargetInformation instance.
            @throws ArgumentException if the given object cannot be interpreted as TargetInformation.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.TargetInformation.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Constructor from a Asn1Sequence.
            
            @param seq The Asn1Sequence.
            @throws ArgumentException if the sequence does not contain
                        correctly encoded Targets elements.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.TargetInformation.GetTargetsObjects">
            Returns the targets in this target information extension.
            <p>
            The ArrayList is cloned before it is returned.</p>
            
            @return Returns the targets.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.TargetInformation.#ctor(Org.BouncyCastle.Asn1.X509.Targets)">
            Constructs a target information from a single targets element. 
            According to RFC 3281 only one targets element must be produced.
            
            @param targets A Targets instance.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.TargetInformation.#ctor(Org.BouncyCastle.Asn1.X509.Target[])">
             According to RFC 3281 only one targets element must be produced. If
             multiple targets are given they must be merged in
             into one targets element.
            
             @param targets An array with {@link Targets}.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.TargetInformation.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            
            Returns:
            
            <pre>
                     SEQUENCE OF Targets
            </pre>
            
            <p>
            According to RFC 3281 only one targets element must be produced. If
            multiple targets are given in the constructor they are merged into one
            targets element. If this was produced from a
            {@link Org.BouncyCastle.Asn1.Asn1Sequence} the encoding is kept.</p>
            
            @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.Targets">
            Targets structure used in target information extension for attribute
            certificates from RFC 3281.
            
            <pre>
                       Targets ::= SEQUENCE OF Target
                      
                       Target  ::= CHOICE {
                         targetName          [0] GeneralName,
                         targetGroup         [1] GeneralName,
                         targetCert          [2] TargetCert
                       }
                      
                       TargetCert  ::= SEQUENCE {
                         targetCertificate    IssuerSerial,
                         targetName           GeneralName OPTIONAL,
                         certDigestInfo       ObjectDigestInfo OPTIONAL
                       }
            </pre>
            
            @see org.bouncycastle.asn1.x509.Target
            @see org.bouncycastle.asn1.x509.TargetInformation
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Targets.GetInstance(System.Object)">
            Creates an instance of a Targets from the given object.
            <p>
            <code>obj</code> can be a Targets or a {@link Asn1Sequence}</p>
            
            @param obj The object.
            @return A Targets instance.
            @throws ArgumentException if the given object cannot be interpreted as Target.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Targets.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
            Constructor from Asn1Sequence.
            
            @param targets The ASN.1 SEQUENCE.
            @throws ArgumentException if the contents of the sequence are
                        invalid.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Targets.#ctor(Org.BouncyCastle.Asn1.X509.Target[])">
            Constructor from given targets.
            <p>
            The ArrayList is copied.</p>
            
            @param targets An <code>ArrayList</code> of {@link Target}s.
            @see Target
            @throws ArgumentException if the ArrayList contains not only Targets.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Targets.GetTargets">
            Returns the targets in an <code>ArrayList</code>.
            <p>
            The ArrayList is cloned before it is returned.</p>
            
            @return Returns the targets.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Targets.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            
            Returns:
            
            <pre>
                       Targets ::= SEQUENCE OF Target
            </pre>
            
            @return an Asn1Object
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.TbsCertificateStructure">
            The TbsCertificate object.
            <pre>
            TbsCertificate ::= Sequence {
                 version          [ 0 ]  Version DEFAULT v1(0),
                 serialNumber            CertificateSerialNumber,
                 signature               AlgorithmIdentifier,
                 issuer                  Name,
                 validity                Validity,
                 subject                 Name,
                 subjectPublicKeyInfo    SubjectPublicKeyInfo,
                 issuerUniqueID    [ 1 ] IMPLICIT UniqueIdentifier OPTIONAL,
                 subjectUniqueID   [ 2 ] IMPLICIT UniqueIdentifier OPTIONAL,
                 extensions        [ 3 ] Extensions OPTIONAL
                 }
            </pre>
            <p>
            Note: issuerUniqueID and subjectUniqueID are both deprecated by the IETF. This class
            will parse them, but you really shouldn't be creating new ones.</p>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.TbsCertificateList">
            PKIX RFC-2459 - TbsCertList object.
            <pre>
            TbsCertList  ::=  Sequence  {
                 version                 Version OPTIONAL,
                                              -- if present, shall be v2
                 signature               AlgorithmIdentifier,
                 issuer                  Name,
                 thisUpdate              Time,
                 nextUpdate              Time OPTIONAL,
                 revokedCertificates     Sequence OF Sequence  {
                      userCertificate         CertificateSerialNumber,
                      revocationDate          Time,
                      crlEntryExtensions      Extensions OPTIONAL
                                                    -- if present, shall be v2
                                           }  OPTIONAL,
                 crlExtensions           [0]  EXPLICIT Extensions OPTIONAL
                                                    -- if present, shall be v2
                                           }
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Time.#ctor(System.DateTime)">
            creates a time object from a given date - if the date is between 1950
            and 2049 a UTCTime object is Generated, otherwise a GeneralizedTime
            is used.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Time.ToDateTime">
            <summary>
            Return our time as DateTime.
            </summary>
            <returns>A date time.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.Time.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Time ::= CHOICE {
                        utcTime        UTCTime,
                        generalTime    GeneralizedTime }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.UserNotice">
             <code>UserNotice</code> class, used in
             <code>CertificatePolicies</code> X509 extensions (in policy
             qualifiers).
             <pre>
             UserNotice ::= Sequence {
                  noticeRef        NoticeReference OPTIONAL,
                  explicitText     DisplayText OPTIONAL}
            
             </pre>
            
             @see PolicyQualifierId
             @see PolicyInformation
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.UserNotice.#ctor(Org.BouncyCastle.Asn1.X509.NoticeReference,Org.BouncyCastle.Asn1.X509.DisplayText)">
             Creates a new <code>UserNotice</code> instance.
            
             @param noticeRef a <code>NoticeReference</code> value
             @param explicitText a <code>DisplayText</code> value
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.UserNotice.#ctor(Org.BouncyCastle.Asn1.X509.NoticeReference,System.String)">
             Creates a new <code>UserNotice</code> instance.
            
             @param noticeRef a <code>NoticeReference</code> value
             @param str the explicitText field as a string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.UserNotice.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Creates a new <code>UserNotice</code> instance.
             <p>Useful from reconstructing a <code>UserNotice</code> instance
             from its encodable/encoded form.
            
             @param as an <code>ASN1Sequence</code> value obtained from either
             calling @{link toASN1Object()} for a <code>UserNotice</code>
             instance or from parsing it from a DER-encoded stream.</p>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.V1TbsCertificateGenerator">
             Generator for Version 1 TbsCertificateStructures.
             <pre>
             TbsCertificate ::= Sequence {
                  version          [ 0 ]  Version DEFAULT v1(0),
                  serialNumber            CertificateSerialNumber,
                  signature               AlgorithmIdentifier,
                  issuer                  Name,
                  validity                Validity,
                  subject                 Name,
                  subjectPublicKeyInfo    SubjectPublicKeyInfo,
                  }
             </pre>
            
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.V2AttributeCertificateInfoGenerator">
             Generator for Version 2 AttributeCertificateInfo
             <pre>
             AttributeCertificateInfo ::= Sequence {
                   version              AttCertVersion -- version is v2,
                   holder               Holder,
                   issuer               AttCertIssuer,
                   signature            AlgorithmIdentifier,
                   serialNumber         CertificateSerialNumber,
                   attrCertValidityPeriod   AttCertValidityPeriod,
                   attributes           Sequence OF Attr,
                   issuerUniqueID       UniqueIdentifier OPTIONAL,
                   extensions           Extensions OPTIONAL
             }
             </pre>
            
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.V2AttributeCertificateInfoGenerator.AddAttribute(Org.BouncyCastle.Asn1.X509.AttributeX509)">
            @param attribute
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.V2Form.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             V2Form ::= Sequence {
                  issuerName            GeneralNames  OPTIONAL,
                  baseCertificateID     [0] IssuerSerial  OPTIONAL,
                  objectDigestInfo      [1] ObjectDigestInfo  OPTIONAL
                    -- issuerName MUST be present in this profile
                    -- baseCertificateID and objectDigestInfo MUST NOT
                    -- be present in this profile
             }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.V2TbsCertListGenerator">
             Generator for Version 2 TbsCertList structures.
             <pre>
              TbsCertList  ::=  Sequence  {
                   version                 Version OPTIONAL,
                                                -- if present, shall be v2
                   signature               AlgorithmIdentifier,
                   issuer                  Name,
                   thisUpdate              Time,
                   nextUpdate              Time OPTIONAL,
                   revokedCertificates     Sequence OF Sequence  {
                        userCertificate         CertificateSerialNumber,
                        revocationDate          Time,
                        crlEntryExtensions      Extensions OPTIONAL
                                                      -- if present, shall be v2
                                             }  OPTIONAL,
                   crlExtensions           [0]  EXPLICIT Extensions OPTIONAL
                                                      -- if present, shall be v2
                                             }
             </pre>
            
             <b>Note: This class may be subject to change</b>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.V3TbsCertificateGenerator">
             Generator for Version 3 TbsCertificateStructures.
             <pre>
             TbsCertificate ::= Sequence {
                  version          [ 0 ]  Version DEFAULT v1(0),
                  serialNumber            CertificateSerialNumber,
                  signature               AlgorithmIdentifier,
                  issuer                  Name,
                  validity                Validity,
                  subject                 Name,
                  subjectPublicKeyInfo    SubjectPublicKeyInfo,
                  issuerUniqueID    [ 1 ] IMPLICIT UniqueIdentifier OPTIONAL,
                  subjectUniqueID   [ 2 ] IMPLICIT UniqueIdentifier OPTIONAL,
                  extensions        [ 3 ] Extensions OPTIONAL
                  }
             </pre>
            
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.X509CertificateStructure">
            an X509Certificate structure.
            <pre>
             Certificate ::= Sequence {
                 tbsCertificate          TbsCertificate,
                 signatureAlgorithm      AlgorithmIdentifier,
                 signature               BIT STRING
             }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.X509DefaultEntryConverter">
            The default converter for X509 DN entries when going from their
            string value to ASN.1 strings.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.X509NameEntryConverter">
                 * It turns out that the number of standard ways the fields in a DN should be
                 * encoded into their ASN.1 counterparts is rapidly approaching the
                 * number of machines on the internet. By default the X509Name class
                 * will produce UTF8Strings in line with the current recommendations (RFC 3280).
                 * <p>
                 * An example of an encoder look like below:
                 * <pre>
                 * internal class X509DirEntryConverter
                 *     : X509NameEntryConverter
                 * {
                 *     public Asn1Object GetConvertedValue(
                 *         DerObjectIdentifier  oid,
                 *         string               value)
                 *     {
                 *         if (str.Length() != 0 &amp;&amp; str.charAt(0) == '#')
                 *         {
                 *             return ConvertHexEncoded(str, 1);
                 *         }
                 *         if (oid.Equals(EmailAddress))
                 *         {
                 *             return new DerIA5String(str);
                 *         }
                 *         else if (CanBePrintable(str))
                 *         {
                 *             return new DerPrintableString(str);
                 *         }
                 *         else if (CanBeUTF8(str))
                 *         {
                 *             return new DerUtf8String(str);
                 *         }
                 *         else
                 *         {
                 *             return new DerBmpString(str);
                 *         }
                 *     }
                 * }
            	 * </pre>
            	 * </p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509NameEntryConverter.ConvertHexEncoded(System.String,System.Int32)">
             Convert an inline encoded hex string rendition of an ASN.1
             object back into its corresponding ASN.1 object.
            
             @param str the hex encoded object
             @param off the index at which the encoding starts
             @return the decoded object
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509NameEntryConverter.CanBePrintable(System.String)">
            return true if the passed in string can be represented without
            loss as a PrintableString, false otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509NameEntryConverter.GetConvertedValue(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.String)">
             Convert the passed in string value into the appropriate ASN.1
             encoded object.
            
             @param oid the oid associated with the value in the DN.
             @param value the value of the particular DN component.
             @return the ASN.1 equivalent for the value.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509DefaultEntryConverter.GetConvertedValue(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.String)">
             Apply default conversion for the given value depending on the oid
             and the character range of the value.
            
             @param oid the object identifier for the DN entry
             @param value the value associated with it
             @return the ASN.1 equivalent for the string value.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.X509Extension">
            an object for the elements in the X.509 V3 extension block.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extension.ConvertValueToObject(Org.BouncyCastle.Asn1.X509.X509Extension)">
            <sumary>Convert the value of the passed in extension to an object.</sumary>
            <param name="ext">The extension to parse.</param>
            <returns>The object the value string contains.</returns>
            <exception> <see cref="T:System.ArgumentException"/>If conversion is not possible.</exception>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.SubjectDirectoryAttributes">
            Subject Directory Attributes
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.SubjectKeyIdentifier">
            Subject Key Identifier
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.KeyUsage">
            Key Usage
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.PrivateKeyUsagePeriod">
            Private Key Usage Period
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.SubjectAlternativeName">
            Subject Alternative Name
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.IssuerAlternativeName">
            Issuer Alternative Name
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.BasicConstraints">
            Basic Constraints
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.CrlNumber">
            CRL Number
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.ReasonCode">
            Reason code
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.InstructionCode">
            Hold Instruction Code
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.InvalidityDate">
            Invalidity Date
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.DeltaCrlIndicator">
            Delta CRL indicator
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.IssuingDistributionPoint">
            Issuing Distribution Point
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.CertificateIssuer">
            Certificate Issuer
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.NameConstraints">
            Name Constraints
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.CrlDistributionPoints">
            CRL Distribution Points
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.CertificatePolicies">
            Certificate Policies
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.PolicyMappings">
            Policy Mappings
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.AuthorityKeyIdentifier">
            Authority Key Identifier
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.PolicyConstraints">
            Policy Constraints
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.ExtendedKeyUsage">
            Extended Key Usage
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.FreshestCrl">
            Freshest CRL
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.InhibitAnyPolicy">
            Inhibit Any Policy
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.AuthorityInfoAccess">
            Authority Info Access
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.SubjectInfoAccess">
            Subject Info Access
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.LogoType">
            Logo Type
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.BiometricInfo">
            BiometricInfo
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.QCStatements">
            QCStatements
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.AuditIdentity">
            Audit identity extension in attribute certificates.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.NoRevAvail">
            NoRevAvail extension in attribute certificates.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.TargetInformation">
            TargetInformation extension in attribute certificates.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Extensions.ExpiredCertsOnCrl">
            Expired Certificates on CRL extension
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence.
            
             the extensions are a list of constructed sequences, either with (Oid, OctetString) or (Oid, Boolean, OctetString)
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.#ctor(System.Collections.IDictionary)">
            constructor from a table of extensions.
            <p>
            it's is assumed the table contains Oid/string pairs.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.#ctor(System.Collections.IList,System.Collections.IDictionary)">
            Constructor from a table of extensions with ordering.
            <p>
            It's is assumed the table contains Oid/string pairs.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.#ctor(System.Collections.IList,System.Collections.IList)">
             Constructor from two vectors
            
             @param objectIDs an ArrayList of the object identifiers.
             @param values an ArrayList of the extension values.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.#ctor(System.Collections.Hashtable)">
            constructor from a table of extensions.
            <p>
            it's is assumed the table contains Oid/string pairs.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.#ctor(System.Collections.ArrayList,System.Collections.Hashtable)">
            Constructor from a table of extensions with ordering.
            <p>
            It's is assumed the table contains Oid/string pairs.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.#ctor(System.Collections.ArrayList,System.Collections.ArrayList)">
             Constructor from two vectors
            
             @param objectIDs an ArrayList of the object identifiers.
             @param values an ArrayList of the extension values.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.GetExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the extension represented by the object identifier
             passed in.
            
             @return the extension if it's present, null otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.GetExtensionParsedValue(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the parsed value of the extension represented by the object identifier
             passed in.
            
             @return the parsed value of the extension if it's present, null otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Extensions.ToAsn1Object">
             <pre>
                 Extensions        ::=   SEQUENCE SIZE (1..MAX) OF Extension
            
                 Extension         ::=   SEQUENCE {
                    extnId            EXTENSION.&amp;id ({ExtensionSet}),
                    critical          BOOLEAN DEFAULT FALSE,
                    extnValue         OCTET STRING }
             </pre>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.X509Extensions.ExtensionOids">
            return an Enumeration of the extension field's object ids.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator">
            <remarks>Generator for X.509 extensions</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator.Reset">
            <summary>Reset the generator</summary>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            <summary>
            Add an extension with the given oid and the passed in value to be included
            in the OCTET STRING associated with the extension.
            </summary>
            <param name="oid">OID for the extension.</param>
            <param name="critical">True if critical, false otherwise.</param>
            <param name="extValue">The ASN.1 object to be included in the extension.</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,System.Byte[])">
            <summary>
            Add an extension with the given oid and the passed in byte array to be wrapped
            in the OCTET STRING associated with the extension.
            </summary>
            <param name="oid">OID for the extension.</param>
            <param name="critical">True if critical, false otherwise.</param>
            <param name="extValue">The byte array to be wrapped.</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator.Generate">
            <summary>Generate an X509Extensions object based on the current state of the generator.</summary>
            <returns>An <c>X509Extensions</c> object</returns>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.X509ExtensionsGenerator.IsEmpty">
            <summary>Return true if there are no extension present in this generator.</summary>
            <returns>True if empty, false otherwise</returns>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.X509Name">
             <pre>
                 RDNSequence ::= SEQUENCE OF RelativeDistinguishedName
            
                 RelativeDistinguishedName ::= SET SIZE (1..MAX) OF AttributeTypeAndValue
            
                 AttributeTypeAndValue ::= SEQUENCE {
                                               type  OBJECT IDENTIFIER,
                                               value ANY }
             </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.C">
            country code - StringType(SIZE(2))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.O">
            organization - StringType(SIZE(1..64))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.OU">
            organizational unit name - StringType(SIZE(1..64))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.T">
            Title
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.CN">
            common name - StringType(SIZE(1..64))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.Street">
            street - StringType(SIZE(1..64))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.SerialNumber">
            device serial number name - StringType(SIZE(1..64))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.L">
            locality name - StringType(SIZE(1..64))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.ST">
            state, or province name - StringType(SIZE(1..64))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.Surname">
            Naming attributes of type X520name
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.BusinessCategory">
            businessCategory - DirectoryString(SIZE(1..128)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.PostalCode">
            postalCode - DirectoryString(SIZE(1..40)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.DnQualifier">
            dnQualifier - DirectoryString(SIZE(1..64)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.Pseudonym">
            RFC 3039 Pseudonym - DirectoryString(SIZE(1..64)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.DateOfBirth">
            RFC 3039 DateOfBirth - GeneralizedTime - YYYYMMDD000000Z
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.PlaceOfBirth">
            RFC 3039 PlaceOfBirth - DirectoryString(SIZE(1..128)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.Gender">
            RFC 3039 DateOfBirth - PrintableString (SIZE(1)) -- "M", "F", "m" or "f"
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.CountryOfCitizenship">
            RFC 3039 CountryOfCitizenship - PrintableString (SIZE (2)) -- ISO 3166
            codes only
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.CountryOfResidence">
            RFC 3039 CountryOfCitizenship - PrintableString (SIZE (2)) -- ISO 3166
            codes only
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.NameAtBirth">
            ISIS-MTT NameAtBirth - DirectoryString(SIZE(1..64)
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.PostalAddress">
            RFC 3039 PostalAddress - SEQUENCE SIZE (1..6) OF
            DirectoryString(SIZE(1..30))
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.DmdName">
            RFC 2256 dmdName
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.TelephoneNumber">
            id-at-telephoneNumber
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.OrganizationIdentifier">
            id-at-organizationIdentifier
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.Name">
            id-at-name
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.EmailAddress">
            Email address (RSA PKCS#9 extension) - IA5String.
            <p>Note: if you're trying to be ultra orthodox, don't use this! It shouldn't be in here.</p>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.UnstructuredName">
            more from PKCS#9
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.E">
            email address in Verisign certificates
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.UID">
            LDAP User id.
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.DefaultSymbols">
            default look up table translating OID values into their common symbols following
            the convention in RFC 2253 with a few extras
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.RFC2253Symbols">
            look up table translating OID values into their common symbols following the convention in RFC 2253
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.RFC1779Symbols">
             look up table translating OID values into their common symbols following the convention in RFC 1779
            
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X509.X509Name.DefaultLookup">
            look up table translating common symbols into their OIDS.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.GetInstance(Org.BouncyCastle.Asn1.Asn1TaggedObject,System.Boolean)">
             Return a X509Name based on the passed in tagged object.
            
             @param obj tag object holding name.
             @param explicitly true if explicitly tagged false otherwise.
             @return the X509Name
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Constructor from Asn1Sequence
            
             the principal will be a list of constructed sets, each containing an (OID, string) pair.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Collections.IList,System.Collections.IDictionary)">
            Constructor from a table of attributes with ordering.
            <p>
            it's is assumed the table contains OID/string pairs, and the contents
            of the table are copied into an internal table as part of the
            construction process. The ordering ArrayList should contain the OIDs
            in the order they are meant to be encoded or printed in ToString.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Collections.IList,System.Collections.IDictionary,Org.BouncyCastle.Asn1.X509.X509NameEntryConverter)">
            Constructor from a table of attributes with ordering.
            <p>
            it's is assumed the table contains OID/string pairs, and the contents
            of the table are copied into an internal table as part of the
            construction process. The ordering ArrayList should contain the OIDs
            in the order they are meant to be encoded or printed in ToString.</p>
            <p>
            The passed in converter will be used to convert the strings into their
            ASN.1 counterparts.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Collections.IList,System.Collections.IList)">
            Takes two vectors one of the oids and the other of the values.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Collections.IList,System.Collections.IList,Org.BouncyCastle.Asn1.X509.X509NameEntryConverter)">
            Takes two vectors one of the oids and the other of the values.
            <p>
            The passed in converter will be used to convert the strings into their
            ASN.1 counterparts.</p>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.String)">
            Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
            some such, converting it into an ordered set of name attributes.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.String,Org.BouncyCastle.Asn1.X509.X509NameEntryConverter)">
            Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
            some such, converting it into an ordered set of name attributes with each
            string value being converted to its associated ASN.1 type using the passed
            in converter.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Boolean,System.String)">
            Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
            some such, converting it into an ordered set of name attributes. If reverse
            is true, create the encoded version of the sequence starting from the
            last element in the string.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Boolean,System.String,Org.BouncyCastle.Asn1.X509.X509NameEntryConverter)">
            Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
            some such, converting it into an ordered set of name attributes with each
            string value being converted to its associated ASN.1 type using the passed
            in converter. If reverse is true the ASN.1 sequence representing the DN will
            be built by starting at the end of the string, rather than the start.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Boolean,System.Collections.IDictionary,System.String)">
            Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
            some such, converting it into an ordered set of name attributes. lookUp
            should provide a table of lookups, indexed by lowercase only strings and
            yielding a DerObjectIdentifier, other than that OID. and numeric oids
            will be processed automatically.
            <br/>
            If reverse is true, create the encoded version of the sequence
            starting from the last element in the string.
            @param reverse true if we should start scanning from the end (RFC 2553).
            @param lookUp table of names and their oids.
            @param dirName the X.500 string to be parsed.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.#ctor(System.Boolean,System.Collections.IDictionary,System.String,Org.BouncyCastle.Asn1.X509.X509NameEntryConverter)">
            Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
            some such, converting it into an ordered set of name attributes. lookUp
            should provide a table of lookups, indexed by lowercase only strings and
            yielding a DerObjectIdentifier, other than that OID. and numeric oids
            will be processed automatically. The passed in converter is used to convert the
            string values to the right of each equals sign to their ASN.1 counterparts.
            <br/>
            @param reverse true if we should start scanning from the end, false otherwise.
            @param lookUp table of names and oids.
            @param dirName the string dirName
            @param converter the converter to convert string values into their ASN.1 equivalents
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.GetOidList">
            return an IList of the oids in the name, in the order they were found.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.GetValueList">
            return an IList of the values found in the name, in the order they
            were found.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.GetValueList(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return an IList of the values found in the name, in the order they
            were found, with the DN label corresponding to passed in oid.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.Equivalent(Org.BouncyCastle.Asn1.X509.X509Name,System.Boolean)">
            <param name="other">The X509Name object to test equivalency against.</param>
            <param name="inOrder">If true, the order of elements must be the same,
            as well as the values associated with each element.</param>
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.Equivalent(Org.BouncyCastle.Asn1.X509.X509Name)">
            test for equivalence - note: case is ignored.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X509.X509Name.ToString(System.Boolean,System.Collections.IDictionary)">
             convert the structure to a string - if reverse is true the
             oids and values are listed out starting with the last element
             in the sequence (ala RFC 2253), otherwise the string will begin
             with the first element of the structure. If no string definition
             for the oid is found in oidSymbols the string value of the oid is
             added. Two standard symbol tables are provided DefaultSymbols, and
             RFC2253Symbols as part of this class.
            
             @param reverse if true start at the end of the sequence and work back.
             @param oidSymbols look up table strings for oids.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X509.X509Name.DefaultReverse">
            determines whether or not strings should be processed and printed
            from back to front.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X509.X509NameTokenizer">
            class for breaking up an X500 Name into it's component tokens, ala
            java.util.StringTokenizer. We need this class as some of the
            lightweight Java environment don't support classes like
            StringTokenizer.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.ECNamedCurveTable">
            A general class that reads all X9.62 style EC curve tables.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.ECNamedCurveTable.GetByName(System.String)">
             return a X9ECParameters object representing the passed in named
             curve. The routine returns null if the curve is not present.
            
             @param name the name of the curve requested
             @return an X9ECParameters object or null if the curve is not available.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.ECNamedCurveTable.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.ECNamedCurveTable.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return a X9ECParameters object representing the passed in named
             curve.
            
             @param oid the object id of the curve requested
             @return an X9ECParameters object or null if the curve is not available.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X9.ECNamedCurveTable.Names">
             return an enumeration of the names of the available curves.
            
             @return an enumeration of the names of the available curves.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.KeySpecificInfo">
            ASN.1 def for Diffie-Hellman key exchange KeySpecificInfo structure. See
            RFC 2631, or X9.42, for further details.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.KeySpecificInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             KeySpecificInfo ::= Sequence {
                 algorithm OBJECT IDENTIFIER,
                 counter OCTET STRING SIZE (4..4)
             }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.OtherInfo">
            ANS.1 def for Diffie-Hellman key exchange OtherInfo structure. See
            RFC 2631, or X9.42, for further details.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.OtherInfo.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             OtherInfo ::= Sequence {
                 keyInfo KeySpecificInfo,
                 partyAInfo [0] OCTET STRING OPTIONAL,
                 suppPubInfo [2] OCTET STRING
             }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.X962NamedCurves">
            table of the current named curves defined in X.962 EC-DSA.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X962NamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the X9ECParameters object for the named curve represented by
             the passed in object identifier. Null if the curve isn't present.
            
             @param oid an object identifier representing a named curve, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X962NamedCurves.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X962NamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X9.X962NamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X962Parameters.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
            Parameters ::= CHOICE {
               ecParameters ECParameters,
               namedCurve   CURVES.&amp;id({CurveNames}),
               implicitlyCA Null
            }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.X9Curve">
            ASN.1 def for Elliptic-Curve Curve structure. See
            X9.62, for further details.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9Curve.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             Curve ::= Sequence {
                 a               FieldElement,
                 b               FieldElement,
                 seed            BIT STRING      OPTIONAL
             }
            </pre>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.X9ECParameters">
            ASN.1 def for Elliptic-Curve ECParameters structure. See
            X9.62, for further details.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9ECParameters.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             ECParameters ::= Sequence {
                 version         Integer { ecpVer1(1) } (ecpVer1),
                 fieldID         FieldID {{FieldTypes}},
                 curve           X9Curve,
                 base            X9ECPoint,
                 order           Integer,
                 cofactor        Integer OPTIONAL
             }
            </pre>
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X9.X9ECParameters.CurveEntry">
             Return the ASN.1 entry representing the Curve.
            
             @return the X9Curve for the curve in these parameters.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X9.X9ECParameters.FieldIDEntry">
             Return the ASN.1 entry representing the FieldID.
            
             @return the X9FieldID for the FieldID in these parameters.
        </member>
        <member name="P:Org.BouncyCastle.Asn1.X9.X9ECParameters.BaseEntry">
             Return the ASN.1 entry representing the base point G.
            
             @return the X9ECPoint for the base point in these parameters.
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.X9ECPoint">
            class for describing an ECPoint as a Der object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9ECPoint.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             ECPoint ::= OCTET STRING
            </pre>
            <p>
            Octet string produced using ECPoint.GetEncoded().</p>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.X9FieldElement">
            Class for processing an ECFieldElement as a DER object.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9FieldElement.ToAsn1Object">
            Produce an object suitable for an Asn1OutputStream.
            <pre>
             FieldElement ::= OCTET STRING
            </pre>
            <p>
            <ol>
            <li> if <i>q</i> is an odd prime then the field element is
            processed as an Integer and converted to an octet string
            according to x 9.62 4.3.1.</li>
            <li> if <i>q</i> is 2<sup>m</sup> then the bit string
            contained in the field element is converted into an octet
            string with the same ordering padded at the front if necessary.
            </li>
            </ol>
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Asn1.X9.X9FieldID">
            ASN.1 def for Elliptic-Curve Field ID structure. See
            X9.62, for further details.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9FieldID.#ctor(Org.BouncyCastle.Math.BigInteger)">
            Constructor for elliptic curves over prime fields
            <code>F<sub>2</sub></code>.
            @param primeP The prime <code>p</code> defining the prime field.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9FieldID.#ctor(System.Int32,System.Int32)">
            Constructor for elliptic curves over binary fields
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k1 The integer <code>k1</code> where <code>x<sup>m</sup> +
            x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9FieldID.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            Constructor for elliptic curves over binary fields
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k1 The integer <code>k1</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k2 The integer <code>k2</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k3 The integer <code>k3</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>..
        </member>
        <member name="M:Org.BouncyCastle.Asn1.X9.X9FieldID.ToAsn1Object">
            Produce a Der encoding of the following structure.
            <pre>
             FieldID ::= Sequence {
                 fieldType       FIELD-ID.&amp;id({IOSet}),
                 parameters      FIELD-ID.&amp;Type({IOSet}{&#64;fieldType})
             }
            </pre>
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers.IdDsaWithSha1">
            id-dsa-with-sha1 OBJECT IDENTIFIER ::=  { iso(1) member-body(2)
                  us(840) x9-57 (10040) x9cm(4) 3 }
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers.X9x63Scheme">
            X9.63
        </member>
        <member name="F:Org.BouncyCastle.Asn1.X9.X9ObjectIdentifiers.ansi_x9_42">
            X9.42
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsAttributeTableParameter">
            <remarks>
            The 'Signature' parameter is only available when generating unsigned attributes.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsAuthenticatedData">
            containing class for an CMS Authenticated Data object
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedData.GetRecipientInfos">
            return a store of the intended recipients for this message
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedData.GetAuthAttrs">
            return a table of the digested attributes indexed by
            the OID of the attribute.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedData.GetUnauthAttrs">
            return a table of the undigested attributes indexed by
            the OID of the attribute.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedData.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsAuthenticatedData.MacAlgOid">
            return the object identifier for the content MAC algorithm.
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsAuthenticatedData.ContentInfo">
            return the ContentInfo 
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator">
             General class for generating a CMS authenticated-data message.
            
             A simple example of usage.
            
             <pre>
                  CMSAuthenticatedDataGenerator  fact = new CMSAuthenticatedDataGenerator();
            
                  fact.addKeyTransRecipient(cert);
            
                  CMSAuthenticatedData         data = fact.generate(content, algorithm, "BC");
             </pre>
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsEnvelopedGenerator">
             General class for generating a CMS enveloped-data message.
            
             A simple example of usage.
            
             <pre>
                  CMSEnvelopedDataGenerator  fact = new CMSEnvelopedDataGenerator();
            
                  fact.addKeyTransRecipient(cert);
            
                  CMSEnvelopedData         data = fact.generate(content, algorithm, "BC");
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            <summary>Constructor allowing specific source of randomness</summary>
            <param name="rand">Instance of <c>SecureRandom</c> to use.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.AddKeyTransRecipient(Org.BouncyCastle.X509.X509Certificate)">
             add a recipient.
            
             @param cert recipient's public key certificate
             @exception ArgumentException if there is a problem with the certificate
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.AddKeyTransRecipient(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[])">
             add a recipient
            
             @param key the public key used by the recipient
             @param subKeyId the identifier for the recipient's public key
             @exception ArgumentException if there is a problem with the key
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.AddKekRecipient(System.String,Org.BouncyCastle.Crypto.Parameters.KeyParameter,System.Byte[])">
            add a KEK recipient.
            @param key the secret key to use for wrapping
            @param keyIdentifier the byte string that identifies the key
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.AddKekRecipient(System.String,Org.BouncyCastle.Crypto.Parameters.KeyParameter,Org.BouncyCastle.Asn1.Cms.KekIdentifier)">
            add a KEK recipient.
            @param key the secret key to use for wrapping
            @param keyIdentifier the byte string that identifies the key
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.AddKeyAgreementRecipient(System.String,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String)">
             Add a key agreement based recipient.
            
             @param agreementAlgorithm key agreement algorithm to use.
             @param senderPrivateKey private key to initialise sender side of agreement with.
             @param senderPublicKey sender public key to include with message.
             @param recipientCert recipient's public key certificate.
             @param cekWrapAlgorithm OID for key wrapping algorithm to use.
             @exception SecurityUtilityException if the algorithm requested cannot be found
             @exception InvalidKeyException if the keys are inappropriate for the algorithm specified
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.AddKeyAgreementRecipients(System.String,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Collections.ICollection,System.String)">
             Add multiple key agreement based recipients (sharing a single KeyAgreeRecipientInfo structure).
            
             @param agreementAlgorithm key agreement algorithm to use.
             @param senderPrivateKey private key to initialise sender side of agreement with.
             @param senderPublicKey sender public key to include with message.
             @param recipientCerts recipients' public key certificates.
             @param cekWrapAlgorithm OID for key wrapping algorithm to use.
             @exception SecurityUtilityException if the algorithm requested cannot be found
             @exception InvalidKeyException if the keys are inappropriate for the algorithm specified
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedGenerator.AddRecipientInfoGenerator(Org.BouncyCastle.Cms.RecipientInfoGenerator)">
            <summary>
            Add a generator to produce the recipient info required.
            </summary>
            <param name="recipientInfoGenerator">a generator of a recipient info object.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedGenerator.#ctor">
            base constructor
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
             constructor allowing specific source of randomness
            
             @param rand instance of SecureRandom to use
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator.#ctor">
            base constructor
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            constructor allowing specific source of randomness
            @param rand instance of SecureRandom to use
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable,System.String,Org.BouncyCastle.Crypto.CipherKeyGenerator)">
            generate an enveloped object that contains an CMS Enveloped Data
            object using the given provider and the passed in key generator.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable,System.String)">
            generate an authenticated object that contains an CMS Authenticated Data object
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsAuthenticatedDataParser">
             Parsing class for an CMS Authenticated Data object from an input stream.
             <p>
             Note: that because we are in a streaming mode only one recipient can be tried and it is important
             that the methods on the parser are called in the appropriate order.
             </p>
             <p>
             Example of use - assuming the first recipient matches the private key we have.
             <pre>
                  CMSAuthenticatedDataParser     ad = new CMSAuthenticatedDataParser(inputStream);
            
                  RecipientInformationStore  recipients = ad.getRecipientInfos();
            
                  Collection  c = recipients.getRecipients();
                  Iterator    it = c.iterator();
            
                  if (it.hasNext())
                  {
                      RecipientInformation   recipient = (RecipientInformation)it.next();
            
                      CMSTypedStream recData = recipient.getContentStream(privateKey, "BC");
            
                      processDataStream(recData.getContentStream());
            
                      if (!Arrays.equals(ad.getMac(), recipient.getMac())
                      {
                          System.err.println("Data corrupted!!!!");
                      }
                  }
              </pre>
              Note: this class does not introduce buffering - if you are processing large files you should create
              the parser with:
              <pre>
                      CMSAuthenticatedDataParser     ep = new CMSAuthenticatedDataParser(new BufferedInputStream(inputStream, bufSize));
              </pre>
              where bufSize is a suitably large buffer size.
             </p>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsContentInfoParser.Close">
            Close the underlying data stream.
            @throws IOException if the close fails.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataParser.GetRecipientInfos">
            return a store of the intended recipients for this message
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataParser.GetAuthAttrs">
            return a table of the unauthenticated attributes indexed by
            the OID of the attribute.
            @exception java.io.IOException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataParser.GetUnauthAttrs">
            return a table of the unauthenticated attributes indexed by
            the OID of the attribute.
            @exception java.io.IOException
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsAuthenticatedDataParser.MacAlgOid">
            return the object identifier for the mac algorithm.
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsAuthenticatedDataParser.MacAlgParams">
            return the ASN.1 encoded encryption algorithm parameters, or null if
            there aren't any.
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator">
             General class for generating a CMS authenticated-data message stream.
             <p>
             A simple example of usage.
             <pre>
                  CMSAuthenticatedDataStreamGenerator edGen = new CMSAuthenticatedDataStreamGenerator();
            
                  edGen.addKeyTransRecipient(cert);
            
                  ByteArrayOutputStream  bOut = new ByteArrayOutputStream();
            
                  OutputStream out = edGen.open(
                                          bOut, CMSAuthenticatedDataGenerator.AES128_CBC, "BC");*
                  out.write(data);
            
                  out.close();
             </pre>
             </p>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator.#ctor">
            base constructor
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            constructor allowing specific source of randomness
            @param rand instance of SecureRandom to use
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator.SetBufferSize(System.Int32)">
             Set the underlying string size for encapsulated data
            
             @param bufferSize length of octet strings to buffer the data.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator.SetBerEncodeRecipients(System.Boolean)">
            Use a BER Set to store the recipient information
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator.Open(System.IO.Stream,System.String,Org.BouncyCastle.Crypto.CipherKeyGenerator)">
            generate an enveloped object that contains an CMS Enveloped Data
            object using the given provider and the passed in key generator.
            @throws java.io.IOException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator.Open(System.IO.Stream,System.String)">
            generate an enveloped object that contains an CMS Enveloped Data object
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsAuthenticatedDataStreamGenerator.Open(System.IO.Stream,System.String,System.Int32)">
            generate an enveloped object that contains an CMS Enveloped Data object
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsAuthEnvelopedData">
            containing class for an CMS AuthEnveloped Data object
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsCompressedData">
            containing class for an CMS Compressed Data object
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsCompressedData.GetContent">
             Return the uncompressed content.
            
             @return the uncompressed content
             @throws CmsException if there is an exception uncompressing the data.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsCompressedData.GetContent(System.Int32)">
             Return the uncompressed content, throwing an exception if the data size
             is greater than the passed in limit. If the content is exceeded getCause()
             on the CMSException will contain a StreamOverflowException
            
             @param limit maximum number of bytes to read
             @return the content read
             @throws CMSException if there is an exception uncompressing the data.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsCompressedData.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsCompressedData.ContentInfo">
            return the ContentInfo 
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsCompressedDataGenerator">
                * General class for generating a compressed CMS message.
                * <p>
                * A simple example of usage.</p>
                * <p>
                * <pre>
                *      CMSCompressedDataGenerator fact = new CMSCompressedDataGenerator();
                *      CMSCompressedData data = fact.Generate(content, algorithm);
                * </pre>
            	* </p>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsCompressedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable,System.String)">
            Generate an object that contains an CMS Compressed Data
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsCompressedDataParser">
             Class for reading a CMS Compressed Data stream.
             <pre>
                 CMSCompressedDataParser cp = new CMSCompressedDataParser(inputStream);
            
                 process(cp.GetContent().GetContentStream());
             </pre>
              Note: this class does not introduce buffering - if you are processing large files you should create
              the parser with:
              <pre>
                  CMSCompressedDataParser     ep = new CMSCompressedDataParser(new BufferedInputStream(inputStream, bufSize));
              </pre>
              where bufSize is a suitably large buffer size.
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsCompressedDataStreamGenerator">
             General class for generating a compressed CMS message stream.
             <p>
             A simple example of usage.
             </p>
             <pre>
                  CMSCompressedDataStreamGenerator gen = new CMSCompressedDataStreamGenerator();
            
                  Stream cOut = gen.Open(outputStream, CMSCompressedDataStreamGenerator.ZLIB);
            
                  cOut.Write(data);
            
                  cOut.Close();
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsCompressedDataStreamGenerator.#ctor">
            base constructor
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsCompressedDataStreamGenerator.SetBufferSize(System.Int32)">
             Set the underlying string size for encapsulated data
            
             @param bufferSize length of octet strings to buffer the data.
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsEnvelopedData">
            containing class for an CMS Enveloped Data object
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedData.GetRecipientInfos">
            return a store of the intended recipients for this message
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedData.GetUnprotectedAttributes">
            return a table of the unprotected attributes indexed by
            the OID of the attribute.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedData.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsEnvelopedData.EncryptionAlgOid">
            return the object identifier for the content encryption algorithm.
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsEnvelopedData.ContentInfo">
            return the ContentInfo 
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator">
             <remarks>
             General class for generating a CMS enveloped-data message.
            
             A simple example of usage.
            
             <pre>
                  CmsEnvelopedDataGenerator  fact = new CmsEnvelopedDataGenerator();
            
                  fact.AddKeyTransRecipient(cert);
            
                  CmsEnvelopedData         data = fact.Generate(content, algorithm);
             </pre>
             </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            <summary>Constructor allowing specific source of randomness</summary>
            <param name="rand">Instance of <c>SecureRandom</c> to use.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable,System.String,Org.BouncyCastle.Crypto.CipherKeyGenerator)">
            <summary>
            Generate an enveloped object that contains a CMS Enveloped Data
            object using the passed in key generator.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable,System.String)">
            <summary>Generate an enveloped object that contains an CMS Enveloped Data object.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable,System.String,System.Int32)">
            <summary>Generate an enveloped object that contains an CMS Enveloped Data object.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsEnvelopedDataParser">
             Parsing class for an CMS Enveloped Data object from an input stream.
             <p>
             Note: that because we are in a streaming mode only one recipient can be tried and it is important
             that the methods on the parser are called in the appropriate order.
             </p>
             <p>
             Example of use - assuming the first recipient matches the private key we have.
             <pre>
                  CmsEnvelopedDataParser     ep = new CmsEnvelopedDataParser(inputStream);
            
                  RecipientInformationStore  recipients = ep.GetRecipientInfos();
            
                  Collection  c = recipients.getRecipients();
                  Iterator    it = c.iterator();
            
                  if (it.hasNext())
                  {
                      RecipientInformation   recipient = (RecipientInformation)it.next();
            
                      CMSTypedStream recData = recipient.getContentStream(privateKey);
            
                      processDataStream(recData.getContentStream());
                  }
              </pre>
              Note: this class does not introduce buffering - if you are processing large files you should create
              the parser with:
              <pre>
                      CmsEnvelopedDataParser     ep = new CmsEnvelopedDataParser(new BufferedInputStream(inputStream, bufSize));
              </pre>
              where bufSize is a suitably large buffer size.
             </p>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataParser.GetRecipientInfos">
            return a store of the intended recipients for this message
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataParser.GetUnprotectedAttributes">
            return a table of the unprotected attributes indexed by
            the OID of the attribute.
            @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsEnvelopedDataParser.EncryptionAlgOid">
            return the object identifier for the content encryption algorithm.
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsEnvelopedDataParser.EncryptionAlgParams">
            return the ASN.1 encoded encryption algorithm parameters, or null if
            there aren't any.
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator">
             General class for generating a CMS enveloped-data message stream.
             <p>
             A simple example of usage.
             <pre>
                  CmsEnvelopedDataStreamGenerator edGen = new CmsEnvelopedDataStreamGenerator();
            
                  edGen.AddKeyTransRecipient(cert);
            
                  MemoryStream  bOut = new MemoryStream();
            
                  Stream out = edGen.Open(
                                          bOut, CMSEnvelopedDataGenerator.AES128_CBC);*
                  out.Write(data);
            
                  out.Close();
             </pre>
             </p>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            <summary>Constructor allowing specific source of randomness</summary>
            <param name="rand">Instance of <c>SecureRandom</c> to use.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator.SetBufferSize(System.Int32)">
            <summary>Set the underlying string size for encapsulated data.</summary>
            <param name="bufferSize">Length of octet strings to buffer the data.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator.SetBerEncodeRecipients(System.Boolean)">
            <summary>Use a BER Set to store the recipient information.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator.Open(System.IO.Stream,System.String,Org.BouncyCastle.Crypto.CipherKeyGenerator)">
            <summary>
            Generate an enveloped object that contains an CMS Enveloped Data
            object using the passed in key generator.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator.Open(System.IO.Stream,System.String)">
            generate an enveloped object that contains an CMS Enveloped Data object
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsEnvelopedDataStreamGenerator.Open(System.IO.Stream,System.String,System.Int32)">
            generate an enveloped object that contains an CMS Enveloped Data object
            @throws IOException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.ICipherParameters">
            all parameter classes implement this.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsProcessable.Write(System.IO.Stream)">
            <summary>
            Generic routine to copy out the data we want processed.
            </summary>
            <remarks>
            This routine may be called multiple times.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsProcessableByteArray">
            a holding class for a byte array of data to be processed.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsProcessableByteArray.GetContent">
            <returns>A clone of the byte array</returns>
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsProcessableFile">
            a holding class for a file of data to be processed.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsProcessableFile.GetContent">
            <returns>The file handle</returns>
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsSignedData">
             general class for handling a pkcs7-signature message.
            
             A simple example of usage - note, in the example below the validity of
             the certificate isn't verified, just the fact that one of the certs
             matches the given signer...
            
             <pre>
              IX509Store              certs = s.GetCertificates();
              SignerInformationStore  signers = s.GetSignerInfos();
            
              foreach (SignerInformation signer in signers.GetSigners())
              {
                  ArrayList       certList = new ArrayList(certs.GetMatches(signer.SignerID));
                  X509Certificate cert = (X509Certificate) certList[0];
            
                  if (signer.Verify(cert.GetPublicKey()))
                  {
                      verified++;
                  }
              }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.#ctor(System.Collections.IDictionary,System.Byte[])">
             Content with detached signature, digests precomputed
            
             @param hashes a map of precomputed digests for content indexed by name of hash.
             @param sigBlock the signature object.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.#ctor(Org.BouncyCastle.Cms.CmsProcessable,System.IO.Stream)">
             base constructor - content with detached signature.
            
             @param signedContent the content that was signed.
             @param sigData the signature object.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.#ctor(System.IO.Stream)">
            base constructor - with encapsulated content
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.GetSignerInfos">
            return the collection of signers that are associated with the
            signatures for the message.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.GetAttributeCertificates(System.String)">
             return a X509Store containing the attribute certificates, if any, contained
             in this message.
            
             @param type type of store to create
             @return a store of attribute certificates
             @exception NoSuchStoreException if the store type isn't available.
             @exception CmsException if a general exception prevents creation of the X509Store
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.GetCertificates(System.String)">
             return a X509Store containing the public key certificates, if any, contained
             in this message.
            
             @param type type of store to create
             @return a store of public key certificates
             @exception NoSuchStoreException if the store type isn't available.
             @exception CmsException if a general exception prevents creation of the X509Store
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.GetCrls(System.String)">
             return a X509Store containing CRLs, if any, contained
             in this message.
            
             @param type type of store to create
             @return a store of CRLs
             @exception NoSuchStoreException if the store type isn't available.
             @exception CmsException if a general exception prevents creation of the X509Store
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.GetEncoded(System.String)">
             return the ASN.1 encoded representation of this object using the specified encoding.
            
             @param encoding the ASN.1 encoding format to use ("BER" or "DER").
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.ReplaceSigners(Org.BouncyCastle.Cms.CmsSignedData,Org.BouncyCastle.Cms.SignerInformationStore)">
             Replace the signerinformation store associated with this
             CmsSignedData object with the new one passed in. You would
             probably only want to do this if you wanted to change the unsigned
             attributes associated with a signer, or perhaps delete one.
            
             @param signedData the signed data object to be used as a base.
             @param signerInformationStore the new signer information store to use.
             @return a new signed data object.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedData.ReplaceCertificatesAndCrls(Org.BouncyCastle.Cms.CmsSignedData,Org.BouncyCastle.X509.Store.IX509Store,Org.BouncyCastle.X509.Store.IX509Store,Org.BouncyCastle.X509.Store.IX509Store)">
             Replace the certificate and CRL information associated with this
             CmsSignedData object with the new one passed in.
            
             @param signedData the signed data object to be used as a base.
             @param x509Certs the new certificates to be used.
             @param x509Crls the new CRLs to be used.
             @return a new signed data object.
             @exception CmsException if there is an error processing the stores
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsSignedData.Version">
            <summary>Return the version number for this object.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsSignedData.SignedContentType">
            <summary>
            Return the <c>DerObjectIdentifier</c> associated with the encapsulated
            content info structure carried in the signed data.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsSignedData.ContentInfo">
            return the ContentInfo
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsSignedDataGenerator">
                 * general class for generating a pkcs7-signature message.
                 * <p>
                 * A simple example of usage.
                 *
                 * <pre>
                 *      IX509Store certs...
                 *      IX509Store crls...
                 *      CmsSignedDataGenerator gen = new CmsSignedDataGenerator();
                 *
                 *      gen.AddSigner(privKey, cert, CmsSignedGenerator.DigestSha1);
                 *      gen.AddCertificates(certs);
                 *      gen.AddCrls(crls);
                 *
                 *      CmsSignedData data = gen.Generate(content);
                 * </pre>
            	 * </p>
        </member>
        <member name="F:Org.BouncyCastle.Cms.CmsSignedGenerator.Data">
            Default type for the signed data.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            <summary>Constructor allowing specific source of randomness</summary>
            <param name="rand">Instance of <c>SecureRandom</c> to use.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedGenerator.AddAttributeCertificates(Org.BouncyCastle.X509.Store.IX509Store)">
             Add the attribute certificates contained in the passed in store to the
             generator.
            
             @param store a store of Version 2 attribute certificates
             @throws CmsException if an error occurse processing the store.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedGenerator.AddSigners(Org.BouncyCastle.Cms.SignerInformationStore)">
             Add a store of precalculated signers to the generator.
            
             @param signerStore store of signers
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedGenerator.GetGeneratedDigests">
             Return a map of oids and byte arrays representing the digests calculated on the content during
             the last generate.
            
             @return a map of oids (as string objects) and byte[] representing digests.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            <summary>Constructor allowing specific source of randomness</summary>
            <param name="rand">Instance of <c>SecureRandom</c> to use.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String)">
                    * add a signer - no attributes other than the default ones will be
                    * provided here.
            		*
            		* @param key signing key to use
            		* @param cert certificate containing corresponding public key
            		* @param digestOID digest algorithm OID
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,System.String)">
             add a signer, specifying the digest encryption algorithm to use - no attributes other than the default ones will be
             provided here.
            
             @param key signing key to use
             @param cert certificate containing corresponding public key
             @param encryptionOID digest encryption algorithm OID
             @param digestOID digest algorithm OID
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String)">
            add a signer - no attributes other than the default ones will be
            provided here.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String,System.String)">
            add a signer, specifying the digest encryption algorithm to use - no attributes other than the default ones will be
            provided here.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
                    * add a signer with extra signed/unsigned attributes.
            		*
            		* @param key signing key to use
            		* @param cert certificate containing corresponding public key
            		* @param digestOID digest algorithm OID
            		* @param signedAttr table of attributes to be included in signature
            		* @param unsignedAttr table of attributes to be included as unsigned
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
             add a signer, specifying the digest encryption algorithm, with extra signed/unsigned attributes.
            
             @param key signing key to use
             @param cert certificate containing corresponding public key
             @param encryptionOID digest encryption algorithm OID
             @param digestOID digest algorithm OID
             @param signedAttr table of attributes to be included in signature
             @param unsignedAttr table of attributes to be included as unsigned
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
            	     * add a signer with extra signed/unsigned attributes.
            		 *
            		 * @param key signing key to use
            		 * @param subjectKeyID subjectKeyID of corresponding public key
            		 * @param digestOID digest algorithm OID
            		 * @param signedAttr table of attributes to be included in signature
            		 * @param unsignedAttr table of attributes to be included as unsigned
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String,System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
             add a signer, specifying the digest encryption algorithm, with extra signed/unsigned attributes.
            
             @param key signing key to use
             @param subjectKeyID subjectKeyID of corresponding public key
             @param encryptionOID digest encryption algorithm OID
             @param digestOID digest algorithm OID
             @param signedAttr table of attributes to be included in signature
             @param unsignedAttr table of attributes to be included as unsigned
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,Org.BouncyCastle.Cms.CmsAttributeTableGenerator,Org.BouncyCastle.Cms.CmsAttributeTableGenerator)">
            add a signer with extra signed/unsigned attributes based on generators.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,System.String,Org.BouncyCastle.Cms.CmsAttributeTableGenerator,Org.BouncyCastle.Cms.CmsAttributeTableGenerator)">
            add a signer, specifying the digest encryption algorithm, with extra signed/unsigned attributes based on generators.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String,Org.BouncyCastle.Cms.CmsAttributeTableGenerator,Org.BouncyCastle.Cms.CmsAttributeTableGenerator)">
            add a signer with extra signed/unsigned attributes based on generators.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String,System.String,Org.BouncyCastle.Cms.CmsAttributeTableGenerator,Org.BouncyCastle.Cms.CmsAttributeTableGenerator)">
            add a signer, including digest encryption algorithm, with extra signed/unsigned attributes based on generators.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable)">
            generate a signed object that for a CMS Signed Data object
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.Generate(System.String,Org.BouncyCastle.Cms.CmsProcessable,System.Boolean)">
            generate a signed object that for a CMS Signed Data
            object  - if encapsulate is true a copy
            of the message will be included in the signature. The content type
            is set according to the OID represented by the string signedContentType.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.Generate(Org.BouncyCastle.Cms.CmsProcessable,System.Boolean)">
            generate a signed object that for a CMS Signed Data
            object - if encapsulate is true a copy
            of the message will be included in the signature with the
            default content type "data".
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataGenerator.GenerateCounterSigners(Org.BouncyCastle.Cms.SignerInformation)">
             generate a set of one or more SignerInformation objects representing counter signatures on
             the passed in SignerInformation object.
            
             @param signer the signer to be countersigned
             @param sigProvider the provider to be used for counter signing.
             @return a store containing the signers.
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsSignedDataParser">
             Parsing class for an CMS Signed Data object from an input stream.
             <p>
             Note: that because we are in a streaming mode only one signer can be tried and it is important
             that the methods on the parser are called in the appropriate order.
             </p>
             <p>
             A simple example of usage for an encapsulated signature.
             </p>
             <p>
             Two notes: first, in the example below the validity of
             the certificate isn't verified, just the fact that one of the certs
             matches the given signer, and, second, because we are in a streaming
             mode the order of the operations is important.
             </p>
             <pre>
                  CmsSignedDataParser     sp = new CmsSignedDataParser(encapSigData);
            
                  sp.GetSignedContent().Drain();
            
                  IX509Store              certs = sp.GetCertificates();
                  SignerInformationStore  signers = sp.GetSignerInfos();
            
                  foreach (SignerInformation signer in signers.GetSigners())
                  {
                      ArrayList       certList = new ArrayList(certs.GetMatches(signer.SignerID));
                      X509Certificate cert = (X509Certificate) certList[0];
            
                      Console.WriteLine("verify returns: " + signer.Verify(cert));
                  }
             </pre>
              Note also: this class does not introduce buffering - if you are processing large files you should create
              the parser with:
              <pre>
                      CmsSignedDataParser     ep = new CmsSignedDataParser(new BufferedInputStream(encapSigData, bufSize));
              </pre>
              where bufSize is a suitably large buffer size.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.#ctor(System.IO.Stream)">
            base constructor - with encapsulated content
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.#ctor(Org.BouncyCastle.Cms.CmsTypedStream,System.IO.Stream)">
             base constructor
            
             @param signedContent the content that was signed.
             @param sigData the signature object.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.GetSignerInfos">
            return the collection of signers that are associated with the
            signatures for the message.
            @throws CmsException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.GetAttributeCertificates(System.String)">
             return a X509Store containing the attribute certificates, if any, contained
             in this message.
            
             @param type type of store to create
             @return a store of attribute certificates
             @exception org.bouncycastle.x509.NoSuchStoreException if the store type isn't available.
             @exception CmsException if a general exception prevents creation of the X509Store
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.GetCertificates(System.String)">
             return a X509Store containing the public key certificates, if any, contained
             in this message.
            
             @param type type of store to create
             @return a store of public key certificates
             @exception NoSuchStoreException if the store type isn't available.
             @exception CmsException if a general exception prevents creation of the X509Store
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.GetCrls(System.String)">
             return a X509Store containing CRLs, if any, contained
             in this message.
            
             @param type type of store to create
             @return a store of CRLs
             @exception NoSuchStoreException if the store type isn't available.
             @exception CmsException if a general exception prevents creation of the X509Store
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.ReplaceSigners(System.IO.Stream,Org.BouncyCastle.Cms.SignerInformationStore,System.IO.Stream)">
            Replace the signerinformation store associated with the passed
            in message contained in the stream original with the new one passed in.
            You would probably only want to do this if you wanted to change the unsigned
            attributes associated with a signer, or perhaps delete one.
            <p>
            The output stream is returned unclosed.
            </p>
            @param original the signed data stream to be used as a base.
            @param signerInformationStore the new signer information store to use.
            @param out the stream to Write the new signed data object to.
            @return out.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataParser.ReplaceCertificatesAndCrls(System.IO.Stream,Org.BouncyCastle.X509.Store.IX509Store,Org.BouncyCastle.X509.Store.IX509Store,Org.BouncyCastle.X509.Store.IX509Store,System.IO.Stream)">
            Replace the certificate and CRL information associated with this
            CMSSignedData object with the new one passed in.
            <p>
            The output stream is returned unclosed.
            </p>
            @param original the signed data stream to be used as a base.
            @param certsAndCrls the new certificates and CRLs to be used.
            @param out the stream to Write the new signed data object to.
            @return out.
            @exception CmsException if there is an error processing the CertStore
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsSignedDataParser.Version">
             Return the version number for the SignedData object
            
             @return the version number
        </member>
        <member name="P:Org.BouncyCastle.Cms.CmsSignedDataParser.SignedContentType">
            <summary>
            Return the <c>DerObjectIdentifier</c> associated with the encapsulated
            content info structure carried in the signed data.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator">
             General class for generating a pkcs7-signature message stream.
             <p>
             A simple example of usage.
             </p>
             <pre>
                  IX509Store                   certs...
                  CmsSignedDataStreamGenerator gen = new CmsSignedDataStreamGenerator();
            
                  gen.AddSigner(privateKey, cert, CmsSignedDataStreamGenerator.DIGEST_SHA1);
            
                  gen.AddCertificates(certs);
            
                  Stream sigOut = gen.Open(bOut);
            
                  sigOut.Write(Encoding.UTF8.GetBytes("Hello World!"));
            
                  sigOut.Close();
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            <summary>Constructor allowing specific source of randomness</summary>
            <param name="rand">Instance of <c>SecureRandom</c> to use.</param>
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.SetBufferSize(System.Int32)">
             Set the underlying string size for encapsulated data
            
             @param bufferSize length of octet strings to buffer the data.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String)">
            add a signer - no attributes other than the default ones will be
            provided here.
            @throws NoSuchAlgorithmException
            @throws InvalidKeyException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,System.String)">
            add a signer, specifying the digest encryption algorithm - no attributes other than the default ones will be
            provided here.
            @throws NoSuchProviderException
            @throws NoSuchAlgorithmException
            @throws InvalidKeyException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
            add a signer with extra signed/unsigned attributes.
            @throws NoSuchAlgorithmException
            @throws InvalidKeyException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
            add a signer with extra signed/unsigned attributes - specifying digest
            encryption algorithm.
            @throws NoSuchProviderException
            @throws NoSuchAlgorithmException
            @throws InvalidKeyException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String)">
            add a signer - no attributes other than the default ones will be
            provided here.
            @throws NoSuchAlgorithmException
            @throws InvalidKeyException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String,System.String)">
            add a signer - no attributes other than the default ones will be
            provided here.
            @throws NoSuchProviderException
            @throws NoSuchAlgorithmException
            @throws InvalidKeyException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.AddSigner(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[],System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
            add a signer with extra signed/unsigned attributes.
            @throws NoSuchAlgorithmException
            @throws InvalidKeyException
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.Open(System.IO.Stream)">
            generate a signed object that for a CMS Signed Data object
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.Open(System.IO.Stream,System.Boolean)">
            generate a signed object that for a CMS Signed Data
            object - if encapsulate is true a copy
            of the message will be included in the signature with the
            default content type "data".
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.Open(System.IO.Stream,System.Boolean,System.IO.Stream)">
            generate a signed object that for a CMS Signed Data
            object using the given provider - if encapsulate is true a copy
            of the message will be included in the signature with the
            default content type "data". If dataOutputStream is non null the data
            being signed will be written to the stream as it is processed.
            @param out stream the CMS object is to be written to.
            @param encapsulate true if data should be encapsulated.
            @param dataOutputStream output stream to copy the data being signed to.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.Open(System.IO.Stream,System.String,System.Boolean)">
            generate a signed object that for a CMS Signed Data
            object - if encapsulate is true a copy
            of the message will be included in the signature. The content type
            is set according to the OID represented by the string signedContentType.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedDataStreamGenerator.Open(System.IO.Stream,System.String,System.Boolean,System.IO.Stream)">
            generate a signed object that for a CMS Signed Data
            object using the given provider - if encapsulate is true a copy
            of the message will be included in the signature. The content type
            is set according to the OID represented by the string signedContentType.
            @param out stream the CMS object is to be written to.
            @param signedContentType OID for data to be signed.
            @param encapsulate true if data should be encapsulated.
            @param dataOutputStream output stream to copy the data being signed to.
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedHelper.GetDigestAlgName(System.String)">
            Return the digest algorithm using one of the standard JCA string
            representations rather than the algorithm identifier (if possible).
        </member>
        <member name="M:Org.BouncyCastle.Cms.CmsSignedHelper.GetEncryptionAlgName(System.String)">
            Return the digest encryption algorithm using one of the standard
            JCA string representations rather than the algorithm identifier (if
            possible).
        </member>
        <member name="T:Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator">
            Default authenticated attributes generator.
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator.#ctor">
            Initialise to use all defaults
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator.#ctor(Org.BouncyCastle.Asn1.Cms.AttributeTable)">
             Initialise with some extra attributes or overrides.
            
             @param attributeTable initial attribute table to use.
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator.CreateStandardAttributeTable(System.Collections.IDictionary)">
             Create a standard attribute table from the passed in parameters - this will
             normally include contentType and messageDigest. If the constructor
             using an AttributeTable was used, entries in it for contentType and
             messageDigest will override the generated ones.
            
             @param parameters source parameters for table generation.
            
             @return a filled in IDictionary of attributes.
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultAuthenticatedAttributeTableGenerator.GetAttributes(System.Collections.IDictionary)">
            @param parameters source parameters
            @return the populated attribute table
        </member>
        <member name="T:Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator">
            Default signed attributes generator.
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator.#ctor">
            Initialise to use all defaults
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator.#ctor(Org.BouncyCastle.Asn1.Cms.AttributeTable)">
             Initialise with some extra attributes or overrides.
            
             @param attributeTable initial attribute table to use.
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator.createStandardAttributeTable(System.Collections.IDictionary)">
             Create a standard attribute table from the passed in parameters - this will
             normally include contentType, signingTime, and messageDigest. If the constructor
             using an AttributeTable was used, entries in it for contentType, signingTime, and
             messageDigest will override the generated ones.
            
             @param parameters source parameters for table generation.
            
             @return a filled in Hashtable of attributes.
        </member>
        <member name="M:Org.BouncyCastle.Cms.DefaultSignedAttributeTableGenerator.GetAttributes(System.Collections.IDictionary)">
            @param parameters source parameters
            @return the populated attribute table
        </member>
        <member name="M:Org.BouncyCastle.Cms.RecipientInfoGenerator.Generate(Org.BouncyCastle.Crypto.Parameters.KeyParameter,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Generate a RecipientInfo object for the given key.
            </summary>
            <param name="contentEncryptionKey">
            A <see cref="T:Org.BouncyCastle.Crypto.Parameters.KeyParameter"/>
            </param>
            <param name="random">
            A <see cref="T:Org.BouncyCastle.Security.SecureRandom"/>
            </param>
            <returns>
            A <see cref="T:Org.BouncyCastle.Asn1.Cms.RecipientInfo"/>
            </returns>
            <exception> <see cref="T:Org.BouncyCastle.Security.GeneralSecurityException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Cms.KekRecipientInformation">
            the RecipientInfo class for a recipient who has been sent a message
            encrypted using a secret key known to the other side.
        </member>
        <member name="M:Org.BouncyCastle.Cms.RecipientInformation.GetMac">
             Return the MAC calculated for the content stream. Note: this call is only meaningful once all
             the content has been read.
            
             @return  byte array containing the mac.
        </member>
        <member name="P:Org.BouncyCastle.Cms.RecipientInformation.KeyEncryptionAlgOid">
                    * return the object identifier for the key encryption algorithm.
                    * 
            		* @return OID for key encryption algorithm.
        </member>
        <member name="P:Org.BouncyCastle.Cms.RecipientInformation.KeyEncryptionAlgParams">
                    * return the ASN.1 encoded key encryption algorithm parameters, or null if
                    * there aren't any.
                    * 
            		* @return ASN.1 encoding of key encryption algorithm parameters.
        </member>
        <member name="M:Org.BouncyCastle.Cms.KekRecipientInformation.GetContentStream(Org.BouncyCastle.Crypto.ICipherParameters)">
            decrypt the content and return an input stream.
        </member>
        <member name="T:Org.BouncyCastle.Cms.KeyAgreeRecipientInformation">
            the RecipientInfo class for a recipient who has been sent a message
            encrypted using key agreement.
        </member>
        <member name="M:Org.BouncyCastle.Cms.KeyAgreeRecipientInformation.GetContentStream(Org.BouncyCastle.Crypto.ICipherParameters)">
            decrypt the content and return an input stream.
        </member>
        <member name="T:Org.BouncyCastle.Cms.KeyTransRecipientInformation">
            the KeyTransRecipientInformation class for a recipient who has been sent a secret
            key encrypted using their public key that needs to be used to
            extract the message.
        </member>
        <member name="M:Org.BouncyCastle.Cms.KeyTransRecipientInformation.GetContentStream(Org.BouncyCastle.Crypto.ICipherParameters)">
            decrypt the content and return it as a byte array.
        </member>
        <member name="T:Org.BouncyCastle.Cms.OriginatorID">
            a basic index for an originator.
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CertStoreSelector.Policy">
            <summary>
            An <code>ISet</code> of <code>DerObjectIdentifier</code> objects.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Cms.OriginatorInformation.GetCertificates">
             Return the certificates stored in the underlying OriginatorInfo object.
            
             @return a Store of X509CertificateHolder objects.
        </member>
        <member name="M:Org.BouncyCastle.Cms.OriginatorInformation.GetCrls">
             Return the CRLs stored in the underlying OriginatorInfo object.
            
             @return a Store of X509CRLHolder objects.
        </member>
        <member name="M:Org.BouncyCastle.Cms.OriginatorInformation.ToAsn1Structure">
             Return the underlying ASN.1 object defining this SignerInformation object.
            
             @return a OriginatorInfo.
        </member>
        <member name="T:Org.BouncyCastle.Cms.PasswordRecipientInformation">
            the RecipientInfo class for a recipient who has been sent a message
            encrypted using a password.
        </member>
        <member name="M:Org.BouncyCastle.Cms.PasswordRecipientInformation.GetContentStream(Org.BouncyCastle.Crypto.ICipherParameters)">
            decrypt the content and return an input stream.
        </member>
        <member name="P:Org.BouncyCastle.Cms.PasswordRecipientInformation.KeyDerivationAlgorithm">
             return the object identifier for the key derivation algorithm, or null
             if there is none present.
            
             @return OID for key derivation algorithm, if present.
        </member>
        <member name="T:Org.BouncyCastle.Cms.Pkcs5Scheme2PbeKey">
            <summary>
            PKCS5 scheme-2 - password converted to bytes assuming ASCII.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Cms.Pkcs5Scheme2Utf8PbeKey">
            PKCS5 scheme-2 - password converted to bytes using UTF-8.
        </member>
        <member name="M:Org.BouncyCastle.Cms.RecipientInformationStore.GetFirstRecipient(Org.BouncyCastle.Cms.RecipientID)">
             Return the first RecipientInformation object that matches the
             passed in selector. Null if there are no matches.
            
             @param selector to identify a recipient
             @return a single RecipientInformation object. Null if none matches.
        </member>
        <member name="M:Org.BouncyCastle.Cms.RecipientInformationStore.GetRecipients">
             Return all recipients in the collection
            
             @return a collection of recipients.
        </member>
        <member name="M:Org.BouncyCastle.Cms.RecipientInformationStore.GetRecipients(Org.BouncyCastle.Cms.RecipientID)">
             Return possible empty collection with recipients matching the passed in RecipientID
            
             @param selector a recipient id to select against.
             @return a collection of RecipientInformation objects.
        </member>
        <member name="P:Org.BouncyCastle.Cms.RecipientInformationStore.Count">
             Return the number of recipients in the collection.
            
             @return number of recipients identified.
        </member>
        <member name="T:Org.BouncyCastle.Cms.SignerID">
            a basic index for a signer.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInfoGeneratorBuilder.SetDirectSignature(System.Boolean)">
             If the passed in flag is true, the signer signature will be based on the data, not
             a collection of signed attributes, and no signed attributes will be included.
            
             @return the builder object
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInfoGeneratorBuilder.WithSignedAttributeGenerator(Org.BouncyCastle.Cms.CmsAttributeTableGenerator)">
              Provide a custom signed attribute generator.
            
             @param signedGen a generator of signed attributes.
             @return the builder object
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInfoGeneratorBuilder.WithUnsignedAttributeGenerator(Org.BouncyCastle.Cms.CmsAttributeTableGenerator)">
             Provide a generator of unsigned attributes.
            
             @param unsignedGen  a generator for signed attributes.
             @return the builder object
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInfoGeneratorBuilder.Build(Org.BouncyCastle.Crypto.ISignatureFactory,Org.BouncyCastle.X509.X509Certificate)">
             Build a generator with the passed in X.509 certificate issuer and serial number as the signerIdentifier.
            
             @param contentSigner  operator for generating the final signature in the SignerInfo with.
             @param certificate  X.509 certificate related to the contentSigner.
             @return  a SignerInfoGenerator
             @throws OperatorCreationException   if the generator cannot be built.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInfoGeneratorBuilder.Build(Org.BouncyCastle.Crypto.ISignatureFactory,System.Byte[])">
             Build a generator with the passed in subjectKeyIdentifier as the signerIdentifier. If used  you should
             try to follow the calculation described in RFC 5280 section 4.2.1.2.
            
             @param signerFactory  operator factory for generating the final signature in the SignerInfo with.
             @param subjectKeyIdentifier    key identifier to identify the public key for verifying the signature.
             @return  a SignerInfoGenerator
        </member>
        <member name="T:Org.BouncyCastle.Cms.SignerInformation">
            an expanded SignerInfo block from a CMS Signed message
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.#ctor(Org.BouncyCastle.Cms.SignerInformation)">
             Protected constructor. In some cases clients have their own idea about how to encode
             the signed attributes and calculate the signature. This constructor is to allow developers
             to deal with that by extending off the class and overriding e.g. SignedAttributes property.
            
             @param baseInfo the SignerInformation to base this one on.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.GetContentDigest">
            return the content digest that was calculated during verification.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.GetSignature">
            return the encoded signature
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.GetCounterSignatures">
            Return a SignerInformationStore containing the counter signatures attached to this
            signer. If no counter signatures are present an empty store is returned.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.GetEncodedSignedAttributes">
            return the DER encoding of the signed attributes.
            @throws IOException if an encoding error occurs.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.Verify(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            verify that the given public key successfully handles and confirms the
            signature associated with this signer.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.Verify(Org.BouncyCastle.X509.X509Certificate)">
            verify that the given certificate successfully handles and confirms
            the signature associated with this signer and, if a signingTime
            attribute is available, that the certificate was valid at the time the
            signature was generated.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.ToSignerInfo">
             Return the base ASN.1 CMS structure that this object contains.
            
             @return an object containing a CMS SignerInfo structure.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.ReplaceUnsignedAttributes(Org.BouncyCastle.Cms.SignerInformation,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
             Return a signer information object with the passed in unsigned
             attributes replacing the ones that are current associated with
             the object passed in.
            
             @param signerInformation the signerInfo to be used as the basis.
             @param unsignedAttributes the unsigned attributes to add.
             @return a copy of the original SignerInformationObject with the changed attributes.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformation.AddCounterSigners(Org.BouncyCastle.Cms.SignerInformation,Org.BouncyCastle.Cms.SignerInformationStore)">
             Return a signer information object with passed in SignerInformationStore representing counter
             signatures attached as an unsigned attribute.
            
             @param signerInformation the signerInfo to be used as the basis.
             @param counterSigners signer info objects carrying counter signature.
             @return a copy of the original SignerInformationObject with the changed attributes.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformation.Version">
            return the version number for this objects underlying SignerInfo structure.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformation.DigestAlgOid">
            return the object identifier for the signature.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformation.DigestAlgParams">
            return the signature parameters, or null if there aren't any.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformation.EncryptionAlgOid">
            return the object identifier for the signature.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformation.EncryptionAlgParams">
            return the signature/encryption algorithm parameters, or null if
            there aren't any.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformation.SignedAttributes">
            return a table of the signed attributes - indexed by
            the OID of the attribute.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformation.UnsignedAttributes">
            return a table of the unsigned attributes indexed by
            the OID of the attribute.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformationStore.#ctor(Org.BouncyCastle.Cms.SignerInformation)">
             Create a store containing a single SignerInformation object.
            
             @param signerInfo the signer information to contain.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformationStore.#ctor(System.Collections.ICollection)">
             Create a store containing a collection of SignerInformation objects.
            
             @param signerInfos a collection signer information objects to contain.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformationStore.GetFirstSigner(Org.BouncyCastle.Cms.SignerID)">
             Return the first SignerInformation object that matches the
             passed in selector. Null if there are no matches.
            
             @param selector to identify a signer
             @return a single SignerInformation object. Null if none matches.
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformationStore.GetSigners">
            <returns>An ICollection of all signers in the collection</returns>
        </member>
        <member name="M:Org.BouncyCastle.Cms.SignerInformationStore.GetSigners(Org.BouncyCastle.Cms.SignerID)">
             Return possible empty collection with signers matching the passed in SignerID
            
             @param selector a signer id to select against.
             @return a collection of SignerInformation objects.
        </member>
        <member name="P:Org.BouncyCastle.Cms.SignerInformationStore.Count">
            <summary>The number of signers in the collection.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Cms.SimpleAttributeTableGenerator">
            Basic generator that just returns a preconstructed attribute table
        </member>
        <member name="T:Org.BouncyCastle.Crmf.AuthenticatorControl">
            <summary>
            Carrier for an authenticator control.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crmf.IControl">
            <summary>
            Generic interface for a CertificateRequestMessage control value.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.IControl.Type">
            <summary>
            Return the type of this control.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.IControl.Value">
            <summary>
            Return the value contained in this control object.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.AuthenticatorControl.#ctor(Org.BouncyCastle.Asn1.DerUtf8String)">
            <summary>
            Basic constructor - build from a UTF-8 string representing the token.
            </summary>
            <param name="token">UTF-8 string representing the token.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.AuthenticatorControl.#ctor(System.String)">
            <summary>
            Basic constructor - build from a string representing the token.
            </summary>
            <param name="token">string representing the token.</param>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.AuthenticatorControl.Type">
            <summary>
            Return the type of this control.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.AuthenticatorControl.Value">
            <summary>
            Return the token associated with this control (a UTF8String).
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.CertificateRequestMessage.#ctor(System.Byte[])">
            <summary>
            Create a CertificateRequestMessage from the passed in bytes.
            </summary>
            <param name="encoded">BER/DER encoding of the CertReqMsg structure.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.CertificateRequestMessage.ToAsn1Structure">
            <summary>
            Return the underlying ASN.1 object defining this CertificateRequestMessage object.
            </summary>
            <returns>A CertReqMsg</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.CertificateRequestMessage.GetCertTemplate">
            <summary>
            Return the certificate template contained in this message.
            </summary>
            <returns>a CertTemplate structure.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.CertificateRequestMessage.HasControl(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            <summary>
            Return whether or not this request has a specific type of control value.
            </summary>
            <param name="objectIdentifier">the type OID for the control value we are checking for.</param>
            <returns>true if a control value of type is present, false otherwise.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.CertificateRequestMessage.GetControl(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            <summary>
            Return a control value of the specified type.
            </summary>
            <param name="type">the type OID for the control value we are checking for.</param>
            <returns>the control value if present, null otherwise.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.CertificateRequestMessage.IsValidSigningKeyPop(Org.BouncyCastle.Crypto.IVerifierFactoryProvider)">
            <summary>
            Return whether or not a signing key proof-of-possession (POP) is valid.
            </summary>
            <param name="verifierProvider">a provider that can produce content verifiers for the signature contained in this POP.</param>
            <returns>true if the POP is valid, false otherwise.</returns>
            <exception> <see cref="T:System.InvalidOperationException"/>if there is a problem in verification or content verifier creation.</exception>
            <exception> <see cref="T:System.InvalidOperationException"/>if POP not appropriate.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.CertificateRequestMessage.GetEncoded">
            <summary>
            Return the ASN.1 encoding of the certReqMsg we wrap.
            </summary>
            <returns>a byte array containing the binary encoding of the certReqMsg.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.CertificateRequestMessage.HasControls">
            <summary>
            Return whether or not this request has control values associated with it.
            </summary>
            <returns>true if there are control values present, false otherwise.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.CertificateRequestMessage.HasProofOfPossession">
            <summary>
            Return whether or not this request message has a proof-of-possession field in it.
            </summary>
            <returns>true if proof-of-possession is present, false otherwise.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.CertificateRequestMessage.ProofOfPossession">
            <summary>
            Return the type of the proof-of-possession this request message provides.
            </summary>
            <returns>one of: popRaVerified, popSigningKey, popKeyEncipherment, popKeyAgreement</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.CertificateRequestMessage.HasSigningKeyProofOfPossessionWithPkMac">
            <summary>
            Return whether or not the proof-of-possession (POP) is of the type popSigningKey and
            it has a public key MAC associated with it.
            </summary>
            <returns>true if POP is popSigningKey and a PKMAC is present, false otherwise.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.EncryptedValueBuilder.#ctor(Org.BouncyCastle.Crypto.IKeyWrapper,Org.BouncyCastle.Crypto.ICipherBuilderWithKey)">
            
             Create a builder that makes EncryptedValue structures.
            
             <param name="wrapper">wrapper a wrapper for key used to encrypt the actual data contained in the EncryptedValue.</param>
             <param name="encryptor">encryptor  an output encryptor to encrypt the actual data contained in the EncryptedValue. </param>
            
        </member>
        <member name="M:Org.BouncyCastle.Crmf.EncryptedValueBuilder.#ctor(Org.BouncyCastle.Crypto.IKeyWrapper,Org.BouncyCastle.Crypto.ICipherBuilderWithKey,Org.BouncyCastle.Crmf.IEncryptedValuePadder)">
            
             Create a builder that makes EncryptedValue structures with fixed length blocks padded using the passed in padder.
            
             <param name="wrapper">a wrapper for key used to encrypt the actual data contained in the EncryptedValue.</param>
             <param name="encryptor">encryptor  an output encryptor to encrypt the actual data contained in the EncryptedValue.</param>
             <param name="padder">padder a padder to ensure that the EncryptedValue created will always be a constant length.</param>
            
        </member>
        <member name="M:Org.BouncyCastle.Crmf.EncryptedValueBuilder.Build(System.Char[])">
            
             Build an EncryptedValue structure containing the passed in pass phrase.
            
             <param name="revocationPassphrase">a revocation pass phrase.</param>
            <returns>an EncryptedValue containing the encrypted pass phrase.</returns>       
            
        </member>
        <member name="M:Org.BouncyCastle.Crmf.EncryptedValueBuilder.Build(Org.BouncyCastle.X509.X509Certificate)">
            <summary>
             Build an EncryptedValue structure containing the certificate contained in
             the passed in holder.
            </summary>
             <param name="holder">a holder containing a certificate.</param>
              <returns>an EncryptedValue containing the encrypted certificate.</returns>
             <exception> <see cref="T:Org.BouncyCastle.Crmf.CrmfException"/>on a failure to encrypt the data, or wrap the symmetric key for this value.</exception>
            
        </member>
        <member name="M:Org.BouncyCastle.Crmf.EncryptedValueBuilder.Build(Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo)">
            <summary>
             Build an EncryptedValue structure containing the private key contained in
             the passed info structure.
            </summary>
             <param name="privateKeyInfo">a PKCS#8 private key info structure.</param>
             <returns>an EncryptedValue containing an EncryptedPrivateKeyInfo structure.</returns>
             <exception> <see cref="T:Org.BouncyCastle.Crmf.CrmfException"/>on a failure to encrypt the data, or wrap the symmetric key for this value.</exception>
            
        </member>
        <member name="T:Org.BouncyCastle.Crmf.IEncryptedValuePadder">
            <summary>
            An encrypted value padder is used to make sure that prior to a value been
            encrypted the data is padded to a standard length.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.IEncryptedValuePadder.GetPaddedData(System.Byte[])">
            
             <summary>Return a byte array of padded data.</summary>
            
             <param name="data">the data to be padded.</param>
             <returns>a padded byte array containing data.</returns>
            
        </member>
        <member name="M:Org.BouncyCastle.Crmf.IEncryptedValuePadder.GetUnpaddedData(System.Byte[])">
            
             <summary>Return a byte array of with padding removed.</summary>
            
             <param name="paddedData">the data to be padded.</param>
             <returns>an array containing the original unpadded data.</returns>
            
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PkiArchiveControl.#ctor(Org.BouncyCastle.Asn1.Crmf.PkiArchiveOptions)">
            <summary>
            Basic constructor - build from an PKIArchiveOptions structure.
            </summary>
            <param name="pkiArchiveOptions">the ASN.1 structure that will underlie this control.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PkiArchiveControl.GetEnvelopedData">
            <summary>
            Return the enveloped data structure contained in this control.
            </summary>
            <returns>a CMSEnvelopedData object.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.PkiArchiveControl.Type">
            <summary>
            Return the type of this control.
            </summary>
            <returns>CRMFObjectIdentifiers.id_regCtrl_pkiArchiveOptions</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.PkiArchiveControl.Value">
            <summary>
            Return the underlying ASN.1 object.
            </summary>
            <returns>a PKIArchiveOptions structure.</returns>    
        </member>
        <member name="P:Org.BouncyCastle.Crmf.PkiArchiveControl.ArchiveType">
            <summary>
            Return the archive control type, one of: encryptedPrivKey,keyGenParameters,or archiveRemGenPrivKey.
            </summary>
            <returns>the archive control type.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.PkiArchiveControl.EnvelopedData">
            <summary>
            Return whether this control contains enveloped data.
            </summary>
            <returns>true if the control contains enveloped data, false otherwise.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PkiArchiveControlBuilder.#ctor(Org.BouncyCastle.Asn1.Pkcs.PrivateKeyInfo,Org.BouncyCastle.Asn1.X509.GeneralName)">
             <summary>
            Basic constructor - specify the contents of the PKIArchiveControl structure.
             </summary>
             <param name="privateKeyInfo">the private key to be archived.</param>
             <param name="generalName">the general name to be associated with the private key.</param>
            
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PkiArchiveControlBuilder.AddRecipientGenerator(Org.BouncyCastle.Cms.RecipientInfoGenerator)">
            <summary>Add a recipient generator to this control.</summary>       
            <param name="recipientGen"> recipient generator created for a specific recipient.</param>
            <returns>this builder object.</returns>       
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PkiArchiveControlBuilder.Build(Org.BouncyCastle.Crypto.ICipherBuilderWithKey)">
            <summary>Build the PKIArchiveControl using the passed in encryptor to encrypt its contents.</summary>
            <param name="contentEncryptor">a suitable content encryptor.</param>
            <returns>a PKIArchiveControl object.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IStreamCalculator">
            <summary>
            Base interface for cryptographic operations such as Hashes, MACs, and Signatures which reduce a stream of data
            to a single value.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IStreamCalculator.GetResult">
            <summary>
            Return the result of processing the stream. This value is only available once the stream
            has been closed.
            </summary>
            <returns>The result of processing the stream.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IStreamCalculator.Stream">
            <summary>Return a "sink" stream which only exists to update the implementing object.</summary>
            <returns>A stream to write to in order to update the implementing object.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IMacFactory.CreateCalculator">
            <summary>
            Create a stream calculator for this signature calculator. The stream
            calculator is used for the actual operation of entering the data to be signed
            and producing the signature block.
            </summary>
            <returns>A calculator producing an IBlockResult with a signature in it.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IMacFactory.AlgorithmDetails">
            <summary>The algorithm details object for this calculator.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IBlockResult">
            <summary>
            Operators that reduce their input to a single block return an object
            of this type.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBlockResult.Collect">
            <summary>
            Return the final result of the operation.
            </summary>
            <returns>A block of bytes, representing the result of an operation.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBlockResult.Collect(System.Byte[],System.Int32)">
            <summary>
            Store the final result of the operation by copying it into the destination array.
            </summary>
            <returns>The number of bytes copied into destination.</returns>
            <param name="destination">The byte array to copy the result into.</param>
            <param name="offset">The offset into destination to start copying the result at.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.#ctor">
            <summary>
            Default, IterationCount = 1000, OIW=IdSha1, Mac=HmacSHA1
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.#ctor(Org.BouncyCastle.Crmf.IPKMacPrimitivesProvider)">
            <summary>
            Defaults with IPKMacPrimitivesProvider
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.#ctor(Org.BouncyCastle.Crmf.IPKMacPrimitivesProvider,Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier,Org.BouncyCastle.Asn1.X509.AlgorithmIdentifier)">
            <summary>
            Create.
            </summary>
            <param name="provider">The Mac provider</param>
            <param name="digestAlgorithmIdentifier">Digest Algorithm Id</param>
            <param name="macAlgorithmIdentifier">Mac Algorithm Id</param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.#ctor(Org.BouncyCastle.Crmf.IPKMacPrimitivesProvider,System.Int32)">
            <summary>
            Create a PKMAC builder enforcing a ceiling on the maximum iteration count.
            </summary>
            <param name="provider">supporting calculator</param>
            <param name="maxIterations">max allowable value for iteration count.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.SetSaltLength(System.Int32)">
             Set the salt length in octets.
            
             @param saltLength length in octets of the salt to be generated.
             @return the generator
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.SetIterationCount(System.Int32)">
            <summary>
            Set the iteration count.
            </summary>
            <param name="iterationCount">the iteration count.</param>
            <returns>this</returns>
            <exception> <see cref="T:System.ArgumentException"/>if iteration count is less than 100</exception>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.SetParameters(Org.BouncyCastle.Asn1.Cmp.PbmParameter)">
            <summary>
            Set PbmParameters
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>this</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.SetSecureRandom(Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            The Secure random
            </summary>
            <param name="random">The random.</param>
            <returns>this</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.PKMacBuilder.Build(System.Char[])">
            <summary>
            Build an IMacFactory.
            </summary>
            <param name="password">The password.</param>
            <returns>IMacFactory</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.RegTokenControl.#ctor(Org.BouncyCastle.Asn1.DerUtf8String)">
            <summary>
            Basic constructor - build from a UTF-8 string representing the token.
            </summary>
            <param name="token">UTF-8 string representing the token.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crmf.RegTokenControl.#ctor(System.String)">
            <summary>
            Basic constructor - build from a string representing the token.
            </summary>
            <param name="token">string representing the token.</param>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.RegTokenControl.Type">
            <summary>
            Return the type of this control.
            </summary>
            <returns>CRMFObjectIdentifiers.id_regCtrl_regToken</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crmf.RegTokenControl.Value">
            <summary>
            Return the token associated with this control (a UTF8String).
            </summary>
            <returns>a UTF8String.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.DHAgreement">
            a Diffie-Hellman key exchange engine.
            <p>
            note: This uses MTI/A0 key agreement in order to make the key agreement
            secure against passive attacks. If you're doing Diffie-Hellman and both
            parties have long term public keys you should look at using this. For
            further information have a look at RFC 2631.</p>
            <p>
            It's possible to extend this to more than two parties as well, for the moment
            that is left as an exercise for the reader.</p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.DHAgreement.CalculateMessage">
            calculate our initial message.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.DHAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.Parameters.DHPublicKeyParameters,Org.BouncyCastle.Math.BigInteger)">
            given a message from a given party and the corresponding public key
            calculate the next message in the agreement sequence. In this case
            this will represent the shared secret.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement">
            a Diffie-Hellman key agreement class.
            <p>
            note: This is only the basic algorithm, it doesn't take advantage of
            long term public keys if they are available. See the DHAgreement class
            for a "better" implementation.</p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IBasicAgreement">
            The basic interface that basic Diffie-Hellman implementations
            conforms to.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBasicAgreement.Init(Org.BouncyCastle.Crypto.ICipherParameters)">
            initialise the agreement engine.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBasicAgreement.GetFieldSize">
            return the field size for the agreement algorithm in bytes.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)">
            given a public key from a given party calculate the next
            message in the agreement sequence.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.DHBasicAgreement.CalculateAgreement(Org.BouncyCastle.Crypto.ICipherParameters)">
            given a short term public key from a given party calculate the next
            message in the agreement sequence.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.DHStandardGroups">
            <summary>Standard Diffie-Hellman groups from various IETF specifications.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.ECDHBasicAgreement">
             P1363 7.2.1 ECSVDP-DH
            
             ECSVDP-DH is Elliptic Curve Secret Value Derivation Primitive,
             Diffie-Hellman version. It is based on the work of [DH76], [Mil86],
             and [Kob87]. This primitive derives a shared secret value from one
             party's private key and another party's public key, where both have
             the same set of EC domain parameters. If two parties correctly
             execute this primitive, they will produce the same output. This
             primitive can be invoked by a scheme to derive a shared secret key;
             specifically, it may be used with the schemes ECKAS-DH1 and
             DL/ECKAS-DH2. It assumes that the input keys are valid (see also
             Section 7.2.2).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.ECDHCBasicAgreement">
             P1363 7.2.2 ECSVDP-DHC
            
             ECSVDP-DHC is Elliptic Curve Secret Value Derivation Primitive,
             Diffie-Hellman version with cofactor multiplication. It is based on
             the work of [DH76], [Mil86], [Kob87], [LMQ98] and [Kal98a]. This
             primitive derives a shared secret value from one party's private key
             and another party's public key, where both have the same set of EC
             domain parameters. If two parties correctly execute this primitive,
             they will produce the same output. This primitive can be invoked by a
             scheme to derive a shared secret key; specifically, it may be used
             with the schemes ECKAS-DH1 and DL/ECKAS-DH2. It does not assume the
             validity of the input public key (see also Section 7.2.1).
             <p>
             Note: As stated P1363 compatibility mode with ECDH can be preset, and
             in this case the implementation doesn't have a ECDH compatibility mode
             (if you want that just use ECDHBasicAgreement and note they both implement
             BasicAgreement!).</p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant">
             <summary>
             A participant in a Password Authenticated Key Exchange by Juggling (J-PAKE) exchange.
            
             The J-PAKE exchange is defined by Feng Hao and Peter Ryan in the paper
             <a href="http://grouper.ieee.org/groups/1363/Research/contributions/hao-ryan-2008.pdf">
             "Password Authenticated Key Exchange by Juggling, 2008."</a>
            
             The J-PAKE protocol is symmetric.
             There is no notion of a <i>client</i> or <i>server</i>, but rather just two <i>participants</i>.
             An instance of JPakeParticipant represents one participant, and
             is the primary interface for executing the exchange.
            
             To execute an exchange, construct a JPakeParticipant on each end,
             and call the following 7 methods
             (once and only once, in the given order, for each participant, sending messages between them as described):
            
             CreateRound1PayloadToSend() - and send the payload to the other participant
             ValidateRound1PayloadReceived(JPakeRound1Payload) - use the payload received from the other participant
             CreateRound2PayloadToSend() - and send the payload to the other participant
             ValidateRound2PayloadReceived(JPakeRound2Payload) - use the payload received from the other participant
             CalculateKeyingMaterial()
             CreateRound3PayloadToSend(BigInteger) - and send the payload to the other participant
             ValidateRound3PayloadReceived(JPakeRound3Payload, BigInteger) - use the payload received from the other participant
            
             Each side should derive a session key from the keying material returned by CalculateKeyingMaterial().
             The caller is responsible for deriving the session key using a secure key derivation function (KDF).
            
             Round 3 is an optional key confirmation process.
             If you do not execute round 3, then there is no assurance that both participants are using the same key.
             (i.e. if the participants used different passwords, then their session keys will differ.)
            
             If the round 3 validation succeeds, then the keys are guaranteed to be the same on both sides.
            
             The symmetric design can easily support the asymmetric cases when one party initiates the communication.
             e.g. Sometimes the round1 payload and round2 payload may be sent in one pass.
             Also, in some cases, the key confirmation payload can be sent together with the round2 payload.
             These are the trivial techniques to optimize the communication.
            
             The key confirmation process is implemented as specified in
             <a href="http://csrc.nist.gov/publications/nistpubs/800-56A/SP800-56A_Revision1_Mar08-2007.pdf">NIST SP 800-56A Revision 1</a>,
             Section 8.2 Unilateral Key Confirmation for Key Agreement Schemes.
            
             This class is stateful and NOT threadsafe.
             Each instance should only be used for ONE complete J-PAKE exchange
             (i.e. a new JPakeParticipant should be constructed for each new J-PAKE exchange).
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.#ctor(System.String,System.Char[])">
             <summary>
             Convenience constructor for a new JPakeParticipant that uses
             the JPakePrimeOrderGroups#NIST_3072 prime order group,
             a SHA-256 digest, and a default SecureRandom implementation.
            
             After construction, the State state will be STATE_INITIALIZED.
             
             Throws NullReferenceException if any argument is null. Throws
             ArgumentException if password is empty.
             </summary>
             <param name="participantId">Unique identifier of this participant.
                  The two participants in the exchange must NOT share the same id.</param>
             <param name="password">Shared secret.
                  A defensive copy of this array is made (and cleared once CalculateKeyingMaterial() is called).
                  Caller should clear the input password as soon as possible.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.#ctor(System.String,System.Char[],Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroup)">
             <summary>
             Convenience constructor for a new JPakeParticipant that uses
             a SHA-256 digest, and a default SecureRandom implementation.
            
             After construction, the State state will be STATE_INITIALIZED.
             
             Throws NullReferenceException if any argument is null. Throws
             ArgumentException if password is empty.
             </summary>
             <param name="participantId">Unique identifier of this participant.
                  The two participants in the exchange must NOT share the same id.</param>
             <param name="password">Shared secret.
                  A defensive copy of this array is made (and cleared once CalculateKeyingMaterial() is called).
                  Caller should clear the input password as soon as possible.</param>
             <param name="group">Prime order group. See JPakePrimeOrderGroups for standard groups.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.#ctor(System.String,System.Char[],Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroup,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Security.SecureRandom)">
             <summary>
             Constructor for a new JPakeParticipant.
            
             After construction, the State state will be STATE_INITIALIZED.
             
             Throws NullReferenceException if any argument is null. Throws
             ArgumentException if password is empty.
             </summary>
             <param name="participantId">Unique identifier of this participant.
                  The two participants in the exchange must NOT share the same id.</param>
             <param name="password">Shared secret.
                  A defensive copy of this array is made (and cleared once CalculateKeyingMaterial() is called).
                  Caller should clear the input password as soon as possible.</param>
             <param name="group">Prime order group. See JPakePrimeOrderGroups for standard groups.</param>
             <param name="digest">Digest to use during zero knowledge proofs and key confirmation
                 (SHA-256 or stronger preferred).</param>
             <param name="random">Source of secure random data for x1 and x2, and for the zero knowledge proofs.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.CreateRound1PayloadToSend">
             <summary>
             Creates and returns the payload to send to the other participant during round 1.
            
             After execution, the State state} will be STATE_ROUND_1_CREATED}.
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.ValidateRound1PayloadReceived(Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload)">
             <summary>
             Validates the payload received from the other participant during round 1.
            
             Must be called prior to CreateRound2PayloadToSend().
            
             After execution, the State state will be  STATE_ROUND_1_VALIDATED.
             
             Throws CryptoException if validation fails. Throws InvalidOperationException
             if called multiple times.
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.CreateRound2PayloadToSend">
             <summary>
             Creates and returns the payload to send to the other participant during round 2.
            
             ValidateRound1PayloadReceived(JPakeRound1Payload) must be called prior to this method.
            
             After execution, the State state will be  STATE_ROUND_2_CREATED.
            
             Throws InvalidOperationException if called prior to ValidateRound1PayloadReceived(JPakeRound1Payload), or multiple times
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.ValidateRound2PayloadReceived(Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound2Payload)">
             <summary>
             Validates the payload received from the other participant during round 2.
             Note that this DOES NOT detect a non-common password.
             The only indication of a non-common password is through derivation
             of different keys (which can be detected explicitly by executing round 3 and round 4)
            
             Must be called prior to CalculateKeyingMaterial().
            
             After execution, the State state will be STATE_ROUND_2_VALIDATED.
            
             Throws CryptoException if validation fails. Throws
             InvalidOperationException if called prior to ValidateRound1PayloadReceived(JPakeRound1Payload), or multiple times
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.CalculateKeyingMaterial">
             <summary>
             Calculates and returns the key material.
             A session key must be derived from this key material using a secure key derivation function (KDF).
             The KDF used to derive the key is handled externally (i.e. not by JPakeParticipant).
            
             The keying material will be identical for each participant if and only if
             each participant's password is the same.  i.e. If the participants do not
             share the same password, then each participant will derive a different key.
             Therefore, if you immediately start using a key derived from
             the keying material, then you must handle detection of incorrect keys.
             If you want to handle this detection explicitly, you can optionally perform
             rounds 3 and 4.  See JPakeParticipant for details on how to execute
             rounds 3 and 4.
            
             The keying material will be in the range <tt>[0, p-1]</tt>.
            
             ValidateRound2PayloadReceived(JPakeRound2Payload) must be called prior to this method.
             
             As a side effect, the internal password array is cleared, since it is no longer needed.
            
             After execution, the State state will be STATE_KEY_CALCULATED.
            
             Throws InvalidOperationException if called prior to ValidateRound2PayloadReceived(JPakeRound2Payload),
             or if called multiple times.
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.CreateRound3PayloadToSend(Org.BouncyCastle.Math.BigInteger)">
             <summary>
             Creates and returns the payload to send to the other participant during round 3.
            
             See JPakeParticipant for more details on round 3.
            
             After execution, the State state} will be  STATE_ROUND_3_CREATED.
             Throws InvalidOperationException if called prior to CalculateKeyingMaterial, or multiple
             times.
             </summary>
             <param name="keyingMaterial">The keying material as returned from CalculateKeyingMaterial().</param> 
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.ValidateRound3PayloadReceived(Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound3Payload,Org.BouncyCastle.Math.BigInteger)">
             <summary>
             Validates the payload received from the other participant during round 3.
            
             See JPakeParticipant for more details on round 3.
            
             After execution, the State state will be STATE_ROUND_3_VALIDATED.
             
             Throws CryptoException if validation fails. Throws InvalidOperationException if called prior to
             CalculateKeyingMaterial or multiple times
             </summary>
             <param name="round3PayloadReceived">The round 3 payload received from the other participant.</param> 
             <param name="keyingMaterial">The keying material as returned from CalculateKeyingMaterial().</param> 
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeParticipant.State">
            <summary>
            Gets the current state of this participant.
            See the <tt>STATE_*</tt> constants for possible values.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroup">
             <summary>
             A pre-computed prime order group for use during a J-PAKE exchange.
            
             Typically a Schnorr group is used.  In general, J-PAKE can use any prime order group
             that is suitable for public key cryptography, including elliptic curve cryptography.
            
             See JPakePrimeOrderGroups for convenient standard groups.
            
             NIST <a href="http://csrc.nist.gov/groups/ST/toolkit/documents/Examples/DSA2_All.pdf">publishes</a>
             many groups that can be used for the desired level of security.
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroup.#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
             <summary>
             Constructs a new JPakePrimeOrderGroup.
            
             In general, you should use one of the pre-approved groups from
             JPakePrimeOrderGroups, rather than manually constructing one.
            
             The following basic checks are performed:
            
             p-1 must be evenly divisible by q
             g must be in [2, p-1]
             g^q mod p must equal 1
             p must be prime (within reasonably certainty)
             q must be prime (within reasonably certainty)
            
             The prime checks are performed using BigInteger#isProbablePrime(int),
             and are therefore subject to the same probability guarantees.
            
             These checks prevent trivial mistakes.
             However, due to the small uncertainties if p and q are not prime,
             advanced attacks are not prevented.
             Use it at your own risk.
             
             Throws NullReferenceException if any argument is null. Throws
             InvalidOperationException is any of the above validations fail.
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroup.#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Boolean)">
            <summary>
            Constructor used by the pre-approved groups in JPakePrimeOrderGroups.
            These pre-approved groups can avoid the expensive checks.
            User-specified groups should not use this constructor.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroups">
            <summary>
            Standard pre-computed prime order groups for use by J-PAKE.
            (J-PAKE can use pre-computed prime order groups, same as DSA and Diffie-Hellman.)
            <p/>
            This class contains some convenient constants for use as input for
            constructing {@link JPAKEParticipant}s.
            <p/>
            The prime order groups below are taken from Sun's JDK JavaDoc (docs/guide/security/CryptoSpec.html#AppB),
            and from the prime order groups
            <a href="http://csrc.nist.gov/groups/ST/toolkit/documents/Examples/DSA2_All.pdf">published by NIST</a>.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroups.SUN_JCE_1024">
            <summary>
            From Sun's JDK JavaDoc (docs/guide/security/CryptoSpec.html#AppB)
            1024-bit p, 160-bit q and 1024-bit g for 80-bit security.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroups.NIST_2048">
            <summary>
            From NIST.
            2048-bit p, 224-bit q and 2048-bit g for 112-bit security.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakePrimeOrderGroups.NIST_3072">
            <summary>
            From NIST.
            3072-bit p, 256-bit q and 3072-bit g for 128-bit security.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload">
            <summary>
            The payload sent/received during the first round of a J-PAKE exchange.
            
            Each JPAKEParticipant creates and sends an instance of this payload to
            the other. The payload to send should be created via 
            JPAKEParticipant.CreateRound1PayloadToSend().
            
            Each participant must also validate the payload received from the other.
            The received payload should be validated via 
            JPAKEParticipant.ValidateRound1PayloadReceived(JPakeRound1Payload).
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload.participantId">
            <summary>
            The id of the JPAKEParticipant who created/sent this payload.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload.gx1">
            <summary>
            The value of g^x1
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload.gx2">
            <summary>
            The value of g^x2
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload.knowledgeProofForX1">
            <summary>
            The zero knowledge proof for x1.
            
            This is a two element array, containing {g^v, r} for x1.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound1Payload.knowledgeProofForX2">
            <summary>
            The zero knowledge proof for x2.
            
            This is a two element array, containing {g^v, r} for x2.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound2Payload">
            <summary>
            The payload sent/received during the second round of a J-PAKE exchange.
            
            Each JPAKEParticipant creates and sends an instance
            of this payload to the other JPAKEParticipant.
            The payload to send should be created via
            JPAKEParticipant#createRound2PayloadToSend()
            
            Each JPAKEParticipant must also validate the payload
            received from the other JPAKEParticipant.
            The received payload should be validated via
            JPAKEParticipant#validateRound2PayloadReceived(JPakeRound2Payload)
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound2Payload.participantId">
            <summary>
            The id of the JPAKEParticipant who created/sent this payload.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound2Payload.a">
            <summary>
            The value of A, as computed during round 2.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound2Payload.knowledgeProofForX2s">
            <summary>
            The zero knowledge proof for x2 * s.
            
            This is a two element array, containing {g^v, r} for x2 * s.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound3Payload">
             <summary>
             The payload sent/received during the optional third round of a J-PAKE exchange,
             which is for explicit key confirmation.
            
             Each JPAKEParticipant creates and sends an instance
             of this payload to the other JPAKEParticipant.
             The payload to send should be created via
             JPAKEParticipant#createRound3PayloadToSend(BigInteger)
            
             Eeach JPAKEParticipant must also validate the payload
             received from the other JPAKEParticipant.
             The received payload should be validated via
             JPAKEParticipant#validateRound3PayloadReceived(JPakeRound3Payload, BigInteger)
             </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound3Payload.participantId">
            <summary>
            The id of the {@link JPAKEParticipant} who created/sent this payload.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeRound3Payload.macTag">
            <summary>
            The value of MacTag, as computed by round 3.
            
            See JPAKEUtil#calculateMacTag(string, string, BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, org.bouncycastle.crypto.Digest)
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities">
            <summary>
            Primitives needed for a J-PAKE exchange.
            
            The recommended way to perform a J-PAKE exchange is by using
            two JPAKEParticipants.  Internally, those participants
            call these primitive operations in JPakeUtilities.
            
            The primitives, however, can be used without a JPAKEParticipant if needed.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.GenerateX1(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Return a value that can be used as x1 or x3 during round 1.
            The returned value is a random value in the range [0, q-1].
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.GenerateX2(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Return a value that can be used as x2 or x4 during round 1.
            The returned value is a random value in the range [1, q-1].
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateS(System.Char[])">
            <summary>
            Converts the given password to a BigInteger
            for use in arithmetic calculations.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateGx(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Calculate g^x mod p as done in round 1.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateGA(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Calculate ga as done in round 2.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateX2s(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Calculate x2 * s as done in round 2.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateA(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Calculate A as done in round 2. 
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateZeroKnowledgeProof(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.String,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Calculate a zero knowledge proof of x using Schnorr's signature.
            The returned array has two elements {g^v, r = v-x*h} for x.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.ValidateGx4(Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Validates that g^x4 is not 1.
            throws CryptoException if g^x4 is 1
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.ValidateGa(Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Validates that ga is not 1.
            
            As described by Feng Hao...
            Alice could simply check ga != 1 to ensure it is a generator.
            In fact, as we will explain in Section 3, (x1 + x3 + x4 ) is random over Zq even in the face of active attacks.
            Hence, the probability for ga = 1 is extremely small - on the order of 2^160 for 160-bit q.
            
            throws CryptoException if ga is 1
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.ValidateZeroKnowledgeProof(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger[],System.String,Org.BouncyCastle.Crypto.IDigest)">
            <summary>
            Validates the zero knowledge proof (generated by
            calculateZeroKnowledgeProof(BigInteger, BigInteger, BigInteger, BigInteger, BigInteger, string, Digest, SecureRandom)
            is correct.
            
            throws CryptoException if the zero knowledge proof is not correct
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateKeyingMaterial(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Calculates the keying material, which can be done after round 2 has completed.
            A session key must be derived from this key material using a secure key derivation function (KDF).
            The KDF used to derive the key is handled externally (i.e. not by JPAKEParticipant).
            
            KeyingMaterial = (B/g^{x2*x4*s})^x2
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.ValidateParticipantIdsDiffer(System.String,System.String)">
             <summary>
             Validates that the given participant ids are not equal.
             (For the J-PAKE exchange, each participant must use a unique id.)
            
             Throws CryptoException if the participantId strings are equal.
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.ValidateParticipantIdsEqual(System.String,System.String)">
            <summary>
            Validates that the given participant ids are equal.
            This is used to ensure that the payloads received from
            each round all come from the same participant.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.ValidateNotNull(System.Object,System.String)">
            <summary>
            Validates that the given object is not null.
            throws NullReferenceException if the object is null.
            </summary>
            <param name="obj">object in question</param>
            <param name="description">name of the object (to be used in exception message)</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateMacTag(System.String,System.String,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Crypto.IDigest)">
             <summary>
             Calculates the MacTag (to be used for key confirmation), as defined by
             <a href="http://csrc.nist.gov/publications/nistpubs/800-56A/SP800-56A_Revision1_Mar08-2007.pdf">NIST SP 800-56A Revision 1</a>,
             Section 8.2 Unilateral Key Confirmation for Key Agreement Schemes.
            
             MacTag = HMAC(MacKey, MacLen, MacData)
             MacKey = H(K || "JPAKE_KC")
             MacData = "KC_1_U" || participantId || partnerParticipantId || gx1 || gx2 || gx3 || gx4
            
             Note that both participants use "KC_1_U" because the sender of the round 3 message
             is always the initiator for key confirmation.
            
             HMAC = {@link HMac} used with the given {@link Digest}
             H = The given {@link Digest}
             MacLen = length of MacTag
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.CalculateMacKey(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Crypto.IDigest)">
            <summary>
            Calculates the MacKey (i.e. the key to use when calculating the MagTag for key confirmation).
            
            MacKey = H(K || "JPAKE_KC")
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.JPake.JPakeUtilities.ValidateMacTag(System.String,System.String,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Validates the MacTag received from the partner participant.
            
            throws CryptoException if the participantId strings are equal.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.Kdf.ConcatenationKdfGenerator">
            Generator for Concatenation Key Derivation Function defined in NIST SP 800-56A, Sect 5.8.1
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDerivationFunction">
            base interface for general purpose byte derivation functions.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IDerivationFunction.Digest">
            return the message digest used as the basis for the function
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Kdf.ConcatenationKdfGenerator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
            @param digest the digest to be used as the source of generated bytes
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Kdf.ConcatenationKdfGenerator.GenerateBytes(System.Byte[],System.Int32,System.Int32)">
             fill len bytes of the output buffer with bytes generated from
             the derivation function.
            
             @throws DataLengthException if the out buffer is too small.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Agreement.Kdf.ConcatenationKdfGenerator.Digest">
            return the underlying digest.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDerivationParameters">
            Parameters for key/byte stream derivation classes
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.Kdf.DHKekGenerator">
            RFC 2631 Diffie-hellman KEK derivation function.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.Kdf.ECDHKekGenerator">
            X9.63 based key derivation function for ECDH CMS.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.SM2KeyExchange">
            <summary>
            SM2 Key Exchange protocol - based on https://tools.ietf.org/html/draft-shen-sm2-ecdsa-02
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client">
            Implements the client side SRP-6a protocol. Note that this class is stateful, and therefore NOT threadsafe.
            This implementation of SRP is based on the optimized message sequence put forth by Thomas Wu in the paper
            "SRP-6: Improvements and Refinements to the Secure Remote Password Protocol, 2002"
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client.Init(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Security.SecureRandom)">
            Initialises the client to begin new authentication attempt
            @param N The safe prime associated with the client's verifier
            @param g The group parameter associated with the client's verifier
            @param digest The digest algorithm associated with the client's verifier
            @param random For key generation
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client.GenerateClientCredentials(System.Byte[],System.Byte[],System.Byte[])">
            Generates client's credentials given the client's salt, identity and password
            @param salt The salt used in the client's verifier.
            @param identity The user's identity (eg. username)
            @param password The user's password
            @return Client's public value to send to server
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client.CalculateSecret(Org.BouncyCastle.Math.BigInteger)">
            Generates client's verification message given the server's credentials
            @param serverB The server's credentials
            @return Client's verification message for the server
            @throws CryptoException If server's credentials are invalid
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client.CalculateClientEvidenceMessage">
            Computes the client evidence message M1 using the previously received values.
            To be called after calculating the secret S.
            @return M1: the client side generated evidence message
            @throws CryptoException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client.VerifyServerEvidenceMessage(Org.BouncyCastle.Math.BigInteger)">
            Authenticates the server evidence message M2 received and saves it only if correct.
            @param M2: the server side generated evidence message
            @return A boolean indicating if the server message M2 was the expected one.
            @throws CryptoException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Client.CalculateSessionKey">
            Computes the final session key as a result of the SRP successful mutual authentication
            To be called after verifying the server evidence message M2.
            @return Key: the mutually authenticated symmetric session key
            @throws CryptoException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server">
            Implements the server side SRP-6a protocol. Note that this class is stateful, and therefore NOT threadsafe.
            This implementation of SRP is based on the optimized message sequence put forth by Thomas Wu in the paper
            "SRP-6: Improvements and Refinements to the Secure Remote Password Protocol, 2002"
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server.Init(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Security.SecureRandom)">
            Initialises the server to accept a new client authentication attempt
            @param N The safe prime associated with the client's verifier
            @param g The group parameter associated with the client's verifier
            @param v The client's verifier
            @param digest The digest algorithm associated with the client's verifier
            @param random For key generation
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server.GenerateServerCredentials">
            Generates the server's credentials that are to be sent to the client.
            @return The server's public value to the client
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server.CalculateSecret(Org.BouncyCastle.Math.BigInteger)">
            Processes the client's credentials. If valid the shared secret is generated and returned.
            @param clientA The client's credentials
            @return A shared secret BigInteger
            @throws CryptoException If client's credentials are invalid
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server.VerifyClientEvidenceMessage(Org.BouncyCastle.Math.BigInteger)">
            Authenticates the received client evidence message M1 and saves it only if correct.
            To be called after calculating the secret S.
            @param M1: the client side generated evidence message
            @return A boolean indicating if the client message M1 was the expected one.
            @throws CryptoException 
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server.CalculateServerEvidenceMessage">
            Computes the server evidence message M2 using the previously verified values.
            To be called after successfully verifying the client evidence message M1.
            @return M2: the server side generated evidence message
            @throws CryptoException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Server.CalculateSessionKey">
            Computes the final session key as a result of the SRP successful mutual authentication
            To be called after calculating the server evidence message M2.
            @return Key: the mutual authenticated symmetric session key
            @throws CryptoException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Utilities.CalculateM1(Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Computes the client evidence message (M1) according to the standard routine:
            M1 = H( A | B | S )
            @param digest The Digest used as the hashing function H
            @param N Modulus used to get the pad length
            @param A The public client value
            @param B The public server value
            @param S The secret calculated by both sides
            @return M1 The calculated client evidence message
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Utilities.CalculateM2(Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Computes the server evidence message (M2) according to the standard routine:
            M2 = H( A | M1 | S )
            @param digest The Digest used as the hashing function H
            @param N Modulus used to get the pad length
            @param A The public client value
            @param M1 The client evidence message
            @param S The secret calculated by both sides
            @return M2 The calculated server evidence message
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6Utilities.CalculateKey(Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Computes the final Key according to the standard routine: Key = H(S)
            @param digest The Digest used as the hashing function H
            @param N Modulus used to get the pad length
            @param S The secret calculated by both sides
            @return
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6VerifierGenerator">
            Generates new SRP verifier for user
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6VerifierGenerator.Init(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Crypto.IDigest)">
            Initialises generator to create new verifiers
            @param N The safe prime to use (see DHParametersGenerator)
            @param g The group parameter to use (see DHParametersGenerator)
            @param digest The digest to use. The same digest type will need to be used later for the actual authentication
            attempt. Also note that the final session key size is dependent on the chosen digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Agreement.Srp.Srp6VerifierGenerator.GenerateVerifier(System.Byte[],System.Byte[],System.Byte[])">
            Creates a new SRP verifier
            @param salt The salt to use, generally should be large and random
            @param identity The user's identifying information (eg. username)
            @param password The user's password
            @return A new verifier for use in future SRP authentication
        </member>
        <member name="T:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair">
            a holding class for public/private parameter pairs.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
             basic constructor.
            
             @param publicParam a public key parameters object.
             @param privateParam the corresponding private key parameters.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Public">
             return the public key parameters.
            
             @return the public key parameters.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.AsymmetricCipherKeyPair.Private">
             return the private key parameters.
            
             @return the private key parameters.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher">
            The AEAD block ciphers already handle buffering internally, so this class
            just takes care of implementing IBufferedCipher methods.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IBufferedCipher">
            <remarks>Block cipher engines are expected to conform to this interface.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBufferedCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>Initialise the cipher.</summary>
            <param name="forEncryption">If true the cipher is initialised for encryption,
            if false for decryption.</param>
            <param name="parameters">The key and other data required by the cipher.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBufferedCipher.Reset">
            <summary>
            Reset the cipher. After resetting the cipher is in the same state
            as it was after the last init (if there was one).
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IBufferedCipher.AlgorithmName">
            <summary>The name of the algorithm this cipher implements.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the cipher.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.GetBlockSize">
             return the blocksize for the underlying cipher.
            
             @return the blocksize for the underlying cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.GetUpdateOutputSize(System.Int32)">
             return the size of the output buffer required for an update
             an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.GetOutputSize(System.Int32)">
             return the size of the output buffer required for an update plus a
             doFinal with an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update and doFinal
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)">
             process a single byte, producing an output block if necessary.
            
             @param in the input byte.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             process an array of bytes, producing output if necessary.
            
             @param in the input byte array.
             @param inOff the offset at which the input data starts.
             @param len the number of bytes to be copied out of the input array.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.DoFinal(System.Byte[],System.Int32)">
             Process the last block in the buffer.
            
             @param out the array the block currently being held is copied into.
             @param outOff the offset at which the copying starts.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there is insufficient space in out for
             the output, or the input is not block size aligned and should be.
             @exception InvalidOperationException if the underlying cipher is not
             initialised.
             @exception InvalidCipherTextException if padding is expected and not found.
             @exception DataLengthException if the input is not block size
             aligned.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadBlockCipher.Reset">
            Reset the buffer and cipher. After resetting the object is in the same
            state as it was after the last init (if there was one).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.BufferedAeadCipher">
            The AEAD ciphers already handle buffering internally, so this class
            just takes care of implementing IBufferedCipher methods.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the cipher.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.GetBlockSize">
             return the blocksize for the underlying cipher.
            
             @return the blocksize for the underlying cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.GetUpdateOutputSize(System.Int32)">
             return the size of the output buffer required for an update
             an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.GetOutputSize(System.Int32)">
             return the size of the output buffer required for an update plus a
             doFinal with an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update and doFinal
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)">
             process a single byte, producing an output block if necessary.
            
             @param in the input byte.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             process an array of bytes, producing output if necessary.
            
             @param in the input byte array.
             @param inOff the offset at which the input data starts.
             @param len the number of bytes to be copied out of the input array.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.DoFinal(System.Byte[],System.Int32)">
             Process the last block in the buffer.
            
             @param out the array the block currently being held is copied into.
             @param outOff the offset at which the copying starts.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there is insufficient space in out for
             the output, or the input is not block size aligned and should be.
             @exception InvalidOperationException if the underlying cipher is not
             initialised.
             @exception InvalidCipherTextException if padding is expected and not found.
             @exception DataLengthException if the input is not block size
             aligned.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAeadCipher.Reset">
            Reset the buffer and cipher. After resetting the object is in the same
            state as it was after the last init (if there was one).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher">
            a buffer wrapper for an asymmetric block cipher, allowing input
            to be accumulated in a piecemeal fashion until final processing.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher)">
             base constructor.
            
             @param cipher the cipher this buffering object wraps.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher.GetBufferPosition">
             return the amount of data sitting in the buffer.
            
             @return the amount of data sitting in the buffer.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the buffer and the underlying cipher.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher.DoFinal">
             process the contents of the buffer using the underlying
             cipher.
            
             @return the result of the encryption/decryption process on the
             buffer.
             @exception InvalidCipherTextException if we are given a garbage block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedAsymmetricBlockCipher.Reset">
            <summary>Reset the buffer</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.BufferedBlockCipher">
            A wrapper class that allows block ciphers to be used to process data in
            a piecemeal fashion. The BufferedBlockCipher outputs a block only when the
            buffer is full and more data is being added, or on a doFinal.
            <p>
            Note: in the case where the underlying cipher is either a CFB cipher or an
            OFB one the last block may not be a multiple of the block size.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.#ctor">
            constructor for subclasses
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Create a buffered block cipher without padding.
            
             @param cipher the underlying block cipher this buffering object wraps.
             false otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the cipher.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.GetBlockSize">
             return the blocksize for the underlying cipher.
            
             @return the blocksize for the underlying cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.GetUpdateOutputSize(System.Int32)">
             return the size of the output buffer required for an update
             an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.GetOutputSize(System.Int32)">
             return the size of the output buffer required for an update plus a
             doFinal with an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update and doFinal
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)">
             process a single byte, producing an output block if necessary.
            
             @param in the input byte.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             process an array of bytes, producing output if necessary.
            
             @param in the input byte array.
             @param inOff the offset at which the input data starts.
             @param len the number of bytes to be copied out of the input array.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.DoFinal(System.Byte[],System.Int32)">
             Process the last block in the buffer.
            
             @param out the array the block currently being held is copied into.
             @param outOff the offset at which the copying starts.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there is insufficient space in out for
             the output, or the input is not block size aligned and should be.
             @exception InvalidOperationException if the underlying cipher is not
             initialised.
             @exception InvalidCipherTextException if padding is expected and not found.
             @exception DataLengthException if the input is not block size
             aligned.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.BufferedBlockCipher.Reset">
            Reset the buffer and cipher. After resetting the object is in the same
            state as it was after the last init (if there was one).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.CipherKeyGenerator">
            The base class for symmetric, or secret, cipher key generators.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.CipherKeyGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)">
             initialise the key generator.
            
             @param param the parameters to be used for key generation
        </member>
        <member name="M:Org.BouncyCastle.Crypto.CipherKeyGenerator.GenerateKey">
             Generate a secret key.
            
             @return a byte array containing the key value.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.DataLengthException">
            this exception is thrown if a buffer that is meant to have output
            copied into it turns out to be too short, or if we've been given
            insufficient input. In general this exception will Get thrown rather
            than an ArrayOutOfBounds exception.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.DataLengthException.#ctor">
            base constructor.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.DataLengthException.#ctor(System.String)">
             create a DataLengthException with the given message.
            
             @param message the message to be carried with the exception.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Blake2bDigest">
            Implementation of the cryptographic hash function Blakbe2b.
            <p>
            Blake2b offers a built-in keying mechanism to be used directly
            for authentication ("Prefix-MAC") rather than a HMAC construction.
            </p>
            <p>
            Blake2b offers a built-in support for a salt for randomized hashing
            and a personal string for defining a unique hash function for each application.
            </p>
            <p>
            BLAKE2b is optimized for 64-bit platforms and produces digests of any size
            between 1 and 64 bytes.
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDigest">
            interface that a message digest conforms to.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.GetDigestSize">
             return the size, in bytes, of the digest produced by this message digest.
            
             @return the size, in bytes, of the digest produced by this message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.GetByteLength">
             return the size, in bytes, of the internal buffer used by this digest.
            
             @return the size, in bytes, of the internal buffer used by this digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.Update(System.Byte)">
             update the message digest with a single byte.
            
             @param inByte the input byte to be entered.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
             update the message digest with a block of bytes.
            
             @param input the byte array containing the data.
             @param inOff the offset into the byte array where the data starts.
             @param len the length of the data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.DoFinal(System.Byte[],System.Int32)">
             Close the digest, producing the final digest value. The doFinal
             call leaves the digest reset.
            
             @param output the array the digest is to be copied into.
             @param outOff the offset into the out array the digest is to start at.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigest.Reset">
            reset the digest back to it's initial state.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IDigest.AlgorithmName">
             return the algorithm name
            
             @return the algorithm name
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.#ctor(System.Int32)">
             Basic sized constructor - size in bits.
            
             @param digestSize size of the digest in bits
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.#ctor(System.Byte[])">
             Blake2b for authentication ("Prefix-MAC mode").
             After calling the doFinal() method, the key will
             remain to be used for further computations of
             this instance.
             The key can be overwritten using the clearKey() method.
            
             @param key A key up to 64 bytes or null
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.#ctor(System.Byte[],System.Int32,System.Byte[],System.Byte[])">
             Blake2b with key, required digest length (in bytes), salt and personalization.
             After calling the doFinal() method, the key, the salt and the personal string
             will remain and might be used for further computations with this instance.
             The key can be overwritten using the clearKey() method, the salt (pepper)
             can be overwritten using the clearSalt() method.
            
             @param key             A key up to 64 bytes or null
             @param digestLength    from 1 up to 64 bytes
             @param salt            16 bytes or null
             @param personalization 16 bytes or null
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.Update(System.Byte)">
             update the message digest with a single byte.
            
             @param b the input byte to be entered.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
             update the message digest with a block of bytes.
            
             @param message the byte array containing the data.
             @param offset  the offset into the byte array where the data starts.
             @param len     the length of the data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.DoFinal(System.Byte[],System.Int32)">
             close the digest, producing the final digest value. The doFinal
             call leaves the digest reset.
             Key, salt and personal string remain.
            
             @param out       the array the digest is to be copied into.
             @param outOffset the offset into the out array the digest is to start at.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.Reset">
            Reset the digest back to it's initial state.
            The key, the salt and the personal string will
            remain for further computations.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.GetDigestSize">
             return the size, in bytes, of the digest produced by this message digest.
            
             @return the size, in bytes, of the digest produced by this message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.GetByteLength">
             Return the size in bytes of the internal buffer the digest applies it's compression
             function to.
            
             @return byte length of the digests internal buffer.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.ClearKey">
            Overwrite the key
            if it is no longer used (zeroization)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.ClearSalt">
            Overwrite the salt (pepper) if it
            is secret and no longer used (zeroization)
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Digests.Blake2bDigest.AlgorithmName">
             return the algorithm name
            
             @return the algorithm name
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Blake2sDigest">
            Implementation of the cryptographic hash function BLAKE2s.
            <p/>
            BLAKE2s offers a built-in keying mechanism to be used directly
            for authentication ("Prefix-MAC") rather than a HMAC construction.
            <p/>
            BLAKE2s offers a built-in support for a salt for randomized hashing
            and a personal string for defining a unique hash function for each application.
            <p/>
            BLAKE2s is optimized for 32-bit platforms and produces digests of any size
            between 1 and 32 bytes.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.blake2s_IV">
             BLAKE2s Initialization Vector
            
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.blake2s_sigma">
             Message word permutations
            
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.buffer">
            Whenever this buffer overflows, it will be processed in the Compress()
            function. For performance issues, long messages will not use this buffer.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.bufferPos">
             Position of last inserted byte
            
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.internalState">
             Internal state, in the BLAKE2 paper it is called v
            
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.chainValue">
             State vector, in the BLAKE2 paper it is called h
            
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.t0">
             holds least significant bits of counter
            
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.t1">
             holds most significant bits of counter
            
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.f0">
             finalization flag, for last block: ~0
            
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.#ctor">
            BLAKE2s-256 for hashing.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.#ctor(System.Int32)">
             BLAKE2s for hashing.
            
             @param digestBits the desired digest length in bits. Must be a multiple of 8 and less than 256.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.#ctor(System.Byte[])">
             BLAKE2s for authentication ("Prefix-MAC mode").
             <p/>
             After calling the doFinal() method, the key will remain to be used for
             further computations of this instance. The key can be overwritten using
             the clearKey() method.
            
             @param key a key up to 32 bytes or null
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.#ctor(System.Byte[],System.Int32,System.Byte[],System.Byte[])">
             BLAKE2s with key, required digest length, salt and personalization.
             <p/>
             After calling the doFinal() method, the key, the salt and the personal
             string will remain and might be used for further computations with this
             instance. The key can be overwritten using the clearKey() method, the
             salt (pepper) can be overwritten using the clearSalt() method.
            
             @param key             a key up to 32 bytes or null
             @param digestBytes     from 1 up to 32 bytes
             @param salt            8 bytes or null
             @param personalization 8 bytes or null
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.Update(System.Byte)">
             Update the message digest with a single byte.
            
             @param b the input byte to be entered.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
             Update the message digest with a block of bytes.
            
             @param message the byte array containing the data.
             @param offset  the offset into the byte array where the data starts.
             @param len     the length of the data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.DoFinal(System.Byte[],System.Int32)">
             Close the digest, producing the final digest value. The doFinal() call
             leaves the digest reset. Key, salt and personal string remain.
            
             @param out       the array the digest is to be copied into.
             @param outOffset the offset into the out array the digest is to start at.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.Reset">
            Reset the digest back to its initial state. The key, the salt and the
            personal string will remain for further computations.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.GetDigestSize">
             Return the size in bytes of the digest produced by this message digest.
            
             @return the size in bytes of the digest produced by this message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.GetByteLength">
             Return the size in bytes of the internal buffer the digest applies its
             compression function to.
            
             @return byte length of the digest's internal buffer.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.ClearKey">
            Overwrite the key if it is no longer used (zeroization).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.ClearSalt">
            Overwrite the salt (pepper) if it is secret and no longer used
            (zeroization).
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Digests.Blake2sDigest.AlgorithmName">
             Return the algorithm name.
            
             @return the algorithm name
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Dstu7564Digest">
            implementation of Ukrainian DSTU 7564 hash function
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IMemoable.Copy">
            <summary>
            Produce a copy of this object with its configuration and in its current state.
            </summary>
            <remarks>
            The returned object may be used simply to store the state, or may be used as a similar object
            starting from the copied state.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IMemoable.Reset(Org.BouncyCastle.Utilities.IMemoable)">
            <summary>
            Restore a copied object state into this object.
            </summary>
            <remarks>
            Implementations of this method <em>should</em> try to avoid or minimise memory allocation to perform the reset.
            </remarks>
            <param name="other">an object originally {@link #copy() copied} from an object of the same type as this instance.</param>
            <exception> <see cref="T:System.InvalidCastException"/>if the provided object is not of the correct type.</exception>
            <exception> <see cref="T:Org.BouncyCastle.Utilities.MemoableResetException"/>if the <b>other</b> parameter is in some other way invalid.</exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.GeneralDigest">
            base implementation of MD4 family style digest as outlined in
            "Handbook of Applied Cryptography", pages 344 - 347.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Gost3411Digest">
            implementation of GOST R 34.11-94
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Gost3411Digest.#ctor">
            Standard constructor
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Gost3411Digest.#ctor(System.Byte[])">
            Constructor to allow use of a particular sbox with GOST28147
            @see GOST28147Engine#getSBox(String)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Gost3411Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Gost3411Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.Gost3411Digest.C2">
            reset the chaining variables to the IV values.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.KeccakDigest">
            <summary>
            Implementation of Keccak based on following KeccakNISTInterface.c from http://keccak.noekeon.org/
            </summary>
            <remarks>
            Following the naming conventions used in the C source code to enable easy review of the implementation.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.KeccakDigest.GetByteLength">
             Return the size of block that the compression function is applied to in bytes.
            
             @return internal byte length of a block.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.LongDigest">
            Base class for SHA-384 and SHA-512.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.LongDigest.#ctor">
            Constructor for variable length word
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.LongDigest.#ctor(Org.BouncyCastle.Crypto.Digests.LongDigest)">
            Copy constructor.  We are using copy constructors in place
            of the object.Clone() interface as this interface is not
            supported by J2ME.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.LongDigest.AdjustByteCounts">
            adjust the byte counts so that byteCount2 represents the
            upper long (less 3 bits) word of the byte count.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.MD2Digest">
            implementation of MD2
            as outlined in RFC1319 by B.Kaliski from RSA Laboratories April 1992
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD2Digest.DoFinal(System.Byte[],System.Int32)">
             Close the digest, producing the final digest value. The doFinal
             call leaves the digest reset.
            
             @param out the array the digest is to be copied into.
             @param outOff the offset into the out array the digest is to start at.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD2Digest.Reset">
            reset the digest back to it's initial state.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD2Digest.Update(System.Byte)">
             update the message digest with a single byte.
            
             @param in the input byte to be entered.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD2Digest.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
             update the message digest with a block of bytes.
            
             @param in the byte array containing the data.
             @param inOff the offset into the byte array where the data starts.
             @param len the length of the data.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Digests.MD2Digest.AlgorithmName">
             return the algorithm name
            
             @return the algorithm name
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.MD4Digest">
            implementation of MD4 as RFC 1320 by R. Rivest, MIT Laboratory for
            Computer Science and RSA Data Security, Inc.
            <p>
            <b>NOTE</b>: This algorithm is only included for backwards compatibility
            with legacy applications, it's not secure, don't use it for anything new!</p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD4Digest.#ctor">
            Standard constructor
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD4Digest.#ctor(Org.BouncyCastle.Crypto.Digests.MD4Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD4Digest.Reset">
            reset the chaining variables to the IV values.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.MD5Digest">
            implementation of MD5 as outlined in "Handbook of Applied Cryptography", pages 346 - 347.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD5Digest.#ctor(Org.BouncyCastle.Crypto.Digests.MD5Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.MD5Digest.Reset">
            reset the chaining variables to the IV values.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.NonMemoableDigest">
            Wrapper removes exposure to the IMemoable interface on an IDigest implementation.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.NonMemoableDigest.#ctor(Org.BouncyCastle.Crypto.IDigest)">
             Base constructor.
            
             @param baseDigest underlying digest to use.
             @exception IllegalArgumentException if baseDigest is null
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.RipeMD128Digest">
            implementation of RipeMD128
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.#ctor">
            Standard constructor
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.#ctor(Org.BouncyCastle.Crypto.Digests.RipeMD128Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD128Digest.Reset">
            reset the chaining variables to the IV values.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.RipeMD160Digest">
            implementation of RipeMD see,
            http://www.esat.kuleuven.ac.be/~bosselae/ripemd160.html
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.#ctor">
            Standard constructor
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.#ctor(Org.BouncyCastle.Crypto.Digests.RipeMD160Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD160Digest.Reset">
            reset the chaining variables to the IV values.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.RipeMD256Digest">
            <remarks>
            <p>Implementation of RipeMD256.</p>
            <p><b>Note:</b> this algorithm offers the same level of security as RipeMD128.</p>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.#ctor">
            <summary> Standard constructor</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.#ctor(Org.BouncyCastle.Crypto.Digests.RipeMD256Digest)">
            <summary> Copy constructor.  This will copy the state of the provided
            message digest.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD256Digest.Reset">
            <summary> reset the chaining variables to the IV values.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.RipeMD320Digest">
            <remarks>
            <p>Implementation of RipeMD 320.</p>
            <p><b>Note:</b> this algorithm offers the same level of security as RipeMD160.</p>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.#ctor">
            <summary> Standard constructor</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.#ctor(Org.BouncyCastle.Crypto.Digests.RipeMD320Digest)">
            <summary> Copy constructor.  This will copy the state of the provided
            message digest.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.RipeMD320Digest.Reset">
            <summary> reset the chaining variables to the IV values.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha1Digest">
             implementation of SHA-1 as outlined in "Handbook of Applied Cryptography", pages 346 - 349.
            
             It is interesting to ponder why the, apart from the extra IV, the other difference here from MD5
             is the "endianness" of the word processing!
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha1Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha1Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha1Digest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha224Digest">
            SHA-224 as described in RFC 3874
            <pre>
                    block  word  digest
            SHA-1   512    32    160
            SHA-224 512    32    224
            SHA-256 512    32    256
            SHA-384 1024   64    384
            SHA-512 1024   64    512
            </pre>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha224Digest.#ctor">
            Standard constructor
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha224Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha224Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha224Digest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha256Digest">
             Draft FIPS 180-2 implementation of SHA-256. <b>Note:</b> As this is
             based on a draft this implementation is subject to change.
            
             <pre>
                     block  word  digest
             SHA-1   512    32    160
             SHA-256 512    32    256
             SHA-384 1024   64    384
             SHA-512 1024   64    512
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha256Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha256Digest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha384Digest">
             Draft FIPS 180-2 implementation of SHA-384. <b>Note:</b> As this is
             based on a draft this implementation is subject to change.
            
             <pre>
                     block  word  digest
             SHA-1   512    32    160
             SHA-256 512    32    256
             SHA-384 1024   64    384
             SHA-512 1024   64    512
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha384Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha384Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha384Digest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha3Digest">
            <summary>
            Implementation of SHA-3 based on following KeccakNISTInterface.c from http://keccak.noekeon.org/
            </summary>
            <remarks>
            Following the naming conventions used in the C source code to enable easy review of the implementation.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha512Digest">
             Draft FIPS 180-2 implementation of SHA-512. <b>Note:</b> As this is
             based on a draft this implementation is subject to change.
            
             <pre>
                     block  word  digest
             SHA-1   512    32    160
             SHA-256 512    32    256
             SHA-384 1024   64    384
             SHA-512 1024   64    512
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha512Digest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha512Digest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha512Digest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.Sha512tDigest">
            FIPS 180-4 implementation of SHA-512/t
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha512tDigest.#ctor(System.Int32)">
            Standard constructor
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha512tDigest.#ctor(Org.BouncyCastle.Crypto.Digests.Sha512tDigest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.Sha512tDigest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.ShakeDigest">
            <summary>
            Implementation of SHAKE based on following KeccakNISTInterface.c from http://keccak.noekeon.org/
            </summary>
            <remarks>
            Following the naming conventions used in the C source code to enable easy review of the implementation.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IXof">
            <remarks>
            With FIPS PUB 202 a new kind of message digest was announced which supported extendable output, or variable digest sizes.
            This interface provides the extra method required to support variable output on a digest implementation.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IXof.DoFinal(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Output the results of the final calculation for this digest to outLen number of bytes.
            </summary>
            <param name="output">output array to write the output bytes to.</param>
            <param name="outOff">offset to start writing the bytes at.</param>
            <param name="outLen">the number of output bytes requested.</param>
            <returns>the number of bytes written</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IXof.DoOutput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Start outputting the results of the final calculation for this digest. Unlike DoFinal, this method
            will continue producing output until the Xof is explicitly reset, or signals otherwise.
            </summary>
            <param name="output">output array to write the output bytes to.</param>
            <param name="outOff">offset to start writing the bytes at.</param>
            <param name="outLen">the number of output bytes requested.</param>
            <returns>the number of bytes written</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.ShortenedDigest">
            Wrapper class that reduces the output length of a particular digest to
            only the first n bytes of the digest function.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.ShortenedDigest.#ctor(Org.BouncyCastle.Crypto.IDigest,System.Int32)">
             Base constructor.
            
             @param baseDigest underlying digest to use.
             @param length length in bytes of the output of doFinal.
             @exception ArgumentException if baseDigest is null, or length is greater than baseDigest.GetDigestSize().
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.SkeinDigest">
            <summary>
            Implementation of the Skein parameterised hash function in 256, 512 and 1024 bit block sizes,
            based on the <see cref="T:Org.BouncyCastle.Crypto.Engines.ThreefishEngine">Threefish</see> tweakable block cipher.
            </summary>
            <remarks>
            This is the 1.3 version of Skein defined in the Skein hash function submission to the NIST SHA-3
            competition in October 2010.
            <p/>
            Skein was designed by Niels Ferguson - Stefan Lucks - Bruce Schneier - Doug Whiting - Mihir
            Bellare - Tadayoshi Kohno - Jon Callas - Jesse Walker.
            </remarks>
            <seealso cref="T:Org.BouncyCastle.Crypto.Digests.SkeinEngine"/>
            <seealso cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"/>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinDigest.SKEIN_256">
            <summary>
            256 bit block size - Skein-256
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinDigest.SKEIN_512">
            <summary>
            512 bit block size - Skein-512
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinDigest.SKEIN_1024">
            <summary>
            1024 bit block size - Skein-1024
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinDigest.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a Skein digest with an internal state size and output size.
            </summary>
            <param name="stateSizeBits">the internal state size in bits - one of <see cref="F:Org.BouncyCastle.Crypto.Digests.SkeinDigest.SKEIN_256"/> <see cref="F:Org.BouncyCastle.Crypto.Digests.SkeinDigest.SKEIN_512"/> or
                                  <see cref="F:Org.BouncyCastle.Crypto.Digests.SkeinDigest.SKEIN_1024"/>.</param>
            <param name="digestSizeBits">the output/digest size to produce in bits, which must be an integral number of
                                 bytes.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinDigest.Init(Org.BouncyCastle.Crypto.Parameters.SkeinParameters)">
            <summary>
            Optionally initialises the Skein digest with the provided parameters.
            </summary>
            See <see cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"></see> for details on the parameterisation of the Skein hash function.
            <param name="parameters">the parameters to apply to this engine, or <code>null</code> to use no parameters.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.SkeinEngine">
            <summary>
            Implementation of the Skein family of parameterised hash functions in 256, 512 and 1024 bit block
            sizes, based on the <see cref="T:Org.BouncyCastle.Crypto.Engines.ThreefishEngine">Threefish</see> tweakable block cipher.
            </summary>
            <remarks>
            This is the 1.3 version of Skein defined in the Skein hash function submission to the NIST SHA-3
            competition in October 2010.
            <p/>
            Skein was designed by Niels Ferguson - Stefan Lucks - Bruce Schneier - Doug Whiting - Mihir
            Bellare - Tadayoshi Kohno - Jon Callas - Jesse Walker.
            <p/>
            This implementation is the basis for <see cref="T:Org.BouncyCastle.Crypto.Digests.SkeinDigest"/> and <see cref="T:Org.BouncyCastle.Crypto.Macs.SkeinMac"/>, implementing the
            parameter based configuration system that allows Skein to be adapted to multiple applications. <br/>
            Initialising the engine with <see cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"/> allows standard and arbitrary parameters to
            be applied during the Skein hash function.
            <p/>
            Implemented:
            <ul>
            <li>256, 512 and 1024 bit internal states.</li>
            <li>Full 96 bit input length.</li>
            <li>Parameters defined in the Skein specification, and arbitrary other pre and post message
            parameters.</li>
            <li>Arbitrary output size in 1 byte intervals.</li>
            </ul>
            <p/>
            Not implemented:
            <ul>
            <li>Sub-byte length input (bit padding).</li>
            <li>Tree hashing.</li>
            </ul>
            </remarks>
            <seealso cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"/>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.SKEIN_256">
            <summary>
            256 bit block size - Skein-256
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.SKEIN_512">
            <summary>
            512 bit block size - Skein-512
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.SKEIN_1024">
            <summary>
            1024 bit block size - Skein-1024
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.PARAM_TYPE_KEY">
            The parameter type for the Skein key.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.PARAM_TYPE_CONFIG">
            The parameter type for the Skein configuration block.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.PARAM_TYPE_MESSAGE">
            The parameter type for the message.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.PARAM_TYPE_OUTPUT">
            The parameter type for the output transformation.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.INITIAL_STATES">
            Precalculated UBI(CFG) states for common state/output combinations without key or other
            pre-message params.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.threefish">
            Underlying Threefish tweakable block cipher
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.outputSizeBytes">
            Size of the digest output, in bytes
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.chain">
            The current chaining/state value
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.initialState">
            The initial state value
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.key">
            The (optional) key parameter
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.preMessageParameters">
            Parameters to apply prior to the message
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.postMessageParameters">
            Parameters to apply after the message, but prior to output
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.ubi">
            The current UBI operation
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.singleByte">
            Buffer for single byte update method
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinEngine.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a Skein digest with an internal state size and output size.
            </summary>
            <param name="blockSizeBits">the internal state size in bits - one of <see cref="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.SKEIN_256"/> <see cref="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.SKEIN_512"/> or
                                  <see cref="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.SKEIN_1024"/>.</param>
            <param name="outputSizeBits">the output/digest size to produce in bits, which must be an integral number of
                                 bytes.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinEngine.#ctor(Org.BouncyCastle.Crypto.Digests.SkeinEngine)">
            <summary>
            Creates a SkeinEngine as an exact copy of an existing instance.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinEngine.Init(Org.BouncyCastle.Crypto.Parameters.SkeinParameters)">
            <summary>
            Initialises the Skein engine with the provided parameters. See <see cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"/> for
            details on the parameterisation of the Skein hash function.
            </summary>
            <param name="parameters">the parameters to apply to this engine, or <code>null</code> to use no parameters.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinEngine.CreateInitialState">
            Calculate the initial (pre message block) chaining state.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinEngine.Reset">
            <summary>
            Reset the engine to the initial state (with the key and any pre-message parameters , ready to
            accept message input.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UbiTweak.LOW_RANGE">
            Point at which position might overflow long, so switch to add with carry logic
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UbiTweak.T1_FINAL">
            Bit 127 = final
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UbiTweak.T1_FIRST">
            Bit 126 = first
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UbiTweak.tweak">
            UBI uses a 128 bit tweak
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UbiTweak.extendedPosition">
            Whether 64 bit position exceeded
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UbiTweak.AdvancePosition(System.Int32)">
            Advances the position in the tweak by the specified value.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UBI">
            The Unique Block Iteration chaining mode.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UBI.currentBlock">
            Buffer for the current block of message data
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UBI.currentOffset">
            Offset into the current message block
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Digests.SkeinEngine.UBI.message">
            Buffer for message words for feedback into encrypted block
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.SM3Digest">
            <summary>
            Implementation of Chinese SM3 digest as described at
            http://tools.ietf.org/html/draft-shen-sm3-hash-00
            and at .... ( Chinese PDF )
            </summary>
            <remarks>
            The specification says "process a bit stream",
            but this is written to process bytes in blocks of 4,
            meaning this will process 32-bit word groups.
            But so do also most other digest specifications,
            including the SHA-256 which was a origin for
            this specification.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SM3Digest.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SM3Digest.#ctor(Org.BouncyCastle.Crypto.Digests.SM3Digest)">
            <summary>
            Copy constructor.  This will copy the state of the provided
            message digest.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.SM3Digest.Reset">
            <summary>
            reset the chaining variables
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.TigerDigest">
            implementation of Tiger based on:
            <a href="http://www.cs.technion.ac.il/~biham/Reports/Tiger">
             http://www.cs.technion.ac.il/~biham/Reports/Tiger</a>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.TigerDigest.#ctor">
            Standard constructor
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.TigerDigest.#ctor(Org.BouncyCastle.Crypto.Digests.TigerDigest)">
            Copy constructor.  This will copy the state of the provided
            message digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.TigerDigest.Reset">
            reset the chaining variables
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest">
             Implementation of WhirlpoolDigest, based on Java source published by Barreto
             and Rijmen.
            
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.#ctor(Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest)">
            Copy constructor. This will copy the state of the provided message
            digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Digests.WhirlpoolDigest.Reset">
            Reset the chaining variables
        </member>
        <member name="M:Org.BouncyCastle.Crypto.EC.CustomNamedCurves.GetByOid(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
             return the X9ECParameters object for the named curve represented by
             the passed in object identifier. Null if the curve isn't present.
            
             @param oid an object identifier representing a named curve, if present.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.EC.CustomNamedCurves.GetOid(System.String)">
             return the object identifier signified by the passed in name. Null
             if there is no object identifier associated with name.
            
             @return the object identifier associated with name, if present.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.EC.CustomNamedCurves.GetName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            return the named curve name represented by the given object identifier.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.EC.CustomNamedCurves.Names">
            returns an enumeration containing the name strings for curves
            contained in this structure.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding">
            ISO 9796-1 padding. Note in the light of recent results you should
            only use this with RSA (rather than the "simpler" Rabin keys) and you
            should never use it with anything other than a hash (ie. even if the
            message is small don't sign the message, sign it's hash) or some "random"
            value. See your favorite search engine for details.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IAsymmetricBlockCipher">
            <remarks>Base interface for a public/private key block cipher.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>Initialise the cipher.</summary>
            <param name="forEncryption">Initialise for encryption if true, for decryption if false.</param>
            <param name="parameters">The key or other data required by the cipher.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.GetInputBlockSize">
            <returns>The maximum size, in bytes, an input block may be.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.GetOutputBlockSize">
            <returns>The maximum size, in bytes, an output block will be.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>Process a block.</summary>
            <param name="inBuf">The input buffer.</param>
            <param name="inOff">The offset into <paramref>inBuf</paramref> that the input block begins.</param>
            <param name="inLen">The length of the input block.</param>
            <exception> <see cref="T:Org.BouncyCastle.Crypto.InvalidCipherTextException"/>Input decrypts improperly.</exception>
            <exception> <see cref="T:Org.BouncyCastle.Crypto.DataLengthException"/>Input is too large for the cipher.</exception>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IAsymmetricBlockCipher.AlgorithmName">
            <summary>The name of the algorithm this cipher implements.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.GetInputBlockSize">
            return the input block size. The largest message we can process
            is (key_size_in_bits + 3)/16, which in our world comes to
            key_size_in_bytes / 2.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.GetOutputBlockSize">
            return the maximum possible size for the output.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.SetPadBits(System.Int32)">
            set the number of bits in the next message to be treated as
            pad bits.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.GetPadBits">
            retrieve the number of pad bits in the last decoded message.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.ISO9796d1Encoding.DecodeBlock(System.Byte[],System.Int32,System.Int32)">
            @exception InvalidCipherTextException if the decrypted block is not a valid ISO 9796 bit string
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Encodings.OaepEncoding">
            Optimal Asymmetric Encryption Padding (OAEP) - see PKCS 1 V 2.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.OaepEncoding.DecodeBlock(System.Byte[],System.Int32,System.Int32)">
            @exception InvalidCipherTextException if the decrypted block turns out to
            be badly formatted.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.OaepEncoding.ItoOSP(System.Int32,System.Byte[])">
            int to octet string.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.OaepEncoding.maskGeneratorFunction1(System.Byte[],System.Int32,System.Int32,System.Int32)">
            mask generator function, as described in PKCS1v2.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding">
            this does your basic Pkcs 1 v1.5 padding - whether or not you should be using this
            depends on your application - see Pkcs1 Version 2 for details.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.StrictLengthEnabledProperty">
            some providers fail to include the leading zero in PKCS1 encoded blocks. If you need to
            work with one of these set the system property Org.BouncyCastle.Pkcs1.Strict to false.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher)">
             Basic constructor.
            
             @param cipher
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,System.Int32)">
            Constructor for decryption with a fixed plaintext length.
            
            @param cipher The cipher to use for cryptographic operation.
            @param pLen Length of the expected plaintext.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,System.Byte[])">
            Constructor for decryption with a fixed plaintext length and a fallback
            value that is returned, if the padding is incorrect.
            
            @param cipher
                       The cipher to use for cryptographic operation.
            @param fallback
                       The fallback value, we don't to a arraycopy here.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.CheckPkcs1Encoding(System.Byte[],System.Int32)">
            Checks if the argument is a correctly PKCS#1.5 encoded Plaintext
            for encryption.
            
            @param encoded The Plaintext.
            @param pLen Expected length of the plaintext.
            @return Either 0, if the encoding is correct, or -1, if it is incorrect.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.DecodeBlockOrRandom(System.Byte[],System.Int32,System.Int32)">
            Decode PKCS#1.5 encoding, and return a random value if the padding is not correct.
            
            @param in The encrypted block.
            @param inOff Offset in the encrypted block.
            @param inLen Length of the encrypted block.
            @param pLen Length of the desired output.
            @return The plaintext without padding, or a random value if the padding was incorrect.
            @throws InvalidCipherTextException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.DecodeBlock(System.Byte[],System.Int32,System.Int32)">
            @exception InvalidCipherTextException if the decrypted block is not in Pkcs1 format.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Encodings.Pkcs1Encoding.StrictLengthEnabled">
            The same effect can be achieved by setting the static property directly
            <p>
            The static property is checked during construction of the encoding object, it is set to
            true by default.
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.AesEngine">
             an implementation of the AES (Rijndael), from FIPS-197.
             <p>
             For further details see: <a href="http://csrc.nist.gov/encryption/aes/">http://csrc.nist.gov/encryption/aes/</a>.
            
             This implementation is based on optimizations from Dr. Brian Gladman's paper and C code at
             <a href="http://fp.gladman.plus.com/cryptography_technology/rijndael/">http://fp.gladman.plus.com/cryptography_technology/rijndael/</a>
            
             There are three levels of tradeoff of speed vs memory
             Because java has no preprocessor, they are written as three separate classes from which to choose
            
             The fastest uses 8Kbytes of static tables to precompute round calculations, 4 256 word tables for encryption
             and 4 for decryption.
            
             The middle performance version uses only one 256 word table for each, for a total of 2Kbytes,
             adding 12 rotate operations per round to compute the values contained in the other tables from
             the contents of the first.
            
             The slowest version uses no static tables at all and computes the values in each round.
             </p>
             <p>
             This file contains the middle performance version with 2Kbytes of static tables for round precomputation.
             </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IBlockCipher">
            <remarks>Base interface for a symmetric key block cipher.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>Initialise the cipher.</summary>
            <param name="forEncryption">Initialise for encryption if true, for decryption if false.</param>
            <param name="parameters">The key or other data required by the cipher.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBlockCipher.GetBlockSize">
            <returns>The block size for this cipher, in bytes.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            <summary>Process a block.</summary>
            <param name="inBuf">The input buffer.</param>
            <param name="inOff">The offset into <paramref>inBuf</paramref> that the input block begins.</param>
            <param name="outBuf">The output buffer.</param>
            <param name="outOff">The offset into <paramref>outBuf</paramref> to write the output block.</param>
            <exception> <see cref="T:Org.BouncyCastle.Crypto.DataLengthException"/>If input block is wrong size, or outBuf too small.</exception>
            <returns>The number of bytes processed and produced.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IBlockCipher.Reset">
            <summary>
            Reset the cipher to the same state as it was after the last init (if there was one).
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IBlockCipher.AlgorithmName">
            <summary>The name of the algorithm this cipher implements.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IBlockCipher.IsPartialBlockOkay">
            <summary>Indicates whether this cipher can handle partial blocks.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesEngine.GenerateWorkingKey(System.Byte[],System.Boolean)">
            Calculate the necessary round keys
            The number of calculations depends on key size and block size
            AES specified a fixed block size of 128 bits and key sizes 128/192/256 bits
            This code is written assuming those are the only possible values
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesEngine.#ctor">
            default constructor - 128 bit block size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise an AES cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.AesFastEngine">
             an implementation of the AES (Rijndael)), from FIPS-197.
             <p>
             For further details see: <a href="http://csrc.nist.gov/encryption/aes/">http://csrc.nist.gov/encryption/aes/</a>.
            
             This implementation is based on optimizations from Dr. Brian Gladman's paper and C code at
             <a href="http://fp.gladman.plus.com/cryptography_technology/rijndael/">http://fp.gladman.plus.com/cryptography_technology/rijndael/</a>
            
             There are three levels of tradeoff of speed vs memory
             Because java has no preprocessor), they are written as three separate classes from which to choose
            
             The fastest uses 8Kbytes of static tables to precompute round calculations), 4 256 word tables for encryption
             and 4 for decryption.
            
             The middle performance version uses only one 256 word table for each), for a total of 2Kbytes),
             adding 12 rotate operations per round to compute the values contained in the other tables from
             the contents of the first
            
             The slowest version uses no static tables at all and computes the values in each round
             </p>
             <p>
             This file contains the fast version with 8Kbytes of static tables for round precomputation
             </p>
            <remarks>
            Unfortunately this class has a few side channel issues.
            In an environment where encryption/decryption may be closely observed it should not be used.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesFastEngine.GenerateWorkingKey(System.Byte[],System.Boolean)">
            Calculate the necessary round keys
            The number of calculations depends on key size and block size
            AES specified a fixed block size of 128 bits and key sizes 128/192/256 bits
            This code is written assuming those are the only possible values
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesFastEngine.#ctor">
            default constructor - 128 bit block size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesFastEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise an AES cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.AesLightEngine">
             an implementation of the AES (Rijndael), from FIPS-197.
             <p>
             For further details see: <a href="http://csrc.nist.gov/encryption/aes/">http://csrc.nist.gov/encryption/aes/</a>.
            
             This implementation is based on optimizations from Dr. Brian Gladman's paper and C code at
             <a href="http://fp.gladman.plus.com/cryptography_technology/rijndael/">http://fp.gladman.plus.com/cryptography_technology/rijndael/</a>
            
             There are three levels of tradeoff of speed vs memory
             Because java has no preprocessor, they are written as three separate classes from which to choose
            
             The fastest uses 8Kbytes of static tables to precompute round calculations, 4 256 word tables for encryption
             and 4 for decryption.
            
             The middle performance version uses only one 256 word table for each, for a total of 2Kbytes,
             adding 12 rotate operations per round to compute the values contained in the other tables from
             the contents of the first
            
             The slowest version uses no static tables at all and computes the values
             in each round.
             </p>
             <p>
             This file contains the slowest performance version with no static tables
             for round precomputation, but it has the smallest foot print.
             </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesLightEngine.GenerateWorkingKey(System.Byte[],System.Boolean)">
            Calculate the necessary round keys
            The number of calculations depends on key size and block size
            AES specified a fixed block size of 128 bits and key sizes 128/192/256 bits
            This code is written assuming those are the only possible values
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesLightEngine.#ctor">
            default constructor - 128 bit block size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.AesLightEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise an AES cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.AesWrapEngine">
            <remarks>
            An implementation of the AES Key Wrapper from the NIST Key Wrap Specification.
            <p/>
            For further details see: <a href="http://csrc.nist.gov/encryption/kms/key-wrap.pdf">http://csrc.nist.gov/encryption/kms/key-wrap.pdf</a>.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.Rfc3394WrapEngine">
            <remarks>
            An implementation of the AES Key Wrapper from the NIST Key Wrap
            Specification as described in RFC 3394.
            <p/>
            For further details see: <a href="http://www.ietf.org/rfc/rfc3394.txt">http://www.ietf.org/rfc/rfc3394.txt</a>
            and  <a href="http://csrc.nist.gov/encryption/kms/key-wrap.pdf">http://csrc.nist.gov/encryption/kms/key-wrap.pdf</a>.
            </remarks>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IWrapper.AlgorithmName">
            <summary>The name of the algorithm this cipher implements.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.BlowfishEngine">
            A class that provides Blowfish key encryption operations,
            such as encoding data and generating keys.
            All the algorithms herein are from Applied Cryptography
            and implement a simplified cryptography interface.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.BlowfishEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a Blowfish cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.BlowfishEngine.ProcessTable(System.UInt32,System.UInt32,System.UInt32[])">
            apply the encryption cycle to each value pair in the table.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.BlowfishEngine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            Encrypt the given input starting at the given offset and place
            the result in the provided buffer starting at the given offset.
            The input will be an exact multiple of our blocksize.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.BlowfishEngine.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            Decrypt the given input starting at the given offset and place
            the result in the provided buffer starting at the given offset.
            The input will be an exact multiple of our blocksize.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.CamelliaEngine">
            Camellia - based on RFC 3713.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.CamelliaLightEngine">
            Camellia - based on RFC 3713, smaller implementation, about half the size of CamelliaEngine.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.CamelliaWrapEngine">
            <remarks>
            An implementation of the Camellia key wrapper based on RFC 3657/RFC 3394.
            <p/>
            For further details see: <a href="http://www.ietf.org/rfc/rfc3657.txt">http://www.ietf.org/rfc/rfc3657.txt</a>.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.Cast5Engine">
             A class that provides CAST key encryption operations,
             such as encoding data and generating keys.
            
             All the algorithms herein are from the Internet RFC's
            
             RFC2144 - Cast5 (64bit block, 40-128bit key)
             RFC2612 - CAST6 (128bit block, 128-256bit key)
            
             and implement a simplified cryptography interface.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast5Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a CAST cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast5Engine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Encrypt the given input starting at the given offset and place
             the result in the provided buffer starting at the given offset.
            
             @param src        The plaintext buffer
             @param srcIndex    An offset into src
             @param dst        The ciphertext buffer
             @param dstIndex    An offset into dst
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast5Engine.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Decrypt the given input starting at the given offset and place
             the result in the provided buffer starting at the given offset.
            
             @param src        The plaintext buffer
             @param srcIndex    An offset into src
             @param dst        The ciphertext buffer
             @param dstIndex    An offset into dst
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast5Engine.F1(System.UInt32,System.UInt32,System.Int32)">
             The first of the three processing functions for the
             encryption and decryption.
            
             @param D            the input to be processed
             @param Kmi        the mask to be used from Km[n]
             @param Kri        the rotation value to be used
            
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast5Engine.F2(System.UInt32,System.UInt32,System.Int32)">
             The second of the three processing functions for the
             encryption and decryption.
            
             @param D            the input to be processed
             @param Kmi        the mask to be used from Km[n]
             @param Kri        the rotation value to be used
            
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast5Engine.F3(System.UInt32,System.UInt32,System.Int32)">
             The third of the three processing functions for the
             encryption and decryption.
            
             @param D            the input to be processed
             @param Kmi        the mask to be used from Km[n]
             @param Kri        the rotation value to be used
            
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast5Engine.CAST_Encipher(System.UInt32,System.UInt32,System.UInt32[])">
             Does the 16 rounds to encrypt the block.
            
             @param L0    the LH-32bits of the plaintext block
             @param R0    the RH-32bits of the plaintext block
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.Cast6Engine">
             A class that provides CAST6 key encryption operations,
             such as encoding data and generating keys.
            
             All the algorithms herein are from the Internet RFC
            
             RFC2612 - CAST6 (128bit block, 128-256bit key)
            
             and implement a simplified cryptography interface.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast6Engine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Encrypt the given input starting at the given offset and place
             the result in the provided buffer starting at the given offset.
            
             @param src        The plaintext buffer
             @param srcIndex    An offset into src
             @param dst        The ciphertext buffer
             @param dstIndex    An offset into dst
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast6Engine.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Decrypt the given input starting at the given offset and place
             the result in the provided buffer starting at the given offset.
            
             @param src        The plaintext buffer
             @param srcIndex    An offset into src
             @param dst        The ciphertext buffer
             @param dstIndex    An offset into dst
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast6Engine.CAST_Encipher(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32[])">
             Does the 12 quad rounds rounds to encrypt the block.
            
             @param A    the 00-31  bits of the plaintext block
             @param B    the 32-63  bits of the plaintext block
             @param C    the 64-95  bits of the plaintext block
             @param D    the 96-127 bits of the plaintext block
             @param result the resulting ciphertext
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Cast6Engine.CAST_Decipher(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32[])">
             Does the 12 quad rounds rounds to decrypt the block.
            
             @param A    the 00-31  bits of the ciphertext block
             @param B    the 32-63  bits of the ciphertext block
             @param C    the 64-95  bits of the ciphertext block
             @param D    the 96-127 bits of the ciphertext block
             @param result the resulting plaintext
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine">
            <summary>
            Implementation of Daniel J. Bernstein's ChaCha stream cipher.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.Salsa20Engine">
            <summary>
            Implementation of Daniel J. Bernstein's Salsa20 stream cipher, Snuffle 2005
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IStreamCipher">
            <summary>The interface stream ciphers conform to.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IStreamCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>Initialise the cipher.</summary>
            <param name="forEncryption">If true the cipher is initialised for encryption,
            if false for decryption.</param>
            <param name="parameters">The key and other data required by the cipher.</param>
            <exception> <see cref="T:System.ArgumentException"/>
            If the parameters argument is inappropriate.
            </exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IStreamCipher.ReturnByte(System.Byte)">
            <summary>encrypt/decrypt a single byte returning the result.</summary>
            <param name="input">the byte to be processed.</param>
            <returns>the result of processing the input byte.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IStreamCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Process a block of bytes from <c>input</c> putting the result into <c>output</c>.
            </summary>
            <param name="input">The input byte array.</param>
            <param name="inOff">
            The offset into <c>input</c> where the data to be processed starts.
            </param>
            <param name="length">The number of bytes to be processed.</param>
            <param name="output">The output buffer the processed bytes go into.</param>
            <param name="outOff">
            The offset into <c>output</c> the processed data starts at.
            </param>
            <exception> <see cref="T:Org.BouncyCastle.Crypto.DataLengthException"/>If the output buffer is too small.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IStreamCipher.Reset">
            <summary>
            Reset the cipher to the same state as it was after the last init (if there was one).
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IStreamCipher.AlgorithmName">
            <summary>The name of the algorithm this cipher implements.</summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.Salsa20Engine.StateSize">
            Constants 
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Salsa20Engine.#ctor">
            <summary>
            Creates a 20 round Salsa20 engine.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Salsa20Engine.#ctor(System.Int32)">
            <summary>
            Creates a Salsa20 engine with a specific number of rounds.
            </summary>
            <param name="rounds">the number of rounds (must be an even number).</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ChaCha7539Engine.#ctor">
            <summary>
            Creates a 20 rounds ChaCha engine.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.ChaChaEngine">
            <summary>
            Implementation of Daniel J. Bernstein's ChaCha stream cipher.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ChaChaEngine.#ctor">
            <summary>
            Creates a 20 rounds ChaCha engine.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ChaChaEngine.#ctor(System.Int32)">
            <summary>
            Creates a ChaCha engine with a specific number of rounds.
            </summary>
            <param name="rounds">the number of rounds (must be an even number).</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ChaChaEngine.ChachaCore(System.Int32,System.UInt32[],System.UInt32[])">
            <summary>
            ChaCha function.
            </summary>
            <param name="rounds">The number of ChaCha rounds to execute</param>
            <param name="input">The input words.</param>
            <param name="x">The ChaCha state to modify.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.DesEdeEngine">
            <remarks>A class that provides a basic DESede (or Triple DES) engine.</remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.DesEngine">
            <remarks>A class that provides a basic DES engine.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a DES cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.DesEngine.bytebit">
            what follows is mainly taken from "Applied Cryptography", by
            Bruce Schneier, however it also bears great resemblance to Richard
            Outerbridge's D3DES...
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEngine.GenerateWorkingKey(System.Boolean,System.Byte[])">
             Generate an integer based working key based on our secret key
             and what we processing we are planning to do.
            
             Acknowledgements for this routine go to James Gillogly and Phil Karn.
                     (whoever, and wherever they are!).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEngine.DesFunc(System.Int32[],System.Byte[],System.Int32,System.Byte[],System.Int32)">
            the DES engine.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEdeEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a DESede cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine">
                * Wrap keys according to
                * <a href="http://www.ietf.org/internet-drafts/draft-ietf-smime-key-wrap-01.txt">
                * draft-ietf-smime-key-wrap-01.txt</a>.
                * <p>
                * Note:
                * <ul>
                * <li>this is based on a draft, and as such is subject to change - don't use this class for anything requiring long term storage.</li>
                * <li>if you are using this to wrap triple-des keys you need to set the
                * parity bits on the key and, if it's a two-key triple-des key, pad it
                * yourself.</li>
                * </ul>
            	* </p>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.engine">
            Field engine 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.param">
            Field param 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.paramPlusIV">
            Field paramPlusIV 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.iv">
            Field iv 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.forWrapping">
            Field forWrapping 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.IV2">
            Field IV2           
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Method init
            
             @param forWrapping
             @param param
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.Wrap(System.Byte[],System.Int32,System.Int32)">
             Method wrap
            
             @param in
             @param inOff
             @param inLen
             @return
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.Unwrap(System.Byte[],System.Int32,System.Int32)">
             Method unwrap
            
             @param in
             @param inOff
             @param inLen
             @return
             @throws InvalidCipherTextException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.CalculateCmsKeyChecksum(System.Byte[])">
             Some key wrap algorithms make use of the Key Checksum defined
             in CMS [CMS-Algorithms]. This is used to provide an integrity
             check value for the key being wrapped. The algorithm is
            
             - Compute the 20 octet SHA-1 hash on the key being wrapped.
             - Use the first 8 octets of this hash as the checksum value.
            
             @param key
             @return
             @throws Exception
             @see http://www.w3.org/TR/xmlenc-core/#sec-CMSKeyChecksum
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.CheckCmsKeyChecksum(System.Byte[],System.Byte[])">
            @param key
            @param checksum
            @return
            @see http://www.w3.org/TR/xmlenc-core/#sec-CMSKeyChecksum
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Engines.DesEdeWrapEngine.AlgorithmName">
             Method GetAlgorithmName
            
             @return
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.Dstu7624Engine">
            implementation of DSTU 7624 (Kalyna)
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.ElGamalEngine">
            this does your basic ElGamal algorithm.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ElGamalEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the ElGamal engine.
            
             @param forEncryption true if we are encrypting, false otherwise.
             @param param the necessary ElGamal key parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ElGamalEngine.GetInputBlockSize">
             Return the maximum size for an input block to this engine.
             For ElGamal this is always one byte less than the size of P on
             encryption, and twice the length as the size of P on decryption.
            
             @return maximum size for an input block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ElGamalEngine.GetOutputBlockSize">
             Return the maximum size for an output block to this engine.
             For ElGamal this is always one byte less than the size of P on
             decryption, and twice the length as the size of P on encryption.
            
             @return maximum size for an output block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ElGamalEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)">
             Process a single block using the basic ElGamal algorithm.
            
             @param in the input array.
             @param inOff the offset into the input buffer where the data starts.
             @param length the length of the data to be processed.
             @return the result of the ElGamal process.
             @exception DataLengthException the input block is too large.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.Gost28147Engine">
            implementation of GOST 28147-89
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Gost28147Engine.#ctor">
            standard constructor.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Gost28147Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise an Gost28147 cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.Gost28147Engine.GetSBox(System.String)">
            Return the S-Box associated with SBoxName
            @param sBoxName name of the S-Box
            @return byte array representing the S-Box
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.HC128Engine">
             HC-128 is a software-efficient stream cipher created by Hongjun Wu. It
             generates keystream from a 128-bit secret key and a 128-bit initialization
             vector.
             <p>
             http://www.ecrypt.eu.org/stream/p3ciphers/hc/hc128_p3.pdf
             </p><p>
             It is a third phase candidate in the eStream contest, and is patent-free.
             No attacks are known as of today (April 2007). See
            
             http://www.ecrypt.eu.org/stream/hcp3.html
             </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.HC128Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise a HC-128 cipher.
            
             @param forEncryption whether or not we are for encryption. Irrelevant, as
                                  encryption and decryption are the same.
             @param params        the parameters required to set up the cipher.
             @throws ArgumentException if the params argument is
                                              inappropriate (ie. the key is not 128 bit long).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.HC256Engine">
            HC-256 is a software-efficient stream cipher created by Hongjun Wu. It 
            generates keystream from a 256-bit secret key and a 256-bit initialization 
            vector.
            <p>
            http://www.ecrypt.eu.org/stream/p3ciphers/hc/hc256_p3.pdf
            </p><p>
            Its brother, HC-128, is a third phase candidate in the eStream contest.
            The algorithm is patent-free. No attacks are known as of today (April 2007). 
            See
            
            http://www.ecrypt.eu.org/stream/hcp3.html
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.HC256Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise a HC-256 cipher.
            
             @param forEncryption whether or not we are for encryption. Irrelevant, as
                                  encryption and decryption are the same.
             @param params        the parameters required to set up the cipher.
             @throws ArgumentException if the params argument is
                                              inappropriate (ie. the key is not 256 bit long).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.IdeaEngine">
            A class that provides a basic International Data Encryption Algorithm (IDEA) engine.
            <p>
            This implementation is based on the "HOWTO: INTERNATIONAL DATA ENCRYPTION ALGORITHM"
            implementation summary by Fauzan Mirza (F.U.Mirza@sheffield.ac.uk). (barring 1 typo at the
            end of the MulInv function!).
            </p>
            <p>
            It can be found at ftp://ftp.funet.fi/pub/crypt/cryptography/symmetric/idea/
            </p>
            <p>
            Note: This algorithm was patented in the USA, Japan and Europe. These patents expired in 2011/2012.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IdeaEngine.#ctor">
            standard constructor.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IdeaEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise an IDEA cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IdeaEngine.Mul(System.Int32,System.Int32)">
             return x = x * y where the multiplication is done modulo
             65537 (0x10001) (as defined in the IDEA specification) and
             a zero input is taken to be 65536 (0x10000).
            
             @param x the x value
             @param y the y value
             @return x = x * y
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IdeaEngine.ExpandKey(System.Byte[])">
            The following function is used to expand the user key to the encryption
            subkey. The first 16 bytes are the user key, and the rest of the subkey
            is calculated by rotating the previous 16 bytes by 25 bits to the left,
            and so on until the subkey is completed.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IdeaEngine.MulInv(System.Int32)">
            This function computes multiplicative inverse using Euclid's Greatest
            Common Divisor algorithm. Zero and one are self inverse.
            <p>
            i.e. x * MulInv(x) == 1 (modulo BASE)
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IdeaEngine.AddInv(System.Int32)">
            Return the additive inverse of x.
            <p>
            i.e. x + AddInv(x) == 0
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IdeaEngine.InvertKey(System.Int32[])">
            The function to invert the encryption subkey to the decryption subkey.
            It also involves the multiplicative inverse and the additive inverse functions.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.IesEngine">
            support class for constructing intergrated encryption ciphers
            for doing basic message exchanges on top of key agreement ciphers
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac)">
             set up for use with stream mode, where the key derivation function
             is used to provide a stream of bytes to xor with the message.
            
             @param agree the key agreement used as the basis for the encryption
             @param kdf the key derivation function used for byte generation
             @param mac the message authentication code generator for the message
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IesEngine.#ctor(Org.BouncyCastle.Crypto.IBasicAgreement,Org.BouncyCastle.Crypto.IDerivationFunction,Org.BouncyCastle.Crypto.IMac,Org.BouncyCastle.Crypto.BufferedBlockCipher)">
             set up for use in conjunction with a block cipher to handle the
             message.
            
             @param agree the key agreement used as the basis for the encryption
             @param kdf the key derivation function used for byte generation
             @param mac the message authentication code generator for the message
             @param cipher the cipher to used for encrypting the message
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IesEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the encryptor.
            
             @param forEncryption whether or not this is encryption/decryption.
             @param privParam our private key parameters
             @param pubParam the recipient's/sender's public key parameters
             @param param encoding and derivation parameters.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.IsaacEngine">
            Implementation of Bob Jenkin's ISAAC (Indirection Shift Accumulate Add and Count).
            see: http://www.burtleburtle.net/bob/rand/isaacafa.html
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.IsaacEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise an ISAAC cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param params the parameters required to set up the cipher.
             @exception ArgumentException if the params argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine">
            NaccacheStern Engine. For details on this cipher, please see
            http://www.gemplus.com/smart/rd/publications/pdf/NS98pkcs.pdf
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initializes this algorithm. Must be called before all other Functions.
            
             @see org.bouncycastle.crypto.AsymmetricBlockCipher#init(bool,
                  org.bouncycastle.crypto.CipherParameters)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.GetInputBlockSize">
             Returns the input block size of this algorithm.
            
             @see org.bouncycastle.crypto.AsymmetricBlockCipher#GetInputBlockSize()
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.GetOutputBlockSize">
             Returns the output block size of this algorithm.
            
             @see org.bouncycastle.crypto.AsymmetricBlockCipher#GetOutputBlockSize()
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)">
             Process a single Block using the Naccache-Stern algorithm.
            
             @see org.bouncycastle.crypto.AsymmetricBlockCipher#ProcessBlock(byte[],
                  int, int)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.Encrypt(Org.BouncyCastle.Math.BigInteger)">
             Encrypts a BigInteger aka Plaintext with the public key.
            
             @param plain
                        The BigInteger to encrypt
             @return The byte[] representation of the encrypted BigInteger (i.e.
                     crypted.toByteArray())
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.AddCryptedBlocks(System.Byte[],System.Byte[])">
             Adds the contents of two encrypted blocks mod sigma
            
             @param block1
                        the first encrypted block
             @param block2
                        the second encrypted block
             @return encrypt((block1 + block2) mod sigma)
             @throws InvalidCipherTextException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.ProcessData(System.Byte[])">
             Convenience Method for data exchange with the cipher.
            
             Determines blocksize and splits data to blocksize.
            
             @param data the data to be processed
             @return the data after it went through the NaccacheSternEngine.
             @throws InvalidCipherTextException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NaccacheSternEngine.chineseRemainder(System.Collections.IList,System.Collections.IList)">
             Computes the integer x that is expressed through the given primes and the
             congruences with the chinese remainder theorem (CRT).
            
             @param congruences
                        the congruences c_i
             @param primes
                        the primes p_i
             @return an integer x for that x % p_i == c_i
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.NoekeonEngine">
            A Noekeon engine, using direct-key mode.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NoekeonEngine.#ctor">
            Create an instance of the Noekeon encryption algorithm
            and set some defaults
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.NoekeonEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise
            
             @param forEncryption whether or not we are for encryption.
             @param params the parameters required to set up the cipher.
             @exception ArgumentException if the params argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.NullEngine">
            The no-op engine that just copies bytes through, irrespective of whether encrypting and decrypting.
            Provided for the sake of completeness.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RC2Engine">
            an implementation of RC2 as described in RFC 2268
                 "A Description of the RC2(r) Encryption Algorithm" R. Rivest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC2Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a RC2 cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC2Engine.RotateWordLeft(System.Int32,System.Int32)">
            return the result rotating the 16 bit number in x left by y
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine">
            Wrap keys according to RFC 3217 - RC2 mechanism
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.engine">
            Field engine 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.parameters">
            Field param 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.paramPlusIV">
            Field paramPlusIV 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.iv">
            Field iv 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.forWrapping">
            Field forWrapping 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.IV2">
            Field IV2           
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Method init
            
             @param forWrapping
             @param param
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.Wrap(System.Byte[],System.Int32,System.Int32)">
             Method wrap
            
             @param in
             @param inOff
             @param inLen
             @return
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.Unwrap(System.Byte[],System.Int32,System.Int32)">
             Method unwrap
            
             @param in
             @param inOff
             @param inLen
             @return
             @throws InvalidCipherTextException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.CalculateCmsKeyChecksum(System.Byte[])">
             Some key wrap algorithms make use of the Key Checksum defined
             in CMS [CMS-Algorithms]. This is used to provide an integrity
             check value for the key being wrapped. The algorithm is
            
             - Compute the 20 octet SHA-1 hash on the key being wrapped.
             - Use the first 8 octets of this hash as the checksum value.
            
             @param key
             @return
             @throws Exception
             @see http://www.w3.org/TR/xmlenc-core/#sec-CMSKeyChecksum
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.CheckCmsKeyChecksum(System.Byte[],System.Byte[])">
            @param key
            @param checksum
            @return
            @see http://www.w3.org/TR/xmlenc-core/#sec-CMSKeyChecksum
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Engines.RC2WrapEngine.AlgorithmName">
             Method GetAlgorithmName
            
             @return
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC4Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a RC4 cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RC532Engine">
            The specification for RC5 came from the <code>RC5 Encryption Algorithm</code>
            publication in RSA CryptoBytes, Spring of 1995.
            <em>http://www.rsasecurity.com/rsalabs/cryptobytes</em>.
            <p>
            This implementation has a word size of 32 bits.</p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC532Engine.#ctor">
            Create an instance of the RC5 encryption algorithm
            and set some defaults
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC532Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a RC5-32 cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC532Engine.SetKey(System.Byte[])">
             Re-key the cipher.
            
             @param  key  the key to be used
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC532Engine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Encrypt the given block starting at the given offset and place
             the result in the provided buffer starting at the given offset.
            
             @param  in     in byte buffer containing data to encrypt
             @param  inOff  offset into src buffer
             @param  out     out buffer where encrypted data is written
             @param  outOff  offset into out buffer
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC532Engine.RotateLeft(System.Int32,System.Int32)">
             Perform a left "spin" of the word. The rotation of the given
             word <em>x</em> is rotated left by <em>y</em> bits.
             Only the <em>lg(32)</em> low-order bits of <em>y</em>
             are used to determine the rotation amount. Here it is
             assumed that the wordsize used is a power of 2.
            
             @param  x  word to rotate
             @param  y    number of bits to rotate % 32
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC532Engine.RotateRight(System.Int32,System.Int32)">
             Perform a right "spin" of the word. The rotation of the given
             word <em>x</em> is rotated left by <em>y</em> bits.
             Only the <em>lg(32)</em> low-order bits of <em>y</em>
             are used to determine the rotation amount. Here it is
             assumed that the wordsize used is a power of 2.
            
             @param  x  word to rotate
             @param  y    number of bits to rotate % 32
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RC564Engine">
            The specification for RC5 came from the <code>RC5 Encryption Algorithm</code>
            publication in RSA CryptoBytes, Spring of 1995.
            <em>http://www.rsasecurity.com/rsalabs/cryptobytes</em>.
            <p>
            This implementation is set to work with a 64 bit word size.</p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC564Engine.#ctor">
            Create an instance of the RC5 encryption algorithm
            and set some defaults
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC564Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a RC5-64 cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC564Engine.SetKey(System.Byte[])">
             Re-key the cipher.
            
             @param  key  the key to be used
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC564Engine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Encrypt the given block starting at the given offset and place
             the result in the provided buffer starting at the given offset.
            
             @param  in      in byte buffer containing data to encrypt
             @param  inOff   offset into src buffer
             @param  out     out buffer where encrypted data is written
             @param  outOff  offset into out buffer
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC564Engine.RotateLeft(System.Int64,System.Int64)">
             Perform a left "spin" of the word. The rotation of the given
             word <em>x</em> is rotated left by <em>y</em> bits.
             Only the <em>lg(wordSize)</em> low-order bits of <em>y</em>
             are used to determine the rotation amount. Here it is
             assumed that the wordsize used is a power of 2.
            
             @param  x  word to rotate
             @param  y    number of bits to rotate % wordSize
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC564Engine.RotateRight(System.Int64,System.Int64)">
             Perform a right "spin" of the word. The rotation of the given
             word <em>x</em> is rotated left by <em>y</em> bits.
             Only the <em>lg(wordSize)</em> low-order bits of <em>y</em>
             are used to determine the rotation amount. Here it is
             assumed that the wordsize used is a power of 2.
            
             @param x word to rotate
             @param y number of bits to rotate % wordSize
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RC6Engine">
            An RC6 engine.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC6Engine.#ctor">
            Create an instance of the RC6 encryption algorithm
            and set some defaults
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC6Engine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a RC5-32 cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC6Engine.SetKey(System.Byte[])">
             Re-key the cipher.
            
             @param inKey the key to be used
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC6Engine.RotateLeft(System.Int32,System.Int32)">
             Perform a left "spin" of the word. The rotation of the given
             word <em>x</em> is rotated left by <em>y</em> bits.
             Only the <em>lg(wordSize)</em> low-order bits of <em>y</em>
             are used to determine the rotation amount. Here it is
             assumed that the wordsize used is a power of 2.
            
             @param x word to rotate
             @param y number of bits to rotate % wordSize
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RC6Engine.RotateRight(System.Int32,System.Int32)">
             Perform a right "spin" of the word. The rotation of the given
             word <em>x</em> is rotated left by <em>y</em> bits.
             Only the <em>lg(wordSize)</em> low-order bits of <em>y</em>
             are used to determine the rotation amount. Here it is
             assumed that the wordsize used is a power of 2.
            
             @param x word to rotate
             @param y number of bits to rotate % wordSize
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.Rfc3211WrapEngine">
            an implementation of the RFC 3211 Key Wrap
            Specification.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RijndaelEngine">
            an implementation of Rijndael, based on the documentation and reference implementation
            by Paulo Barreto, Vincent Rijmen, for v2.0 August '99.
            <p>
            Note: this implementation is based on information prior to readonly NIST publication.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Mul0x2(System.Int32)">
            multiply two elements of GF(2^m)
            needed for MixColumn and InvMixColumn
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.KeyAddition(System.Int64[])">
            xor corresponding text input and round key input bytes
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.ShiftRow(System.Byte[])">
            Row 0 remains unchanged
            The other three rows are shifted a variable amount
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Substitution(System.Byte[])">
            Replace every byte of the input by the byte at that place
            in the nonlinear S-box
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.MixColumn">
            Mix the bytes of every column in a linear way
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.InvMixColumn">
            Mix the bytes of every column in a linear way
            This is the opposite operation of Mixcolumn
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.GenerateWorkingKey(System.Byte[])">
            Calculate the necessary round keys
            The number of calculations depends on keyBits and blockBits
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.#ctor">
            default constructor - 128 bit block size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.#ctor(System.Int32)">
             basic constructor - set the cipher up for a given blocksize
            
             @param blocksize the blocksize in bits, must be 128, 192, or 256.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RijndaelEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a Rijndael cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine">
            this does your basic RSA algorithm with blinding
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the RSA engine.
            
             @param forEncryption true if we are encrypting, false otherwise.
             @param param the necessary RSA key parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.GetInputBlockSize">
             Return the maximum size for an input block to this engine.
             For RSA this is always one byte less than the key size on
             encryption, and the same length as the key size on decryption.
            
             @return maximum size for an input block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.GetOutputBlockSize">
             Return the maximum size for an output block to this engine.
             For RSA this is always one byte less than the key size on
             decryption, and the same length as the key size on encryption.
            
             @return maximum size for an output block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindedEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)">
             Process a single block using the basic RSA algorithm.
            
             @param inBuf the input array.
             @param inOff the offset into the input buffer where the data starts.
             @param inLen the length of the data to be processed.
             @return the result of the RSA process.
             @exception DataLengthException the input block is too large.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine">
            This does your basic RSA Chaum's blinding and unblinding as outlined in
            "Handbook of Applied Cryptography", page 475. You need to use this if you are
            trying to get another party to generate signatures without them being aware
            of the message they are signing.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the blinding engine.
            
             @param forEncryption true if we are encrypting (blinding), false otherwise.
             @param param         the necessary RSA key parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine.GetInputBlockSize">
             Return the maximum size for an input block to this engine.
             For RSA this is always one byte less than the key size on
             encryption, and the same length as the key size on decryption.
            
             @return maximum size for an input block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine.GetOutputBlockSize">
             Return the maximum size for an output block to this engine.
             For RSA this is always one byte less than the key size on
             decryption, and the same length as the key size on encryption.
            
             @return maximum size for an output block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaBlindingEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)">
             Process a single block using the RSA blinding algorithm.
            
             @param in    the input array.
             @param inOff the offset into the input buffer where the data starts.
             @param inLen the length of the data to be processed.
             @return the result of the RSA process.
             @throws DataLengthException the input block is too large.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RsaCoreEngine">
            this does your basic RSA algorithm.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the RSA engine.
            
             @param forEncryption true if we are encrypting, false otherwise.
             @param param the necessary RSA key parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.GetInputBlockSize">
             Return the maximum size for an input block to this engine.
             For RSA this is always one byte less than the key size on
             encryption, and the same length as the key size on decryption.
            
             @return maximum size for an input block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaCoreEngine.GetOutputBlockSize">
             Return the maximum size for an output block to this engine.
             For RSA this is always one byte less than the key size on
             decryption, and the same length as the key size on encryption.
            
             @return maximum size for an output block.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.RsaEngine">
            this does your basic RSA algorithm.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the RSA engine.
            
             @param forEncryption true if we are encrypting, false otherwise.
             @param param the necessary RSA key parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaEngine.GetInputBlockSize">
             Return the maximum size for an input block to this engine.
             For RSA this is always one byte less than the key size on
             encryption, and the same length as the key size on decryption.
            
             @return maximum size for an input block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaEngine.GetOutputBlockSize">
             Return the maximum size for an output block to this engine.
             For RSA this is always one byte less than the key size on
             decryption, and the same length as the key size on encryption.
            
             @return maximum size for an output block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.RsaEngine.ProcessBlock(System.Byte[],System.Int32,System.Int32)">
             Process a single block using the basic RSA algorithm.
            
             @param inBuf the input array.
             @param inOff the offset into the input buffer where the data starts.
             @param inLen the length of the data to be processed.
             @return the result of the RSA process.
             @exception DataLengthException the input block is too large.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.SeedEngine">
            Implementation of the SEED algorithm as described in RFC 4009
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.SeedWrapEngine">
            <remarks>
            An implementation of the SEED key wrapper based on RFC 4010/RFC 3394.
            <p/>
            For further details see: <a href="http://www.ietf.org/rfc/rfc4010.txt">http://www.ietf.org/rfc/rfc4010.txt</a>.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.SerpentEngine">
                 * Serpent is a 128-bit 32-round block cipher with variable key lengths,
                 * including 128, 192 and 256 bit keys conjectured to be at least as
                 * secure as three-key triple-DES.
                 * <p>
                 * Serpent was designed by Ross Anderson, Eli Biham and Lars Knudsen as a
                 * candidate algorithm for the NIST AES Quest.
            	 * </p>
                 * <p>
                 * For full details see <a href="http://www.cl.cam.ac.uk/~rja14/serpent.html">The Serpent home page</a>
            	 * </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a Serpent cipher.
            
             @param encrypting whether or not we are for encryption.
             @param params     the parameters required to set up the cipher.
             @throws IllegalArgumentException if the params argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param in     the array containing the input data.
             @param inOff  offset into the in array the data starts at.
             @param out    the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @return the number of bytes processed and produced.
             @throws DataLengthException if there isn't enough data in in, or
             space in out.
             @throws IllegalStateException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib0(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvSO - {13, 3,11, 0,10, 6, 5,12, 1,14, 4, 7,15, 9, 8, 2 } - 15 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb1(System.Int32,System.Int32,System.Int32,System.Int32)">
            S1 - {15,12, 2, 7, 9, 0, 5,10, 1,11,14, 8, 6,13, 3, 4 } - 14 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib1(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS1 - { 5, 8, 2,14,15, 6,12, 3,11, 4, 7, 9, 1,13,10, 0 } - 14 steps.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb2(System.Int32,System.Int32,System.Int32,System.Int32)">
            S2 - { 8, 6, 7, 9, 3,12,10,15,13, 1,14, 4, 0,11, 5, 2 } - 16 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib2(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS2 - {12, 9,15, 4,11,14, 1, 2, 0, 3, 6,13, 5, 8,10, 7 } - 16 steps.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb3(System.Int32,System.Int32,System.Int32,System.Int32)">
            S3 - { 0,15,11, 8,12, 9, 6, 3,13, 1, 2, 4,10, 7, 5,14 } - 16 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib3(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS3 - { 0, 9,10, 7,11,14, 6,13, 3, 5,12, 2, 4, 8,15, 1 } - 15 terms
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb4(System.Int32,System.Int32,System.Int32,System.Int32)">
            S4 - { 1,15, 8, 3,12, 0,11, 6, 2, 5, 4,10, 9,14, 7,13 } - 15 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib4(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS4 - { 5, 0, 8, 3,10, 9, 7,14, 2,12,11, 6, 4,15,13, 1 } - 15 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb5(System.Int32,System.Int32,System.Int32,System.Int32)">
            S5 - {15, 5, 2,11, 4,10, 9,12, 0, 3,14, 8,13, 6, 7, 1 } - 16 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib5(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS5 - { 8,15, 2, 9, 4, 1,13,14,11, 6, 5, 3, 7,12,10, 0 } - 16 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb6(System.Int32,System.Int32,System.Int32,System.Int32)">
            S6 - { 7, 2,12, 5, 8, 4, 6,11,14, 9, 1,15,13, 3,10, 0 } - 15 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib6(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS6 - {15,10, 1,13, 5, 3, 6, 0, 4, 9,14, 7, 2,12, 8,11 } - 15 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Sb7(System.Int32,System.Int32,System.Int32,System.Int32)">
            S7 - { 1,13,15, 0,14, 8, 2,11, 7, 4,12,10, 9, 3, 5, 6 } - 16 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.Ib7(System.Int32,System.Int32,System.Int32,System.Int32)">
            InvS7 - { 3, 0, 6,13, 9,14,15, 8, 5,12,11, 7,10, 1, 4, 2 } - 17 terms.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.LT">
            Apply the linear transformation to the register set.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngineBase.InverseLT">
            Apply the inverse of the linear transformation to the register set.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngine.MakeWorkingKey(System.Byte[])">
             Expand a user-supplied key material into a session key.
            
             @param key  The user-key bytes (multiples of 4) to use.
             @exception ArgumentException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Encrypt one block of plaintext.
            
             @param input the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param output the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SerpentEngine.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Decrypt one block of ciphertext.
            
             @param input the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param output the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.SkipjackEngine">
            a class that provides a basic SKIPJACK engine.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SkipjackEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a SKIPJACK cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SkipjackEngine.G(System.Int32,System.Int32)">
            The G permutation
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.SkipjackEngine.H(System.Int32,System.Int32)">
            the inverse of the G permutation.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.SM2Engine">
            <summary>
            SM2 public key encryption engine - based on https://tools.ietf.org/html/draft-shen-sm2-ecdsa-02.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.SM4Engine">
            <summary>SM4 Block Cipher - SM4 is a 128 bit block cipher with a 128 bit key.</summary>
            <remarks>
            The implementation here is based on the document <a href="http://eprint.iacr.org/2008/329.pdf">http://eprint.iacr.org/2008/329.pdf</a>
            by Whitfield Diffie and George Ledin, which is a translation of Prof. LU Shu-wang's original standard.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.TeaEngine">
            An TEA engine.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TeaEngine.#ctor">
            Create an instance of the TEA encryption algorithm
            and set some defaults
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TeaEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise
            
             @param forEncryption whether or not we are for encryption.
             @param params the parameters required to set up the cipher.
             @exception ArgumentException if the params argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TeaEngine.setKey(System.Byte[])">
             Re-key the cipher.
            
             @param  key  the key to be used
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.ThreefishEngine">
            <summary>
            Implementation of the Threefish tweakable large block cipher in 256, 512 and 1024 bit block
            sizes.
            </summary>
            <remarks>
            This is the 1.3 version of Threefish defined in the Skein hash function submission to the NIST
            SHA-3 competition in October 2010.
            <p/>
            Threefish was designed by Niels Ferguson - Stefan Lucks - Bruce Schneier - Doug Whiting - Mihir
            Bellare - Tadayoshi Kohno - Jon Callas - Jesse Walker.
            <p/>
            This implementation inlines all round functions, unrolls 8 rounds, and uses 1.2k of static tables
            to speed up key schedule injection. <br/>
            2 x block size state is retained by each cipher instance.
            </remarks>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BLOCKSIZE_256">
            <summary>
            256 bit block size - Threefish-256
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BLOCKSIZE_512">
            <summary>
            512 bit block size - Threefish-512
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BLOCKSIZE_1024">
            <summary>
            1024 bit block size - Threefish-1024
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.TWEAK_SIZE_BYTES">
            Size of the tweak in bytes (always 128 bit/16 bytes)
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ROUNDS_256">
            Rounds in Threefish-256
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ROUNDS_512">
            Rounds in Threefish-512
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ROUNDS_1024">
            Rounds in Threefish-1024
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.MAX_ROUNDS">
            Max rounds of any of the variants
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.C_240">
            Key schedule parity constant
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.blocksizeBytes">
            Block size in bytes
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.blocksizeWords">
            Block size in 64 bit words
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.currentBlock">
            Buffer for byte oriented processBytes to call internal word API
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.t">
            Tweak bytes (2 byte t1,t2, calculated t3 and repeat of t1,t2 for modulo free lookup
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.kw">
            Key schedule words
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.cipher">
            The internal cipher implementation (varies by blocksize)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.#ctor(System.Int32)">
            <summary>
            Constructs a new Threefish cipher, with a specified block size.
            </summary>
            <param name="blocksizeBits">the block size in bits, one of <see cref="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BLOCKSIZE_256"/>, <see cref="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BLOCKSIZE_512"/>,
                                 <see cref="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BLOCKSIZE_1024"/> .</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>
            Initialise the engine.
            </summary>
            <param name="forEncryption">Initialise for encryption if true, for decryption if false.</param>
            <param name="parameters">an instance of <see cref="T:Org.BouncyCastle.Crypto.Parameters.TweakableBlockCipherParameters"/> or <see cref="T:Org.BouncyCastle.Crypto.Parameters.KeyParameter"/> (to
                          use a 0 tweak)</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Init(System.Boolean,System.UInt64[],System.UInt64[])">
            <summary>
            Initialise the engine, specifying the key and tweak directly.
            </summary>
            <param name="forEncryption">the cipher mode.</param>
            <param name="key">the words of the key, or <code>null</code> to use the current key.</param>
            <param name="tweak">the 2 word (128 bit) tweak, or <code>null</code> to use the current tweak.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ProcessBlock(System.UInt64[],System.UInt64[])">
            <summary>
            Process a block of data represented as 64 bit words.
            </summary>
            <returns>the number of 8 byte words processed (which will be the same as the block size).</returns>
            <param name="inWords">a block sized buffer of words to process.</param>
            <param name="outWords">a block sized buffer of words to receive the output of the operation.</param>
            <exception> <see cref="T:Org.BouncyCastle.Crypto.DataLengthException"/>if either the input or output is not block sized</exception>
            <exception> <see cref="T:System.InvalidOperationException"/>if this engine is not initialised</exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.BytesToWord(System.Byte[],System.Int32)">
            <summary>
            Read a single 64 bit word from input in LSB first order.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.WordToBytes(System.UInt64,System.Byte[],System.Int32)">
            <summary>
            Write a 64 bit word to output in LSB first order.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.RotlXor(System.UInt64,System.Int32,System.UInt64)">
            Rotate left + xor part of the mix operation.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.XorRotr(System.UInt64,System.Int32,System.UInt64)">
            Rotate xor + rotate right part of the unmix operation.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ThreefishCipher.t">
            The extended + repeated tweak words
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.ThreefishCipher.kw">
            The extended + repeated key words
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish256Cipher.ROTATION_0_0">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish256Cipher.ROTATION_0_1">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish512Cipher.ROTATION_0_0">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish512Cipher.ROTATION_0_1">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish512Cipher.ROTATION_0_2">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish512Cipher.ROTATION_0_3">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish1024Cipher.ROTATION_0_0">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish1024Cipher.ROTATION_0_1">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish1024Cipher.ROTATION_0_2">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.ThreefishEngine.Threefish1024Cipher.ROTATION_0_3">
            Mix rotation constants defined in Skein 1.3 specification
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.TnepresEngine">
            Tnepres is a 128-bit 32-round block cipher with variable key lengths,
            including 128, 192 and 256 bit keys conjectured to be at least as
            secure as three-key triple-DES.
            <p>
            Tnepres is based on Serpent which was designed by Ross Anderson, Eli Biham and Lars Knudsen as a
            candidate algorithm for the NIST AES Quest. Unfortunately there was an endianness issue
            with test vectors in the AES submission and the resulting confusion lead to the Tnepres cipher
            as well, which is a byte swapped version of Serpent.
            </p>
            <p>
            For full details see <a href="http://www.cl.cam.ac.uk/~rja14/serpent.html">The Serpent home page</a>
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TnepresEngine.MakeWorkingKey(System.Byte[])">
             Expand a user-supplied key material into a session key.
            
             @param key  The user-key bytes (multiples of 4) to use.
             @exception ArgumentException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TnepresEngine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Encrypt one block of plaintext.
            
             @param input the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param output the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TnepresEngine.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Decrypt one block of ciphertext.
            
             @param input the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param output the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.TwofishEngine">
             A class that provides Twofish encryption operations.
            
             This Java implementation is based on the Java reference
             implementation provided by Bruce Schneier and developed
             by Raif S. Naffah.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.TwofishEngine.P_00">
            Define the fixed p0/p1 permutations used in keyed S-box lookup.
            By changing the following constant definitions, the S-boxes will
            automatically Get changed in the Twofish engine.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Engines.TwofishEngine.gSubKeys">
            gSubKeys[] and gSBox[] are eventually used in the
            encryption and decryption methods.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TwofishEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise a Twofish cipher.
            
             @param forEncryption whether or not we are for encryption.
             @param parameters the parameters required to set up the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TwofishEngine.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Encrypt the given input starting at the given offset and place
             the result in the provided buffer starting at the given offset.
             The input will be an exact multiple of our blocksize.
            
             encryptBlock uses the pre-calculated gSBox[] and subKey[]
             arrays.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TwofishEngine.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
            Decrypt the given input starting at the given offset and place
            the result in the provided buffer starting at the given offset.
            The input will be an exact multiple of our blocksize.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TwofishEngine.RS_MDS_Encode(System.Int32,System.Int32)">
             Use (12, 8) Reed-Solomon code over GF(256) to produce
             a key S-box 32-bit entity from 2 key material 32-bit
             entities.
            
             @param    k0 first 32-bit entity
             @param    k1 second 32-bit entity
             @return     Remainder polynomial Generated using RS code
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.TwofishEngine.RS_rem(System.Int32)">
                    * Reed-Solomon code parameters: (12,8) reversible code:
            		* <p>
                    * <pre>
                    * G(x) = x^4 + (a+1/a)x^3 + ax^2 + (a+1/a)x + 1
                    * </pre>
                    * where a = primitive root of field generator 0x14D
            		* </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.VmpcEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            initialise a VMPC cipher.
            
            @param forEncryption
               whether or not we are for encryption.
            @param params
               the parameters required to set up the cipher.
            @exception ArgumentException
               if the params argument is inappropriate.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.XSalsa20Engine">
            <summary>
            Implementation of Daniel J. Bernstein's XSalsa20 stream cipher - Salsa20 with an extended nonce.
            </summary>
            <remarks>
            XSalsa20 requires a 256 bit key, and a 192 bit nonce.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.XSalsa20Engine.SetKey(System.Byte[],System.Byte[])">
            <summary>
            XSalsa20 key generation: process 256 bit input key and 128 bits of the input nonce
            using a core Salsa20 function without input addition to produce 256 bit working key
            and use that with the remaining 64 bits of nonce to initialize a standard Salsa20 engine state.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Engines.XteaEngine">
            An XTEA engine.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.XteaEngine.#ctor">
            Create an instance of the TEA encryption algorithm
            and set some defaults
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.XteaEngine.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise
            
             @param forEncryption whether or not we are for encryption.
             @param params the parameters required to set up the cipher.
             @exception ArgumentException if the params argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Engines.XteaEngine.setKey(System.Byte[])">
             Re-key the cipher.
            
             @param  key  the key to be used
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator">
            Basic KDF generator for derived keys and ivs as defined by IEEE P1363a/ISO 18033
            <br/>
            This implementation is based on ISO 18033/P1363a.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator.#ctor(System.Int32,Org.BouncyCastle.Crypto.IDigest)">
             Construct a KDF Parameters generator.
            
             @param counterStart value of counter.
             @param digest the digest to be used as the source of derived keys.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator.GenerateBytes(System.Byte[],System.Int32,System.Int32)">
             fill len bytes of the output buffer with bytes generated from
             the derivation function.
            
             @throws ArgumentException if the size of the request will cause an overflow.
             @throws DataLengthException if the out buffer is too small.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Generators.BaseKdfBytesGenerator.Digest">
            return the underlying digest.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.BCrypt">
            Core of password hashing scheme Bcrypt,
            designed by Niels Provos and David Mazières,
            corresponds to the C reference implementation.
            <p>
            This implementation does not correspondent to the 1999 published paper
            "A Future-Adaptable Password Scheme" of Niels Provos and David Mazières,
            see: https://www.usenix.org/legacy/events/usenix99/provos/provos_html/node1.html.
            In contrast to the paper, the order of key setup and salt setup is reversed:
            state &lt;- ExpandKey(state, 0, key)
            state %lt;- ExpandKey(state, 0, salt)
            This corresponds to the OpenBSD reference implementation of Bcrypt. 
            </p><p>
            Note: 
            There is no successful cryptanalysis (status 2015), but
            the amount of memory and the band width of Bcrypt
            may be insufficient to effectively prevent attacks 
            with custom hardware like FPGAs, ASICs
            </p><p>
            This implementation uses some parts of Bouncy Castle's BlowfishEngine.
            </p>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Generators.BCrypt.SALT_SIZE_BYTES">
            Size of the salt parameter in bytes
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Generators.BCrypt.MIN_COST">
            Minimum value of cost parameter, equal to log2(bytes of salt)
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Generators.BCrypt.MAX_COST">
            Maximum value of cost parameter (31 == 2,147,483,648)
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Generators.BCrypt.MAX_PASSWORD_BYTES">
            Maximum size of password == max (unrestricted) size of Blowfish key
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.BCrypt.DeriveRawKey(System.Int32,System.Byte[],System.Byte[])">
             Derives a raw 192 bit Bcrypt key
            
             @param cost the cost factor, treated as an exponent of 2
             @param salt a 16 byte salt
             @param psw  the password
             @return a 192 bit key
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.BCrypt.PasswordToByteArray(System.Char[])">
             Converts a character password to bytes incorporating the required trailing zero byte.
            
             @param password the password to be encoded.
             @return a byte representation of the password in UTF8 + trailing zero.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.BCrypt.Generate(System.Byte[],System.Byte[],System.Int32)">
            Calculates the <b>bcrypt</b> hash of a password.
            <p>
            This implements the raw <b>bcrypt</b> function as defined in the bcrypt specification, not
            the crypt encoded version implemented in OpenBSD.
            </p>
            @param password the password bytes (up to 72 bytes) to use for this invocation.
            @param salt     the 128 bit salt to use for this invocation.
            @param cost     the bcrypt cost parameter. The cost of the bcrypt function grows as
                            <code>2^cost</code>. Legal values are 4..31 inclusive.
            @return the output of the raw bcrypt operation: a 192 bit (24 byte) hash.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.DesKeyGenerator.engineInit(Org.BouncyCastle.Crypto.KeyGenerationParameters)">
             initialise the key generator - if strength is set to zero
             the key generated will be 64 bits in size, otherwise
             strength can be 64 or 56 bits (if you don't count the parity bits).
            
             @param param the parameters to be used for key generation
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.DesEdeKeyGenerator.engineInit(Org.BouncyCastle.Crypto.KeyGenerationParameters)">
             initialise the key generator - if strength is set to zero
             the key Generated will be 192 bits in size, otherwise
             strength can be 128 or 192 (or 112 or 168 if you don't count
             parity bits), depending on whether you wish to do 2-key or 3-key
             triple DES.
            
             @param param the parameters to be used for key generation
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.DHBasicKeyPairGenerator">
             a basic Diffie-Hellman key pair generator.
            
             This generates keys consistent for use with the basic algorithm for
             Diffie-Hellman.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator">
            interface that a public/private key pair generator should conform to.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.Init(Org.BouncyCastle.Crypto.KeyGenerationParameters)">
             intialise the key pair generator.
            
             @param the parameters the key pair is to be initialised with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IAsymmetricCipherKeyPairGenerator.GenerateKeyPair">
             return an AsymmetricCipherKeyPair containing the Generated keys.
            
             @return an AsymmetricCipherKeyPair containing the Generated keys.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.DHKeyPairGenerator">
             a Diffie-Hellman key pair generator.
            
             This generates keys consistent for use in the MTI/A0 key agreement protocol
             as described in "Handbook of Applied Cryptography", Pages 516-519.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.DHParametersGenerator.GenerateParameters">
            which Generates the p and g values from the given parameters,
            returning the DHParameters object.
            <p>
            Note: can take a while...</p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.DsaKeyPairGenerator">
             a DSA key pair generator.
            
             This Generates DSA keys in line with the method described
             in <i>FIPS 186-3 B.1 FFC Key Pair Generation</i>.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator">
            Generate suitable parameters for DSA, in line with FIPS 186-2, or FIPS 186-3.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator.Init(System.Int32,System.Int32,Org.BouncyCastle.Security.SecureRandom)">
            <summary>Initialise the generator</summary>
            <remarks>This form can only be used for older DSA (pre-DSA2) parameters</remarks>
            <param name="size">the size of keys in bits (from 512 up to 1024, and a multiple of 64)</param>
            <param name="certainty">measure of robustness of primes (at least 80 for FIPS 186-2 compliance)</param>
            <param name="random">the source of randomness to use</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator.Init(Org.BouncyCastle.Crypto.Parameters.DsaParameterGenerationParameters)">
            <summary>Initialise the generator for DSA 2</summary>
            <remarks>You must use this Init method if you need to generate parameters for DSA 2 keys</remarks>
            <param name="parameters">An instance of <c>DsaParameterGenerationParameters</c> used to configure this generator</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator.GenerateParameters">
            <summary>Generates a set of <c>DsaParameters</c></summary>
            <remarks>Can take a while...</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.DsaParametersGenerator.GenerateParameters_FIPS186_3">
            generate suitable parameters for DSA, in line with
            <i>FIPS 186-3 A.1 Generation of the FFC Primes p and q</i>.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.ECKeyPairGenerator.GenerateKeyPair">
            Given the domain parameters this routine generates an EC key
            pair in accordance with X9.62 section 5.2.1 pages 26, 27.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.ElGamalKeyPairGenerator">
            a ElGamal key pair generator.
            <p>
            This Generates keys consistent for use with ElGamal as described in
            page 164 of "Handbook of Applied Cryptography".</p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.ElGamalParametersGenerator.GenerateParameters">
                     * which Generates the p and g values from the given parameters,
                     * returning the ElGamalParameters object.
                     * <p>
                     * Note: can take a while...
            		 * </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Gost3410KeyPairGenerator">
            a GOST3410 key pair generator.
            This generates GOST3410 keys in line with the method described
            in GOST R 34.10-94.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Gost3410ParametersGenerator">
            generate suitable parameters for GOST3410.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Gost3410ParametersGenerator.Init(System.Int32,System.Int32,Org.BouncyCastle.Security.SecureRandom)">
             initialise the key generator.
            
             @param size size of the key
             @param typeProcedure type procedure A,B = 1;  A',B' - else
             @param random random byte source.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Gost3410ParametersGenerator.procedure_C(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Procedure C
            procedure generates the a value from the given p,q,
            returning the a value.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Gost3410ParametersGenerator.GenerateParameters">
            which generates the p , q and a values from the given parameters,
            returning the Gost3410Parameters object.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.HkdfBytesGenerator">
            HMAC-based Extract-and-Expand Key Derivation Function (HKDF) implemented
            according to IETF RFC 5869, May 2010 as specified by H. Krawczyk, IBM
            Research &amp; P. Eronen, Nokia. It uses a HMac internally to compute de OKM
            (output keying material) and is likely to have better security properties
            than KDF's based on just a hash function.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.HkdfBytesGenerator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
             Creates a HKDFBytesGenerator based on the given hash function.
            
             @param hash the digest to be used as the source of generatedBytes bytes
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.HkdfBytesGenerator.Extract(System.Byte[],System.Byte[])">
             Performs the extract part of the key derivation function.
            
             @param salt the salt to use
             @param ikm  the input keying material
             @return the PRK as KeyParameter
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.HkdfBytesGenerator.ExpandNext">
             Performs the expand part of the key derivation function, using currentT
             as input and output buffer.
            
             @throws DataLengthException if the total number of bytes generated is larger than the one
             specified by RFC 5869 (255 * HashLen)
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Kdf1BytesGenerator">
            KFD2 generator for derived keys and ivs as defined by IEEE P1363a/ISO 18033
            <br/>
            This implementation is based on IEEE P1363/ISO 18033.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Kdf1BytesGenerator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
             Construct a KDF1 byte generator.
            
             @param digest the digest to be used as the source of derived keys.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Kdf2BytesGenerator">
            KDF2 generator for derived keys and ivs as defined by IEEE P1363a/ISO 18033
            <br/>
            This implementation is based on IEEE P1363/ISO 18033.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Kdf2BytesGenerator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
             Construct a KDF2 bytes generator. Generates key material
             according to IEEE P1363 or ISO 18033 depending on the initialisation.
            
             @param digest the digest to be used as the source of derived keys.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator">
            Generator for MGF1 as defined in Pkcs 1v2
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
            @param digest the digest to be used as the source of Generated bytes
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator.ItoOSP(System.Int32,System.Byte[])">
            int to octet string.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator.GenerateBytes(System.Byte[],System.Int32,System.Int32)">
             fill len bytes of the output buffer with bytes Generated from
             the derivation function.
            
             @throws DataLengthException if the out buffer is too small.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Generators.Mgf1BytesGenerator.Digest">
            return the underlying digest.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.NaccacheSternKeyPairGenerator">
             Key generation parameters for NaccacheStern cipher. For details on this cipher, please see
            
             http://www.gemplus.com/smart/rd/publications/pdf/NS98pkcs.pdf
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.NaccacheSternKeyPairGenerator.permuteList(System.Collections.IList,Org.BouncyCastle.Security.SecureRandom)">
             Generates a permuted ArrayList from the original one. The original List
             is not modified
            
             @param arr
                        the ArrayList to be permuted
             @param rand
                        the source of Randomness for permutation
             @return a new IList with the permuted elements.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.NaccacheSternKeyPairGenerator.findFirstPrimes(System.Int32)">
             Finds the first 'count' primes starting with 3
            
             @param count
                        the number of primes to find
             @return a vector containing the found primes as Integer
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.OpenBsdBCrypt">
            Password hashing scheme BCrypt,
            designed by Niels Provos and David Mazières, using the
            String format and the Base64 encoding
            of the reference implementation on OpenBSD
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenBsdBCrypt.CreateBcryptString(System.String,System.Byte[],System.Byte[],System.Int32)">
             Creates a 60 character Bcrypt String, including
             version, cost factor, salt and hash, separated by '$'
            
             @param version  the version, 2y,2b or 2a. (2a is not backwards compatible.)
             @param cost     the cost factor, treated as an exponent of 2
             @param salt     a 16 byte salt
             @param password the password
             @return a 60 character Bcrypt String
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenBsdBCrypt.Generate(System.Char[],System.Byte[],System.Int32)">
             Creates a 60 character Bcrypt String, including
             version, cost factor, salt and hash, separated by '$' using version
             '2y'.
            
             @param cost     the cost factor, treated as an exponent of 2
             @param salt     a 16 byte salt
             @param password the password
             @return a 60 character Bcrypt String
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenBsdBCrypt.Generate(System.String,System.Char[],System.Byte[],System.Int32)">
             Creates a 60 character Bcrypt String, including
             version, cost factor, salt and hash, separated by '$'
            
             @param version  the version, may be 2b, 2y or 2a. (2a is not backwards compatible.)
             @param cost     the cost factor, treated as an exponent of 2
             @param salt     a 16 byte salt
             @param password the password
             @return a 60 character Bcrypt String
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenBsdBCrypt.CheckPassword(System.String,System.Char[])">
             Checks if a password corresponds to a 60 character Bcrypt String
            
             @param bcryptString a 60 character Bcrypt String, including
                                 version, cost factor, salt and hash,
                                 separated by '$'
             @param password     the password as an array of chars
             @return true if the password corresponds to the
             Bcrypt String, otherwise false
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator">
            Generator for PBE derived keys and ivs as usd by OpenSSL.
            <p>
            The scheme is a simple extension of PKCS 5 V2.0 Scheme 1 using MD5 with an
            iteration count of 1.
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.PbeParametersGenerator">
            super class for all Password Based Encyrption (Pbe) parameter generator classes.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.#ctor">
            base constructor.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Init(System.Byte[],System.Byte[],System.Int32)">
             initialise the Pbe generator.
            
             @param password the password converted into bytes (see below).
             @param salt the salt to be mixed with the password.
             @param iterationCount the number of iterations the "mixing" function
             is to be applied for.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GetPassword">
             return the password byte array.
            
             @return the password byte array.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GetSalt">
             return the salt byte array.
            
             @return the salt byte array.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32)">
             Generate derived parameters for a key of length keySize.
            
             @param keySize the length, in bits, of the key required.
             @return a parameters object representing a key.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)">
             Generate derived parameters for a key of length keySize, and
             an initialisation vector (IV) of length ivSize.
            
             @param keySize the length, in bits, of the key required.
             @param ivSize the length, in bits, of the iv required.
             @return a parameters object representing a key and an IV.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.GenerateDerivedMacParameters(System.Int32)">
             Generate derived parameters for a key of length keySize, specifically
             for use with a MAC.
            
             @param keySize the length, in bits, of the key required.
             @return a parameters object representing a key.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToBytes(System.Char[])">
             converts a password to a byte array according to the scheme in
             Pkcs5 (ascii, no padding)
            
             @param password a character array representing the password.
             @return a byte array representing the password.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs5PasswordToUtf8Bytes(System.Char[])">
             converts a password to a byte array according to the scheme in
             PKCS5 (UTF-8, no padding)
            
             @param password a character array representing the password.
             @return a byte array representing the password.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.PbeParametersGenerator.Pkcs12PasswordToBytes(System.Char[])">
             converts a password to a byte array according to the scheme in
             Pkcs12 (unicode, big endian, 2 zero pad bytes at the end).
            
             @param password a character array representing the password.
             @return a byte array representing the password.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.PbeParametersGenerator.IterationCount">
             return the iteration count.
            
             @return the iteration count.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.#ctor">
            Construct a OpenSSL Parameters generator. 
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.Init(System.Byte[],System.Byte[])">
            Initialise - note the iteration count for this algorithm is fixed at 1.
            
            @param password password to use.
            @param salt salt to use.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedKey(System.Int32)">
            the derived key function, the ith hash of the password and the salt.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedParameters(System.Int32)">
             Generate a key parameter derived from the password, salt, and iteration
             count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
             @exception ArgumentException if the key length larger than the base hash size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)">
             Generate a key with initialisation vector parameter derived from
             the password, salt, and iteration count we are currently initialised
             with.
            
             @param keySize the size of the key we want (in bits)
             @param ivSize the size of the iv we want (in bits)
             @return a ParametersWithIV object.
             @exception ArgumentException if keySize + ivSize is larger than the base hash size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.OpenSslPbeParametersGenerator.GenerateDerivedMacParameters(System.Int32)">
             Generate a key parameter for use with a MAC derived from the password,
             salt, and iteration count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
             @exception ArgumentException if the key length larger than the base hash size.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator">
            Generator for Pbe derived keys and ivs as defined by Pkcs 12 V1.0.
            <p>
            The document this implementation is based on can be found at
            <a href="http://www.rsasecurity.com/rsalabs/pkcs/pkcs-12/index.html">
            RSA's Pkcs12 Page</a>
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
             Construct a Pkcs 12 Parameters generator.
            
             @param digest the digest to be used as the source of derived keys.
             @exception ArgumentException if an unknown digest is passed in.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.Adjust(System.Byte[],System.Int32,System.Byte[])">
            add a + b + 1, returning the result in a. The a value is treated
            as a BigInteger of length (b.Length * 8) bits. The result is
            modulo 2^b.Length in case of overflow.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedKey(System.Int32,System.Int32)">
            generation of a derived key ala Pkcs12 V1.0.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedParameters(System.Int32)">
             Generate a key parameter derived from the password, salt, and iteration
             count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)">
             Generate a key with initialisation vector parameter derived from
             the password, salt, and iteration count we are currently initialised
             with.
            
             @param keySize the size of the key we want (in bits)
             @param ivSize the size of the iv we want (in bits)
             @return a ParametersWithIV object.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs12ParametersGenerator.GenerateDerivedMacParameters(System.Int32)">
             Generate a key parameter for use with a MAC derived from the password,
             salt, and iteration count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator">
            Generator for Pbe derived keys and ivs as defined by Pkcs 5 V2.0 Scheme 1.
            Note this generator is limited to the size of the hash produced by the
            digest used to drive it.
            <p>
            The document this implementation is based on can be found at
            <a href="http://www.rsasecurity.com/rsalabs/pkcs/pkcs-5/index.html">
            RSA's Pkcs5 Page</a>
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
             Construct a Pkcs 5 Scheme 1 Parameters generator.
            
             @param digest the digest to be used as the source of derived keys.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedKey">
            the derived key function, the ith hash of the mPassword and the mSalt.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedParameters(System.Int32)">
             Generate a key parameter derived from the mPassword, mSalt, and iteration
             count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
             @exception ArgumentException if the key length larger than the base hash size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)">
             Generate a key with initialisation vector parameter derived from
             the mPassword, mSalt, and iteration count we are currently initialised
             with.
            
             @param keySize the size of the key we want (in bits)
             @param ivSize the size of the iv we want (in bits)
             @return a ParametersWithIV object.
             @exception ArgumentException if keySize + ivSize is larger than the base hash size.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S1ParametersGenerator.GenerateDerivedMacParameters(System.Int32)">
             Generate a key parameter for use with a MAC derived from the mPassword,
             mSalt, and iteration count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
             @exception ArgumentException if the key length larger than the base hash size.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator">
            Generator for Pbe derived keys and ivs as defined by Pkcs 5 V2.0 Scheme 2.
            This generator uses a SHA-1 HMac as the calculation function.
            <p>
            The document this implementation is based on can be found at
            <a href="http://www.rsasecurity.com/rsalabs/pkcs/pkcs-5/index.html">
            RSA's Pkcs5 Page</a></p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.#ctor">
            construct a Pkcs5 Scheme 2 Parameters generator.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.GenerateDerivedParameters(System.Int32)">
             Generate a key parameter derived from the password, salt, and iteration
             count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.GenerateDerivedParameters(System.Int32,System.Int32)">
             Generate a key with initialisation vector parameter derived from
             the password, salt, and iteration count we are currently initialised
             with.
            
             @param keySize the size of the key we want (in bits)
             @param ivSize the size of the iv we want (in bits)
             @return a ParametersWithIV object.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Pkcs5S2ParametersGenerator.GenerateDerivedMacParameters(System.Int32)">
             Generate a key parameter for use with a MAC derived from the password,
             salt, and iteration count we are currently initialised with.
            
             @param keySize the size of the key we want (in bits)
             @return a KeyParameter object.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator">
            <summary>
            Generates keys for the Poly1305 MAC.
            </summary>
            <remarks>
            Poly1305 keys are 256 bit keys consisting of a 128 bit secret key used for the underlying block
            cipher followed by a 128 bit {@code r} value used for the polynomial portion of the Mac. <br/>
            The {@code r} value has a specific format with some bits required to be cleared, resulting in an
            effective 106 bit key. <br/>
            A separately generated 256 bit key can be modified to fit the Poly1305 key format by using the
            {@link #clamp(byte[])} method to clear the required bits.
            </remarks>
            <seealso cref="T:Org.BouncyCastle.Crypto.Macs.Poly1305"/>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator.engineInit(Org.BouncyCastle.Crypto.KeyGenerationParameters)">
            <summary>
            Initialises the key generator.
            </summary>
            <remarks>
            Poly1305 keys are always 256 bits, so the key length in the provided parameters is ignored.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator.engineGenerateKey">
            <summary>
            Generates a 256 bit key in the format required for Poly1305 - e.g.
            <code>k[0] ... k[15], r[0] ... r[15]</code> with the required bits in <code>r</code> cleared
            as per <see cref="M:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator.Clamp(System.Byte[])"/>.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator.Clamp(System.Byte[])">
            <summary>
            Modifies an existing 32 byte key value to comply with the requirements of the Poly1305 key by
            clearing required bits in the <code>r</code> (second 16 bytes) portion of the key.<br/>
            Specifically:
            <ul>
            <li>r[3], r[7], r[11], r[15] have top four bits clear (i.e., are {0, 1, . . . , 15})</li>
            <li>r[4], r[8], r[12] have bottom two bits clear (i.e., are in {0, 4, 8, . . . , 252})</li>
            </ul>
            </summary>
            <param name="key">a 32 byte key value <code>k[0] ... k[15], r[0] ... r[15]</code></param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator.CheckKey(System.Byte[])">
            <summary>
            Checks a 32 byte key for compliance with the Poly1305 key requirements, e.g.
            <code>k[0] ... k[15], r[0] ... r[15]</code> with the required bits in <code>r</code> cleared
            as per <see cref="M:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator.Clamp(System.Byte[])"/>.
            </summary>
            <param name="key">Key.</param>
            <exception> <see cref="T:System.ArgumentException"/>if the key is of the wrong length, or has invalid bits set
                      in the <code>r</code> portion of the key.</exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.RsaBlindingFactorGenerator">
            Generate a random factor suitable for use with RSA blind signatures
            as outlined in Chaum's blinding and unblinding as outlined in
            "Handbook of Applied Cryptography", page 475.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.RsaBlindingFactorGenerator.Init(Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the factor generator
            
             @param param the necessary RSA key parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.RsaBlindingFactorGenerator.GenerateBlindingFactor">
             Generate a suitable blind factor for the public key the generator was initialised with.
            
             @return a random blind factor
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator">
            an RSA key pair generator.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.RsaKeyPairGenerator.ChooseRandomPrime(System.Int32,Org.BouncyCastle.Math.BigInteger)">
            <summary>Choose a random prime value for use with RSA</summary>
            <param name="bitlength">the bit-length of the returned prime</param>
            <param name="e">the RSA public exponent</param>
            <returns>a prime p, with (p-1) relatively prime to e</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Generators.SCrypt">
            <summary>Implementation of the scrypt a password-based key derivation function.</summary>
            <remarks>
            Scrypt was created by Colin Percival and is specified in
            <a href="http://tools.ietf.org/html/draft-josefsson-scrypt-kdf-01">draft-josefsson-scrypt-kd</a>.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Generators.SCrypt.Generate(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Generate a key using the scrypt key derivation function.</summary>
            <param name="P">the bytes of the pass phrase.</param>
            <param name="S">the salt to use for this invocation.</param>
            <param name="N">CPU/Memory cost parameter. Must be larger than 1, a power of 2 and less than
                <code>2^(128 * r / 8)</code>.</param>
            <param name="r">the block size, must be >= 1.</param>
            <param name="p">Parallelization parameter. Must be a positive integer less than or equal to
                <code>Int32.MaxValue / (128 * r * 8)</code>.</param>
            <param name="dkLen">the length of the key to generate.</param>
            <returns>the generated key.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.ICipher">
            <summary>
            Base interface for a ciphers that do not require data to be block aligned.
            <para>
            Note: In cases where the underlying algorithm is block based, these ciphers may add or remove padding as needed.
            </para>
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ICipher.GetMaxOutputSize(System.Int32)">
            <summary>
            Return the size of the output buffer required for a Write() plus a
            close() with the write() being passed inputLen bytes.
            <para>
            The returned size may be dependent on the initialisation of this cipher
            and may not be accurate once subsequent input data is processed as the cipher may
            add, add or remove padding, as it sees fit.
            </para>
            </summary>
            <returns>The space required to accommodate a call to processBytes and doFinal with inputLen bytes of input.</returns>
            <param name="inputLen">The length of the expected input.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ICipher.GetUpdateOutputSize(System.Int32)">
            <summary>
            Return the size of the output buffer required for a write() with the write() being
            passed inputLen bytes and just updating the cipher output.
            </summary>
            <returns>The space required to accommodate a call to processBytes with inputLen bytes of input.</returns>
            <param name="inputLen">The length of the expected input.</param>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.ICipher.Stream">
            <summary>
            Gets the stream for reading/writing data processed/to be processed.
            </summary>
            <value>The stream associated with this cipher.</value>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.ICipherBuilder">
            <summary>
            Base interface for cipher builders.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ICipherBuilder.GetMaxOutputSize(System.Int32)">
            <summary>
            Return the maximum output size that a given input will produce.
            </summary>
            <param name="inputLen">the length of the expected input.</param>
            <returns>The maximum possible output size that can produced for the expected input length.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ICipherBuilder.BuildCipher(System.IO.Stream)">
            <summary>
            Build a cipher that operates on the passed in stream.
            </summary>
            <param name="stream">The stream to write/read any encrypted/decrypted data.</param>
            <returns>A cipher based around the given stream.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.ICipherBuilder.AlgorithmDetails">
            <summary>
            Return the algorithm and parameter details associated with any cipher built.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.ICipherBuilderWithKey">
            <summary>
            A cipher builder that can also return the key it was initialized with.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.ICipherBuilderWithKey.Key">
            <summary>
            Return the key we were initialized with.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDecryptorBuilderProvider">
            <summary>
            Interface describing a provider of cipher builders for creating decrypting ciphers.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDecryptorBuilderProvider.CreateDecryptorBuilder(System.Object)">
            <summary>
            Return a cipher builder for creating decrypting ciphers.
            </summary>
            <param name="algorithmDetails">The algorithm details/parameters to use to create the final cipher.</param>
            <returns>A new cipher builder.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDigestFactory">
            <summary>
            Base interface for operator factories that create stream-based digest calculators.
            </summary>   
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDigestFactory.CreateCalculator">
            <summary>
            Create a stream calculator for the digest associated with this factory. The stream
            calculator is used for the actual operation of entering the data to be digested
            and producing the digest block.
            </summary>
            <returns>A calculator producing an IBlockResult with the final digest in it.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IDigestFactory.AlgorithmDetails">
            <summary>The algorithm details object for calculators made by this factory.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IDigestFactory.DigestLength">
            <summary>Return the size of the digest associated with this factory.</summary>
            <returns>The length of the digest produced by this calculators from this factory in bytes.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDsa">
            interface for classes implementing the Digital Signature Algorithm
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDsa.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the signer for signature generation or signature
             verification.
            
             @param forSigning true if we are generating a signature, false
             otherwise.
             @param param key parameters for signature generation.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDsa.GenerateSignature(System.Byte[])">
             sign the passed in message (usually the output of a hash function).
            
             @param message the message to be signed.
             @return two big integers representing the r and s values respectively.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IDsa.VerifySignature(System.Byte[],Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
             verify the message message against the signature values r and s.
            
             @param message the message that was supposed to have been signed.
             @param r the r signature value.
             @param s the s signature value.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IDsaExt">
            <summary>
            An "extended" interface for classes implementing DSA-style algorithms, that provides access
            to the group order.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IDsaExt.Order">
            <summary>The order of the group that the r, s values in signatures belong to.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IEntropySource">
            <summary>
            Base interface describing an entropy source for a DRBG.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IEntropySource.GetEntropy">
            <summary>
            Return a byte array of entropy.
            </summary>
            <returns>The entropy bytes.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IEntropySource.IsPredictionResistant">
            <summary>
            Return whether or not this entropy source is regarded as prediction resistant.
            </summary>
            <value><c>true</c> if this instance is prediction resistant; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IEntropySource.EntropySize">
            <summary>
            Return the number of bits of entropy this source can produce.
            </summary>
            <value>The size, in bits, of the return value of getEntropy.</value>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IEntropySourceProvider">
            <summary>
            Base interface describing a provider of entropy sources.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IEntropySourceProvider.Get(System.Int32)">
            <summary>
            Return an entropy source providing a block of entropy.
            </summary>
            <param name="bitsRequired">The size of the block of entropy required.</param>
            <returns>An entropy source providing bitsRequired blocks of entropy.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IKeyUnwrapper">
            <summary>
            Base interface for a key unwrapper.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IKeyUnwrapper.Unwrap(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Unwrap the passed in data.
            </summary>
            <param name="cipherText">The array containing the data to be unwrapped.</param>
            <param name="offset">The offset into cipherText at which the unwrapped data starts.</param>
            <param name="length">The length of the data to be unwrapped.</param>
            <returns>an IBlockResult containing the unwrapped key data.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IKeyUnwrapper.AlgorithmDetails">
            <summary>
            The parameter set used to configure this key unwrapper.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IKeyWrapper">
            <summary>
            Base interface for a key wrapper.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IKeyWrapper.Wrap(System.Byte[])">
            <summary>
            Wrap the passed in key data.
            </summary>
            <param name="keyData">The key data to be wrapped.</param>
            <returns>an IBlockResult containing the wrapped key data.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IKeyWrapper.AlgorithmDetails">
            <summary>
            The parameter set used to configure this key wrapper.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IMac">
            The base interface for implementations of message authentication codes (MACs).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the MAC.
            
             @param param the key and other data required by the MAC.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IMac.GetMacSize">
             Return the block size for this MAC (in bytes).
            
             @return the block size for this MAC in bytes.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IMac.Update(System.Byte)">
             add a single byte to the mac for processing.
            
             @param in the byte to be processed.
             @exception InvalidOperationException if the MAC is not initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IMac.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            @param in the array containing the input.
            @param inOff the index in the array the data begins at.
            @param len the length of the input starting at inOff.
            @exception InvalidOperationException if the MAC is not initialised.
            @exception DataLengthException if there isn't enough data in in.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IMac.DoFinal(System.Byte[],System.Int32)">
            Compute the final stage of the MAC writing the output to the out
            parameter.
            <p>
            doFinal leaves the MAC in the same state it was after the last init.
            </p>
            @param out the array the MAC is to be output to.
            @param outOff the offset into the out buffer the output is to start at.
            @exception DataLengthException if there isn't enough space in out.
            @exception InvalidOperationException if the MAC is not initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IMac.Reset">
            Reset the MAC. At the end of resetting the MAC should be in the
            in the same state it was after the last init (if there was one).
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IMac.AlgorithmName">
             Return the name of the algorithm the MAC implements.
            
             @return the name of the algorithm the MAC implements.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.InvalidCipherTextException">
            this exception is thrown whenever we find something we don't expect in a
            message.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.InvalidCipherTextException.#ctor">
            base constructor.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.InvalidCipherTextException.#ctor(System.String)">
             create a InvalidCipherTextException with the given message.
            
             @param message the message to be carried with the exception.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.ISignatureFactory">
            <summary>
            Base interface for operators that serve as stream-based signature calculators.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISignatureFactory.CreateCalculator">
            <summary>
            Create a stream calculator for this signature calculator. The stream
            calculator is used for the actual operation of entering the data to be signed
            and producing the signature block.
            </summary>
            <returns>A calculator producing an IBlockResult with a signature in it.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.ISignatureFactory.AlgorithmDetails">
            <summary>The algorithm details object for this calculator.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the signer for signing or verification.
            
             @param forSigning true if for signing, false otherwise
             @param param necessary parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISigner.Update(System.Byte)">
            update the internal digest with the byte b
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            update the internal digest with the byte array in
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISigner.GenerateSignature">
            Generate a signature for the message we've been loaded with using
            the key we were initialised with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISigner.VerifySignature(System.Byte[])">
            return true if the internal state represents the signature described
            in the passed in array.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISigner.Reset">
            reset the internal state
        </member>
        <member name="P:Org.BouncyCastle.Crypto.ISigner.AlgorithmName">
             Return the name of the algorithm the signer implements.
            
             @return the name of the algorithm the signer implements.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.ISignerWithRecovery">
            Signer with message recovery.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage">
             Returns true if the signer has recovered the full message as
             part of signature verification.
            
             @return true if full message recovered.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage">
             Returns a reference to what message was recovered (if any).
            
             @return full/partial message, null if nothing.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.ISignerWithRecovery.UpdateWithRecoveredMessage(System.Byte[])">
             Perform an update with the recovered message before adding any other data. This must
             be the first update method called, and calling it will result in the signer assuming
             that further calls to update will include message content past what is recoverable.
            
             @param signature the signature that we are in the process of verifying.
             @throws IllegalStateException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IVerifier">
            <summary>
            Operators that reduce their input to the validation of a signature produce this type.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[])">
            <summary>
            Return true if the passed in data matches what is expected by the verification result.
            </summary>
            <param name="data">The bytes representing the signature.</param>
            <returns>true if the signature verifies, false otherwise.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IVerifier.IsVerified(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Return true if the length bytes from off in the source array match the signature
            expected by the verification result.
            </summary>
            <param name="source">Byte array containing the signature.</param>
            <param name="off">The offset into the source array where the signature starts.</param>
            <param name="length">The number of bytes in source making up the signature.</param>
            <returns>true if the signature verifies, false otherwise.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IVerifierFactory">
            <summary>
            Base interface for operators that serve as stream-based signature verifiers.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IVerifierFactory.CreateCalculator">
            <summary>
            Create a stream calculator for this verifier. The stream
            calculator is used for the actual operation of entering the data to be verified
            and producing a result which can be used to verify the original signature.
            </summary>
            <returns>A calculator producing an IVerifier which can verify the signature.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.IVerifierFactory.AlgorithmDetails">
            <summary>The algorithm details object for this verifier.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.IVerifierFactoryProvider">
            <summary>
            Base interface for a provider to support the dynamic creation of signature verifiers.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.IVerifierFactoryProvider.CreateVerifierFactory(System.Object)">
            <summary>
            Return a signature verfier for signature algorithm described in the passed in algorithm details object.
            </summary>
            <param name="algorithmDetails">The details of the signature algorithm verification is required for.</param>
            <returns>A new signature verifier.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.KeyGenerationParameters">
            The base class for parameters to key generators.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.KeyGenerationParameters.#ctor(Org.BouncyCastle.Security.SecureRandom,System.Int32)">
             initialise the generator with a source of randomness
             and a strength (in bits).
            
             @param random the random byte source.
             @param strength the size, in bits, of the keys we want to produce.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.KeyGenerationParameters.Random">
             return the random source associated with this
             generator.
            
             @return the generators random source.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.KeyGenerationParameters.Strength">
             return the bit strength for keys produced by this generator,
            
             @return the strength of the keys this generator produces (in bits).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac">
            standard CBC Block Cipher MAC - if no padding is specified the default of
            pad of zeroes is used.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             create a standard MAC based on a CBC block cipher. This will produce an
             authentication code half the length of the block size of the cipher.
            
             @param cipher the cipher to be used as the basis of the MAC generation.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding)">
             create a standard MAC based on a CBC block cipher. This will produce an
             authentication code half the length of the block size of the cipher.
            
             @param cipher the cipher to be used as the basis of the MAC generation.
             @param padding the padding to be used to complete the last block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32)">
            create a standard MAC based on a block cipher with the size of the
            MAC been given in bits. This class uses CBC mode as the basis for the
            MAC generation.
            <p>
            Note: the size of the MAC must be at least 24 bits (FIPS Publication 81),
            or 16 bits if being used as a data authenticator (FIPS Publication 113),
            and in general should be less than the size of the block cipher as it reduces
            the chance of an exhaustive attack (see Handbook of Applied Cryptography).
            </p>
            @param cipher the cipher to be used as the basis of the MAC generation.
            @param macSizeInBits the size of the MAC in bits, must be a multiple of 8.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32,Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding)">
            create a standard MAC based on a block cipher with the size of the
            MAC been given in bits. This class uses CBC mode as the basis for the
            MAC generation.
            <p>
            Note: the size of the MAC must be at least 24 bits (FIPS Publication 81),
            or 16 bits if being used as a data authenticator (FIPS Publication 113),
            and in general should be less than the size of the block cipher as it reduces
            the chance of an exhaustive attack (see Handbook of Applied Cryptography).
            </p>
            @param cipher the cipher to be used as the basis of the MAC generation.
            @param macSizeInBits the size of the MAC in bits, must be a multiple of 8.
            @param padding the padding to be used to complete the last block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CbcBlockCipherMac.Reset">
            Reset the mac generator.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher">
            implements a Cipher-FeedBack (CFB) mode on top of a simple cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32)">
             Basic constructor.
            
             @param cipher the block cipher to be used as the basis of the
             feedback mode.
             @param blockSize the block size in bits (note: a multiple of 8)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the cipher and, possibly, the initialisation vector (IV).
             If an IV isn't passed as part of the parameter, the IV will be all zeros.
             An IV which is too short is handled in FIPS compliant fashion.
            
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.GetBlockSize">
             return the block size we are operating at.
            
             @return the block size we are operating at (in bytes).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param in the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param out the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.Reset">
            reset the chaining vector back to the IV and reset the underlying
            cipher.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Macs.MacCFBBlockCipher.AlgorithmName">
             return the algorithm name and mode.
            
             @return the name of the underlying algorithm followed by "/CFB"
             and the block size in bits.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             create a standard MAC based on a CFB block cipher. This will produce an
             authentication code half the length of the block size of the cipher, with
             the CFB mode set to 8 bits.
            
             @param cipher the cipher to be used as the basis of the MAC generation.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding)">
             create a standard MAC based on a CFB block cipher. This will produce an
             authentication code half the length of the block size of the cipher, with
             the CFB mode set to 8 bits.
            
             @param cipher the cipher to be used as the basis of the MAC generation.
             @param padding the padding to be used.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32,System.Int32)">
            create a standard MAC based on a block cipher with the size of the
            MAC been given in bits. This class uses CFB mode as the basis for the
            MAC generation.
            <p>
            Note: the size of the MAC must be at least 24 bits (FIPS Publication 81),
            or 16 bits if being used as a data authenticator (FIPS Publication 113),
            and in general should be less than the size of the block cipher as it reduces
            the chance of an exhaustive attack (see Handbook of Applied Cryptography).
            </p>
            @param cipher the cipher to be used as the basis of the MAC generation.
            @param cfbBitSize the size of an output block produced by the CFB mode.
            @param macSizeInBits the size of the MAC in bits, must be a multiple of 8.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32,System.Int32,Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding)">
            create a standard MAC based on a block cipher with the size of the
            MAC been given in bits. This class uses CFB mode as the basis for the
            MAC generation.
            <p>
            Note: the size of the MAC must be at least 24 bits (FIPS Publication 81),
            or 16 bits if being used as a data authenticator (FIPS Publication 113),
            and in general should be less than the size of the block cipher as it reduces
            the chance of an exhaustive attack (see Handbook of Applied Cryptography).
            </p>
            @param cipher the cipher to be used as the basis of the MAC generation.
            @param cfbBitSize the size of an output block produced by the CFB mode.
            @param macSizeInBits the size of the MAC in bits, must be a multiple of 8.
            @param padding a padding to be used.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CfbBlockCipherMac.Reset">
            Reset the mac generator.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.CMac">
            CMAC - as specified at www.nuee.nagoya-u.ac.jp/labs/tiwata/omac/omac.html
            <p>
            CMAC is analogous to OMAC1 - see also en.wikipedia.org/wiki/CMAC
            </p><p>
            CMAC is a NIST recomendation - see 
            csrc.nist.gov/CryptoToolkit/modes/800-38_Series_Publications/SP800-38B.pdf
            </p><p>
            CMAC/OMAC1 is a blockcipher-based message authentication code designed and
            analyzed by Tetsu Iwata and Kaoru Kurosawa.
            </p><p>
            CMAC/OMAC1 is a simple variant of the CBC MAC (Cipher Block Chaining Message 
            Authentication Code). OMAC stands for One-Key CBC MAC.
            </p><p>
            It supports 128- or 64-bits block ciphers, with any key size, and returns
            a MAC with dimension less or equal to the block size of the underlying 
            cipher.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             create a standard MAC based on a CBC block cipher (64 or 128 bit block).
             This will produce an authentication code the length of the block size
             of the cipher.
            
             @param cipher the cipher to be used as the basis of the MAC generation.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CMac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32)">
             create a standard MAC based on a block cipher with the size of the
             MAC been given in bits.
             <p/>
             Note: the size of the MAC must be at least 24 bits (FIPS Publication 81),
             or 16 bits if being used as a data authenticator (FIPS Publication 113),
             and in general should be less than the size of the block cipher as it reduces
             the chance of an exhaustive attack (see Handbook of Applied Cryptography).
            
             @param cipher        the cipher to be used as the basis of the MAC generation.
             @param macSizeInBits the size of the MAC in bits, must be a multiple of 8 and @lt;= 128.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.CMac.Reset">
            Reset the mac generator.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.Dstu7564Mac">
            <summary>
            Implementation of DSTU7564 mac mode
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.Dstu7624Mac">
            implementation of DSTU 7624 MAC
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.GMac">
            <summary>
            The GMAC specialisation of Galois/Counter mode (GCM) detailed in NIST Special Publication
            800-38D.
            </summary>
            <remarks>
            GMac is an invocation of the GCM mode where no data is encrypted (i.e. all input data to the Mac
            is processed as additional authenticated data with the underlying GCM block cipher).
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.GMac.#ctor(Org.BouncyCastle.Crypto.Modes.GcmBlockCipher)">
            <summary>
            Creates a GMAC based on the operation of a block cipher in GCM mode.
            </summary>
            <remarks>
            This will produce an authentication code the length of the block size of the cipher.
            </remarks>
            <param name="cipher">the cipher to be used in GCM mode to generate the MAC.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.GMac.#ctor(Org.BouncyCastle.Crypto.Modes.GcmBlockCipher,System.Int32)">
            <summary>
            Creates a GMAC based on the operation of a 128 bit block cipher in GCM mode.
            </summary>
            <remarks>
            This will produce an authentication code the length of the block size of the cipher.
            </remarks>
            <param name="cipher">the cipher to be used in GCM mode to generate the MAC.</param>
            <param name="macSizeBits">the mac size to generate, in bits. Must be a multiple of 8, between 32 and 128 (inclusive).
            Sizes less than 96 are not recommended, but are supported for specialized applications.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.GMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>
            Initialises the GMAC - requires a <see cref="T:Org.BouncyCastle.Crypto.Parameters.ParametersWithIV"/> 
            providing a <see cref="T:Org.BouncyCastle.Crypto.Parameters.KeyParameter"/> and a nonce.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.Gost28147Mac">
            implementation of GOST 28147-89 MAC
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.HMac">
             HMAC implementation based on RFC2104
            
             H(K XOR opad, H(K XOR ipad, text))
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.HMac.Reset">
            Reset the mac generator.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac">
             DES based CBC Block Cipher MAC according to ISO9797, algorithm 3 (ANSI X9.19 Retail MAC)
            
             This could as well be derived from CBCBlockCipherMac, but then the property mac in the base
             class must be changed to protected
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             create a Retail-MAC based on a CBC block cipher. This will produce an
             authentication code of the length of the block size of the cipher.
            
             @param cipher the cipher to be used as the basis of the MAC generation. This must
             be DESEngine.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding)">
             create a Retail-MAC based on a CBC block cipher. This will produce an
             authentication code of the length of the block size of the cipher.
            
             @param cipher the cipher to be used as the basis of the MAC generation.
             @param padding the padding to be used to complete the last block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32)">
            create a Retail-MAC based on a block cipher with the size of the
            MAC been given in bits. This class uses single DES CBC mode as the basis for the
            MAC generation.
            <p>
            Note: the size of the MAC must be at least 24 bits (FIPS Publication 81),
            or 16 bits if being used as a data authenticator (FIPS Publication 113),
            and in general should be less than the size of the block cipher as it reduces
            the chance of an exhaustive attack (see Handbook of Applied Cryptography).
            </p>
            @param cipher the cipher to be used as the basis of the MAC generation.
            @param macSizeInBits the size of the MAC in bits, must be a multiple of 8.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32,Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding)">
            create a standard MAC based on a block cipher with the size of the
            MAC been given in bits. This class uses single DES CBC mode as the basis for the
            MAC generation. The final block is decrypted and then encrypted using the
            middle and right part of the key.
            <p>
            Note: the size of the MAC must be at least 24 bits (FIPS Publication 81),
            or 16 bits if being used as a data authenticator (FIPS Publication 113),
            and in general should be less than the size of the block cipher as it reduces
            the chance of an exhaustive attack (see Handbook of Applied Cryptography).
            </p>
            @param cipher the cipher to be used as the basis of the MAC generation.
            @param macSizeInBits the size of the MAC in bits, must be a multiple of 8.
            @param padding the padding to be used to complete the last block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.ISO9797Alg3Mac.Reset">
            Reset the mac generator.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.Poly1305">
            <summary>
            Poly1305 message authentication code, designed by D. J. Bernstein.
            </summary>
            <remarks>
            Poly1305 computes a 128-bit (16 bytes) authenticator, using a 128 bit nonce and a 256 bit key
            consisting of a 128 bit key applied to an underlying cipher, and a 128 bit key (with 106
            effective key bits) used in the authenticator.
            
            The polynomial calculation in this implementation is adapted from the public domain <a href="https://github.com/floodyberry/poly1305-donna">poly1305-donna-unrolled</a> C implementation
            by Andrew M (@floodyberry).
            </remarks>
            <seealso cref="T:Org.BouncyCastle.Crypto.Generators.Poly1305KeyGenerator"/>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.r0">
            Polynomial key 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.r1">
            Polynomial key 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.r2">
            Polynomial key 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.r3">
            Polynomial key 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.r4">
            Polynomial key 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.s1">
            Precomputed 5 * r[1..4] 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.s2">
            Precomputed 5 * r[1..4] 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.s3">
            Precomputed 5 * r[1..4] 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.s4">
            Precomputed 5 * r[1..4] 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.k0">
            Encrypted nonce 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.k1">
            Encrypted nonce 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.k2">
            Encrypted nonce 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.k3">
            Encrypted nonce 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.currentBlock">
            Current block of buffered input 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.currentBlockOffset">
            Current offset in input buffer 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.h0">
            Polynomial accumulator 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.h1">
            Polynomial accumulator 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.h2">
            Polynomial accumulator 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.h3">
            Polynomial accumulator 
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.Poly1305.h4">
            Polynomial accumulator 
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.Poly1305.#ctor">
            Constructs a Poly1305 MAC, where the key passed to init() will be used directly.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.Poly1305.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
            Constructs a Poly1305 MAC, using a 128 bit block cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.Poly1305.Init(Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>
            Initialises the Poly1305 MAC.
            </summary>
            <param name="parameters">a {@link ParametersWithIV} containing a 128 bit nonce and a {@link KeyParameter} with
                     a 256 bit key complying to the {@link Poly1305KeyGenerator Poly1305 key format}.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.SipHash">
            <summary>
            Implementation of SipHash as specified in "SipHash: a fast short-input PRF", by Jean-Philippe
            Aumasson and Daniel J. Bernstein (https://131002.net/siphash/siphash.pdf).
            </summary>
            <remarks>
            "SipHash is a family of PRFs SipHash-c-d where the integer parameters c and d are the number of
            compression rounds and the number of finalization rounds. A compression round is identical to a
            finalization round and this round function is called SipRound. Given a 128-bit key k and a
            (possibly empty) byte string m, SipHash-c-d returns a 64-bit value..."
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.SipHash.#ctor">
            <summary>SipHash-2-4</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.SipHash.#ctor(System.Int32,System.Int32)">
            <summary>SipHash-c-d</summary>
            <param name="c">the number of compression rounds</param>
            <param name="d">the number of finalization rounds</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Macs.SkeinMac">
            <summary>
            Implementation of the Skein parameterised MAC function in 256, 512 and 1024 bit block sizes,
            based on the <see cref="T:Org.BouncyCastle.Crypto.Engines.ThreefishEngine">Threefish</see> tweakable block cipher.
            </summary>
            <remarks>
            This is the 1.3 version of Skein defined in the Skein hash function submission to the NIST SHA-3
            competition in October 2010.
            <p/>
            Skein was designed by Niels Ferguson - Stefan Lucks - Bruce Schneier - Doug Whiting - Mihir
            Bellare - Tadayoshi Kohno - Jon Callas - Jesse Walker.
            </remarks>
            <seealso cref="T:Org.BouncyCastle.Crypto.Digests.SkeinEngine"/>
            <seealso cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"/>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.SkeinMac.SKEIN_256">
            <summary>
            256 bit block size - Skein-256
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.SkeinMac.SKEIN_512">
            <summary>
            512 bit block size - Skein-512
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Macs.SkeinMac.SKEIN_1024">
            <summary>
            1024 bit block size - Skein-1024
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.SkeinMac.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructs a Skein MAC with an internal state size and output size.
            </summary>
            <param name="stateSizeBits">the internal state size in bits - one of <see cref="F:Org.BouncyCastle.Crypto.Macs.SkeinMac.SKEIN_256"/> <see cref="F:Org.BouncyCastle.Crypto.Macs.SkeinMac.SKEIN_512"/> or
                                  <see cref="F:Org.BouncyCastle.Crypto.Macs.SkeinMac.SKEIN_1024"/>.</param>
            <param name="digestSizeBits">the output/MAC size to produce in bits, which must be an integral number of
                                 bytes.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Macs.SkeinMac.Init(Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>
            Optionally initialises the Skein digest with the provided parameters.
            </summary>
            See <see cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"></see> for details on the parameterisation of the Skein hash function.
            <param name="parameters">the parameters to apply to this engine, or <code>null</code> to use no parameters.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.MaxBytesExceededException">
            <summary>
            This exception is thrown whenever a cipher requires a change of key, iv
            or similar after x amount of bytes enciphered
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher">
            implements Cipher-Block-Chaining (CBC) mode on top of a simple cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Basic constructor.
            
             @param cipher the block cipher to be used as the basis of chaining.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the cipher and, possibly, the initialisation vector (IV).
             If an IV isn't passed as part of the parameter, the IV will be all zeros.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.GetBlockSize">
             return the block size of the underlying cipher.
            
             @return the block size of the underlying cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param in the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param out the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.Reset">
            reset the chaining vector back to the IV and reset the underlying
            cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Do the appropriate chaining step for CBC mode encryption.
            
             @param in the array containing the data to be encrypted.
             @param inOff offset into the in array the data starts at.
             @param out the array the encrypted data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Do the appropriate chaining step for CBC mode decryption.
            
             @param in the array containing the data to be decrypted.
             @param inOff offset into the in array the data starts at.
             @param out the array the decrypted data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Modes.CbcBlockCipher.AlgorithmName">
             return the algorithm name and mode.
            
             @return the name of the underlying algorithm followed by "/CBC".
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.CcmBlockCipher">
            Implements the Counter with Cipher Block Chaining mode (CCM) detailed in
            NIST Special Publication 800-38C.
            <p>
            <b>Note</b>: this mode is a packet mode - it needs all the data up front.
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher">
            <summary>An IAeadCipher based on an IBlockCipher.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.IAeadCipher">
            <summary>
            A cipher mode that includes authenticated encryption with a streaming mode and optional
            associated data.
            </summary>
            <remarks>
            Implementations of this interface may operate in a packet mode (where all input data is
            buffered and processed during the call to DoFinal, or in a streaming mode (where output
            data is incrementally produced with each call to ProcessByte or ProcessBytes. This is
            important to consider during decryption: in a streaming mode, unauthenticated plaintext
            data may be output prior to the call to DoFinal that results in an authentication failure.
            The higher level protocol utilising this cipher must ensure the plaintext data is handled
            appropriately until the end of data is reached and the entire ciphertext is authenticated.
            </remarks>
            <see cref="T:Org.BouncyCastle.Crypto.Parameters.AeadParameters"/>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>Initialise the cipher.</summary>
            <remarks>Parameter can either be an AeadParameters or a ParametersWithIV object.</remarks>
            <param name="forEncryption">Initialise for encryption if true, for decryption if false.</param>
            <param name="parameters">The key or other data required by the cipher.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.ProcessAadByte(System.Byte)">
            <summary>Add a single byte to the associated data check.</summary>
            <remarks>If the implementation supports it, this will be an online operation and will not retain the associated data.</remarks>
            <param name="input">The byte to be processed.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.ProcessAadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>Add a sequence of bytes to the associated data check.</summary>
            <remarks>If the implementation supports it, this will be an online operation and will not retain the associated data.</remarks>
            <param name="inBytes">The input byte array.</param>
            <param name="inOff">The offset into the input array where the data to be processed starts.</param>
            <param name="len">The number of bytes to be processed.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)">
             Encrypt/decrypt a single byte.
            
             @param input the byte to be processed.
             @param outBytes the output buffer the processed byte goes into.
             @param outOff the offset into the output byte array the processed data starts at.
             @return the number of bytes written to out.
             @exception DataLengthException if the output buffer is too small.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             Process a block of bytes from in putting the result into out.
            
             @param inBytes the input byte array.
             @param inOff the offset into the in array where the data to be processed starts.
             @param len the number of bytes to be processed.
             @param outBytes the output buffer the processed bytes go into.
             @param outOff the offset into the output byte array the processed data starts at.
             @return the number of bytes written to out.
             @exception DataLengthException if the output buffer is too small.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.DoFinal(System.Byte[],System.Int32)">
             Finish the operation either appending or verifying the MAC at the end of the data.
            
             @param outBytes space for any resulting output data.
             @param outOff offset into out to start copying the data at.
             @return number of bytes written into out.
             @throws InvalidOperationException if the cipher is in an inappropriate state.
             @throws InvalidCipherTextException if the MAC fails to match.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.GetMac">
             Return the value of the MAC associated with the last stream processed.
            
             @return MAC for plaintext data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.GetUpdateOutputSize(System.Int32)">
             Return the size of the output buffer required for a ProcessBytes
             an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to ProcessBytes
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.GetOutputSize(System.Int32)">
             Return the size of the output buffer required for a ProcessBytes plus a
             DoFinal with an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to ProcessBytes and DoFinal
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadCipher.Reset">
            <summary>
            Reset the cipher to the same state as it was after the last init (if there was one).
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Modes.IAeadCipher.AlgorithmName">
            <summary>The name of the algorithm this cipher implements.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetBlockSize">
            <returns>The block size for this cipher, in bytes.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher.GetUnderlyingCipher">
            <summary>The block cipher underlying this algorithm.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Basic constructor.
            
             @param cipher the block cipher to be used.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CcmBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CcmBlockCipher.GetMac">
             Returns a byte array containing the mac calculated as part of the
             last encrypt or decrypt operation.
            
             @return the last mac calculated.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CcmBlockCipher.ProcessPacket(System.Byte[],System.Int32,System.Int32)">
             Process a packet of data for either CCM decryption or encryption.
            
             @param in data for processing.
             @param inOff offset at which data starts in the input array.
             @param inLen length of the data in the input array.
             @return a byte array containing the processed input..
             @throws IllegalStateException if the cipher is not appropriately set up.
             @throws InvalidCipherTextException if the input data is truncated or the mac check fails.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CcmBlockCipher.ProcessPacket(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             Process a packet of data for either CCM decryption or encryption.
            
             @param in data for processing.
             @param inOff offset at which data starts in the input array.
             @param inLen length of the data in the input array.
             @param output output array.
             @param outOff offset into output array to start putting processed bytes.
             @return the number of bytes added to output.
             @throws IllegalStateException if the cipher is not appropriately set up.
             @throws InvalidCipherTextException if the input data is truncated or the mac check fails.
             @throws DataLengthException if output buffer too short.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher">
            implements a Cipher-FeedBack (CFB) mode on top of a simple cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32)">
             Basic constructor.
            
             @param cipher the block cipher to be used as the basis of the
             feedback mode.
             @param blockSize the block size in bits (note: a multiple of 8)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the cipher and, possibly, the initialisation vector (IV).
             If an IV isn't passed as part of the parameter, the IV will be all zeros.
             An IV which is too short is handled in FIPS compliant fashion.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.GetBlockSize">
             return the block size we are operating at.
            
             @return the block size we are operating at (in bytes).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param in the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param out the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Do the appropriate processing for CFB mode encryption.
            
             @param in the array containing the data to be encrypted.
             @param inOff offset into the in array the data starts at.
             @param out the array the encrypted data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Do the appropriate processing for CFB mode decryption.
            
             @param in the array containing the data to be decrypted.
             @param inOff offset into the in array the data starts at.
             @param out the array the encrypted data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.Reset">
            reset the chaining vector back to the IV and reset the underlying
            cipher.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Modes.CfbBlockCipher.AlgorithmName">
             return the algorithm name and mode.
            
             @return the name of the underlying algorithm followed by "/CFB"
             and the block size in bits.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.CtsBlockCipher">
            A Cipher Text Stealing (CTS) mode cipher. CTS allows block ciphers to
            be used to produce cipher text which is the same outLength as the plain text.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CtsBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Create a buffered block cipher that uses Cipher Text Stealing
            
             @param cipher the underlying block cipher this buffering object wraps.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CtsBlockCipher.GetUpdateOutputSize(System.Int32)">
             return the size of the output buffer required for an update of 'length' bytes.
            
             @param length the outLength of the input.
             @return the space required to accommodate a call to update
             with length bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CtsBlockCipher.GetOutputSize(System.Int32)">
             return the size of the output buffer required for an update plus a
             doFinal with an input of length bytes.
            
             @param length the outLength of the input.
             @return the space required to accommodate a call to update and doFinal
             with length bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CtsBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)">
             process a single byte, producing an output block if necessary.
            
             @param in the input byte.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CtsBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             process an array of bytes, producing output if necessary.
            
             @param in the input byte array.
             @param inOff the offset at which the input data starts.
             @param length the number of bytes to be copied out of the input array.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.CtsBlockCipher.DoFinal(System.Byte[],System.Int32)">
             Process the last block in the buffer.
            
             @param out the array the block currently being held is copied into.
             @param outOff the offset at which the copying starts.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there is insufficient space in out for
             the output.
             @exception InvalidOperationException if the underlying cipher is not
             initialised.
             @exception InvalidCipherTextException if cipher text decrypts wrongly (in
             case the exception will never Get thrown).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.EaxBlockCipher">
            A Two-Pass Authenticated-Encryption Scheme Optimized for Simplicity and 
            Efficiency - by M. Bellare, P. Rogaway, D. Wagner.
            
            http://www.cs.ucdavis.edu/~rogaway/papers/eax.pdf
            
            EAX is an AEAD scheme based on CTR and OMAC1/CMAC, that uses a single block 
            cipher to encrypt and authenticate data. It's on-line (the length of a 
            message isn't needed to begin processing it), has good performances, it's
            simple and provably secure (provided the underlying block cipher is secure).
            
            Of course, this implementations is NOT thread-safe.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.EaxBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Constructor that accepts an instance of a block cipher engine.
            
             @param cipher the engine to use
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher">
            <summary>
            Implements the Galois/Counter mode (GCM) detailed in
            NIST Special Publication 800-38D.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.GcmBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <remarks>
            MAC sizes from 32 bits to 128 bits (must be a multiple of 8) are supported. The default is 128 bits.
            Sizes less than 96 are not recommended, but are supported for specialized applications.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher">
            implements the GOST 28147 OFB counter mode (GCTR).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Basic constructor.
            
             @param cipher the block cipher to be used as the basis of the
             counter mode (must have a 64 bit block size).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the cipher and, possibly, the initialisation vector (IV).
             If an IV isn't passed as part of the parameter, the IV will be all zeros.
             An IV which is too short is handled in FIPS compliant fashion.
            
             @param encrypting if true the cipher is initialised for
              encryption, if false for decryption.
             @param parameters the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher.GetBlockSize">
             return the block size we are operating at (in bytes).
            
             @return the block size we are operating at (in bytes).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param in the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param out the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher.Reset">
            reset the feedback vector back to the IV and reset the underlying
            cipher.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Modes.GOfbBlockCipher.AlgorithmName">
             return the algorithm name and mode.
            
             @return the name of the underlying algorithm followed by "/GCTR"
             and the block size in bits
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
            <summary>
            Base constructor. Nb value is set to 4.
            </summary>
            <param name="engine">base cipher to use under CCM.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCcmBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32)">
            <summary>
            Constructor allowing Nb configuration.
            
            Nb is a parameter specified in CCM mode of DSTU7624 standard.
            This parameter specifies maximum possible length of input.It should
            be calculated as follows: Nb = 1 / 8 * (-3 + log[2]Nmax) + 1,
            where Nmax - length of input message in bits.For practical reasons
            Nmax usually less than 4Gb, e.g. for Nmax = 2^32 - 1, Nb = 4.
            </summary>
            <param name="engine">base cipher to use under CCM.</param>
            <param name="Nb">Nb value to use.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher">
            Implements a Gamming or Counter (CTR) mode on top of a DSTU 7624 block cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Basic constructor.
            
             @param cipher the block cipher to be used as the basis of the
             feedback mode.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the cipher and, possibly, the initialisation vector (IV).
             If an IV isn't passed as part of the parameter, the IV will be all zeros.
             An IV which is too short is handled in FIPS compliant fashion.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher.GetBlockSize">
             return the block size we are operating at.
            
             @return the block size we are operating at (in bytes).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param input the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param output the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher.Reset">
            reset the chaining vector back to the IV and reset the underlying
            cipher.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Modes.KCtrBlockCipher.AlgorithmName">
             return the algorithm name and mode.
            
             @return the name of the underlying algorithm followed by "/KCTR"
             and the block size in bits.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.OcbBlockCipher">
            An implementation of <a href="http://tools.ietf.org/html/rfc7253">RFC 7253 on The OCB
            Authenticated-Encryption Algorithm</a>, licensed per:
            
            <blockquote><p><a href="http://www.cs.ucdavis.edu/~rogaway/ocb/license1.pdf">License for
            Open-Source Software Implementations of OCB</a> (Jan 9, 2013) - 'License 1'<br/>
            Under this license, you are authorized to make, use, and distribute open-source software
            implementations of OCB. This license terminates for you if you sue someone over their open-source
            software implementation of OCB claiming that you have a patent covering their implementation.
            </p><p>
            This is a non-binding summary of a legal document (the link above). The parameters of the license
            are specified in the license document and that document is controlling.</p></blockquote>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher">
            implements a Output-FeedBack (OFB) mode on top of a simple cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32)">
             Basic constructor.
            
             @param cipher the block cipher to be used as the basis of the
             feedback mode.
             @param blockSize the block size in bits (note: a multiple of 8)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the cipher and, possibly, the initialisation vector (IV).
             If an IV isn't passed as part of the parameter, the IV will be all zeros.
             An IV which is too short is handled in FIPS compliant fashion.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher.GetBlockSize">
             return the block size we are operating at (in bytes).
            
             @return the block size we are operating at (in bytes).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param in the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param out the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher.Reset">
            reset the feedback vector back to the IV and reset the underlying
            cipher.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Modes.OfbBlockCipher.AlgorithmName">
             return the algorithm name and mode.
            
             @return the name of the underlying algorithm followed by "/OFB"
             and the block size in bits
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher">
                * Implements OpenPGP's rather strange version of Cipher-FeedBack (CFB) mode
                * on top of a simple cipher. This class assumes the IV has been prepended
                * to the data stream already, and just accomodates the reset after
                * (blockSize + 2) bytes have been read.
                * <p>
                * For further info see <a href="http://www.ietf.org/rfc/rfc2440.html">RFC 2440</a>.
            	* </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Basic constructor.
            
             @param cipher the block cipher to be used as the basis of the
             feedback mode.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.GetBlockSize">
             return the block size we are operating at.
            
             @return the block size we are operating at (in bytes).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.ProcessBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Process one block of input from the array in and write it to
             the out array.
            
             @param in the array containing the input data.
             @param inOff offset into the in array the data starts at.
             @param out the array the output data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.Reset">
            reset the chaining vector back to the IV and reset the underlying
            cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the cipher and, possibly, the initialisation vector (IV).
             If an IV isn't passed as part of the parameter, the IV will be all zeros.
             An IV which is too short is handled in FIPS compliant fashion.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param parameters the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.EncryptByte(System.Byte,System.Int32)">
            Encrypt one byte of data according to CFB mode.
            @param data the byte to encrypt
            @param blockOff offset in the current block
            @returns the encrypted byte
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.EncryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Do the appropriate processing for CFB IV mode encryption.
            
             @param in the array containing the data to be encrypted.
             @param inOff offset into the in array the data starts at.
             @param out the array the encrypted data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.DecryptBlock(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Do the appropriate processing for CFB IV mode decryption.
            
             @param in the array containing the data to be decrypted.
             @param inOff offset into the in array the data starts at.
             @param out the array the encrypted data will be copied into.
             @param outOff the offset into the out array the output will start at.
             @exception DataLengthException if there isn't enough data in in, or
             space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
             @return the number of bytes processed and produced.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Modes.OpenPgpCfbBlockCipher.AlgorithmName">
             return the algorithm name and mode.
            
             @return the name of the underlying algorithm followed by "/PGPCFB"
             and the block size in bits.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Modes.SicBlockCipher">
            Implements the Segmented Integer Counter (SIC) mode on top of a simple
            block cipher.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.SicBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Basic constructor.
            
             @param c the block cipher to be used.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Modes.SicBlockCipher.GetUnderlyingCipher">
             return the underlying block cipher that we are wrapping.
            
             @return the underlying block cipher that we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Operators.X509Utilities.GetDigestAlgName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            Return the digest algorithm using one of the standard JCA string
            representations rather than the algorithm identifier (if possible).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Operators.Asn1SignatureFactory">
            <summary>
            Calculator factory class for signature generation in ASN.1 based profiles that use an AlgorithmIdentifier to preserve
            signature algorithm details.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Operators.Asn1SignatureFactory.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Base constructor.
            </summary>
            <param name="algorithm">The name of the signature algorithm to use.</param>
            <param name="privateKey">The private key to be used in the signing operation.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Operators.Asn1SignatureFactory.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Constructor which also specifies a source of randomness to be used if one is required.
            </summary>
            <param name="algorithm">The name of the signature algorithm to use.</param>
            <param name="privateKey">The private key to be used in the signing operation.</param>
            <param name="random">The source of randomness to be used in signature calculation.</param>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Operators.Asn1SignatureFactory.SignatureAlgNames">
            <summary>
            Allows enumeration of the signature names supported by the verifier provider.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactory">
            <summary>
            Verifier class for signature verification in ASN.1 based profiles that use an AlgorithmIdentifier to preserve
            signature algorithm details.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactory.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Base constructor.
            </summary>
            <param name="algorithm">The name of the signature algorithm to use.</param>
            <param name="publicKey">The public key to be used in the verification operation.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactoryProvider">
            <summary>
            Provider class which supports dynamic creation of signature verifiers.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactoryProvider.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Base constructor - specify the public key to be used in verification.
            </summary>
            <param name="publicKey">The public key to be used in creating verifiers provided by this object.</param>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Operators.Asn1VerifierFactoryProvider.SignatureAlgNames">
            <summary>
            Allows enumeration of the signature names supported by the verifier provider.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding">
            Block cipher padders are expected to conform to this interface
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding.Init(Org.BouncyCastle.Security.SecureRandom)">
             Initialise the padder.
            
             @param param parameters, if any required.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding.AddPadding(System.Byte[],System.Int32)">
            add the pad bytes to the passed in block, returning the
            number of bytes added.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding.PadCount(System.Byte[])">
            return the number of pad bytes present in the block.
            @exception InvalidCipherTextException if the padding is badly formed
            or invalid.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding.PaddingName">
             Return the name of the algorithm the cipher implements.
            
             @return the name of the algorithm the cipher implements.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding">
            A padder that adds ISO10126-2 padding to a block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding.Init(Org.BouncyCastle.Security.SecureRandom)">
             Initialise the padder.
            
             @param random a SecureRandom if available.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding.AddPadding(System.Byte[],System.Int32)">
            add the pad bytes to the passed in block, returning the
            number of bytes added.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding.PadCount(System.Byte[])">
            return the number of pad bytes present in the block.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Paddings.ISO10126d2Padding.PaddingName">
             Return the name of the algorithm the cipher implements.
            
             @return the name of the algorithm the cipher implements.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding">
            A padder that adds the padding according to the scheme referenced in
            ISO 7814-4 - scheme 2 from ISO 9797-1. The first byte is 0x80, rest is 0x00
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding.Init(Org.BouncyCastle.Security.SecureRandom)">
             Initialise the padder.
            
             @param random - a SecureRandom if available.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding.AddPadding(System.Byte[],System.Int32)">
            add the pad bytes to the passed in block, returning the
            number of bytes added.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding.PadCount(System.Byte[])">
            return the number of pad bytes present in the block.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Paddings.ISO7816d4Padding.PaddingName">
             Return the name of the algorithm the padder implements.
            
             @return the name of the algorithm the padder implements.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher">
            A wrapper class that allows block ciphers to be used to process data in
            a piecemeal fashion with padding. The PaddedBufferedBlockCipher
            outputs a block only when the buffer is full and more data is being added,
            or on a doFinal (unless the current block in the buffer is a pad block).
            The default padding mechanism used is the one outlined in Pkcs5/Pkcs7.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.Paddings.IBlockCipherPadding)">
             Create a buffered block cipher with the desired padding.
            
             @param cipher the underlying block cipher this buffering object wraps.
             @param padding the padding type.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             Create a buffered block cipher Pkcs7 padding
            
             @param cipher the underlying block cipher this buffering object wraps.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the cipher.
            
             @param forEncryption if true the cipher is initialised for
              encryption, if false for decryption.
             @param param the key and other data required by the cipher.
             @exception ArgumentException if the parameters argument is
             inappropriate.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.GetOutputSize(System.Int32)">
             return the minimum size of the output buffer required for an update
             plus a doFinal with an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update and doFinal
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.GetUpdateOutputSize(System.Int32)">
             return the size of the output buffer required for an update
             an input of len bytes.
            
             @param len the length of the input.
             @return the space required to accommodate a call to update
             with len bytes of input.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.ProcessByte(System.Byte,System.Byte[],System.Int32)">
             process a single byte, producing an output block if necessary.
            
             @param in the input byte.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             process an array of bytes, producing output if necessary.
            
             @param in the input byte array.
             @param inOff the offset at which the input data starts.
             @param len the number of bytes to be copied out of the input array.
             @param out the space for any output that might be produced.
             @param outOff the offset from which the output will be copied.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there isn't enough space in out.
             @exception InvalidOperationException if the cipher isn't initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.PaddedBufferedBlockCipher.DoFinal(System.Byte[],System.Int32)">
             Process the last block in the buffer. If the buffer is currently
             full and padding needs to be added a call to doFinal will produce
             2 * GetBlockSize() bytes.
            
             @param out the array the block currently being held is copied into.
             @param outOff the offset at which the copying starts.
             @return the number of output bytes copied to out.
             @exception DataLengthException if there is insufficient space in out for
             the output or we are decrypting and the input is not block size aligned.
             @exception InvalidOperationException if the underlying cipher is not
             initialised.
             @exception InvalidCipherTextException if padding is expected and not found.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding">
            A padder that adds Pkcs7/Pkcs5 padding to a block.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding.Init(Org.BouncyCastle.Security.SecureRandom)">
             Initialise the padder.
            
             @param random - a SecureRandom if available.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding.AddPadding(System.Byte[],System.Int32)">
            add the pad bytes to the passed in block, returning the
            number of bytes added.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding.PadCount(System.Byte[])">
            return the number of pad bytes present in the block.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Paddings.Pkcs7Padding.PaddingName">
             Return the name of the algorithm the cipher implements.
            
             @return the name of the algorithm the cipher implements.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.TbcPadding">
            <summary> A padder that adds Trailing-Bit-Compliment padding to a block.
            <p>
            This padding pads the block out compliment of the last bit
            of the plain text.
            </p>
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.TbcPadding.Init(Org.BouncyCastle.Security.SecureRandom)">
            <summary> Initialise the padder.</summary>
            <param name="random">- a SecureRandom if available.
            </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.TbcPadding.AddPadding(System.Byte[],System.Int32)">
            <summary> add the pad bytes to the passed in block, returning the
            number of bytes added.
            <p>
            Note: this assumes that the last block of plain text is always
            passed to it inside in. i.e. if inOff is zero, indicating the
            entire block is to be overwritten with padding the value of in
            should be the same as the last block of plain text.
            </p>
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.TbcPadding.PadCount(System.Byte[])">
            <summary> return the number of pad bytes present in the block.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Paddings.TbcPadding.PaddingName">
            <summary> Return the name of the algorithm the cipher implements.</summary>
            <returns> the name of the algorithm the cipher implements.
            </returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.X923Padding">
            A padder that adds X9.23 padding to a block - if a SecureRandom is
            passed in random padding is assumed, otherwise padding with zeros is used.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.X923Padding.Init(Org.BouncyCastle.Security.SecureRandom)">
             Initialise the padder.
            
             @param random a SecureRandom if one is available.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.X923Padding.AddPadding(System.Byte[],System.Int32)">
            add the pad bytes to the passed in block, returning the
            number of bytes added.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.X923Padding.PadCount(System.Byte[])">
            return the number of pad bytes present in the block.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Paddings.X923Padding.PaddingName">
             Return the name of the algorithm the cipher implements.
            
             @return the name of the algorithm the cipher implements.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding">
            <summary> A padder that adds Null byte padding to a block.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding.Init(Org.BouncyCastle.Security.SecureRandom)">
             <summary> Initialise the padder.
            
             </summary>
             <param name="random">- a SecureRandom if available.
             </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding.AddPadding(System.Byte[],System.Int32)">
            <summary> add the pad bytes to the passed in block, returning the
            number of bytes added.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding.PadCount(System.Byte[])">
            <summary> return the number of pad bytes present in the block.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Paddings.ZeroBytePadding.PaddingName">
             <summary> Return the name of the algorithm the cipher implements.
            
             </summary>
             <returns> the name of the algorithm the cipher implements.
             </returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.AeadParameters.#ctor(Org.BouncyCastle.Crypto.Parameters.KeyParameter,System.Int32,System.Byte[])">
             Base constructor.
            
             @param key key to be used by underlying cipher
             @param macSize macSize in bits
             @param nonce nonce to be used
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.AeadParameters.#ctor(Org.BouncyCastle.Crypto.Parameters.KeyParameter,System.Int32,System.Byte[],System.Byte[])">
             Base constructor.
            
             @param key key to be used by underlying cipher
             @param macSize macSize in bits
             @param nonce nonce to be used
             @param associatedText associated text, if any
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.CcmParameters.#ctor(Org.BouncyCastle.Crypto.Parameters.KeyParameter,System.Int32,System.Byte[],System.Byte[])">
            Base constructor.
            
            @param key key to be used by underlying cipher
            @param macSize macSize in bits
            @param nonce nonce to be used
            @param associatedText associated text, if any
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DesParameters.IsWeakKey(System.Byte[],System.Int32)">
            DES has 16 weak keys.  This method will check
            if the given DES key material is weak or semi-weak.
            Key material that is too short is regarded as weak.
            <p>
            See <a href="http://www.counterpane.com/applied.html">"Applied
            Cryptography"</a> by Bruce Schneier for more information.
            </p>
            @return true if the given DES key material is weak or semi-weak,
                false otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DesParameters.SetOddParity(System.Byte[])">
             DES Keys use the LSB as the odd parity bit.  This can
             be used to check for corrupt keys.
            
             @param bytes the byte array to set the parity on.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DesEdeParameters.IsWeakKey(System.Byte[],System.Int32,System.Int32)">
             return true if the passed in key is a DES-EDE weak key.
            
             @param key bytes making up the key
             @param offset offset into the byte array the key starts at
             @param length number of bytes making up the key
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DesEdeParameters.IsWeakKey(System.Byte[],System.Int32)">
             return true if the passed in key is a DES-EDE weak key.
            
             @param key bytes making up the key
             @param offset offset into the byte array the key starts at
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DesEdeParameters.IsRealEdeKey(System.Byte[],System.Int32)">
             return true if the passed in key is a real 2/3 part DES-EDE key.
            
             @param key bytes making up the key
             @param offset offset into the byte array the key starts at
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DesEdeParameters.IsReal2Key(System.Byte[],System.Int32)">
             return true if the passed in key is a real 2 part DES-EDE key.
            
             @param key bytes making up the key
             @param offset offset into the byte array the key starts at
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DesEdeParameters.IsReal3Key(System.Byte[],System.Int32)">
             return true if the passed in key is a real 3 part DES-EDE key.
            
             @param key bytes making up the key
             @param offset offset into the byte array the key starts at
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.DHParameters.M">
            <summary>The minimum bitlength of the private value.</summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.DHParameters.L">
            <summary>The bitlength of the private value.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DsaParameterGenerationParameters.#ctor(System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Security.SecureRandom)">
             Construct without a usage index, this will do a random construction of G.
            
             @param L desired length of prime P in bits (the effective key size).
             @param N desired length of prime Q in bits.
             @param certainty certainty level for prime number generation.
             @param random the source of randomness to use.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.DsaParameterGenerationParameters.#ctor(System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Security.SecureRandom,System.Int32)">
             Construct for a specific usage index - this has the effect of using verifiable canonical generation of G.
            
             @param L desired length of prime P in bits (the effective key size).
             @param N desired length of prime Q in bits.
             @param certainty certainty level for prime number generation.
             @param random the source of randomness to use.
             @param usageIndex a valid usage index.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.ElGamalParameters.G">
            return the generator - g
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.ElGamalParameters.L">
            return private value limit - l
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.HkdfParameters">
            Parameter class for the HkdfBytesGenerator class.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.HkdfParameters.#ctor(System.Byte[],System.Byte[],System.Byte[])">
             Generates parameters for HKDF, specifying both the optional salt and
             optional info. Step 1: Extract won't be skipped.
            
             @param ikm  the input keying material or seed
             @param salt the salt to use, may be null for a salt for hashLen zeros
             @param info the info to use, may be null for an info field of zero bytes
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.HkdfParameters.SkipExtractParameters(System.Byte[],System.Byte[])">
             Factory method that makes the HKDF skip the extract part of the key
             derivation function.
            
             @param ikm  the input keying material or seed, directly used for step 2:
                         Expand
             @param info the info to use, may be null for an info field of zero bytes
             @return HKDFParameters that makes the implementation skip step 1
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.HkdfParameters.GetIkm">
             Returns the input keying material or seed.
            
             @return the keying material
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.HkdfParameters.GetSalt">
             Returns the salt, or null if the salt should be generated as a byte array
             of HashLen zeros.
            
             @return the salt, or null
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.HkdfParameters.GetInfo">
             Returns the info field, which may be empty (null is converted to empty).
            
             @return the info field, never null
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.HkdfParameters.SkipExtract">
             Returns if step 1: extract has to be skipped or not
            
             @return true for skipping, false for no skipping of step 1
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.IesParameters">
            parameters for using an integrated cipher in stream mode.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.IesParameters.#ctor(System.Byte[],System.Byte[],System.Int32)">
            @param derivation the derivation parameter for the KDF function.
            @param encoding the encoding parameter for the KDF function.
            @param macKeySize the size of the MAC key (in bits).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.IesWithCipherParameters.#ctor(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            @param derivation the derivation parameter for the KDF function.
            @param encoding the encoding parameter for the KDF function.
            @param macKeySize the size of the MAC key (in bits).
            @param cipherKeySize the size of the associated Cipher key (in bits).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.Iso18033KdfParameters">
            parameters for Key derivation functions for ISO-18033
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.KdfCounterParameters.#ctor(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Base constructor - suffix fixed input data only.
            </summary>
            <param name="ki">the KDF seed</param>
            <param name="fixedInputDataCounterSuffix">fixed input data to follow counter.</param>
            <param name="r">length of the counter in bits</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.KdfCounterParameters.#ctor(System.Byte[],System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Base constructor - prefix and suffix fixed input data.
            </summary>
            <param name="ki">the KDF seed</param>
            <param name="fixedInputDataCounterPrefix">fixed input data to precede counter</param>
            <param name="fixedInputDataCounterSuffix">fixed input data to follow counter.</param>
            <param name="r">length of the counter in bits.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.KdfParameters">
            parameters for Key derivation functions for IEEE P1363a
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.MgfParameters">
            <remarks>Parameters for mask derivation functions.</remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters">
             Parameters for NaccacheStern public private key generation. For details on
             this cipher, please see
            
             http://www.gemplus.com/smart/rd/publications/pdf/NS98pkcs.pdf
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters.#ctor(Org.BouncyCastle.Security.SecureRandom,System.Int32,System.Int32,System.Int32)">
             Parameters for generating a NaccacheStern KeyPair.
            
             @param random
                        The source of randomness
             @param strength
                        The desired strength of the Key in Bits
             @param certainty
                        the probability that the generated primes are not really prime
                        as integer: 2^(-certainty) is then the probability
             @param countSmallPrimes
                        How many small key factors are desired
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters.#ctor(Org.BouncyCastle.Security.SecureRandom,System.Int32,System.Int32,System.Int32,System.Boolean)">
            		 * Parameters for a NaccacheStern KeyPair.
            		 *
            		 * @param random
            		 *            The source of randomness
            		 * @param strength
            		 *            The desired strength of the Key in Bits
            		 * @param certainty
            		 *            the probability that the generated primes are not really prime
            		 *            as integer: 2^(-certainty) is then the probability
            		 * @param cntSmallPrimes
            		 *            How many small key factors are desired
            		 * @param debug
                     *            Ignored
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters.Certainty">
            @return Returns the certainty.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyGenerationParameters.CountSmallPrimes">
            @return Returns the countSmallPrimes.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters">
             Public key parameters for NaccacheStern cipher. For details on this cipher,
             please see
            
             http://www.gemplus.com/smart/rd/publications/pdf/NS98pkcs.pdf
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters.#ctor(System.Boolean,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Int32)">
            @param privateKey
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters.G">
            @return Returns the g.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters.LowerSigmaBound">
            @return Returns the lowerSigmaBound.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.NaccacheSternKeyParameters.Modulus">
            @return Returns the n.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.NaccacheSternPrivateKeyParameters">
             Private key parameters for NaccacheStern cipher. For details on this cipher,
             please see
            
             http://www.gemplus.com/smart/rd/publications/pdf/NS98pkcs.pdf
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.NaccacheSternPrivateKeyParameters.#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Int32,System.Collections.IList,Org.BouncyCastle.Math.BigInteger)">
             Constructs a NaccacheSternPrivateKey
            
             @param g
                        the public enryption parameter g
             @param n
                        the public modulus n = p*q
             @param lowerSigmaBound
                        the public lower sigma bound up to which data can be encrypted
             @param smallPrimes
                        the small primes, of which sigma is constructed in the right
                        order
             @param phi_n
                        the private modulus phi(n) = (p-1)(q-1)
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.ParametersWithSalt">
            <summary> Cipher parameters with a fixed salt value associated with them.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters">
            <summary>
            Parameters for the Skein hash function - a series of byte[] strings identified by integer tags.
            </summary>
            <remarks>
            Parameterised Skein can be used for:
            <ul> 
            <li>MAC generation, by providing a <see cref="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetKey(System.Byte[])">key</see>.</li>
            <li>Randomised hashing, by providing a <see cref="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetNonce(System.Byte[])">nonce</see>.</li>
            <li>A hash function for digital signatures, associating a
            <see cref="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetPublicKey(System.Byte[])">public key</see> with the message digest.</li>
            <li>A key derivation function, by providing a
            <see cref="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetKeyIdentifier(System.Byte[])">key identifier</see>.</li>
            <li>Personalised hashing, by providing a
            <see cref="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetPersonalisation(System.DateTime,System.String,System.String)">recommended format</see> or
            <see cref="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetPersonalisation(System.Byte[])">arbitrary</see> personalisation string.</li>
            </ul>
            </remarks>
            <seealso cref="T:Org.BouncyCastle.Crypto.Digests.SkeinEngine"/>
            <seealso cref="T:Org.BouncyCastle.Crypto.Digests.SkeinDigest"/>
            <seealso cref="T:Org.BouncyCastle.Crypto.Macs.SkeinMac"/>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_KEY">
            <summary>
            The parameter type for a secret key, supporting MAC or KDF functions: 0
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_CONFIG">
            <summary>
            The parameter type for the Skein configuration block: 4
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_PERSONALISATION">
            <summary>
            The parameter type for a personalisation string: 8
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_PUBLIC_KEY">
            <summary>
            The parameter type for a public key: 12
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_KEY_IDENTIFIER">
            <summary>
            The parameter type for a key identifier string: 16
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_NONCE">
            <summary>
            The parameter type for a nonce: 20
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_MESSAGE">
            <summary>
            The parameter type for the message: 48
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_OUTPUT">
            <summary>
            The parameter type for the output transformation: 63
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.GetParameters">
            <summary>
            Obtains a map of type (int) to value (byte[]) for the parameters tracked in this object.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.GetKey">
            <summary>
            Obtains the value of the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_KEY">key parameter</see>, or <code>null</code> if not
            set.
            </summary>
            <returns>The key.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.GetPersonalisation">
            <summary>
            Obtains the value of the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_PERSONALISATION">personalisation parameter</see>, or
            <code>null</code> if not set.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.GetPublicKey">
            <summary>
            Obtains the value of the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_PUBLIC_KEY">public key parameter</see>, or
            <code>null</code> if not set.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.GetKeyIdentifier">
            <summary>
            Obtains the value of the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_KEY_IDENTIFIER">key identifier parameter</see>, or
            <code>null</code> if not set.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.GetNonce">
            <summary>
            Obtains the value of the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_NONCE">nonce parameter</see>, or <code>null</code> if
            not set.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder">
            <summary>
            A builder for <see cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"/>.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.Set(System.Int32,System.Byte[])">
            <summary>
            Sets a parameters to apply to the Skein hash function.
            </summary>
            <remarks>
            Parameter types must be in the range 0,5..62, and cannot use the value 48
            (reserved for message body).
            <p/>
            Parameters with type &lt; 48 are processed before
            the message content, parameters with type &gt; 48
            are processed after the message and prior to output.
            </remarks>
            <param name="type">the type of the parameter, in the range 5..62.</param>
            <param name="value">the byte sequence of the parameter.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetKey(System.Byte[])">
            <summary>
            Sets the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_KEY"/> parameter.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetPersonalisation(System.Byte[])">
            <summary>
            Sets the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_PERSONALISATION"/> parameter.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetPersonalisation(System.DateTime,System.String,System.String)">
            <summary>
            Implements the recommended personalisation format for Skein defined in Section 4.11 of
            the Skein 1.3 specification.
            </summary>
            <remarks>
            The format is <code>YYYYMMDD email@address distinguisher</code>, encoded to a byte
            sequence using UTF-8 encoding.
            </remarks>
            <param name="date">the date the personalised application of the Skein was defined.</param>
            <param name="emailAddress">the email address of the creation of the personalised application.</param>
            <param name="distinguisher">an arbitrary personalisation string distinguishing the application.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetPublicKey(System.Byte[])">
            <summary>
            Sets the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_KEY_IDENTIFIER"/> parameter.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetKeyIdentifier(System.Byte[])">
            <summary>
            Sets the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_KEY_IDENTIFIER"/> parameter.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.SetNonce(System.Byte[])">
            <summary>
            Sets the <see cref="F:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.PARAM_TYPE_NONCE"/> parameter.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Parameters.SkeinParameters.Builder.Build">
            <summary>
            Constructs a new <see cref="T:Org.BouncyCastle.Crypto.Parameters.SkeinParameters"/> instance with the parameters provided to this
            builder.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.SM2KeyExchangePrivateParameters">
            <summary>Private parameters for an SM2 key exchange.</summary>
            <remarks>The ephemeralPrivateKey is used to calculate the random point used in the algorithm.</remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.SM2KeyExchangePublicParameters">
            <summary>Public parameters for an SM2 key exchange.</summary>
            <remarks>In this case the ephemeralPublicKey provides the random point used in the algorithm.</remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Parameters.TweakableBlockCipherParameters">
            <summary>
            Parameters for tweakable block ciphers.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.TweakableBlockCipherParameters.Key">
            <summary>
            Gets the key.
            </summary>
            <value>the key to use, or <code>null</code> to use the current key.</value>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Parameters.TweakableBlockCipherParameters.Tweak">
            <summary>
            Gets the tweak value.
            </summary>
            <value>The tweak to use, or <code>null</code> to use the current tweak.</value>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.BasicEntropySourceProvider">
            An EntropySourceProvider where entropy generation is based on a SecureRandom output using SecureRandom.generateSeed().
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.BasicEntropySourceProvider.#ctor(Org.BouncyCastle.Security.SecureRandom,System.Boolean)">
             Create a entropy source provider based on the passed in SecureRandom.
            
             @param secureRandom the SecureRandom to base EntropySource construction on.
             @param isPredictionResistant boolean indicating if the SecureRandom is based on prediction resistant entropy or not (true if it is).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.BasicEntropySourceProvider.Get(System.Int32)">
             Return an entropy source that will create bitsRequired bits of entropy on
             each invocation of getEntropy().
            
             @param bitsRequired size (in bits) of entropy to be created by the provided source.
             @return an EntropySource that generates bitsRequired bits of entropy on each call to its getEntropy() method.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.CryptoApiRandomGenerator">
            <summary>
            Uses RandomNumberGenerator.Create() to get randomness generator
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.IRandomGenerator">
            <remarks>Generic interface for objects generating random bytes.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.AddSeedMaterial(System.Byte[])">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A byte array to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.AddSeedMaterial(System.Int64)">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A long value to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.NextBytes(System.Byte[])">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to be filled.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.IRandomGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to receive bytes.</param>
            <param name="start">Index to start filling at.</param>
            <param name="len">Length of segment to fill.</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.DigestRandomGenerator">
            Random generation based on the digest with counter. Calling AddSeedMaterial will
            always increase the entropy of the hash.
            <p>
            Internal access to the digest is synchronized so a single one of these can be shared.
            </p>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg">
            A SP800-90A CTR DRBG.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.Drbg.ISP80090Drbg">
            Interface to SP800-90A deterministic random bit generators.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.ISP80090Drbg.Generate(System.Byte[],System.Byte[],System.Boolean)">
             Populate a passed in array with random data.
            
             @param output output array for generated bits.
             @param additionalInput additional input to be added to the DRBG in this step.
             @param predictionResistant true if a reseed should be forced, false otherwise.
            
             @return number of bits generated, -1 if a reseed required.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.ISP80090Drbg.Reseed(System.Byte[])">
             Reseed the DRBG.
            
             @param additionalInput additional input to be added to the DRBG in this step.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Prng.Drbg.ISP80090Drbg.BlockSize">
             Return the block size of the DRBG.
            
             @return the block size (in bits) produced by each round of the DRBG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32,System.Int32,Org.BouncyCastle.Crypto.IEntropySource,System.Byte[],System.Byte[])">
            Construct a SP800-90A CTR DRBG.
            <p>
            Minimum entropy requirement is the security strength requested.
            </p>
            @param engine underlying block cipher to use to support DRBG
            @param keySizeInBits size of the key to use with the block cipher.
            @param securityStrength security strength required (in bits)
            @param entropySource source of entropy to use for seeding/reseeding.
            @param personalizationString personalization string to distinguish this DRBG (may be null).
            @param nonce nonce to further distinguish this DRBG (may be null).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg.Generate(System.Byte[],System.Byte[],System.Boolean)">
             Populate a passed in array with random data.
            
             @param output output array for generated bits.
             @param additionalInput additional input to be added to the DRBG in this step.
             @param predictionResistant true if a reseed should be forced, false otherwise.
            
             @return number of bits generated, -1 if a reseed required.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg.Reseed(System.Byte[])">
             Reseed the DRBG.
            
             @param additionalInput additional input to be added to the DRBG in this step.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg.PadKey(System.Byte[],System.Int32,System.Byte[],System.Int32)">
             Pad out a key for TDEA, setting odd parity for each byte.
            
             @param keyMaster
             @param keyOff
             @param tmp
             @param tmpOff
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Prng.Drbg.CtrSP800Drbg.BlockSize">
             Return the block size (in bits) of the DRBG.
            
             @return the number of bits produced on each internal round of the DRBG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.DrbgUtilities.HashDF(Org.BouncyCastle.Crypto.IDigest,System.Byte[],System.Int32)">
            Used by both Dual EC and Hash.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.Drbg.HashSP800Drbg">
            A SP800-90A Hash DRBG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.HashSP800Drbg.#ctor(Org.BouncyCastle.Crypto.IDigest,System.Int32,Org.BouncyCastle.Crypto.IEntropySource,System.Byte[],System.Byte[])">
            Construct a SP800-90A Hash DRBG.
            <p>
            Minimum entropy requirement is the security strength requested.
            </p>
            @param digest  source digest to use for DRB stream.
            @param securityStrength security strength required (in bits)
            @param entropySource source of entropy to use for seeding/reseeding.
            @param personalizationString personalization string to distinguish this DRBG (may be null).
            @param nonce nonce to further distinguish this DRBG (may be null).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.HashSP800Drbg.Generate(System.Byte[],System.Byte[],System.Boolean)">
             Populate a passed in array with random data.
            
             @param output output array for generated bits.
             @param additionalInput additional input to be added to the DRBG in this step.
             @param predictionResistant true if a reseed should be forced, false otherwise.
            
             @return number of bits generated, -1 if a reseed required.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.HashSP800Drbg.Reseed(System.Byte[])">
             Reseed the DRBG.
            
             @param additionalInput additional input to be added to the DRBG in this step.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Prng.Drbg.HashSP800Drbg.BlockSize">
             Return the block size (in bits) of the DRBG.
            
             @return the number of bits produced on each internal round of the DRBG.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.Drbg.HMacSP800Drbg">
            A SP800-90A HMAC DRBG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.HMacSP800Drbg.#ctor(Org.BouncyCastle.Crypto.IMac,System.Int32,Org.BouncyCastle.Crypto.IEntropySource,System.Byte[],System.Byte[])">
            Construct a SP800-90A Hash DRBG.
            <p>
            Minimum entropy requirement is the security strength requested.
            </p>
            @param hMac Hash MAC to base the DRBG on.
            @param securityStrength security strength required (in bits)
            @param entropySource source of entropy to use for seeding/reseeding.
            @param personalizationString personalization string to distinguish this DRBG (may be null).
            @param nonce nonce to further distinguish this DRBG (may be null).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.HMacSP800Drbg.Generate(System.Byte[],System.Byte[],System.Boolean)">
             Populate a passed in array with random data.
            
             @param output output array for generated bits.
             @param additionalInput additional input to be added to the DRBG in this step.
             @param predictionResistant true if a reseed should be forced, false otherwise.
            
             @return number of bits generated, -1 if a reseed required.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.Drbg.HMacSP800Drbg.Reseed(System.Byte[])">
             Reseed the DRBG.
            
             @param additionalInput additional input to be added to the DRBG in this step.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Prng.Drbg.HMacSP800Drbg.BlockSize">
             Return the block size (in bits) of the DRBG.
            
             @return the number of bits produced on each round of the DRBG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.EntropyUtilities.GenerateSeed(Org.BouncyCastle.Crypto.IEntropySource,System.Int32)">
             Generate numBytes worth of entropy from the passed in entropy source.
            
             @param entropySource the entropy source to request the data from.
             @param numBytes the number of bytes of entropy requested.
             @return a byte array populated with the random data.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator">
            <remarks>
            Takes bytes generated by an underling RandomGenerator and reverses the order in
            each small window (of configurable size).
            <p>
            Access to internals is synchronized so a single one of these can be shared.
            </p>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.AddSeedMaterial(System.Byte[])">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A byte array to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.AddSeedMaterial(System.Int64)">
            <summary>Add more seed material to the generator.</summary>
            <param name="seed">A long value to be mixed into the generator's state.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.NextBytes(System.Byte[])">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to be filled.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ReversedWindowGenerator.NextBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>Fill byte array with random values.</summary>
            <param name="bytes">Array to receive bytes.</param>
            <param name="start">Index to start filling at.</param>
            <param name="len">Length of segment to fill.</param>
        </member>
        <member name="M:Org.BouncyCastle.Security.SecureRandom.GetInstance(System.String)">
            <summary>
            Create and auto-seed an instance based on the given algorithm.
            </summary>
            <remarks>Equivalent to GetInstance(algorithm, true)</remarks>
            <param name="algorithm">e.g. "SHA256PRNG"</param>
        </member>
        <member name="M:Org.BouncyCastle.Security.SecureRandom.GetInstance(System.String,System.Boolean)">
            <summary>
            Create an instance based on the given algorithm, with optional auto-seeding
            </summary>
            <param name="algorithm">e.g. "SHA256PRNG"</param>
            <param name="autoSeed">If true, the instance will be auto-seeded.</param>
        </member>
        <member name="M:Org.BouncyCastle.Security.SecureRandom.#ctor(System.Byte[])">
            <remarks>
            To replicate existing predictable output, replace with GetInstance("SHA1PRNG", false), followed by SetSeed(seed)
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Security.SecureRandom.#ctor(Org.BouncyCastle.Crypto.Prng.IRandomGenerator)">
            <summary>Use the specified instance of IRandomGenerator as random source.</summary>
            <remarks>
            This constructor performs no seeding of either the <c>IRandomGenerator</c> or the
            constructed <c>SecureRandom</c>. It is the responsibility of the client to provide
            proper seed material as necessary/appropriate for the given <c>IRandomGenerator</c>
            implementation.
            </remarks>
            <param name="generator">The source to generate all random bytes from.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandom.Reseed(System.Byte[])">
            <summary>Force a reseed of the DRBG.</summary>
            <param name="additionalInput">optional additional input</param>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder">
            Builder class for making SecureRandom objects based on SP 800-90A Deterministic Random Bit Generators (DRBG).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.#ctor">
            Basic constructor, creates a builder using an EntropySourceProvider based on the default SecureRandom with
            predictionResistant set to false.
            <p>
            Any SecureRandom created from a builder constructed like this will make use of input passed to SecureRandom.setSeed() if
            the default SecureRandom does for its generateSeed() call.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.#ctor(Org.BouncyCastle.Security.SecureRandom,System.Boolean)">
            Construct a builder with an EntropySourceProvider based on the passed in SecureRandom and the passed in value
            for prediction resistance.
            <p>
            Any SecureRandom created from a builder constructed like this will make use of input passed to SecureRandom.setSeed() if
            the passed in SecureRandom does for its generateSeed() call.
            </p>
            @param entropySource
            @param predictionResistant
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.#ctor(Org.BouncyCastle.Crypto.IEntropySourceProvider)">
            Create a builder which makes creates the SecureRandom objects from a specified entropy source provider.
            <p>
            <b>Note:</b> If this constructor is used any calls to setSeed() in the resulting SecureRandom will be ignored.
            </p>
            @param entropySourceProvider a provider of EntropySource objects.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.SetPersonalizationString(System.Byte[])">
            Set the personalization string for DRBG SecureRandoms created by this builder
            @param personalizationString  the personalisation string for the underlying DRBG.
            @return the current builder.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.SetSecurityStrength(System.Int32)">
             Set the security strength required for DRBGs used in building SecureRandom objects.
            
             @param securityStrength the security strength (in bits)
             @return the current builder.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.SetEntropyBitsRequired(System.Int32)">
             Set the amount of entropy bits required for seeding and reseeding DRBGs used in building SecureRandom objects.
            
             @param entropyBitsRequired the number of bits of entropy to be requested from the entropy source on each seed/reseed.
             @return the current builder.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.BuildHash(Org.BouncyCastle.Crypto.IDigest,System.Byte[],System.Boolean)">
             Build a SecureRandom based on a SP 800-90A Hash DRBG.
            
             @param digest digest algorithm to use in the DRBG underneath the SecureRandom.
             @param nonce  nonce value to use in DRBG construction.
             @param predictionResistant specify whether the underlying DRBG in the resulting SecureRandom should reseed on each request for bytes.
             @return a SecureRandom supported by a Hash DRBG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.BuildCtr(Org.BouncyCastle.Crypto.IBlockCipher,System.Int32,System.Byte[],System.Boolean)">
             Build a SecureRandom based on a SP 800-90A CTR DRBG.
            
             @param cipher the block cipher to base the DRBG on.
             @param keySizeInBits key size in bits to be used with the block cipher.
             @param nonce nonce value to use in DRBG construction.
             @param predictionResistant  specify whether the underlying DRBG in the resulting SecureRandom should reseed on each request for bytes.
             @return  a SecureRandom supported by a CTR DRBG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.SP800SecureRandomBuilder.BuildHMac(Org.BouncyCastle.Crypto.IMac,System.Byte[],System.Boolean)">
             Build a SecureRandom based on a SP 800-90A HMAC DRBG.
            
             @param hMac HMAC algorithm to use in the DRBG underneath the SecureRandom.
             @param nonce  nonce value to use in DRBG construction.
             @param predictionResistant specify whether the underlying DRBG in the resulting SecureRandom should reseed on each request for bytes.
             @return a SecureRandom supported by a HMAC DRBG.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator">
            A thread based seed generator - one source of randomness.
            <p>
            Based on an idea from Marcus Lippert.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.ThreadedSeedGenerator.GenerateSeed(System.Int32,System.Boolean)">
            Generate seed bytes. Set fast to false for best quality.
            <p>
            If fast is set to true, the code should be round about 8 times faster when
            generating a long sequence of random bytes. 20 bytes of random values using
            the fast mode take less than half a second on a Nokia e70. If fast is set to false,
            it takes round about 2500 ms.
            </p>
            @param numBytes the number of bytes to generate
            @param fast true if fast mode should be used
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator.P">
            <remarks>
            Permutation generated by code:
            <code>
            // First 1850 fractional digit of Pi number. 
            byte[] key = new BigInteger("14159265358979323846...5068006422512520511").ToByteArray();
            s = 0;
            P = new byte[256];
            for (int i = 0; i &lt; 256; i++) 
            {
                P[i] = (byte) i;
            }
            for (int m = 0; m &lt; 768; m++) 
            {
                s = P[(s + P[m &amp; 0xff] + key[m % key.length]) &amp; 0xff];
                byte temp = P[m &amp; 0xff];
                P[m &amp; 0xff] = P[s &amp; 0xff];
                P[s &amp; 0xff] = temp;
            } </code>
            </remarks>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Prng.VmpcRandomGenerator.s">
            <remarks>Value generated in the same way as <c>P</c>.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.X931Rng.#ctor(Org.BouncyCastle.Crypto.IBlockCipher,System.Byte[],Org.BouncyCastle.Crypto.IEntropySource)">
            
             @param engine
             @param entropySource
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.X931Rng.Generate(System.Byte[],System.Boolean)">
             Populate a passed in array with random data.
            
             @param output output array for generated bits.
             @param predictionResistant true if a reseed should be forced, false otherwise.
            
             @return number of bits generated, -1 if a reseed required.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.X931Rng.Reseed">
            Reseed the RNG.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.X931SecureRandomBuilder.#ctor">
            Basic constructor, creates a builder using an EntropySourceProvider based on the default SecureRandom with
            predictionResistant set to false.
            <p>
            Any SecureRandom created from a builder constructed like this will make use of input passed to SecureRandom.setSeed() if
            the default SecureRandom does for its generateSeed() call.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.X931SecureRandomBuilder.#ctor(Org.BouncyCastle.Security.SecureRandom,System.Boolean)">
            Construct a builder with an EntropySourceProvider based on the passed in SecureRandom and the passed in value
            for prediction resistance.
            <p>
            Any SecureRandom created from a builder constructed like this will make use of input passed to SecureRandom.setSeed() if
            the passed in SecureRandom does for its generateSeed() call.
            </p>
            @param entropySource
            @param predictionResistant
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.X931SecureRandomBuilder.#ctor(Org.BouncyCastle.Crypto.IEntropySourceProvider)">
            Create a builder which makes creates the SecureRandom objects from a specified entropy source provider.
            <p>
            <b>Note:</b> If this constructor is used any calls to setSeed() in the resulting SecureRandom will be ignored.
            </p>
            @param entropySourceProvider a provider of EntropySource objects.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Prng.X931SecureRandomBuilder.Build(Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.Parameters.KeyParameter,System.Boolean)">
             Construct a X9.31 secure random generator using the passed in engine and key. If predictionResistant is true the
             generator will be reseeded on each request.
            
             @param engine a block cipher to use as the operator.
             @param key the block cipher key to initialise engine with.
             @param predictionResistant true if engine to be reseeded on each use, false otherwise.
             @return a SecureRandom.
        </member>
        <member name="M:crypto.Security.ComputeHash(System.String,System.String)">
            <summary>
            Return a salted hash based on PBKDF2 for the UTF-8 encoding of the argument text.
            </summary>
            <param name="text">Provided key text</param>
            <param name="salt">Base64 encoded string representing the salt</param>
            <returns></returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaDigestSigner.Update(System.Byte)">
            update the internal digest with the byte b
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaDigestSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            update the internal digest with the byte array in
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaDigestSigner.GenerateSignature">
            Generate a signature for the message we've been loaded with using
            the key we were initialised with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaDigestSigner.VerifySignature(System.Byte[])">
            <returns>true if the internal state represents the signature described in the passed in array.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaDigestSigner.Reset">
            <summary>Reset the internal state</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.DsaSigner">
            The Digital Signature Algorithm - as described in "Handbook of Applied
            Cryptography", pages 452 - 453.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaSigner.#ctor">
            Default configuration, random K values.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaSigner.#ctor(Org.BouncyCastle.Crypto.Signers.IDsaKCalculator)">
             Configuration with an alternate, possibly deterministic calculator of K.
            
             @param kCalculator a K value calculator.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaSigner.GenerateSignature(System.Byte[])">
             Generate a signature for the given message using the key we were
             initialised with. For conventional DSA the message should be a SHA-1
             hash of the message of interest.
            
             @param message the message that will be verified later.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.DsaSigner.VerifySignature(System.Byte[],Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            return true if the value r and s represent a DSA signature for
            the passed in message for standard DSA the message should be a
            SHA-1 hash of the real message to be verified.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.ECDsaSigner">
            EC-DSA as described in X9.62
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECDsaSigner.#ctor">
            Default configuration, random K values.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECDsaSigner.#ctor(Org.BouncyCastle.Crypto.Signers.IDsaKCalculator)">
             Configuration with an alternate, possibly deterministic calculator of K.
            
             @param kCalculator a K value calculator.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECDsaSigner.GenerateSignature(System.Byte[])">
             Generate a signature for the given message using the key we were
             initialised with. For conventional DSA the message should be a SHA-1
             hash of the message of interest.
            
             @param message the message that will be verified later.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECDsaSigner.VerifySignature(System.Byte[],Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            return true if the value r and s represent a DSA signature for
            the passed in message (for standard DSA the message should be
            a SHA-1 hash of the real message to be verified).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.ECGost3410Signer">
            GOST R 34.10-2001 Signature Algorithm
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECGost3410Signer.GenerateSignature(System.Byte[])">
             generate a signature for the given message using the key we were
             initialised with. For conventional GOST3410 the message should be a GOST3411
             hash of the message of interest.
            
             @param message the message that will be verified later.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECGost3410Signer.VerifySignature(System.Byte[],Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            return true if the value r and s represent a GOST3410 signature for
            the passed in message (for standard GOST3410 the message should be
            a GOST3411 hash of the real message to be verified).
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.ECNRSigner">
            EC-NR as described in IEEE 1363-2000
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECNRSigner.GenerateSignature(System.Byte[])">
             generate a signature for the given message using the key we were
             initialised with.  Generally, the order of the curve should be at
             least as long as the hash of the message of interest, and with
             ECNR it *must* be at least as long.
            
             @param digest  the digest to be signed.
             @exception DataLengthException if the digest is longer than the key allows
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.ECNRSigner.VerifySignature(System.Byte[],Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
             return true if the value r and s represent a signature for the
             message passed in. Generally, the order of the curve should be at
             least as long as the hash of the message of interest, and with
             ECNR, it *must* be at least as long.  But just in case the signer
             applied mod(n) to the longer digest, this implementation will
             apply mod(n) during verification.
            
             @param digest  the digest to be verified.
             @param r       the r value of the signature.
             @param s       the s value of the signature.
             @exception DataLengthException if the digest is longer than the key allows
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.GenericSigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the signer for signing or verification.
            
             @param forSigning
                        true if for signing, false otherwise
             @param parameters
                        necessary parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.GenericSigner.Update(System.Byte)">
            update the internal digest with the byte b
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.GenericSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            update the internal digest with the byte array in
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.GenericSigner.GenerateSignature">
            Generate a signature for the message we've been loaded with using the key
            we were initialised with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.GenericSigner.VerifySignature(System.Byte[])">
            return true if the internal state represents the signature described in
            the passed in array.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner.Update(System.Byte)">
            update the internal digest with the byte b
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            update the internal digest with the byte array in
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner.GenerateSignature">
            Generate a signature for the message we've been loaded with using
            the key we were initialised with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner.VerifySignature(System.Byte[])">
            <returns>true if the internal state represents the signature described in the passed in array.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Gost3410DigestSigner.Reset">
            <summary>Reset the internal state</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.Gost3410Signer">
            Gost R 34.10-94 Signature Algorithm
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.GenerateSignature(System.Byte[])">
             generate a signature for the given message using the key we were
             initialised with. For conventional Gost3410 the message should be a Gost3411
             hash of the message of interest.
            
             @param message the message that will be verified later.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Gost3410Signer.VerifySignature(System.Byte[],Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            return true if the value r and s represent a Gost3410 signature for
            the passed in message for standard Gost3410 the message should be a
            Gost3411 hash of the real message to be verified.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.HMacDsaKCalculator">
            A deterministic K calculator based on the algorithm in section 3.2 of RFC 6979.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator">
            Interface define calculators of K values for DSA/ECDSA.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Security.SecureRandom)">
             Non-deterministic initialiser.
            
             @param n the order of the DSA group.
             @param random a source of randomness.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.Init(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.Byte[])">
             Deterministic initialiser.
            
             @param n the order of the DSA group.
             @param d the DSA private value.
             @param message the message being signed.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.NextK">
             Return the next valid value of K.
            
             @return a K value.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Signers.IDsaKCalculator.IsDeterministic">
             Return true if this calculator is deterministic, false otherwise.
            
             @return true if deterministic, otherwise false.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.HMacDsaKCalculator.#ctor(Org.BouncyCastle.Crypto.IDigest)">
             Base constructor.
            
             @param digest digest to build the HMAC on.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.IDsaEncoding">
            <summary>
            An interface for different encoding formats for DSA signatures.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.IDsaEncoding.Decode(Org.BouncyCastle.Math.BigInteger,System.Byte[])">
            <summary>Decode the (r, s) pair of a DSA signature.</summary>
            <param name="n">The order of the group that r, s belong to.</param>
            <param name="encoding">An encoding of the (r, s) pair of a DSA signature.</param>
            <returns>The (r, s) of a DSA signature, stored in an array of exactly two elements, r followed by s.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.IDsaEncoding.Encode(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            <summary>Encode the (r, s) pair of a DSA signature.</summary>
            <param name="n">The order of the group that r, s belong to.</param>
            <param name="r">The r value of a DSA signature.</param>
            <param name="s">The s value of a DSA signature.</param>
            <returns>An encoding of the DSA signature given by the provided (r, s) pair.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner">
            <summary> ISO9796-2 - mechanism using a hash function with recovery (scheme 2 and 3).
            <p>
            Note: the usual length for the salt is the length of the hash
            function used in bytes.</p>
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.GetRecoveredMessage">
            <summary>
            Return a reference to the recoveredMessage message.
            </summary>
            <returns>The full/partial recoveredMessage message.</returns>
            <seealso cref="M:Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage"/>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Boolean)">
            <summary>
            Generate a signer with either implicit or explicit trailers for ISO9796-2, scheme 2 or 3.
            </summary>
            <param name="cipher">base cipher to use for signature creation/verification</param>
            <param name="digest">digest to use.</param>
            <param name="saltLength">length of salt in bytes.</param>
            <param name="isImplicit">whether or not the trailer is implicit or gives the hash.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32)">
             <summary> Constructor for a signer with an explicit digest trailer.
            
             </summary>
             <param name="cipher">cipher to use.
             </param>
             <param name="digest">digest to sign with.
             </param>
             <param name="saltLength">length of salt in bytes.
             </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
            <summary>Initialise the signer.</summary>
            <param name="forSigning">true if for signing, false if for verification.</param>
            <param name="parameters">parameters for signature generation/verification. If the
            parameters are for generation they should be a ParametersWithRandom,
            a ParametersWithSalt, or just an RsaKeyParameters object. If RsaKeyParameters
            are passed in a SecureRandom will be created.
            </param>
            <exception> <see cref="T:System.ArgumentException"/>if wrong parameter type or a fixed
            salt is passed in which is the wrong length.
            </exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.IsSameAs(System.Byte[],System.Byte[])">
            <summary> compare two byte arrays - constant time.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.ClearBlock(System.Byte[])">
            <summary> clear possible sensitive data</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.Update(System.Byte)">
            <summary> update the internal digest with the byte b</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            <summary> update the internal digest with the byte array in</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.Reset">
            <summary> reset the internal state</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.GenerateSignature">
            <summary> Generate a signature for the loaded message using the key we were
            initialised with.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.VerifySignature(System.Byte[])">
            <summary> return true if the signature represents a ISO9796-2 signature
            for the passed in message.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.HasFullMessage">
            <summary>
            Return true if the full message was recoveredMessage.
            </summary>
            <returns>true on full message recovery, false otherwise, or if not sure.</returns>
            <seealso cref="M:Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage"/>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.ItoOSP(System.Int32,System.Byte[])">
            <summary> int to octet string.</summary>
            <summary> int to octet string.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.LtoOSP(System.Int64,System.Byte[])">
            <summary> long to octet string.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2PssSigner.MaskGeneratorFunction1(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary> mask generator function, as described in Pkcs1v2.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer">
            <summary> ISO9796-2 - mechanism using a hash function with recovery (scheme 1)</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.GetRecoveredMessage">
            <summary>
            Return a reference to the recoveredMessage message.
            </summary>
            <returns>The full/partial recoveredMessage message.</returns>
            <seealso cref="M:Org.BouncyCastle.Crypto.ISignerWithRecovery.GetRecoveredMessage"/>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Boolean)">
            <summary>
            Generate a signer with either implicit or explicit trailers for ISO9796-2.
            </summary>
            <param name="cipher">base cipher to use for signature creation/verification</param>
            <param name="digest">digest to use.</param>
            <param name="isImplicit">whether or not the trailer is implicit or gives the hash.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)">
             <summary> Constructor for a signer with an explicit digest trailer.
            
             </summary>
             <param name="cipher">cipher to use.
             </param>
             <param name="digest">digest to sign with.
             </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.IsSameAs(System.Byte[],System.Byte[])">
            <summary> compare two byte arrays - constant time.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.ClearBlock(System.Byte[])">
            <summary> clear possible sensitive data</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.Update(System.Byte)">
            <summary> update the internal digest with the byte b</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            <summary> update the internal digest with the byte array in</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.Reset">
            <summary> reset the internal state</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.GenerateSignature">
            <summary> Generate a signature for the loaded message using the key we were
            initialised with.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.VerifySignature(System.Byte[])">
            <summary> return true if the signature represents a ISO9796-2 signature
            for the passed in message.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.Iso9796d2Signer.HasFullMessage">
            <summary>
            Return true if the full message was recoveredMessage.
            </summary>
            <returns> true on full message recovery, false otherwise.</returns>
            <seealso cref="M:Org.BouncyCastle.Crypto.ISignerWithRecovery.HasFullMessage"/>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.PssSigner">
            <summary> RSA-PSS as described in Pkcs# 1 v 2.1.
            <p>
            Note: the usual value for the salt length is the number of
            bytes in the hash function.</p>
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Int32)">
            <summary>Basic constructor</summary>
            <param name="cipher">the asymmetric cipher to use.</param>
            <param name="digest">the digest to use.</param>
            <param name="saltLen">the length of the salt to use (in bytes).</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Byte[])">
            <summary>Basic constructor</summary>
            <param name="cipher">the asymmetric cipher to use.</param>
            <param name="digest">the digest to use.</param>
            <param name="salt">the fixed salt to be used.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.ClearBlock(System.Byte[])">
            <summary> clear possible sensitive data</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.Update(System.Byte)">
            <summary> update the internal digest with the byte b</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            <summary> update the internal digest with the byte array in</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.Reset">
            <summary> reset the internal state</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.GenerateSignature">
            <summary> Generate a signature for the message we've been loaded with using
            the key we were initialised with.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.VerifySignature(System.Byte[])">
            <summary> return true if the internal state represents the signature described
            in the passed in array.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.ItoOSP(System.Int32,System.Byte[])">
            <summary> int to octet string.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.PssSigner.MaskGeneratorFunction1(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary> mask generator function, as described in Pkcs1v2.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.RsaDigestSigner.#cctor">
            <summary>
            Load oid table.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.RsaDigestSigner.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             Initialise the signer for signing or verification.
            
             @param forSigning true if for signing, false otherwise
             @param param necessary parameters.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.RsaDigestSigner.Update(System.Byte)">
            update the internal digest with the byte b
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.RsaDigestSigner.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            update the internal digest with the byte array in
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.RsaDigestSigner.GenerateSignature">
            Generate a signature for the message we've been loaded with using
            the key we were initialised with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.RsaDigestSigner.VerifySignature(System.Byte[])">
            return true if the internal state represents the signature described
            in the passed in array.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.SM2Signer">
            <summary>The SM2 Digital Signature algorithm.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Signers.X931Signer">
            X9.31-1998 - signing using a hash.
            <p>
            The message digest hash, H, is encapsulated to form a byte string as follows
            </p>
            <pre>
            EB = 06 || PS || 0xBA || H || TRAILER
            </pre>
            where PS is a string of bytes all of value 0xBB of length such that |EB|=|n|, and TRAILER is the ISO/IEC 10118 part numberâ€  for the digest. The byte string, EB, is converted to an integer value, the message representative, f.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest,System.Boolean)">
             Generate a signer with either implicit or explicit trailers for X9.31.
            
             @param cipher base cipher to use for signature creation/verification
             @param digest digest to use.
             @param implicit whether or not the trailer is implicit or gives the hash.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.#ctor(Org.BouncyCastle.Crypto.IAsymmetricBlockCipher,Org.BouncyCastle.Crypto.IDigest)">
             Constructor for a signer with an explicit digest trailer.
            
             @param cipher cipher to use.
             @param digest digest to sign with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.ClearBlock(System.Byte[])">
            <summary> clear possible sensitive data</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.Update(System.Byte)">
            update the internal digest with the byte b
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            update the internal digest with the byte array in
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.Reset">
            reset the internal state
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.GenerateSignature">
            generate a signature for the loaded message using the key we were
            initialised with.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Signers.X931Signer.VerifySignature(System.Byte[])">
            return true if the signature represents a ISO9796-2 signature
            for the passed in message.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.SimpleBlockResult">
            <summary>
            A simple block result object which just carries a byte array.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.SimpleBlockResult.#ctor(System.Byte[])">
            <summary>
            Base constructor - a wrapper for the passed in byte array.
            </summary>
            <param name="result">The byte array to be wrapped.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.SimpleBlockResult.Collect">
            <summary>
            Return the final result of the operation.
            </summary>
            <returns>A block of bytes, representing the result of an operation.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.SimpleBlockResult.Collect(System.Byte[],System.Int32)">
            <summary>
            Store the final result of the operation by copying it into the destination array.
            </summary>
            <returns>The number of bytes copied into destination.</returns>
            <param name="destination">The byte array to copy the result into.</param>
            <param name="offset">The offset into destination to start copying the result at.</param>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.SimpleBlockResult.Length">
            <summary>
            Return the number of bytes in the result
            </summary>
            <value>The length of the result in bytes.</value>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.StreamBlockCipher">
            a wrapper for block ciphers with a single byte block size, so that they
            can be treated like stream ciphers.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.StreamBlockCipher.#ctor(Org.BouncyCastle.Crypto.IBlockCipher)">
             basic constructor.
            
             @param cipher the block cipher to be wrapped.
             @exception ArgumentException if the cipher has a block size other than
             one.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.StreamBlockCipher.Init(System.Boolean,Org.BouncyCastle.Crypto.ICipherParameters)">
             initialise the underlying cipher.
            
             @param forEncryption true if we are setting up for encryption, false otherwise.
             @param param the necessary parameters for the underlying cipher to be initialised.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.StreamBlockCipher.ReturnByte(System.Byte)">
             encrypt/decrypt a single byte returning the result.
            
             @param in the byte to be processed.
             @return the result of processing the input byte.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.StreamBlockCipher.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
             process a block of bytes from in putting the result into out.
            
             @param in the input byte array.
             @param inOff the offset into the in array where the data to be processed starts.
             @param len the number of bytes to be processed.
             @param out the output buffer the processed bytes go into.
             @param outOff the offset into the output byte array the processed data stars at.
             @exception DataLengthException if the output buffer is too small.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.StreamBlockCipher.Reset">
            reset the underlying cipher. This leaves it in the same state
            it was at after the last init (if there was one).
        </member>
        <member name="P:Org.BouncyCastle.Crypto.StreamBlockCipher.AlgorithmName">
             return the name of the algorithm we are wrapping.
            
             @return the name of the algorithm we are wrapping.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAgreementCredentials.GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.AbstractTlsAgreementCredentials.GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsCipherFactory.CreateCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.AbstractTlsCipherFactory.CreateCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.Cancel">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetHandshakeTimeoutMillis">
            <summary>
            Specify the timeout, in milliseconds, to use for the complete handshake process.
            </summary>
            <remarks>
            Negative values are not allowed. A timeout of zero means an infinite timeout (i.e. the
            handshake will never time out). NOTE: Currently only respected by DTLS protocols.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.RequiresExtendedMasterSecret">
            <summary>
            This implementation supports RFC 7627 and will always negotiate the extended_master_secret
            extension where possible.
            </summary>
            <remarks>
            When connecting to a peer that does not offer/accept this extension, it is recommended to
            abort the handshake. This option is provided for interoperability with legacy peers,
            although some TLS features will be disabled in that case (see RFC 7627 5.4).
            </remarks>
            <returns>
            <code>true</code> if the handshake should be aborted when the peer does not negotiate the
            extended_master_secret extension, or <code>false</code> to support legacy interoperability.
            </returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.ShouldUseGmtUnixTime">
            <summary>
            draft-mathewson-no-gmtunixtime-00 2. "If existing users of a TLS implementation may rely on
            gmt_unix_time containing the current time, we recommend that implementors MAY provide the
            ability to set gmt_unix_time as an option only, off by default."
            </summary>
            <returns>
            <code>true</code> if the current time should be used in the gmt_unix_time field of
            Random, or <code>false</code> if gmt_unix_time should contain a cryptographically
            random value.
            </returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifySecureRenegotiation(System.Boolean)">
            <summary>
            Report whether the server supports secure renegotiation
            </summary>
            <remarks>
            The protocol handler automatically processes the relevant extensions
            </remarks>
            <param name="secureRenegotiation">
            A <see cref="T:System.Boolean"/>, true if the server supports secure renegotiation
            </param>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCompression">
            <summary>
            Return an implementation of <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsCompression"/> to handle record compression.
            </summary>
            <returns>A <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsCompression"/></returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.GetCipher">
            <summary>
            Return an implementation of <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsCipher"/> to use for encryption/decryption.
            </summary>
            <returns>A <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsCipher"/></returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertRaised(System.Byte,System.Byte,System.String,System.Exception)">
            <summary>This method will be called when an alert is raised by the protocol.</summary>
            <param name="alertLevel"><see cref="T:Org.BouncyCastle.Crypto.Tls.AlertLevel"/></param>
            <param name="alertDescription"><see cref="T:Org.BouncyCastle.Crypto.Tls.AlertDescription"/></param>
            <param name="message">A human-readable message explaining what caused this alert. May be null.</param>
            <param name="cause">The <c>Exception</c> that caused this alert to be raised. May be null.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyAlertReceived(System.Byte,System.Byte)">
            <summary>This method will be called when an alert is received from the remote peer.</summary>
            <param name="alertLevel"><see cref="T:Org.BouncyCastle.Crypto.Tls.AlertLevel"/></param>
            <param name="alertDescription"><see cref="T:Org.BouncyCastle.Crypto.Tls.AlertDescription"/></param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsPeer.NotifyHandshakeComplete">
            <summary>Notifies the peer that the handshake has been successfully completed.</summary>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.AbstractTlsPeer.Cancel">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.Init(Org.BouncyCastle.Crypto.Tls.TlsClientContext)">
            <summary>
            Called at the start of a new TLS session, before any other methods.
            </summary>
            <param name="context">
            A <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsProtocolHandler"/>
            </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetSessionToResume">
            <summary>Return the session this client wants to resume, if any.</summary>
            <remarks>Note that the peer's certificate chain for the session (if any) may need to be periodically revalidated.</remarks>
            <returns>
            A <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsSession"/> representing the resumable session to be used for this connection,
            or null to use a new session.
            </returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites">
            <summary>
            Get the list of cipher suites that this client supports.
            </summary>
            <returns>
            An array of <see cref="T:Org.BouncyCastle.Crypto.Tls.CipherSuite"/> values, each specifying a supported cipher suite.
            </returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods">
            <summary>
            Get the list of compression methods that this client supports.
            </summary>
            <returns>
            An array of <see cref="T:Org.BouncyCastle.Crypto.Tls.CompressionMethod"/> values, each specifying a supported compression method.
            </returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions">
            <summary>
            Get the (optional) table of client extensions to be included in (extended) client hello.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IDictionary"/> (Int32 -&gt; byte[]). May be null.
            </returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyServerVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySessionID(System.Byte[])">
            <summary>
            Notifies the client of the session_id sent in the ServerHello.
            </summary>
            <param name="sessionID">An array of <see cref="T:System.Byte"/></param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCipherSuite(System.Int32)">
            <summary>
            Report the cipher suite that was selected by the server.
            </summary>
            <remarks>
            The protocol handler validates this value against the offered cipher suites
            <seealso cref="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetCipherSuites"/>
            </remarks>
            <param name="selectedCipherSuite">
            A <see cref="T:Org.BouncyCastle.Crypto.Tls.CipherSuite"/>
            </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifySelectedCompressionMethod(System.Byte)">
            <summary>
            Report the compression method that was selected by the server.
            </summary>
            <remarks>
            The protocol handler validates this value against the offered compression methods
            <seealso cref="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetCompressionMethods"/>
            </remarks>
            <param name="selectedCompressionMethod">
            A <see cref="T:Org.BouncyCastle.Crypto.Tls.CompressionMethod"/>
            </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerExtensions(System.Collections.IDictionary)">
            <summary>
            Report the extensions from an extended server hello.
            </summary>
            <remarks>
            Will only be called if we returned a non-null result from <see cref="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientExtensions"/>.
            </remarks>
            <param name="serverExtensions">
            A <see cref="T:System.Collections.IDictionary"/>  (Int32 -&gt; byte[])
            </param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.ProcessServerSupplementalData(System.Collections.IList)">
            <param name="serverSupplementalData">A <see cref="T:System.Collections.IList">list</see> of <see cref="T:Org.BouncyCastle.Crypto.Tls.SupplementalDataEntry"/></param>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetKeyExchange">
            <summary>
            Return an implementation of <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange"/> to negotiate the key exchange
            part of the protocol.
            </summary>
            <returns>
            A <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange"/>
            </returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetAuthentication">
            <summary>
            Return an implementation of <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsAuthentication"/> to handle authentication
            part of the protocol.
            </summary>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.GetClientSupplementalData">
            <returns>A <see cref="T:System.Collections.IList">list</see> of <see cref="T:Org.BouncyCastle.Crypto.Tls.SupplementalDataEntry"/></returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClient.NotifyNewSessionTicket(Org.BouncyCastle.Crypto.Tls.NewSessionTicket)">
            <summary>RFC 5077 3.3. NewSessionTicket Handshake Message</summary>
            <remarks>
            This method will be called (only) when a NewSessionTicket handshake message is received. The
            ticket is opaque to the client and clients MUST NOT examine the ticket under the assumption
            that it complies with e.g. <i>RFC 5077 4. Recommended Ticket Construction</i>.
            </remarks>
            <param name="newSessionTicket">The <see cref="T:Org.BouncyCastle.Crypto.Tls.NewSessionTicket">ticket</see></param>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.TlsClient.ClientHelloRecordLayerVersion">
            <summary>
            Return the <see cref="T:Org.BouncyCastle.Crypto.Tls.ProtocolVersion"/> to use for the <c>TLSPlaintext.version</c> field prior to
            receiving the server version. NOTE: This method is <b>not</b> called for DTLS.
            </summary>
            <remarks>
            See RFC 5246 E.1.: "TLS clients that wish to negotiate with older servers MAY send any value
            {03,XX} as the record layer version number. Typical values would be {03,00}, the lowest
            version number supported by the client, and the value of ClientHello.client_version. No
            single value will guarantee interoperability with all old servers, but this is a complex
            topic beyond the scope of this document."
            </remarks>
            <returns>The <see cref="T:Org.BouncyCastle.Crypto.Tls.ProtocolVersion"/> to use.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsContext.ExportKeyingMaterial(System.String,System.Byte[],System.Int32)">
             Export keying material according to RFC 5705: "Keying Material Exporters for TLS".
            
             @param asciiLabel    indicates which application will use the exported keys.
             @param context_value allows the application using the exporter to mix its own data with the TLS PRF for
                                  the exporter output.
             @param length        the number of bytes to generate
             @return a pseudorandom bit string of 'length' bytes generated from the master_secret.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.TlsContext.ResumableSession">
            Used to get the resumable session, if any, used by this connection. Only available after the
            handshake has successfully completed.
            
            @return A {@link TlsSession} representing the resumable session used by this connection, or
                    null if no resumable session available.
            @see TlsPeer#NotifyHandshakeComplete()
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsEncryptionCredentials.DecryptPreMasterSecret(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.AbstractTlsEncryptionCredentials.DecryptPreMasterSecret(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange">
            <summary>
            A generic interface for key exchange implementations in (D)TLS.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerCredentials">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateServerKeyExchange">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipServerKeyExchange">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessServerKeyExchange(System.IO.Stream)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ValidateCertificateRequest(Org.BouncyCastle.Crypto.Tls.CertificateRequest)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.SkipClientCredentials">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCredentials(Org.BouncyCastle.Crypto.Tls.TlsCredentials)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GenerateClientKeyExchange(System.IO.Stream)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.ProcessClientKeyExchange(System.IO.Stream)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsKeyExchange.GeneratePremasterSecret">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.NotifyClientVersion(Org.BouncyCastle.Crypto.Tls.ProtocolVersion)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.NotifyFallback(System.Boolean)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.NotifyOfferedCipherSuites(System.Int32[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.NotifyOfferedCompressionMethods(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.ProcessClientExtensions(System.Collections.IDictionary)">
            <param name="clientExtensions">A <see cref="T:System.Collections.IDictionary"/> (Int32 -&gt; byte[]). Will never be null.</param>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetServerVersion">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetSelectedCipherSuite">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetSelectedCompressionMethod">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetServerExtensions">
            <summary>
            Get the (optional) table of server extensions to be included in (extended) server hello.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IDictionary"/> (Int32 -&gt; byte[]). May be null.
            </returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetServerSupplementalData">
            <returns>
            A <see cref="T:System.Collections.IList"/> (<see cref="T:Org.BouncyCastle.Crypto.Tls.SupplementalDataEntry"/>). May be null.
            </returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetCredentials">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetCertificateStatus">
            <remarks>
            This method will be called (only) if the server included an extension of type
            "status_request" with empty "extension_data" in the extended server hello. See <i>RFC 3546
            3.6. Certificate Status Request</i>. If a non-null <see cref="T:Org.BouncyCastle.Crypto.Tls.CertificateStatus"/> is returned, it
            is sent to the client as a handshake message of type "certificate_status".
            </remarks>
            <returns>A <see cref="T:Org.BouncyCastle.Crypto.Tls.CertificateStatus"/> to be sent to the client (or null for none).</returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetKeyExchange">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetCertificateRequest">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.ProcessClientSupplementalData(System.Collections.IList)">
            <param name="clientSupplementalData"><see cref="T:System.Collections.IList"/> (<see cref="T:Org.BouncyCastle.Crypto.Tls.SupplementalDataEntry"/>)</param>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.NotifyClientCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)">
            <summary>
            Called by the protocol handler to report the client certificate, only if <c>GetCertificateRequest</c>
            returned non-null.
            </summary>
            <remarks>Note: this method is responsible for certificate verification and validation.</remarks>
            <param name="clientCertificate">the effective client certificate (may be an empty chain).</param>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServer.GetNewSessionTicket">
            <summary>RFC 5077 3.3. NewSessionTicket Handshake Message.</summary>
            <remarks>
            This method will be called (only) if a NewSessionTicket extension was sent by the server. See
            <i>RFC 5077 4. Recommended Ticket Construction</i> for recommended format and protection.
            </remarks>
            <returns>The <see cref="T:Org.BouncyCastle.Crypto.Tls.NewSessionTicket">ticket</see>)</returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsSignerCredentials.GenerateCertificateSignature(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.AbstractTlsSignerCredentials.GenerateCertificateSignature(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.AlertDescription">
            <summary>
            RFC 5246 7.2
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.close_notify">
            This message notifies the recipient that the sender will not send any more messages on this
            connection. Note that as of TLS 1.1, failure to properly close a connection no longer
            requires that a session not be resumed. This is a change from TLS 1.0 ("The session becomes
            unresumable if any connection is terminated without proper close_notify messages with level
            equal to warning.") to conform with widespread implementation practice.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.unexpected_message">
            An inappropriate message was received. This alert is always fatal and should never be
            observed in communication between proper implementations.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.bad_record_mac">
            This alert is returned if a record is received with an incorrect MAC. This alert also MUST be
            returned if an alert is sent because a TLSCiphertext decrypted in an invalid way: either it
            wasn't an even multiple of the block length, or its padding values, when checked, weren't
            correct. This message is always fatal and should never be observed in communication between
            proper implementations (except when messages were corrupted in the network).
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.decryption_failed">
            This alert was used in some earlier versions of TLS, and may have permitted certain attacks
            against the CBC mode [CBCATT]. It MUST NOT be sent by compliant implementations.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.record_overflow">
            A TLSCiphertext record was received that had a length more than 2^14+2048 bytes, or a record
            decrypted to a TLSCompressed record with more than 2^14+1024 bytes. This message is always
            fatal and should never be observed in communication between proper implementations (except
            when messages were corrupted in the network).
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.decompression_failure">
            The decompression function received improper input (e.g., data that would expand to excessive
            length). This message is always fatal and should never be observed in communication between
            proper implementations.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.handshake_failure">
            Reception of a handshake_failure alert message indicates that the sender was unable to
            negotiate an acceptable set of security parameters given the options available. This is a
            fatal error.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.no_certificate">
            This alert was used in SSLv3 but not any version of TLS. It MUST NOT be sent by compliant
            implementations.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.bad_certificate">
            A certificate was corrupt, contained signatures that did not verify correctly, etc.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.unsupported_certificate">
            A certificate was of an unsupported type.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.certificate_revoked">
            A certificate was revoked by its signer.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.certificate_expired">
            A certificate has expired or is not currently valid.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.certificate_unknown">
            Some other (unspecified) issue arose in processing the certificate, rendering it
            unacceptable.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.illegal_parameter">
            A field in the handshake was out of range or inconsistent with other fields. This message is
            always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.unknown_ca">
            A valid certificate chain or partial chain was received, but the certificate was not accepted
            because the CA certificate could not be located or couldn't be matched with a known, trusted
            CA. This message is always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.access_denied">
            A valid certificate was received, but when access control was applied, the sender decided not
            to proceed with negotiation. This message is always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.decode_error">
            A message could not be decoded because some field was out of the specified range or the
            length of the message was incorrect. This message is always fatal and should never be
            observed in communication between proper implementations (except when messages were corrupted
            in the network).
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.decrypt_error">
            A handshake cryptographic operation failed, including being unable to correctly verify a
            signature or validate a Finished message. This message is always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.export_restriction">
            This alert was used in some earlier versions of TLS. It MUST NOT be sent by compliant
            implementations.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.protocol_version">
            The protocol version the client has attempted to negotiate is recognized but not supported.
            (For example, old protocol versions might be avoided for security reasons.) This message is
            always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.insufficient_security">
            Returned instead of handshake_failure when a negotiation has failed specifically because the
            server requires ciphers more secure than those supported by the client. This message is
            always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.internal_error">
            An internal error unrelated to the peer or the correctness of the protocol (such as a memory
            allocation failure) makes it impossible to continue. This message is always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.user_canceled">
            This handshake is being canceled for some reason unrelated to a protocol failure. If the user
            cancels an operation after the handshake is complete, just closing the connection by sending
            a close_notify is more appropriate. This alert should be followed by a close_notify. This
            message is generally a warning.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.no_renegotiation">
            Sent by the client in response to a hello request or by the server in response to a client
            hello after initial handshaking. Either of these would normally lead to renegotiation; when
            that is not appropriate, the recipient should respond with this alert. At that point, the
            original requester can decide whether to proceed with the connection. One case where this
            would be appropriate is where a server has spawned a process to satisfy a request; the
            process might receive security parameters (key length, authentication, etc.) at startup, and
            it might be difficult to communicate changes to these parameters after that point. This
            message is always a warning.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.unsupported_extension">
            Sent by clients that receive an extended server hello containing an extension that they did
            not put in the corresponding client hello. This message is always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.certificate_unobtainable">
            This alert is sent by servers who are unable to retrieve a certificate chain from the URL
            supplied by the client (see Section 3.3). This message MAY be fatal - for example if client
            authentication is required by the server for the handshake to continue and the server is
            unable to retrieve the certificate chain, it may send a fatal alert.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.unrecognized_name">
            This alert is sent by servers that receive a server_name extension request, but do not
            recognize the server name. This message MAY be fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.bad_certificate_status_response">
            This alert is sent by clients that receive an invalid certificate status response (see
            Section 3.6). This message is always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.bad_certificate_hash_value">
            This alert is sent by servers when a certificate hash does not match a client provided
            certificate_hash. This message is always fatal.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.unknown_psk_identity">
            If the server does not recognize the PSK identity, it MAY respond with an
            "unknown_psk_identity" alert message.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.inappropriate_fallback">
            If TLS_FALLBACK_SCSV appears in ClientHello.cipher_suites and the highest protocol version
            supported by the server is higher than the version indicated in ClientHello.client_version,
            the server MUST respond with a fatal inappropriate_fallback alert [..].
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.AlertLevel">
            <summary>
            RFC 5246 7.2
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.BulkCipherAlgorithm">
            <summary>RFC 2246</summary>
            <remarks>
            Note that the values here are implementation-specific and arbitrary. It is recommended not to
            depend on the particular values (e.g. serialization).
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.ByteQueue">
            <remarks>
            A queue for bytes.
            <p>
            This file could be more optimized.
            </p>
            </remarks>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.ByteQueue.DefaultCapacity">
            The initial size for our buffer.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ByteQueue.NextTwoPow(System.Int32)">
            <returns>The smallest number which can be written as 2^x which is bigger than i.</returns>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.ByteQueue.databuf">
            The buffer where we store our data.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.ByteQueue.skipped">
            How many bytes at the beginning of the buffer are skipped.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.ByteQueue.available">
            How many bytes in the buffer are valid data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ByteQueue.AddData(System.Byte[],System.Int32,System.Int32)">
            <summary>Add some data to our buffer.</summary>
            <param name="data">A byte-array to read data from.</param>
            <param name="offset">How many bytes to skip at the beginning of the array.</param>
            <param name="len">How many bytes to read from the array.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ByteQueue.CopyTo(System.IO.Stream,System.Int32)">
            <summary>Copy some bytes from the beginning of the data to the provided <c cref="T:System.IO.Stream">Stream</c>.</summary>
            <param name="output">The <c cref="T:System.IO.Stream">Stream</c> to copy the bytes to.</param>
            <param name="length">How many bytes to copy.</param>
            <exception> <see cref="T:System.InvalidOperationException"/>If insufficient data is available.</exception>
            <exception> <see cref="T:System.IO.IOException"/>If there is a problem copying the data.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ByteQueue.Read(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>Read data from the buffer.</summary>
            <param name="buf">The buffer where the read data will be copied to.</param>
            <param name="offset">How many bytes to skip at the beginning of buf.</param>
            <param name="len">How many bytes to read at all.</param>
            <param name="skip">How many bytes from our data to skip.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ByteQueue.ReadFrom(System.Int32)">
            <summary>Return a <c cref="T:System.IO.MemoryStream">MemoryStream</c> over some bytes at the beginning of the data.</summary>
            <param name="length">How many bytes will be readable.</param>
            <returns>A <c cref="T:System.IO.MemoryStream">MemoryStream</c> over the data.</returns>
            <exception> <see cref="T:System.InvalidOperationException"/>If insufficient data is available.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ByteQueue.RemoveData(System.Int32)">
            <summary>Remove some bytes from our data from the beginning.</summary>
            <param name="i">How many bytes to remove.</param>
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.ByteQueue.Available">
            <summary>The number of bytes which are available in this buffer.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.Certificate">
             Parsing and encoding of a <i>Certificate</i> struct from RFC 4346.
             <p/>
             <pre>
             opaque ASN.1Cert&lt;2^24-1&gt;;
            
             struct {
                 ASN.1Cert certificate_list&lt;0..2^24-1&gt;;
             } Certificate;
             </pre>
            
             @see Org.BouncyCastle.Asn1.X509.X509CertificateStructure
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.Certificate.mCertificateList">
            The certificates.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Certificate.GetCertificateList">
            @return an array of {@link org.bouncycastle.asn1.x509.Certificate} representing a certificate
                    chain.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Certificate.Encode(System.IO.Stream)">
             Encode this {@link Certificate} to a {@link Stream}.
            
             @param output the {@link Stream} to encode to.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Certificate.Parse(System.IO.Stream)">
             Parse a {@link Certificate} from a {@link Stream}.
            
             @param input the {@link Stream} to parse from.
             @return a {@link Certificate} object.
             @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.Certificate.IsEmpty">
            @return <code>true</code> if this certificate chain contains no certificates, or
                    <code>false</code> otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.CertificateRequest">
             Parsing and encoding of a <i>CertificateRequest</i> struct from RFC 4346.
             <p/>
             <pre>
             struct {
                 ClientCertificateType certificate_types&lt;1..2^8-1&gt;;
                 DistinguishedName certificate_authorities&lt;3..2^16-1&gt;
             } CertificateRequest;
             </pre>
            
             @see ClientCertificateType
             @see X509Name
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateRequest.#ctor(System.Byte[],System.Collections.IList,System.Collections.IList)">
            @param certificateTypes       see {@link ClientCertificateType} for valid constants.
            @param certificateAuthorities an {@link IList} of {@link X509Name}.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateRequest.Encode(System.IO.Stream)">
             Encode this {@link CertificateRequest} to a {@link Stream}.
            
             @param output the {@link Stream} to encode to.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateRequest.Parse(Org.BouncyCastle.Crypto.Tls.TlsContext,System.IO.Stream)">
            Parse a {@link CertificateRequest} from a {@link Stream}.
            
            @param context
                       the {@link TlsContext} of the current connection.
            @param input
                       the {@link Stream} to parse from.
            @return a {@link CertificateRequest} object.
            @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateTypes">
            @return an array of certificate types
            @see {@link ClientCertificateType}
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.CertificateRequest.SupportedSignatureAlgorithms">
            @return an {@link IList} of {@link SignatureAndHashAlgorithm} (or null before TLS 1.2).
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.CertificateRequest.CertificateAuthorities">
            @return an {@link IList} of {@link X509Name}
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateStatus.Encode(System.IO.Stream)">
            Encode this {@link CertificateStatus} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateStatus.Parse(System.IO.Stream)">
            Parse a {@link CertificateStatus} from a {@link Stream}.
            
            @param input
                       the {@link Stream} to parse from.
            @return a {@link CertificateStatus} object.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateStatusRequest.Encode(System.IO.Stream)">
            Encode this {@link CertificateStatusRequest} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateStatusRequest.Parse(System.IO.Stream)">
            Parse a {@link CertificateStatusRequest} from a {@link Stream}.
            
            @param input
                       the {@link Stream} to parse from.
            @return a {@link CertificateStatusRequest} object.
            @throws IOException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.CertificateType">
            RFC 6091 
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateUrl.#ctor(System.Byte,System.Collections.IList)">
            @param type
                       see {@link CertChainType} for valid constants.
            @param urlAndHashList
                       a {@link IList} of {@link UrlAndHash}.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateUrl.Encode(System.IO.Stream)">
             Encode this {@link CertificateUrl} to a {@link Stream}.
            
             @param output the {@link Stream} to encode to.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CertificateUrl.parse(Org.BouncyCastle.Crypto.Tls.TlsContext,System.IO.Stream)">
            Parse a {@link CertificateUrl} from a {@link Stream}.
            
            @param context
                       the {@link TlsContext} of the current connection.
            @param input
                       the {@link Stream} to parse from.
            @return a {@link CertificateUrl} object.
            @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.CertificateUrl.Type">
            @return {@link CertChainType}
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.CertificateUrl.UrlAndHashList">
            @return an {@link IList} of {@link UrlAndHash} 
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305">
            draft-ietf-tls-chacha20-poly1305-04
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Chacha20Poly1305.GetAdditionalData(System.Int64,System.Byte,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.CipherSuite">
            <summary>
            RFC 2246 A.5
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.CipherType">
            <summary>RFC 2246</summary>
            <remarks>
            Note that the values here are implementation-specific and arbitrary. It is recommended not to
            depend on the particular values (e.g. serialization).
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.CombinedHash">
            A combined hash, which implements md5(m) || sha1(m).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CombinedHash.BlockUpdate(System.Byte[],System.Int32,System.Int32)">
            @see org.bouncycastle.crypto.Digest#update(byte[], int, int)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CombinedHash.DoFinal(System.Byte[],System.Int32)">
            @see org.bouncycastle.crypto.Digest#doFinal(byte[], int)
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.CombinedHash.Reset">
            @see org.bouncycastle.crypto.Digest#reset()
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.CompressionMethod">
            <summary>
            RFC 2246 6.1
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.ConnectionEnd">
            <summary>RFC 2246</summary>
            <remarks>
            Note that the values here are implementation-specific and arbitrary. It is recommended not to
            depend on the particular values (e.g. serialization).
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.ContentType">
            RFC 2246 6.2.1
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsCloseable.Close">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DatagramTransport.GetReceiveLimit">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DatagramTransport.GetSendLimit">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DatagramTransport.Receive(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DatagramTransport.Send(System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsAgreementCredentials.GenerateAgreement(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateAESCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateCamelliaCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateChaCha20Poly1305(Org.BouncyCastle.Crypto.Tls.TlsContext)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateCipher_Aes_Ccm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateCipher_Aes_Gcm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateCipher_Aes_Ocb(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateCipher_Camellia_Gcm(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateDesEdeCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateNullCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateRC4Cipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateSeedCipher(Org.BouncyCastle.Crypto.Tls.TlsContext,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsCipherFactory.CreateHMacDigest(System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsDHVerifier">
            <summary>An interface for verifying that Diffie-Hellman parameters are acceptable.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsDHVerifier.Accept(Org.BouncyCastle.Crypto.Parameters.DHParameters)">
            <summary>Verify that the given <c>DHParameters</c> are acceptable.</summary>
            <param name="dhParameters">The <c>DHParameters</c> to verify.</param>
            <returns>true if (and only if) the specified parameters are acceptable.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsDHVerifier.#ctor">
            <summary>Accept various standard DH groups with 'P' at least <c>DefaultMinimumPrimeBits</c> bits.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsDHVerifier.#ctor(System.Int32)">
            <summary>Accept various standard DH groups with 'P' at least the specified number of bits.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsDHVerifier.#ctor(System.Collections.IList,System.Int32)">
            <summary>Accept a custom set of group parameters, subject to a minimum bitlength for 'P'.</summary>
            <param name="groups">An <c>IList</c> of acceptable <c>DHParameters</c>.</param>
            <param name="minimumPrimeBits">The minimum acceptable bitlength of the 'P' parameter.</param>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsEncryptionCredentials.DecryptPreMasterSecret(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsSignerCredentials.GenerateCertificateSignature(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsSrpGroupVerifier.Accept(Org.BouncyCastle.Crypto.Parameters.Srp6GroupParameters)">
            Check whether the given SRP group parameters are acceptable for use.
            
            @param group the {@link SRP6GroupParameters} to check
            @return true if (and only if) the specified group parameters are acceptable
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsSrpGroupVerifier.#ctor">
            Accept only the group parameters specified in RFC 5054 Appendix A.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DefaultTlsSrpGroupVerifier.#ctor(System.Collections.IList)">
            Specify a custom set of acceptable group parameters.
            
            @param groups a {@link Vector} of acceptable {@link SRP6GroupParameters}
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.DeferredHash">
            Buffers input until the hash algorithm is determined.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DigitallySigned.Encode(System.IO.Stream)">
            Encode this {@link DigitallySigned} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DigitallySigned.Parse(Org.BouncyCastle.Crypto.Tls.TlsContext,System.IO.Stream)">
            Parse a {@link DigitallySigned} from a {@link Stream}.
            
            @param context
                       the {@link TlsContext} of the current connection.
            @param input
                       the {@link Stream} to parse from.
            @return a {@link DigitallySigned} object.
            @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.DigitallySigned.Algorithm">
            @return a {@link SignatureAndHashAlgorithm} (or null before TLS 1.2).
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsProtocol.ProcessFinished(System.Byte[],System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsProtocol.ApplyMaxFragmentLengthExtension(Org.BouncyCastle.Crypto.Tls.DtlsRecordLayer,System.Int16)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsProtocol.EvaluateMaxFragmentLengthExtension(System.Boolean,System.Collections.IDictionary,System.Collections.IDictionary,System.Byte)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsProtocol.GenerateCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsProtocol.GenerateSupplementalData(System.Collections.IList)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsProtocol.ValidateSelectedCipherSuite(System.Int32,System.Byte)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsHandshakeRetransmit.ReceivedHandshakeRecord(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsRecordLayer.Send(System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsReliableHandshake.CheckInboundFlight">
            Check that there are no "extra" messages left in the current inbound flight
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.DtlsReplayWindow">
            RFC 4347 4.1.2.5 Anti-replay
            <p/>
            Support fast rejection of duplicate records by maintaining a sliding receive window
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsReplayWindow.ShouldDiscard(System.Int64)">
             Check whether a received record with the given sequence number should be rejected as a duplicate.
            
             @param seq the 48-bit DTLSPlainText.sequence_number field of a received record.
             @return true if the record should be discarded without further processing.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsReplayWindow.ReportAuthenticated(System.Int64)">
             Report that a received record with the given sequence number passed authentication checks.
            
             @param seq the 48-bit DTLSPlainText.sequence_number field of an authenticated record.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.DtlsReplayWindow.Reset">
            When a new epoch begins, sequence numbers begin again at 0
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.ECBasisType">
            <summary>RFC 4492 5.4. (Errata ID: 2389)</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.ECCurveType">
            <summary>
            RFC 4492 5.4
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.ECCurveType.explicit_prime">
            Indicates the elliptic curve domain parameters are conveyed verbosely, and the
            underlying finite field is a prime field.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.ECCurveType.explicit_char2">
            Indicates the elliptic curve domain parameters are conveyed verbosely, and the
            underlying finite field is a characteristic-2 field.
        </member>
        <member name="F:Org.BouncyCastle.Crypto.Tls.ECCurveType.named_curve">
            Indicates that a named curve is used. This option SHOULD be used when applicable.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.ECPointFormat">
            <summary>
            RFC 4492 5.1.2
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.EncryptionAlgorithm">
            <summary>RFC 2246</summary>
            <remarks>
            Note that the values here are implementation-specific and arbitrary. It is recommended not to
            depend on the particular values (e.g. serialization).
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.ExporterLabel">
            <summary>RFC 5705</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.HashAlgorithm">
            <summary>RFC 5246 7.4.1.4.1</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.HeartbeatExtension.Encode(System.IO.Stream)">
            Encode this {@link HeartbeatExtension} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.HeartbeatExtension.Parse(System.IO.Stream)">
            Parse a {@link HeartbeatExtension} from a {@link Stream}.
            
            @param input
                       the {@link Stream} to parse from.
            @return a {@link HeartbeatExtension} object.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.HeartbeatMessage.Encode(Org.BouncyCastle.Crypto.Tls.TlsContext,System.IO.Stream)">
            Encode this {@link HeartbeatMessage} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.HeartbeatMessage.Parse(System.IO.Stream)">
            Parse a {@link HeartbeatMessage} from a {@link Stream}.
            
            @param input
                       the {@link Stream} to parse from.
            @return a {@link HeartbeatMessage} object.
            @throws IOException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.KeyExchangeAlgorithm">
            <summary>RFC 2246</summary>
            <remarks>
            Note that the values here are implementation-specific and arbitrary. It is recommended not to
            depend on the particular values (e.g. serialization).
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.MacAlgorithm">
            <summary>RFC 2246</summary>
            <remarks>
            Note that the values here are implementation-specific and arbitrary. It is recommended not to
            depend on the particular values (e.g. serialization).
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.NamedCurve">
            <summary>
            RFC 4492 5.1.1
            The named curves defined here are those specified in SEC 2 [13]. Note that many of
            these curves are also recommended in ANSI X9.62 [7] and FIPS 186-2 [11]. Values 0xFE00
            through 0xFEFF are reserved for private use. Values 0xFF01 and 0xFF02 indicate that the
            client supports arbitrary prime and characteristic-2 curves, respectively (the curve
            parameters must be encoded explicitly in ECParameters).
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Encode(System.IO.Stream)">
             Encode this {@link NewSessionTicket} to a {@link Stream}.
            
             @param output the {@link Stream} to encode to.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.NewSessionTicket.Parse(System.IO.Stream)">
             Parse a {@link NewSessionTicket} from a {@link Stream}.
            
             @param input the {@link Stream} to parse from.
             @return a {@link NewSessionTicket} object.
             @throws IOException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.OcspStatusRequest">
            RFC 3546 3.6
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.OcspStatusRequest.#ctor(System.Collections.IList,Org.BouncyCastle.Asn1.X509.X509Extensions)">
            @param responderIDList
                       an {@link IList} of {@link ResponderID}, specifying the list of trusted OCSP
                       responders. An empty list has the special meaning that the responders are
                       implicitly known to the server - e.g., by prior arrangement.
            @param requestExtensions
                       OCSP request extensions. A null value means that there are no extensions.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.OcspStatusRequest.Encode(System.IO.Stream)">
            Encode this {@link OcspStatusRequest} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.OcspStatusRequest.Parse(System.IO.Stream)">
            Parse a {@link OcspStatusRequest} from a {@link Stream}.
            
            @param input
                       the {@link Stream} to parse from.
            @return an {@link OcspStatusRequest} object.
            @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.OcspStatusRequest.ResponderIDList">
            @return an {@link IList} of {@link ResponderID}
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.OcspStatusRequest.RequestExtensions">
            @return OCSP request extensions
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.PrfAlgorithm">
            <summary>RFC 5246</summary>
            <remarks>
            Note that the values here are implementation-specific and arbitrary. It is recommended not to
            depend on the particular values (e.g. serialization).
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ProtocolVersion.Get(System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.RecordStream">
            <summary>An implementation of the TLS 1.0/1.1/1.2 record layer, allowing downgrade to SSLv3.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.RecordStream.SetRestrictReadVersion(System.Boolean)">
            RFC 5246 E.1. "Earlier versions of the TLS specification were not fully clear on what the
            record layer version number (TLSPlaintext.version) should contain when sending ClientHello
            (i.e., before it is known which version of the protocol will be employed). Thus, TLS servers
            compliant with this specification MUST accept any value {03,XX} as the record layer version
            number for ClientHello."
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.SecurityParameters.Entity">
            @return {@link ConnectionEnd}
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.SecurityParameters.CipherSuite">
            @return {@link CipherSuite}
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.SecurityParameters.CompressionAlgorithm">
            @return {@link CompressionMethod}
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.SecurityParameters.PrfAlgorithm">
            @return {@link PRFAlgorithm}
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ServerName.Encode(System.IO.Stream)">
            Encode this {@link ServerName} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ServerName.Parse(System.IO.Stream)">
            Parse a {@link ServerName} from a {@link Stream}.
            
            @param input
                       the {@link Stream} to parse from.
            @return a {@link ServerName} object.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ServerNameList.#ctor(System.Collections.IList)">
            @param serverNameList an {@link IList} of {@link ServerName}.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ServerNameList.Encode(System.IO.Stream)">
            Encode this {@link ServerNameList} to a {@link Stream}.
            
            @param output
                       the {@link Stream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ServerNameList.Parse(System.IO.Stream)">
            Parse a {@link ServerNameList} from a {@link Stream}.
            
            @param input
                       the {@link Stream} to parse from.
            @return a {@link ServerNameList} object.
            @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.ServerNameList.ServerNames">
            @return an {@link IList} of {@link ServerName}.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAuthentication.NotifyServerCertificate(Org.BouncyCastle.Crypto.Tls.Certificate)">
            <summary>
            Called by the protocol handler to report the server certificate.
            </summary>
            <remarks>
            This method is responsible for certificate verification and validation
            </remarks>
            <param name="serverCertificate">The server <see cref="T:Org.BouncyCastle.Crypto.Tls.Certificate"/> received</param>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAuthentication.GetClientCredentials(Org.BouncyCastle.Crypto.Tls.CertificateRequest)">
            <summary>
            Return client credentials in response to server's certificate request
            </summary>
            <param name="certificateRequest">
            A <see cref="T:Org.BouncyCastle.Crypto.Tls.CertificateRequest"/> containing server certificate request details
            </param>
            <returns>
            A <see cref="T:Org.BouncyCastle.Crypto.Tls.TlsCredentials"/> to be used for client authentication
            (or <c>null</c> for no client authentication)
            </returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ServerSrpParams.Encode(System.IO.Stream)">
            Encode this {@link ServerSRPParams} to an {@link OutputStream}.
            
            @param output
                       the {@link OutputStream} to encode to.
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.ServerSrpParams.Parse(System.IO.Stream)">
            Parse a {@link ServerSRPParams} from an {@link InputStream}.
            
            @param input
                       the {@link InputStream} to parse from.
            @return a {@link ServerSRPParams} object.
            @throws IOException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.SignatureAlgorithm">
            RFC 5246 7.4.1.4.1 (in RFC 2246, there were no specific values assigned)
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm">
            RFC 5246 7.4.1.4.1
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.#ctor(System.Byte,System.Byte)">
            @param hash      {@link HashAlgorithm}
            @param signature {@link SignatureAlgorithm}
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Encode(System.IO.Stream)">
             Encode this {@link SignatureAndHashAlgorithm} to a {@link Stream}.
            
             @param output the {@link Stream} to encode to.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Parse(System.IO.Stream)">
             Parse a {@link SignatureAndHashAlgorithm} from a {@link Stream}.
            
             @param input the {@link Stream} to parse from.
             @return a {@link SignatureAndHashAlgorithm} object.
             @throws IOException
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Hash">
            @return {@link HashAlgorithm}
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.SignatureAndHashAlgorithm.Signature">
            @return {@link SignatureAlgorithm}
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.SimulatedTlsSrpIdentityManager">
            An implementation of {@link TlsSRPIdentityManager} that simulates the existence of "unknown" identities
            to obscure the fact that there is no verifier for them. 
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsSrpIdentityManager.GetLoginParameters(System.Byte[])">
            Lookup the {@link TlsSRPLoginParameters} corresponding to the specified identity.
            
            NOTE: To avoid "identity probing", unknown identities SHOULD be handled as recommended in RFC
            5054 2.5.1.3. {@link SimulatedTlsSRPIdentityManager} is provided for this purpose.
            
            @param identity
                       the SRP identity sent by the connecting client
            @return the {@link TlsSRPLoginParameters} for the specified identity, or else 'simulated'
                    parameters if the identity is not recognized. A null value is also allowed, but not
                    recommended.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.SimulatedTlsSrpIdentityManager.GetRfc5054Default(Org.BouncyCastle.Crypto.Parameters.Srp6GroupParameters,System.Byte[])">
             Create a {@link SimulatedTlsSRPIdentityManager} that implements the algorithm from RFC 5054 2.5.1.3
            
             @param group the {@link SRP6GroupParameters} defining the group that SRP is operating in
             @param seedKey the secret "seed key" referred to in RFC 5054 2.5.1.3
             @return an instance of {@link SimulatedTlsSRPIdentityManager}
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.Ssl3Mac">
            HMAC implementation based on original internet draft for HMAC (RFC 2104)
            
            The difference is that padding is concatentated versus XORed with the key
            
            H(K + opad, H(K + ipad, text))
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Ssl3Mac.#ctor(Org.BouncyCastle.Crypto.IDigest)">
            Base constructor for one of the standard digest algorithms that the byteLength of
            the algorithm is know for. Behaviour is undefined for digests other than MD5 or SHA1.
            
            @param digest the digest.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.Ssl3Mac.Reset">
            Reset the mac generator.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.SupplementalDataType">
            <summary>RFC 4680</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAeadCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher,Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAeadCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher,Org.BouncyCastle.Crypto.Modes.IAeadBlockCipher,System.Int32,System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAeadCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAeadCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsAeadCipher.GetAdditionalData(System.Int64,System.Byte,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher">
            <summary>
            A generic TLS 1.0-1.2 / SSLv3 block cipher. This can be used for AES or 3DES for example.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IBlockCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsBlockCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ProcessChangeCipherSpec(System.Byte[],System.Int32,System.Int32)">
             This method is called, when a change cipher spec message is received.
            
             @throws IOException If the message has an invalid content or the handshake is not in the correct
             state.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadApplicationData(System.Byte[],System.Int32,System.Int32)">
             Read data from the network. The method will return immediately, if there is still some data
             left in the buffer, or block until some application data has been read from the network.
            
             @param buf    The buffer where the data will be copied to.
             @param offset The position where the data will be placed in the buffer.
             @param len    The maximum number of bytes to read.
             @return The number of bytes read.
             @throws IOException If something goes wrong during reading data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.WriteData(System.Byte[],System.Int32,System.Int32)">
             Send some application data to the remote system.
             <p/>
             The method will handle fragmentation internally.
            
             @param buf    The buffer with the data.
             @param offset The position in the buffer where the data is placed.
             @param len    The length of the data.
             @throws IOException If something goes wrong during sending.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.CloseInput">
            Should be called in non-blocking mode when the input data reaches EOF.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[])">
            Equivalent to <code>OfferInput(input, 0, input.length)</code>
            @see TlsProtocol#OfferInput(byte[], int, int)
            @param input The input buffer to offer
            @throws IOException If an error occurs while decrypting or processing a record
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferInput(System.Byte[],System.Int32,System.Int32)">
            Offer input from an arbitrary source. Only allowed in non-blocking mode.<br/>
            <br/>
            This method will decrypt and process all records that are fully available.
            If only part of a record is available, the buffer will be retained until the
            remainder of the record is offered.<br/>
            <br/>
            If any records containing application data were processed, the decrypted data
            can be obtained using {@link #readInput(byte[], int, int)}. If any records
            containing protocol data were processed, a response may have been generated.
            You should always check to see if there is any available output after calling
            this method by calling {@link #getAvailableOutputBytes()}.
            @param input The input buffer to offer
            @param inputOff The offset within the input buffer that input begins
            @param inputLen The number of bytes of input being offered
            @throws IOException If an error occurs while decrypting or processing a record
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableInputBytes">
            Gets the amount of received application data. A call to {@link #readInput(byte[], int, int)}
            is guaranteed to be able to return at least this much data.<br/>
            <br/>
            Only allowed in non-blocking mode.
            @return The number of bytes of available application data
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadInput(System.Byte[],System.Int32,System.Int32)">
            Retrieves received application data. Use {@link #getAvailableInputBytes()} to check
            how much application data is currently available. This method functions similarly to
            {@link InputStream#read(byte[], int, int)}, except that it never blocks. If no data
            is available, nothing will be copied and zero will be returned.<br/>
            <br/>
            Only allowed in non-blocking mode.
            @param buffer The buffer to hold the application data
            @param offset The start offset in the buffer at which the data is written
            @param length The maximum number of bytes to read
            @return The total number of bytes copied to the buffer. May be less than the
                     length specified if the length was greater than the amount of available data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.OfferOutput(System.Byte[],System.Int32,System.Int32)">
            Offer output from an arbitrary source. Only allowed in non-blocking mode.<br/>
            <br/>
            After this method returns, the specified section of the buffer will have been
            processed. Use {@link #readOutput(byte[], int, int)} to get the bytes to
            transmit to the other peer.<br/>
            <br/>
            This method must not be called until after the handshake is complete! Attempting
            to call it before the handshake is complete will result in an exception.
            @param buffer The buffer containing application data to encrypt
            @param offset The offset at which to begin reading data
            @param length The number of bytes of data to read
            @throws IOException If an error occurs encrypting the data, or the handshake is not complete
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetAvailableOutputBytes">
            Gets the amount of encrypted data available to be sent. A call to
            {@link #readOutput(byte[], int, int)} is guaranteed to be able to return at
            least this much data.<br/>
            <br/>
            Only allowed in non-blocking mode.
            @return The number of bytes of available encrypted data
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.ReadOutput(System.Byte[],System.Int32,System.Int32)">
            Retrieves encrypted data to be sent. Use {@link #getAvailableOutputBytes()} to check
            how much encrypted data is currently available. This method functions similarly to
            {@link InputStream#read(byte[], int, int)}, except that it never blocks. If no data
            is available, nothing will be copied and zero will be returned.<br/>
            <br/>
            Only allowed in non-blocking mode.
            @param buffer The buffer to hold the encrypted data
            @param offset The start offset in the buffer at which the data is written
            @param length The maximum number of bytes to read
            @return The total number of bytes copied to the buffer. May be less than the
                     length specified if the length was greater than the amount of available data.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.Close">
             Closes this connection.
            
             @throws IOException If something goes wrong during closing.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.AssertEmpty(System.IO.MemoryStream)">
             Make sure the InputStream 'buf' now empty. Fail otherwise.
            
             @param buf The InputStream to check.
             @throws IOException If 'buf' is not empty.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocol.GetCurrentPrfHash(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Tls.TlsHandshakeHash,System.Byte[])">
            'sender' only relevant to SSLv3
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.TlsProtocol.Stream">
            <summary>The secure bidirectional stream for this connection</summary>
            <remarks>Only allowed in blocking mode.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(System.IO.Stream,Org.BouncyCastle.Security.SecureRandom)">
            Constructor for blocking mode.
            @param stream The bi-directional stream of data to/from the server
            @param secureRandom Random number generator for various cryptographic functions
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(System.IO.Stream,System.IO.Stream,Org.BouncyCastle.Security.SecureRandom)">
            Constructor for blocking mode.
            @param input The stream of data from the server
            @param output The stream of data to the server
            @param secureRandom Random number generator for various cryptographic functions
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            Constructor for non-blocking mode.<br/>
            <br/>
            When data is received, use {@link #offerInput(java.nio.ByteBuffer)} to
            provide the received ciphertext, then use
            {@link #readInput(byte[], int, int)} to read the corresponding cleartext.<br/>
            <br/>
            Similarly, when data needs to be sent, use
            {@link #offerOutput(byte[], int, int)} to provide the cleartext, then use
            {@link #readOutput(byte[], int, int)} to get the corresponding
            ciphertext.
            
            @param secureRandom
                       Random number generator for various cryptographic functions
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsClientProtocol.Connect(Org.BouncyCastle.Crypto.Tls.TlsClient)">
             Initiates a TLS handshake in the role of client.<br/>
             <br/>
             In blocking mode, this will not return until the handshake is complete.
             In non-blocking mode, use {@link TlsPeer#NotifyHandshakeComplete()} to
             receive a callback when the handshake is complete.
            
             @param tlsClient The {@link TlsClient} to use for the handshake.
             @throws IOException If in blocking mode and handshake was not successful.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsDHKeyExchange">
            <summary>(D)TLS DH key exchange.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsECDheKeyExchange">
            <summary>(D)TLS ECDHE key exchange (see RFC 4492).</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsECDHKeyExchange">
            <summary>(D)TLS ECDH key exchange (see RFC 4492).</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddClientCertificateTypeExtensionClient(System.Collections.IDictionary,System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddClientCertificateTypeExtensionServer(System.Collections.IDictionary,System.Byte)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddHeartbeatExtension(System.Collections.IDictionary,Org.BouncyCastle.Crypto.Tls.HeartbeatExtension)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddMaxFragmentLengthExtension(System.Collections.IDictionary,System.Byte)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddPaddingExtension(System.Collections.IDictionary,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddServerCertificateTypeExtensionClient(System.Collections.IDictionary,System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddServerCertificateTypeExtensionServer(System.Collections.IDictionary,System.Byte)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddServerNameExtension(System.Collections.IDictionary,Org.BouncyCastle.Crypto.Tls.ServerNameList)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.AddStatusRequestExtension(System.Collections.IDictionary,Org.BouncyCastle.Crypto.Tls.CertificateStatusRequest)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetClientCertificateTypeExtensionClient(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetClientCertificateTypeExtensionServer(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetHeartbeatExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetMaxFragmentLengthExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetPaddingExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetServerCertificateTypeExtensionClient(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetServerCertificateTypeExtensionServer(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetServerNameExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.GetStatusRequestExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.HasEncryptThenMacExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.HasExtendedMasterSecretExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.HasTruncatedHMacExtension(System.Collections.IDictionary)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.CreateCertificateTypeExtensionClient(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.CreateCertificateTypeExtensionServer(System.Byte)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.CreateHeartbeatExtension(Org.BouncyCastle.Crypto.Tls.HeartbeatExtension)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.CreateMaxFragmentLengthExtension(System.Byte)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.CreatePaddingExtension(System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.CreateServerNameExtension(Org.BouncyCastle.Crypto.Tls.ServerNameList)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.CreateStatusRequestExtension(Org.BouncyCastle.Crypto.Tls.CertificateStatusRequest)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadEmptyExtensionData(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadCertificateTypeExtensionClient(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadCertificateTypeExtensionServer(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadEncryptThenMacExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadExtendedMasterSecretExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadHeartbeatExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadMaxFragmentLengthExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadPaddingExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadServerNameExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadStatusRequestExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsExtensionsUtilities.ReadTruncatedHMacExtension(System.Byte[])">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsMac">
            <summary>
            A generic TLS MAC implementation, acting as an HMAC based on some underlying Digest.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsMac.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IDigest,System.Byte[],System.Int32,System.Int32)">
             Generate a new instance of an TlsMac.
            
             @param context the TLS client context
             @param digest  The digest to use.
             @param key     A byte-array where the key for this MAC is located.
             @param keyOff  The number of bytes to skip, before the key starts in the buffer.
             @param keyLen  The length of the key.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsMac.CalculateMac(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
             Calculate the MAC for some given data.
            
             @param type    The message type of the message.
             @param message A byte-buffer containing the message.
             @param offset  The number of bytes to skip, before the message starts.
             @param length  The length of the message.
             @return A new byte-buffer containing the MAC value.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.TlsMac.MacSecret">
            @return the MAC write secret
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.TlsMac.Size">
            @return The output length of this MAC.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsNoCloseNotifyException">
            <summary>
            This exception will be thrown(only) when the connection is closed by the peer without sending a
            <code cref="F:Org.BouncyCastle.Crypto.Tls.AlertDescription.close_notify">close_notify</code> warning alert.
            </summary>
            <remarks>
            If this happens, the TLS protocol cannot rule out truncation of the connection data (potentially
            malicious). It may be possible to check for truncation via some property of a higher level protocol
            built upon TLS, e.g.the Content-Length header for HTTPS.
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsNullCipher">
            <summary>
            A NULL CipherSuite, with optional MAC.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsNullCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsNullCipher.EncodePlaintext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsNullCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsProtocolHandler.#ctor(System.IO.Stream,System.IO.Stream,Org.BouncyCastle.Security.SecureRandom)">
            <remarks>Both streams can be the same object</remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsPskKeyExchange">
            <summary>(D)TLS PSK key exchange (RFC 4279).</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsRsaKeyExchange">
            <summary>(D)TLS and SSLv3 RSA key exchange.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsRsaUtilities.GenerateEncryptedPreMasterSecret(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.Parameters.RsaKeyParameters,System.IO.Stream)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServerProtocol.#ctor(System.IO.Stream,Org.BouncyCastle.Security.SecureRandom)">
            Constructor for blocking mode.
            @param stream The bi-directional stream of data to/from the client
            @param output The stream of data to the client
            @param secureRandom Random number generator for various cryptographic functions
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServerProtocol.#ctor(System.IO.Stream,System.IO.Stream,Org.BouncyCastle.Security.SecureRandom)">
            Constructor for blocking mode.
            @param input The stream of data from the client
            @param output The stream of data to the client
            @param secureRandom Random number generator for various cryptographic functions
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServerProtocol.#ctor(Org.BouncyCastle.Security.SecureRandom)">
            Constructor for non-blocking mode.<br/>
            <br/>
            When data is received, use {@link #offerInput(java.nio.ByteBuffer)} to
            provide the received ciphertext, then use
            {@link #readInput(byte[], int, int)} to read the corresponding cleartext.<br/>
            <br/>
            Similarly, when data needs to be sent, use
            {@link #offerOutput(byte[], int, int)} to provide the cleartext, then use
            {@link #readOutput(byte[], int, int)} to get the corresponding
            ciphertext.
            
            @param secureRandom
                       Random number generator for various cryptographic functions
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsServerProtocol.Accept(Org.BouncyCastle.Crypto.Tls.TlsServer)">
             Receives a TLS handshake in the role of server.<br/>
             <br/>
             In blocking mode, this will not return until the handshake is complete.
             In non-blocking mode, use {@link TlsPeer#notifyHandshakeComplete()} to
             receive a callback when the handshake is complete.
            
             @param tlsServer
             @throws IOException If in blocking mode and handshake was not successful.
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsSrpKeyExchange">
            <summary>(D)TLS SRP key exchange (RFC 5054).</summary>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsSRTPUtils">
            RFC 5764 DTLS Extension to Establish Keys for SRTP.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsStreamCipher.#ctor(Org.BouncyCastle.Crypto.Tls.TlsContext,Org.BouncyCastle.Crypto.IStreamCipher,Org.BouncyCastle.Crypto.IStreamCipher,Org.BouncyCastle.Crypto.IDigest,Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Boolean)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsStreamCipher.DecodeCiphertext(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsStreamCipher.CheckMac(System.Int64,System.Byte,System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.TlsUtilities">
            <remarks>Some helper functions for MicroTLS.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsUtilities.AddSignatureAlgorithmsExtension(System.Collections.IDictionary,System.Collections.IList)">
             Add a 'signature_algorithms' extension to existing extensions.
            
             @param extensions                   A {@link Hashtable} to add the extension to.
             @param supportedSignatureAlgorithms {@link Vector} containing at least 1 {@link SignatureAndHashAlgorithm}.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsUtilities.GetSignatureAlgorithmsExtension(System.Collections.IDictionary)">
             Get a 'signature_algorithms' extension from extensions.
            
             @param extensions A {@link Hashtable} to get the extension from, if it is present.
             @return A {@link Vector} containing at least 1 {@link SignatureAndHashAlgorithm}, or null.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsUtilities.CreateSignatureAlgorithmsExtension(System.Collections.IList)">
             Create a 'signature_algorithms' extension value.
            
             @param supportedSignatureAlgorithms A {@link Vector} containing at least 1 {@link SignatureAndHashAlgorithm}.
             @return A byte array suitable for use as an extension value.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.TlsUtilities.ReadSignatureAlgorithmsExtension(System.Byte[])">
             Read 'signature_algorithms' extension data.
            
             @param extensionData The extension data.
             @return A {@link Vector} containing at least 1 {@link SignatureAndHashAlgorithm}.
             @throws IOException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.UrlAndHash">
            RFC 6066 5.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.UrlAndHash.Encode(System.IO.Stream)">
             Encode this {@link UrlAndHash} to a {@link Stream}.
            
             @param output the {@link Stream} to encode to.
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.UrlAndHash.Parse(Org.BouncyCastle.Crypto.Tls.TlsContext,System.IO.Stream)">
            Parse a {@link UrlAndHash} from a {@link Stream}.
            
            @param context
                       the {@link TlsContext} of the current connection.
            @param input
                       the {@link Stream} to parse from.
            @return a {@link UrlAndHash} object.
            @throws IOException
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.UserMappingType">
            <remarks>RFC 4681</remarks>
        </member>
        <member name="T:Org.BouncyCastle.Crypto.Tls.UseSrtpData">
            RFC 5764 4.1.1
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Tls.UseSrtpData.#ctor(System.Int32[],System.Byte[])">
            @param protectionProfiles see {@link SrtpProtectionProfile} for valid constants.
            @param mki                valid lengths from 0 to 255.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.UseSrtpData.ProtectionProfiles">
            @return see {@link SrtpProtectionProfile} for valid constants.
        </member>
        <member name="P:Org.BouncyCastle.Crypto.Tls.UseSrtpData.Mki">
            @return valid lengths from 0 to 255.
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Utilities.AlgorithmIdentifierFactory.GenerateEncryptionAlgID(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Int32,Org.BouncyCastle.Security.SecureRandom)">
             Create an AlgorithmIdentifier for the passed in encryption algorithm.
            
             @param encryptionOID OID for the encryption algorithm
             @param keySize key size in bits (-1 if unknown)
             @param random SecureRandom to use for parameter generation.
             @return a full AlgorithmIdentifier including parameters
             @throws IllegalArgumentException if encryptionOID cannot be matched
        </member>
        <member name="M:Org.BouncyCastle.Crypto.Utilities.CipherKeyGeneratorFactory.CreateKeyGenerator(Org.BouncyCastle.Asn1.DerObjectIdentifier,Org.BouncyCastle.Security.SecureRandom)">
             Create a key generator for the passed in Object Identifier.
            
             @param algorithm the Object Identifier indicating the algorithn the generator is for.
             @param random a source of random to initialise the generator with.
             @return an initialised CipherKeyGenerator.
             @throws IllegalArgumentException if the algorithm cannot be identified.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.AddMagnitudes(System.Int32[],System.Int32[])">
            return a = a + b - b preserved.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.CompareTo(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            unsigned comparison on two arrays - note the arrays may
            start with leading zeros.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Divide(System.Int32[],System.Int32[])">
            return z = x / y - done in place (z value preserved, x contains the
            remainder)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.IsProbablePrime(System.Int32)">
            return whether or not a BigInteger is probably prime with a
            probability of 1 - (1/2)**certainty.
            <p>From Knuth Vol 2, pg 395.</p>
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ExtEuclid(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger@)">
             Calculate the numbers u1, u2, and u3 such that:
            
             u1 * a + u2 * b = u3
            
             where u3 is the greatest common divider of a and b.
             a and b using the extended Euclid algorithm (refer p. 323
             of The Art of Computer Programming vol 2, 2nd ed).
             This also seems to have the side effect of calculating
             some form of multiplicative inverse.
            
             @param a    First number to calculate gcd for
             @param b    Second number to calculate gcd for
             @param u1Out      the return object for the u1 value
             @return     The greatest common divisor of a and b
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Square(System.Int32[],System.Int32[])">
            return w with w = x * x - w is assumed to have enough space.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Multiply(System.Int32[],System.Int32[],System.Int32[])">
            return x with x = y * z - x is assumed to have enough space.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.GetMQuote">
            Calculate mQuote = -m^(-1) mod b with b = 2^32 (32 = word size)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.MultiplyMonty(System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.UInt32,System.Boolean)">
            Montgomery multiplication: a = x * y * R^(-1) mod m
            <br/>
            Based algorithm 14.36 of Handbook of Applied Cryptography.
            <br/>
            <li> m, x, y should have length n </li>
            <li> a should have length (n + 1) </li>
            <li> b = 2^32, R = b^n </li>
            <br/>
            The result is put in x
            <br/>
            NOTE: the indices of x, y, m, a different in HAC and in Java
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Remainder(System.Int32[],System.Int32[])">
            return x = x % y - done in place (y value preserved)
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftLeft(System.Int32[],System.Int32)">
            do a left shift - this returns a new array.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftRightInPlace(System.Int32,System.Int32[],System.Int32)">
            do a right shift - this does it in place.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.ShiftRightOneInPlace(System.Int32,System.Int32[])">
            do a right shift by one - this does it in place.
        </member>
        <member name="M:Org.BouncyCastle.Math.BigInteger.Subtract(System.Int32,System.Int32[],System.Int32,System.Int32[])">
            returns x = x - y - we assume x is >= y
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal">
            Class representing a simple version of a big decimal. A
            <code>SimpleBigDecimal</code> is basically a
            {@link java.math.BigInteger BigInteger} with a few digits on the right of
            the decimal point. The number of (binary) digits on the right of the decimal
            point is called the <code>scale</code> of the <code>SimpleBigDecimal</code>.
            Unlike in {@link java.math.BigDecimal BigDecimal}, the scale is not adjusted
            automatically, but must be set manually. All <code>SimpleBigDecimal</code>s
            taking part in the same arithmetic operation must have equal scale. The
            result of a multiplication of two <code>SimpleBigDecimal</code>s returns a
            <code>SimpleBigDecimal</code> with double scale.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal.GetInstance(Org.BouncyCastle.Math.BigInteger,System.Int32)">
            Returns a <code>SimpleBigDecimal</code> representing the same numerical
            value as <code>value</code>.
            @param value The value of the <code>SimpleBigDecimal</code> to be
            created. 
            @param scale The scale of the <code>SimpleBigDecimal</code> to be
            created. 
            @return The such created <code>SimpleBigDecimal</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal.#ctor(Org.BouncyCastle.Math.BigInteger,System.Int32)">
            Constructor for <code>SimpleBigDecimal</code>. The value of the
            constructed <code>SimpleBigDecimal</code> Equals <code>bigInt / 
            2<sup>scale</sup></code>.
            @param bigInt The <code>bigInt</code> value parameter.
            @param scale The scale of the constructed <code>SimpleBigDecimal</code>.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Abc.Tnaf">
            Class holding methods for point multiplication based on the window
            &#964;-adic nonadjacent form (WTNAF). The algorithms are based on the
            paper "Improved Algorithms for Arithmetic on Anomalous Binary Curves"
            by Jerome A. Solinas. The paper first appeared in the Proceedings of
            Crypto 1997.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.Tnaf.Width">
            The window width of WTNAF. The standard value of 4 is slightly less
            than optimal for running time, but keeps space requirements for
            precomputation low. For typical curves, a value of 5 or 6 results in
            a better running time. When changing this value, the
            <code>&#945;<sub>u</sub></code>'s must be computed differently, see
            e.g. "Guide to Elliptic Curve Cryptography", Darrel Hankerson,
            Alfred Menezes, Scott Vanstone, Springer-Verlag New York Inc., 2004,
            p. 121-122
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.Tnaf.Pow2Width">
            2<sup>4</sup>
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.Tnaf.Alpha0">
            The <code>&#945;<sub>u</sub></code>'s for <code>a=0</code> as an array
            of <code>ZTauElement</code>s.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.Tnaf.Alpha0Tnaf">
            The <code>&#945;<sub>u</sub></code>'s for <code>a=0</code> as an array
            of TNAFs.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.Tnaf.Alpha1">
            The <code>&#945;<sub>u</sub></code>'s for <code>a=1</code> as an array
            of <code>ZTauElement</code>s.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.Tnaf.Alpha1Tnaf">
            The <code>&#945;<sub>u</sub></code>'s for <code>a=1</code> as an array
            of TNAFs.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.Norm(System.SByte,Org.BouncyCastle.Math.EC.Abc.ZTauElement)">
            Computes the norm of an element <code>&#955;</code> of
            <code><b>Z</b>[&#964;]</code>.
            @param mu The parameter <code>&#956;</code> of the elliptic curve.
            @param lambda The element <code>&#955;</code> of
            <code><b>Z</b>[&#964;]</code>.
            @return The norm of <code>&#955;</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.Norm(System.SByte,Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal,Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal)">
            Computes the norm of an element <code>&#955;</code> of
            <code><b>R</b>[&#964;]</code>, where <code>&#955; = u + v&#964;</code>
            and <code>u</code> and <code>u</code> are real numbers (elements of
            <code><b>R</b></code>). 
            @param mu The parameter <code>&#956;</code> of the elliptic curve.
            @param u The real part of the element <code>&#955;</code> of
            <code><b>R</b>[&#964;]</code>.
            @param v The <code>&#964;</code>-adic part of the element
            <code>&#955;</code> of <code><b>R</b>[&#964;]</code>.
            @return The norm of <code>&#955;</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.Round(Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal,Org.BouncyCastle.Math.EC.Abc.SimpleBigDecimal,System.SByte)">
            Rounds an element <code>&#955;</code> of <code><b>R</b>[&#964;]</code>
            to an element of <code><b>Z</b>[&#964;]</code>, such that their difference
            has minimal norm. <code>&#955;</code> is given as
            <code>&#955; = &#955;<sub>0</sub> + &#955;<sub>1</sub>&#964;</code>.
            @param lambda0 The component <code>&#955;<sub>0</sub></code>.
            @param lambda1 The component <code>&#955;<sub>1</sub></code>.
            @param mu The parameter <code>&#956;</code> of the elliptic curve. Must
            equal 1 or -1.
            @return The rounded element of <code><b>Z</b>[&#964;]</code>.
            @throws ArgumentException if <code>lambda0</code> and
            <code>lambda1</code> do not have same scale.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.ApproximateDivisionByN(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,System.SByte,System.Int32,System.Int32)">
            Approximate division by <code>n</code>. For an integer
            <code>k</code>, the value <code>&#955; = s k / n</code> is
            computed to <code>c</code> bits of accuracy.
            @param k The parameter <code>k</code>.
            @param s The curve parameter <code>s<sub>0</sub></code> or
            <code>s<sub>1</sub></code>.
            @param vm The Lucas Sequence element <code>V<sub>m</sub></code>.
            @param a The parameter <code>a</code> of the elliptic curve.
            @param m The bit length of the finite field
            <code><b>F</b><sub>m</sub></code>.
            @param c The number of bits of accuracy, i.e. the scale of the returned
            <code>SimpleBigDecimal</code>.
            @return The value <code>&#955; = s k / n</code> computed to
            <code>c</code> bits of accuracy.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.TauAdicNaf(System.SByte,Org.BouncyCastle.Math.EC.Abc.ZTauElement)">
            Computes the <code>&#964;</code>-adic NAF (non-adjacent form) of an
            element <code>&#955;</code> of <code><b>Z</b>[&#964;]</code>.
            @param mu The parameter <code>&#956;</code> of the elliptic curve.
            @param lambda The element <code>&#955;</code> of
            <code><b>Z</b>[&#964;]</code>.
            @return The <code>&#964;</code>-adic NAF of <code>&#955;</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.Tau(Org.BouncyCastle.Math.EC.AbstractF2mPoint)">
            Applies the operation <code>&#964;()</code> to an
            <code>AbstractF2mPoint</code>. 
            @param p The AbstractF2mPoint to which <code>&#964;()</code> is applied.
            @return <code>&#964;(p)</code>
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.GetMu(Org.BouncyCastle.Math.EC.AbstractF2mCurve)">
            Returns the parameter <code>&#956;</code> of the elliptic curve.
            @param curve The elliptic curve from which to obtain <code>&#956;</code>.
            The curve must be a Koblitz curve, i.e. <code>a</code> Equals
            <code>0</code> or <code>1</code> and <code>b</code> Equals
            <code>1</code>. 
            @return <code>&#956;</code> of the elliptic curve.
            @throws ArgumentException if the given ECCurve is not a Koblitz
            curve.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.GetLucas(System.SByte,System.Int32,System.Boolean)">
            Calculates the Lucas Sequence elements <code>U<sub>k-1</sub></code> and
            <code>U<sub>k</sub></code> or <code>V<sub>k-1</sub></code> and
            <code>V<sub>k</sub></code>.
            @param mu The parameter <code>&#956;</code> of the elliptic curve.
            @param k The index of the second element of the Lucas Sequence to be
            returned.
            @param doV If set to true, computes <code>V<sub>k-1</sub></code> and
            <code>V<sub>k</sub></code>, otherwise <code>U<sub>k-1</sub></code> and
            <code>U<sub>k</sub></code>.
            @return An array with 2 elements, containing <code>U<sub>k-1</sub></code>
            and <code>U<sub>k</sub></code> or <code>V<sub>k-1</sub></code>
            and <code>V<sub>k</sub></code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.GetTw(System.SByte,System.Int32)">
            Computes the auxiliary value <code>t<sub>w</sub></code>. If the width is
            4, then for <code>mu = 1</code>, <code>t<sub>w</sub> = 6</code> and for
            <code>mu = -1</code>, <code>t<sub>w</sub> = 10</code> 
            @param mu The parameter <code>&#956;</code> of the elliptic curve.
            @param w The window width of the WTNAF.
            @return the auxiliary value <code>t<sub>w</sub></code>
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.GetSi(Org.BouncyCastle.Math.EC.AbstractF2mCurve)">
            Computes the auxiliary values <code>s<sub>0</sub></code> and
            <code>s<sub>1</sub></code> used for partial modular reduction. 
            @param curve The elliptic curve for which to compute
            <code>s<sub>0</sub></code> and <code>s<sub>1</sub></code>.
            @throws ArgumentException if <code>curve</code> is not a
            Koblitz curve (Anomalous Binary Curve, ABC).
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.PartModReduction(Org.BouncyCastle.Math.BigInteger,System.Int32,System.SByte,Org.BouncyCastle.Math.BigInteger[],System.SByte,System.SByte)">
            Partial modular reduction modulo
            <code>(&#964;<sup>m</sup> - 1)/(&#964; - 1)</code>.
            @param k The integer to be reduced.
            @param m The bitlength of the underlying finite field.
            @param a The parameter <code>a</code> of the elliptic curve.
            @param s The auxiliary values <code>s<sub>0</sub></code> and
            <code>s<sub>1</sub></code>.
            @param mu The parameter &#956; of the elliptic curve.
            @param c The precision (number of bits of accuracy) of the partial
            modular reduction.
            @return <code>&#961; := k partmod (&#964;<sup>m</sup> - 1)/(&#964; - 1)</code>
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.MultiplyRTnaf(Org.BouncyCastle.Math.EC.AbstractF2mPoint,Org.BouncyCastle.Math.BigInteger)">
            Multiplies a {@link org.bouncycastle.math.ec.AbstractF2mPoint AbstractF2mPoint}
            by a <code>BigInteger</code> using the reduced <code>&#964;</code>-adic
            NAF (RTNAF) method.
            @param p The AbstractF2mPoint to Multiply.
            @param k The <code>BigInteger</code> by which to Multiply <code>p</code>.
            @return <code>k * p</code>
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.MultiplyTnaf(Org.BouncyCastle.Math.EC.AbstractF2mPoint,Org.BouncyCastle.Math.EC.Abc.ZTauElement)">
            Multiplies a {@link org.bouncycastle.math.ec.AbstractF2mPoint AbstractF2mPoint}
            by an element <code>&#955;</code> of <code><b>Z</b>[&#964;]</code>
            using the <code>&#964;</code>-adic NAF (TNAF) method.
            @param p The AbstractF2mPoint to Multiply.
            @param lambda The element <code>&#955;</code> of
            <code><b>Z</b>[&#964;]</code>.
            @return <code>&#955; * p</code>
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.MultiplyFromTnaf(Org.BouncyCastle.Math.EC.AbstractF2mPoint,System.SByte[])">
            Multiplies a {@link org.bouncycastle.math.ec.AbstractF2mPoint AbstractF2mPoint}
            by an element <code>&#955;</code> of <code><b>Z</b>[&#964;]</code>
            using the <code>&#964;</code>-adic NAF (TNAF) method, given the TNAF
            of <code>&#955;</code>.
            @param p The AbstractF2mPoint to Multiply.
            @param u The the TNAF of <code>&#955;</code>..
            @return <code>&#955; * p</code>
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.TauAdicWNaf(System.SByte,Org.BouncyCastle.Math.EC.Abc.ZTauElement,System.SByte,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.EC.Abc.ZTauElement[])">
            Computes the <code>[&#964;]</code>-adic window NAF of an element
            <code>&#955;</code> of <code><b>Z</b>[&#964;]</code>.
            @param mu The parameter &#956; of the elliptic curve.
            @param lambda The element <code>&#955;</code> of
            <code><b>Z</b>[&#964;]</code> of which to compute the
            <code>[&#964;]</code>-adic NAF.
            @param width The window width of the resulting WNAF.
            @param pow2w 2<sup>width</sup>.
            @param tw The auxiliary value <code>t<sub>w</sub></code>.
            @param alpha The <code>&#945;<sub>u</sub></code>'s for the window width.
            @return The <code>[&#964;]</code>-adic window NAF of
            <code>&#955;</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.Tnaf.GetPreComp(Org.BouncyCastle.Math.EC.AbstractF2mPoint,System.SByte)">
            Does the precomputation for WTNAF multiplication.
            @param p The <code>ECPoint</code> for which to do the precomputation.
            @param a The parameter <code>a</code> of the elliptic curve.
            @return The precomputation array for <code>p</code>. 
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Abc.ZTauElement">
            Class representing an element of <code><b>Z</b>[&#964;]</code>. Let
            <code>&#955;</code> be an element of <code><b>Z</b>[&#964;]</code>. Then
            <code>&#955;</code> is given as <code>&#955; = u + v&#964;</code>. The
            components <code>u</code> and <code>v</code> may be used directly, there
            are no accessor methods.
            Immutable class.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.ZTauElement.u">
            The &quot;real&quot; part of <code>&#955;</code>.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Abc.ZTauElement.v">
            The &quot;<code>&#964;</code>-adic&quot; part of <code>&#955;</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Abc.ZTauElement.#ctor(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Constructor for an element <code>&#955;</code> of
            <code><b>Z</b>[&#964;]</code>.
            @param u The &quot;real&quot; part of <code>&#955;</code>.
            @param v The &quot;<code>&#964;</code>-adic&quot; part of
            <code>&#955;</code>.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.ECCurve">
            <remarks>Base class for an elliptic curve.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECCurve.Precompute(Org.BouncyCastle.Math.EC.ECPoint,System.String,Org.BouncyCastle.Math.EC.Multiplier.IPreCompCallback)">
            Compute a <code>PreCompInfo</code> for a point on this curve, under a given name. Used by
            <code>ECMultiplier</code>s to save the precomputation for this <code>ECPoint</code> for use
            by subsequent multiplication.
            
            @param point
                       The <code>ECPoint</code> to store precomputations for.
            @param name
                       A <code>String</code> used to index precomputations of different types.
            @param callback
                       Called to calculate the <code>PreCompInfo</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[])">
            Normalization ensures that any projective coordinate is 1, and therefore that the x, y
            coordinates reflect those of the equivalent point in an affine coordinate system. Where more
            than one point is to be normalized, this method will generally be more efficient than
            normalizing each point separately.
            
            @param points
                       An array of points that will be updated in place with their normalized versions,
                       where necessary
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECCurve.NormalizeAll(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Normalization ensures that any projective coordinate is 1, and therefore that the x, y
            coordinates reflect those of the equivalent point in an affine coordinate system. Where more
            than one point is to be normalized, this method will generally be more efficient than
            normalizing each point separately. An (optional) z-scaling factor can be applied; effectively
            each z coordinate is scaled by this value prior to normalization (but only one
            actual multiplication is needed).
            
            @param points
                       An array of points that will be updated in place with their normalized versions,
                       where necessary
            @param off
                       The start of the range of points to normalize
            @param len
                       The length of the range of points to normalize
            @param iso
                       The (optional) z-scaling factor - can be null
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECCurve.CreateCacheSafeLookupTable(Org.BouncyCastle.Math.EC.ECPoint[],System.Int32,System.Int32)">
            Create a cache-safe lookup table for the specified sequence of points. All the points MUST
            belong to this <code>ECCurve</code> instance, and MUST already be normalized.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECCurve.GetMultiplier">
             Sets the default <code>ECMultiplier</code>, unless already set.
            
             We avoid locking for performance reasons, so there is no uniqueness guarantee.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECCurve.DecodePoint(System.Byte[])">
            Decode a point on this curve from its ASN.1 encoding. The different
            encodings are taken account of, including point compression for
            <code>F<sub>p</sub></code> (X9.62 s 4.2.1 pg 17).
            @return The decoded point.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.ECPoint">
            base class for points on elliptic curves.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECPoint.Normalize">
            Normalization ensures that any projective coordinate is 1, and therefore that the x, y
            coordinates reflect those of the equivalent point in an affine coordinate system.
            
            @return a new ECPoint instance representing the same point, but with normalized coordinates
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.ECPoint.AffineXCoord">
            Returns the affine x-coordinate after checking that this point is normalized.
            
            @return The affine x-coordinate of this point
            @throws IllegalStateException if the point is not normalized
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.ECPoint.AffineYCoord">
            Returns the affine y-coordinate after checking that this point is normalized
            
            @return The affine y-coordinate of this point
            @throws IllegalStateException if the point is not normalized
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.ECPoint.XCoord">
            Returns the x-coordinate.
            
            Caution: depending on the curve's coordinate system, this may not be the same value as in an
            affine coordinate system; use Normalize() to get a point where the coordinates have their
            affine values, or use AffineXCoord if you expect the point to already have been normalized.
            
            @return the x-coordinate of this point
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.ECPoint.YCoord">
            Returns the y-coordinate.
            
            Caution: depending on the curve's coordinate system, this may not be the same value as in an
            affine coordinate system; use Normalize() to get a point where the coordinates have their
            affine values, or use AffineYCoord if you expect the point to already have been normalized.
            
            @return the y-coordinate of this point
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECPointBase.GetEncoded(System.Boolean)">
            return the field element encoded with point compression. (S 4.3.6)
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECPointBase.Multiply(Org.BouncyCastle.Math.BigInteger)">
            Multiplies this <code>ECPoint</code> by the given number.
            @param k The multiplicator.
            @return <code>k * this</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve the curve to use
            @param x affine x co-ordinate
            @param y affine y co-ordinate
            
            @deprecated Use ECCurve.CreatePoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Djb.Curve25519Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve the curve to use
            @param x affine x co-ordinate
            @param y affine y co-ordinate
            @param withCompression if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.GM.SM2P256V1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP128R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(boolean)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.CreatePoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.CreatePoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.CreatePoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP160R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP192K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP192R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP224K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP224R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP256K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP256R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP384R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1FieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation returns the right value - if
            none exists it returns null.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Create a point which encodes with point compression.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecP521R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            Create a point that encodes with or without point compresion.
            
            @param curve
                       the curve to use
            @param x
                       affine x co-ordinate
            @param y
                       affine y co-ordinate
            @param withCompression
                       if true encode with point compression
            
            @deprecated per-point compression property will be removed, refer
                        {@link #getEncoded(bool)}
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.AbstractF2mCurve.si">
            The auxiliary values <code>s<sub>0</sub></code> and
            <code>s<sub>1</sub></code> used for partial modular reduction for
            Koblitz curves.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.AbstractF2mCurve.SolveQuadraticEquation(Org.BouncyCastle.Math.EC.ECFieldElement)">
             Solves a quadratic equation <code>z<sup>2</sup> + z = beta</code>(X9.62
             D.1.6) The other solution is <code>z + 1</code>.
            
             @param beta
                        The value to solve the quadratic equation for.
             @return the solution for <code>z<sup>2</sup> + z = beta</code> or
                     <code>null</code> if no solution exists.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.AbstractF2mCurve.GetSi">
            @return the auxiliary values <code>s<sub>0</sub></code> and
            <code>s<sub>1</sub></code> used for partial modular reduction for
            Koblitz curves.
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.AbstractF2mCurve.IsKoblitz">
            Returns true if this is a Koblitz curve (ABC curve).
            @return true if this is a Koblitz curve (ABC curve), false otherwise
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT113R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT131R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT163K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT163R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT193R2Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT233K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT233R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT239K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT283K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT283R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT409K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT409R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT571K1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @deprecated Use ECCurve.createPoint to construct points
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Custom.Sec.SecT571R1Point.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @deprecated per-point compression property will be removed, refer {@link #getEncoded(bool)}
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.ECAlgorithms.ReferenceMultiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            Simple shift-and-add multiplication. Serves as reference implementation to verify (possibly
            faster) implementations, and for very small scalars. CAUTION: This implementation is NOT
            constant-time in any way. It is only intended to be used for diagnostics.
            
            @param p
                       The point to multiply.
            @param k
                       The multiplier.
            @return The result of the point multiplication <code>kP</code>.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.FpCurve">
            Elliptic curve over Fp
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.F2mCurve">
            Elliptic curves over F2m. The Weierstrass equation is given by
            <code>y<sup>2</sup> + xy = x<sup>3</sup> + ax<sup>2</sup> + b</code>.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mCurve.m">
            The exponent <code>m</code> of <code>F<sub>2<sup>m</sup></sub></code>.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mCurve.k1">
            TPB: The integer <code>k</code> where <code>x<sup>m</sup> +
            x<sup>k</sup> + 1</code> represents the reduction polynomial
            <code>f(z)</code>.<br/>
            PPB: The integer <code>k1</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.<br/>
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mCurve.k2">
            TPB: Always set to <code>0</code><br/>
            PPB: The integer <code>k2</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.<br/>
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mCurve.k3">
            TPB: Always set to <code>0</code><br/>
            PPB: The integer <code>k3</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.<br/>
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mCurve.m_infinity">
            The point at infinity on this curve.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mCurve.#ctor(System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Constructor for Trinomial Polynomial Basis (TPB).
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k The integer <code>k</code> where <code>x<sup>m</sup> +
            x<sup>k</sup> + 1</code> represents the reduction
            polynomial <code>f(z)</code>.
            @param a The coefficient <code>a</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param b The coefficient <code>b</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mCurve.#ctor(System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Constructor for Trinomial Polynomial Basis (TPB).
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k The integer <code>k</code> where <code>x<sup>m</sup> +
            x<sup>k</sup> + 1</code> represents the reduction
            polynomial <code>f(z)</code>.
            @param a The coefficient <code>a</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param b The coefficient <code>b</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param order The order of the main subgroup of the elliptic curve.
            @param cofactor The cofactor of the elliptic curve, i.e.
            <code>#E<sub>a</sub>(F<sub>2<sup>m</sup></sub>) = h * n</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mCurve.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Constructor for Pentanomial Polynomial Basis (PPB).
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k1 The integer <code>k1</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k2 The integer <code>k2</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k3 The integer <code>k3</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param a The coefficient <code>a</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param b The coefficient <code>b</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mCurve.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            Constructor for Pentanomial Polynomial Basis (PPB).
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k1 The integer <code>k1</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k2 The integer <code>k2</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k3 The integer <code>k3</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param a The coefficient <code>a</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param b The coefficient <code>b</code> in the Weierstrass equation
            for non-supersingular elliptic curves over
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param order The order of the main subgroup of the elliptic curve.
            @param cofactor The cofactor of the elliptic curve, i.e.
            <code>#E<sub>a</sub>(F<sub>2<sup>m</sup></sub>) = h * n</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mCurve.IsTrinomial">
             Return true if curve uses a Trinomial basis.
            
             @return true if curve Trinomial, false otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.FpFieldElement.Sqrt">
            return a sqrt root - the routine verifies that the calculation
            returns the right value - if none exists it returns null.
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.FpFieldElement.FieldName">
             return the field name for this field.
            
             @return the string "Fp".
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.F2mFieldElement">
            Class representing the Elements of the finite field
            <code>F<sub>2<sup>m</sup></sub></code> in polynomial basis (PB)
            representation. Both trinomial (Tpb) and pentanomial (Ppb) polynomial
            basis representations are supported. Gaussian normal basis (GNB)
            representation is not supported.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mFieldElement.Gnb">
            Indicates gaussian normal basis representation (GNB). Number chosen
            according to X9.62. GNB is not implemented at present.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mFieldElement.Tpb">
            Indicates trinomial basis representation (Tpb). Number chosen
            according to X9.62.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mFieldElement.Ppb">
            Indicates pentanomial basis representation (Ppb). Number chosen
            according to X9.62.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mFieldElement.representation">
            Tpb or Ppb.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mFieldElement.m">
            The exponent <code>m</code> of <code>F<sub>2<sup>m</sup></sub></code>.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.F2mFieldElement.x">
            The <code>LongArray</code> holding the bits.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)">
            Constructor for Ppb.
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k1 The integer <code>k1</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k2 The integer <code>k2</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param k3 The integer <code>k3</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.
            @param x The BigInteger representing the value of the field element.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mFieldElement.#ctor(System.Int32,System.Int32,Org.BouncyCastle.Math.BigInteger)">
            Constructor for Tpb.
            @param m  The exponent <code>m</code> of
            <code>F<sub>2<sup>m</sup></sub></code>.
            @param k The integer <code>k</code> where <code>x<sup>m</sup> +
            x<sup>k</sup> + 1</code> represents the reduction
            polynomial <code>f(z)</code>.
            @param x The BigInteger representing the value of the field element.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mFieldElement.CheckFieldElements(Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            Checks, if the ECFieldElements <code>a</code> and <code>b</code>
            are elements of the same field <code>F<sub>2<sup>m</sup></sub></code>
            (having the same representation).
            @param a field element.
            @param b field element to be compared.
            @throws ArgumentException if <code>a</code> and <code>b</code>
            are not elements of the same field
            <code>F<sub>2<sup>m</sup></sub></code> (having the same
            representation).
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.F2mFieldElement.Representation">
            @return the representation of the field
            <code>F<sub>2<sup>m</sup></sub></code>, either of
            {@link F2mFieldElement.Tpb} (trinomial
            basis representation) or
            {@link F2mFieldElement.Ppb} (pentanomial
            basis representation).
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.F2mFieldElement.M">
            @return the degree <code>m</code> of the reduction polynomial
            <code>f(z)</code>.
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.F2mFieldElement.K1">
            @return Tpb: The integer <code>k</code> where <code>x<sup>m</sup> +
            x<sup>k</sup> + 1</code> represents the reduction polynomial
            <code>f(z)</code>.<br/>
            Ppb: The integer <code>k1</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.<br/>
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.F2mFieldElement.K2">
            @return Tpb: Always returns <code>0</code><br/>
            Ppb: The integer <code>k2</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.<br/>
        </member>
        <member name="P:Org.BouncyCastle.Math.EC.F2mFieldElement.K3">
            @return Tpb: Always set to <code>0</code><br/>
            Ppb: The integer <code>k3</code> where <code>x<sup>m</sup> +
            x<sup>k3</sup> + x<sup>k2</sup> + x<sup>k1</sup> + 1</code>
            represents the reduction polynomial <code>f(z)</code>.<br/>
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.FpPoint">
            Elliptic curve points over Fp
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.FpPoint.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
             Create a point which encodes without point compression.
            
             @param curve the curve to use
             @param x affine x co-ordinate
             @param y affine y co-ordinate
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.FpPoint.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
             Create a point that encodes with or without point compression.
            
             @param curve the curve to use
             @param x affine x co-ordinate
             @param y affine y co-ordinate
             @param withCompression if true encode with point compression
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.F2mPoint">
            Elliptic curve points over F2m
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mPoint.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement)">
            @param curve base curve
            @param x x point
            @param y y point
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.F2mPoint.#ctor(Org.BouncyCastle.Math.EC.ECCurve,Org.BouncyCastle.Math.EC.ECFieldElement,Org.BouncyCastle.Math.EC.ECFieldElement,System.Boolean)">
            @param curve base curve
            @param x x point
            @param y y point
            @param withCompression true if encode with point compression.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.PreCompInfo">
            Interface for classes storing precomputation data for multiplication
            algorithms. Used as a Memento (see GOF patterns) for
            <code>WNafMultiplier</code>.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier">
            Interface for classes encapsulating a point multiplication algorithm
            for <code>ECPoint</code>s.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.ECMultiplier.Multiply(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            Multiplies the <code>ECPoint p</code> by <code>k</code>, i.e.
            <code>p</code> is added <code>k</code> times to itself.
            @param p The <code>ECPoint</code> to be multiplied.
            @param k The factor by which <code>p</code> is multiplied.
            @return <code>p</code> multiplied by <code>k</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.DoubleAddMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            Joye's double-add algorithm.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo">
            Class holding precomputation data for fixed-point multiplications.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.m_lookupTable">
            Lookup table for the precomputed <code>ECPoint</code>s used for a fixed point multiplication.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Multiplier.FixedPointPreCompInfo.m_width">
            The width used for the precomputation. If a larger width precomputation
            is already available this may be larger than was requested, so calling
            code should refer to the actual width.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.MixedNafR2LMultiplier">
            Class implementing the NAF (Non-Adjacent Form) multiplication algorithm (right-to-left) using
            mixed coordinates.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.MixedNafR2LMultiplier.#ctor">
            By default, addition will be done in Jacobian coordinates, and doubling will be done in
            Modified Jacobian coordinates (independent of the original coordinate system of each point).
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.MontgomeryLadderMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            Montgomery ladder.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.NafL2RMultiplier">
            Class implementing the NAF (Non-Adjacent Form) multiplication algorithm (left-to-right).
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.NafR2LMultiplier">
            Class implementing the NAF (Non-Adjacent Form) multiplication algorithm (right-to-left).
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.WNafL2RMultiplier">
            Class implementing the WNAF (Window Non-Adjacent Form) multiplication
            algorithm.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WNafL2RMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            Multiplies <code>this</code> by an integer <code>k</code> using the
            Window NAF method.
            @param k The integer by which <code>this</code> is multiplied.
            @return A new <code>ECPoint</code> which equals <code>this</code>
            multiplied by <code>k</code>.
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo">
            Class holding precomputation data for the WNAF (Window Non-Adjacent Form)
            algorithm.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo.m_preComp">
            Array holding the precomputed <code>ECPoint</code>s used for a Window
            NAF multiplication.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo.m_preCompNeg">
            Array holding the negations of the precomputed <code>ECPoint</code>s used
            for a Window NAF multiplication.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Multiplier.WNafPreCompInfo.m_twice">
            Holds an <code>ECPoint</code> representing Twice(this). Used for the
            Window NAF multiplication to create or extend the precomputed values.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GenerateWindowNaf(System.Int32,Org.BouncyCastle.Math.BigInteger)">
            Computes the Window NAF (non-adjacent Form) of an integer.
            @param width The width <code>w</code> of the Window NAF. The width is
            defined as the minimal number <code>w</code>, such that for any
            <code>w</code> consecutive digits in the resulting representation, at
            most one is non-zero.
            @param k The integer of which the Window NAF is computed.
            @return The Window NAF of the given width, such that the following holds:
            <code>k = &amp;sum;<sub>i=0</sub><sup>l-1</sup> k<sub>i</sub>2<sup>i</sup>
            </code>, where the <code>k<sub>i</sub></code> denote the elements of the
            returned <code>byte[]</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetWindowSize(System.Int32)">
            Determine window width to use for a scalar multiplication of the given size.
            
            @param bits the bit-length of the scalar to multiply by
            @return the window size to use
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetWindowSize(System.Int32,System.Int32)">
            Determine window width to use for a scalar multiplication of the given size.
            
            @param bits the bit-length of the scalar to multiply by
            @param maxWidth the maximum window width to return 
            @return the window size to use
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetWindowSize(System.Int32,System.Int32[])">
            Determine window width to use for a scalar multiplication of the given size.
            
            @param bits the bit-length of the scalar to multiply by
            @param windowSizeCutoffs a monotonically increasing list of bit sizes at which to increment the window width
            @return the window size to use
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WNafUtilities.GetWindowSize(System.Int32,System.Int32[],System.Int32)">
            Determine window width to use for a scalar multiplication of the given size.
            
            @param bits the bit-length of the scalar to multiply by
            @param windowSizeCutoffs a monotonically increasing list of bit sizes at which to increment the window width
            @param maxWidth the maximum window width to return 
            @return the window size to use
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier">
            Class implementing the WTNAF (Window
            <code>&#964;</code>-adic Non-Adjacent Form) algorithm.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            Multiplies a {@link org.bouncycastle.math.ec.AbstractF2mPoint AbstractF2mPoint}
            by <code>k</code> using the reduced <code>&#964;</code>-adic NAF (RTNAF)
            method.
            @param p The AbstractF2mPoint to multiply.
            @param k The integer by which to multiply <code>k</code>.
            @return <code>p</code> multiplied by <code>k</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier.MultiplyWTnaf(Org.BouncyCastle.Math.EC.AbstractF2mPoint,Org.BouncyCastle.Math.EC.Abc.ZTauElement,System.SByte,System.SByte)">
            Multiplies a {@link org.bouncycastle.math.ec.AbstractF2mPoint AbstractF2mPoint}
            by an element <code>&#955;</code> of <code><b>Z</b>[&#964;]</code> using
            the <code>&#964;</code>-adic NAF (TNAF) method.
            @param p The AbstractF2mPoint to multiply.
            @param lambda The element <code>&#955;</code> of
            <code><b>Z</b>[&#964;]</code> of which to compute the
            <code>[&#964;]</code>-adic NAF.
            @return <code>p</code> multiplied by <code>&#955;</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.WTauNafMultiplier.MultiplyFromWTnaf(Org.BouncyCastle.Math.EC.AbstractF2mPoint,System.SByte[])">
            Multiplies a {@link org.bouncycastle.math.ec.AbstractF2mPoint AbstractF2mPoint}
            by an element <code>&#955;</code> of <code><b>Z</b>[&#964;]</code>
            using the window <code>&#964;</code>-adic NAF (TNAF) method, given the
            WTNAF of <code>&#955;</code>.
            @param p The AbstractF2mPoint to multiply.
            @param u The the WTNAF of <code>&#955;</code>..
            @return <code>&#955; * p</code>
        </member>
        <member name="T:Org.BouncyCastle.Math.EC.Multiplier.WTauNafPreCompInfo">
            Class holding precomputation data for the WTNAF (Window
            <code>&#964;</code>-adic Non-Adjacent Form) algorithm.
        </member>
        <member name="F:Org.BouncyCastle.Math.EC.Multiplier.WTauNafPreCompInfo.m_preComp">
            Array holding the precomputed <code>AbstractF2mPoint</code>s used for the
            WTNAF multiplication in <code>
            {@link org.bouncycastle.math.ec.multiplier.WTauNafMultiplier.multiply()
            WTauNafMultiplier.multiply()}</code>.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.ZSignedDigitL2RMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            'Zeroless' Signed Digit Left-to-Right.
        </member>
        <member name="M:Org.BouncyCastle.Math.EC.Multiplier.ZSignedDigitR2LMultiplier.MultiplyPositive(Org.BouncyCastle.Math.EC.ECPoint,Org.BouncyCastle.Math.BigInteger)">
            'Zeroless' Signed Digit Right-to-Left.
        </member>
        <member name="T:Org.BouncyCastle.Math.Primes">
            Utility methods for generating primes and testing for primality.
        </member>
        <member name="M:Org.BouncyCastle.Math.Primes.GenerateSTRandomPrime(Org.BouncyCastle.Crypto.IDigest,System.Int32,System.Byte[])">
            FIPS 186-4 C.6 Shawe-Taylor Random_Prime Routine
            
            Construct a provable prime number using a hash function.
            
            @param hash
                       the {@link Digest} instance to use (as "Hash()"). Cannot be null.
            @param length
                       the length (in bits) of the prime to be generated. Must be at least 2.
            @param inputSeed
                       the seed to be used for the generation of the requested prime. Cannot be null or
                       empty.
            @return an {@link STOutput} instance containing the requested prime.
        </member>
        <member name="M:Org.BouncyCastle.Math.Primes.EnhancedMRProbablePrimeTest(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Security.SecureRandom,System.Int32)">
            FIPS 186-4 C.3.2 Enhanced Miller-Rabin Probabilistic Primality Test
            
            Run several iterations of the Miller-Rabin algorithm with randomly-chosen bases. This is an
            alternative to {@link #isMRProbablePrime(BigInteger, SecureRandom, int)} that provides more
            information about a composite candidate, which may be useful when generating or validating
            RSA moduli.
            
            @param candidate
                       the {@link BigInteger} instance to test for primality.
            @param random
                       the source of randomness to use to choose bases.
            @param iterations
                       the number of randomly-chosen bases to perform the test for.
            @return an {@link MROutput} instance that can be further queried for details.
        </member>
        <member name="M:Org.BouncyCastle.Math.Primes.HasAnySmallFactors(Org.BouncyCastle.Math.BigInteger)">
            A fast check for small divisors, up to some implementation-specific limit.
            
            @param candidate
                       the {@link BigInteger} instance to test for division by small factors.
            
            @return <code>true</code> if the candidate is found to have any small factors,
                    <code>false</code> otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Math.Primes.IsMRProbablePrime(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Security.SecureRandom,System.Int32)">
            FIPS 186-4 C.3.1 Miller-Rabin Probabilistic Primality Test
            
            Run several iterations of the Miller-Rabin algorithm with randomly-chosen bases.
            
            @param candidate
                       the {@link BigInteger} instance to test for primality.
            @param random
                       the source of randomness to use to choose bases.
            @param iterations
                       the number of randomly-chosen bases to perform the test for.
            @return <code>false</code> if any witness to compositeness is found amongst the chosen bases
                    (so <code>candidate</code> is definitely NOT prime), or else <code>true</code>
                    (indicating primality with some probability dependent on the number of iterations
                    that were performed).
        </member>
        <member name="M:Org.BouncyCastle.Math.Primes.IsMRProbablePrimeToBase(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger)">
            FIPS 186-4 C.3.1 Miller-Rabin Probabilistic Primality Test (to a fixed base).
            
            Run a single iteration of the Miller-Rabin algorithm against the specified base.
            
            @param candidate
                       the {@link BigInteger} instance to test for primality.
            @param baseValue
                       the base value to use for this iteration.
            @return <code>false</code> if the specified base is a witness to compositeness (so
                    <code>candidate</code> is definitely NOT prime), or else <code>true</code>.
        </member>
        <member name="T:Org.BouncyCastle.Math.Primes.MROutput">
            Used to return the output from the
            {@linkplain Primes#enhancedMRProbablePrimeTest(BigInteger, SecureRandom, int) Enhanced
            Miller-Rabin Probabilistic Primality Test}
        </member>
        <member name="T:Org.BouncyCastle.Math.Primes.STOutput">
            Used to return the output from the {@linkplain Primes#generateSTRandomPrime(Digest, int, byte[]) Shawe-Taylor Random_Prime Routine} 
        </member>
        <member name="T:Org.BouncyCastle.Ocsp.BasicOcspResp">
            <remarks>
            <code>
            BasicOcspResponse ::= SEQUENCE {
            	tbsResponseData		ResponseData,
            	signatureAlgorithm	AlgorithmIdentifier,
            	signature			BIT STRING,
            	certs				[0] EXPLICIT SEQUENCE OF Certificate OPTIONAL
            }
            </code>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.IX509Extension.GetCriticalExtensionOids">
            <summary>
            Get all critical extension values, by oid
            </summary>
            <returns>IDictionary with string (OID) keys and Asn1OctetString values</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.IX509Extension.GetNonCriticalExtensionOids">
            <summary>
            Get all non-critical extension values, by oid
            </summary>
            <returns>IDictionary with string (OID) keys and Asn1OctetString values</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509ExtensionBase.GetNonCriticalExtensionOids">
            <summary>
            Get non critical extensions.
            </summary>
            <returns>A set of non critical extension oids.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509ExtensionBase.GetCriticalExtensionOids">
            <summary>
            Get any critical extensions.
            </summary>
            <returns>A sorted list of critical entension.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509ExtensionBase.GetExtensionValue(System.String)">
            <summary>
            Get the value of a given extension.
            </summary>
            <param name="oid">The object ID of the extension. </param>
            <returns>An Asn1OctetString object if that extension is found or null if not.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspResp.GetTbsResponseData">
            <returns>The DER encoding of the tbsResponseData field.</returns>
            <exception> <see cref="T:Org.BouncyCastle.Ocsp.OcspException"/>In the event of an encoding error.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspResp.GetCertificates(System.String)">
            <returns>The certificates, if any, associated with the response.</returns>
            <exception> <see cref="T:Org.BouncyCastle.Ocsp.OcspException"/>In the event of an encoding error.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspResp.Verify(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Verify the signature against the tbsResponseData object we contain.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspResp.GetEncoded">
            <returns>The ASN.1 encoded representation of this object.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator">
            Generator for basic OCSP response objects.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.#ctor(Org.BouncyCastle.Ocsp.RespID)">
            basic constructor
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            construct with the responderID to be the SHA-1 keyHash of the passed in public key.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.AddResponse(Org.BouncyCastle.Ocsp.CertificateID,Org.BouncyCastle.Ocsp.CertificateStatus)">
             Add a response for a particular Certificate ID.
            
             @param certID certificate ID details
             @param certStatus status of the certificate - null if okay
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.AddResponse(Org.BouncyCastle.Ocsp.CertificateID,Org.BouncyCastle.Ocsp.CertificateStatus,Org.BouncyCastle.Asn1.X509.X509Extensions)">
             Add a response for a particular Certificate ID.
            
             @param certID certificate ID details
             @param certStatus status of the certificate - null if okay
             @param singleExtensions optional extensions
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.AddResponse(Org.BouncyCastle.Ocsp.CertificateID,Org.BouncyCastle.Ocsp.CertificateStatus,System.DateTime,Org.BouncyCastle.Asn1.X509.X509Extensions)">
             Add a response for a particular Certificate ID.
            
             @param certID certificate ID details
             @param nextUpdate date when next update should be requested
             @param certStatus status of the certificate - null if okay
             @param singleExtensions optional extensions
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.AddResponse(Org.BouncyCastle.Ocsp.CertificateID,Org.BouncyCastle.Ocsp.CertificateStatus,System.DateTime,System.DateTime,Org.BouncyCastle.Asn1.X509.X509Extensions)">
             Add a response for a particular Certificate ID.
            
             @param certID certificate ID details
             @param thisUpdate date this response was valid on
             @param nextUpdate date when next update should be requested
             @param certStatus status of the certificate - null if okay
             @param singleExtensions optional extensions
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.SetResponseExtensions(Org.BouncyCastle.Asn1.X509.X509Extensions)">
             Set the extensions for the response.
            
             @param responseExtensions the extension object to carry.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.Generate(Org.BouncyCastle.Crypto.ISignatureFactory,Org.BouncyCastle.X509.X509Certificate[],System.DateTime)">
            <summary>
            Generate the signed response using the passed in signature calculator.
            </summary>
            <param name="signatureCalculatorFactory">Implementation of signing calculator factory.</param>
            <param name="chain">The certificate chain associated with the response signer.</param>
            <param name="producedAt">"produced at" date.</param>
            <returns></returns>
        </member>
        <member name="P:Org.BouncyCastle.Ocsp.BasicOcspRespGenerator.SignatureAlgNames">
             Return an IEnumerable of the signature names supported by the generator.
            
             @return an IEnumerable containing recognised names.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.CertificateID.#ctor(System.String,Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Math.BigInteger)">
            create from an issuer certificate and the serial number of the
            certificate it signed.
            @exception OcspException if any problems occur creating the id fields.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.CertificateID.DeriveCertificateID(Org.BouncyCastle.Ocsp.CertificateID,Org.BouncyCastle.Math.BigInteger)">
             Create a new CertificateID for a new serial number derived from a previous one
             calculated for the same CA certificate.
            
             @param original the previously calculated CertificateID for the CA.
             @param newSerialNumber the serial number for the new certificate of interest.
            
             @return a new CertificateID for newSerialNumber
        </member>
        <member name="P:Org.BouncyCastle.Ocsp.CertificateID.SerialNumber">
            return the serial number for the certificate associated
            with this request.
        </member>
        <member name="T:Org.BouncyCastle.Ocsp.OcspReq">
             <pre>
             OcspRequest     ::=     SEQUENCE {
                   tbsRequest                  TBSRequest,
                   optionalSignature   [0]     EXPLICIT Signature OPTIONAL }
            
               TBSRequest      ::=     SEQUENCE {
                   version             [0]     EXPLICIT Version DEFAULT v1,
                   requestorName       [1]     EXPLICIT GeneralName OPTIONAL,
                   requestList                 SEQUENCE OF Request,
                   requestExtensions   [2]     EXPLICIT Extensions OPTIONAL }
            
               Signature       ::=     SEQUENCE {
                   signatureAlgorithm      AlgorithmIdentifier,
                   signature               BIT STRING,
                   certs               [0] EXPLICIT SEQUENCE OF Certificate OPTIONAL}
            
               Version         ::=             INTEGER  {  v1(0) }
            
               Request         ::=     SEQUENCE {
                   reqCert                     CertID,
                   singleRequestExtensions     [0] EXPLICIT Extensions OPTIONAL }
            
               CertID          ::=     SEQUENCE {
                   hashAlgorithm       AlgorithmIdentifier,
                   issuerNameHash      OCTET STRING, -- Hash of Issuer's DN
                   issuerKeyHash       OCTET STRING, -- Hash of Issuers public key
                   serialNumber        CertificateSerialNumber }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReq.GetTbsRequest">
            Return the DER encoding of the tbsRequest field.
            @return DER encoding of tbsRequest
            @throws OcspException in the event of an encoding error.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReq.GetCertificates(System.String)">
             If the request is signed return a possibly empty CertStore containing the certificates in the
             request. If the request is not signed the method returns null.
            
             @return null if not signed, a CertStore otherwise
             @throws OcspException
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReq.Verify(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            Verify the signature against the TBSRequest object we contain.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReq.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="P:Org.BouncyCastle.Ocsp.OcspReq.SignatureAlgOid">
            return the object identifier representing the signature algorithm
        </member>
        <member name="P:Org.BouncyCastle.Ocsp.OcspReq.IsSigned">
             Return whether or not this request is signed.
            
             @return true if signed false otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReqGenerator.AddRequest(Org.BouncyCastle.Ocsp.CertificateID)">
             Add a request for the given CertificateID.
            
             @param certId certificate ID of interest
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReqGenerator.AddRequest(Org.BouncyCastle.Ocsp.CertificateID,Org.BouncyCastle.Asn1.X509.X509Extensions)">
             Add a request with extensions
            
             @param certId certificate ID of interest
             @param singleRequestExtensions the extensions to attach to the request
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReqGenerator.SetRequestorName(Org.BouncyCastle.Asn1.X509.X509Name)">
             Set the requestor name to the passed in X509Principal
            
             @param requestorName a X509Principal representing the requestor name.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspReqGenerator.Generate">
             Generate an unsigned request
            
             @return the OcspReq
             @throws OcspException
        </member>
        <member name="P:Org.BouncyCastle.Ocsp.OcspReqGenerator.SignatureAlgNames">
             Return an IEnumerable of the signature names supported by the generator.
            
             @return an IEnumerable containing recognised names.
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.OcspResp.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="T:Org.BouncyCastle.Ocsp.OCSPRespGenerator">
            base generator for an OCSP response - at the moment this only supports the
            generation of responses containing BasicOCSP responses.
        </member>
        <member name="F:Org.BouncyCastle.Ocsp.OcspRespStatus.Successful">
            note 4 is not used.
        </member>
        <member name="T:Org.BouncyCastle.Ocsp.RespID">
            Carrier for a ResponderID.
        </member>
        <member name="T:Org.BouncyCastle.Ocsp.RevokedStatus">
            wrapper for the RevokedInfo object
        </member>
        <member name="P:Org.BouncyCastle.Ocsp.RevokedStatus.RevocationReason">
            return the revocation reason. Note: this field is optional, test for it
            with hasRevocationReason() first.
            @exception InvalidOperationException if a reason is asked for and none is avaliable
        </member>
        <member name="M:Org.BouncyCastle.Ocsp.SingleResp.GetCertStatus">
             Return the status object for the response - null indicates good.
            
             @return the status object for the response, null if it is good.
        </member>
        <member name="P:Org.BouncyCastle.Ocsp.SingleResp.NextUpdate">
             return the NextUpdate value - note: this is an optional field so may
             be returned as null.
            
             @return nextUpdate, or null if not present.
        </member>
        <member name="T:Org.BouncyCastle.Ocsp.UnknownStatus">
            wrapper for the UnknownInfo object
        </member>
        <member name="T:Org.BouncyCastle.OpenSsl.MiscPemGenerator">
            PEM generator for the original set of PEM objects used in Open SSL.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Pem.PemObjectGenerator.Generate">
            <returns>
            A <see cref="T:Org.BouncyCastle.Utilities.IO.Pem.PemObject"/>
            </returns>
            <exception> <see cref="T:Org.BouncyCastle.Utilities.IO.Pem.PemGenerationException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.OpenSsl.PemReader">
            Class for reading OpenSSL PEM encoded streams containing 
            X509 certificates, PKCS8 encoded keys and PKCS7 objects.
            <p>
            In the case of PKCS7 objects the reader will return a CMS ContentInfo object. Keys and
            Certificates will be returned using the appropriate java.security type.</p>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Pem.PemReader.ReadPemObject">
            <returns>
            A <see cref="T:Org.BouncyCastle.Utilities.IO.Pem.PemObject"/>
            </returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.#ctor(System.IO.TextReader)">
             Create a new PemReader
            
             @param reader the Reader
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.#ctor(System.IO.TextReader,Org.BouncyCastle.OpenSsl.IPasswordFinder)">
             Create a new PemReader with a password finder
            
             @param reader the Reader
             @param pFinder the password finder
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.ReadCertificate(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
             Reads in a X509Certificate.
            
             @return the X509Certificate
             @throws IOException if an I/O error occured
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.ReadCrl(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
             Reads in a X509CRL.
            
             @return the X509Certificate
             @throws IOException if an I/O error occured
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.ReadCertificateRequest(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
             Reads in a PKCS10 certification request.
            
             @return the certificate request.
             @throws IOException if an I/O error occured
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.ReadAttributeCertificate(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
             Reads in a X509 Attribute Certificate.
            
             @return the X509 Attribute Certificate
             @throws IOException if an I/O error occured
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.ReadPkcs7(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
             Reads in a PKCS7 object. This returns a ContentInfo object suitable for use with the CMS
             API.
            
             @return the X509Certificate
             @throws IOException if an I/O error occured
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemReader.ReadPrivateKey(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
            Read a Key Pair
        </member>
        <member name="T:Org.BouncyCastle.OpenSsl.PemWriter">
            <remarks>General purpose writer for OpenSSL PEM objects.</remarks>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.IO.Pem.PemWriter">
            A generic PEM writer, based on RFC 1421
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Pem.PemWriter.#ctor(System.IO.TextWriter)">
             Base constructor.
            
             @param out output stream to use.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Pem.PemWriter.GetOutputSize(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
             Return the number of bytes or characters required to contain the
             passed in object if it is PEM encoded.
            
             @param obj pem object to be output
             @return an estimate of the number of bytes
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.PemWriter.#ctor(System.IO.TextWriter)">
            <param name="writer">The TextWriter object to write the output to.</param>
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.Pkcs8Generator.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
             Constructor for an unencrypted private key PEM object.
            
             @param key private key to be encoded.
        </member>
        <member name="M:Org.BouncyCastle.OpenSsl.Pkcs8Generator.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.String)">
             Constructor for an encrypted private key PEM object.
            
             @param key       private key to be encoded
             @param algorithm encryption algorithm to use
             @param provider  provider to use
             @throws NoSuchAlgorithmException if algorithm/mode cannot be found
        </member>
        <member name="T:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest">
             <remarks>
             A class for verifying and creating Pkcs10 Certification requests.
             </remarks>
             <code>
             CertificationRequest ::= Sequence {
               certificationRequestInfo  CertificationRequestInfo,
               signatureAlgorithm        AlgorithmIdentifier{{ SignatureAlgorithms }},
               signature                 BIT STRING
             }
            
             CertificationRequestInfo ::= Sequence {
               version             Integer { v1(0) } (v1,...),
               subject             Name,
               subjectPKInfo   SubjectPublicKeyInfo{{ PKInfoAlgorithms }},
               attributes          [0] Attributes{{ CRIAttributes }}
              }
            
              Attributes { ATTRIBUTE:IOSet } ::= Set OF Attr{{ IOSet }}
            
              Attr { ATTRIBUTE:IOSet } ::= Sequence {
                type    ATTRIBUTE.&amp;id({IOSet}),
                values  Set SIZE(1..MAX) OF ATTRIBUTE.&amp;Type({IOSet}{\@type})
              }
             </code>
             see <a href="http://www.rsasecurity.com/rsalabs/node.asp?id=2132"/>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest.#ctor(System.String,Org.BouncyCastle.Asn1.X509.X509Name,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Asn1.Asn1Set,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
             <summary>
             Instantiate a Pkcs10CertificationRequest object with the necessary credentials.
             </summary>
            <param name="signatureAlgorithm">Name of Sig Alg.</param>
             <param name="subject">X509Name of subject eg OU="My unit." O="My Organisatioin" C="au" </param>
             <param name="publicKey">Public Key to be included in cert reqest.</param>
             <param name="attributes">ASN1Set of Attributes.</param>
             <param name="signingKey">Matching Private key for nominated (above) public key to be used to sign the request.</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest.#ctor(Org.BouncyCastle.Crypto.ISignatureFactory,Org.BouncyCastle.Asn1.X509.X509Name,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Asn1.Asn1Set,Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
             <summary>
             Instantiate a Pkcs10CertificationRequest object with the necessary credentials.
             </summary>
            <param name="signatureFactory">The factory for signature calculators to sign the PKCS#10 request with.</param>
             <param name="subject">X509Name of subject eg OU="My unit." O="My Organisatioin" C="au" </param>
             <param name="publicKey">Public Key to be included in cert reqest.</param>
             <param name="attributes">ASN1Set of Attributes.</param>
             <param name="signingKey">Ignored.</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest.#ctor(Org.BouncyCastle.Crypto.ISignatureFactory,Org.BouncyCastle.Asn1.X509.X509Name,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Asn1.Asn1Set)">
             <summary>
             Instantiate a Pkcs10CertificationRequest object with the necessary credentials.
             </summary>
            <param name="signatureFactory">The factory for signature calculators to sign the PKCS#10 request with.</param>
             <param name="subject">X509Name of subject eg OU="My unit." O="My Organisatioin" C="au" </param>
             <param name="publicKey">Public Key to be included in cert reqest.</param>
             <param name="attributes">ASN1Set of Attributes.</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest.GetPublicKey">
            <summary>
            Get the public key.
            </summary>
            <returns>The public key.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest.Verify">
            <summary>
            Verify Pkcs10 Cert Request is valid.
            </summary>
            <returns>true = valid.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequestDelaySigned">
             <remarks>
             A class for creating and verifying Pkcs10 Certification requests (this is an extension on <see cref="T:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequest"/>).
             The requests are made using delay signing. This is useful for situations where
             the private key is in another environment and not directly accessible (e.g. HSM)
             So the first step creates the request, then the signing is done outside this
             object and the signature is then used to complete the request.
             </remarks>
             <code>
             CertificationRequest ::= Sequence {
               certificationRequestInfo  CertificationRequestInfo,
               signatureAlgorithm        AlgorithmIdentifier{{ SignatureAlgorithms }},
               signature                 BIT STRING
             }
            
             CertificationRequestInfo ::= Sequence {
               version             Integer { v1(0) } (v1,...),
               subject             Name,
               subjectPKInfo   SubjectPublicKeyInfo{{ PKInfoAlgorithms }},
               attributes          [0] Attributes{{ CRIAttributes }}
              }
            
              Attributes { ATTRIBUTE:IOSet } ::= Set OF Attr{{ IOSet }}
            
              Attr { ATTRIBUTE:IOSet } ::= Sequence {
                type    ATTRIBUTE.&amp;id({IOSet}),
                values  Set SIZE(1..MAX) OF ATTRIBUTE.&amp;Type({IOSet}{\@type})
              }
             </code>
             see <a href="http://www.rsasecurity.com/rsalabs/node.asp?id=2132"/>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequestDelaySigned.#ctor(System.String,Org.BouncyCastle.Asn1.X509.X509Name,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Asn1.Asn1Set)">
            <summary>
            Instantiate a Pkcs10CertificationRequest object with the necessary credentials.
            </summary>
            <param name="signatureAlgorithm">Name of Sig Alg.</param>
            <param name="subject">X509Name of subject eg OU="My unit." O="My Organisatioin" C="au" </param>
            <param name="publicKey">Public Key to be included in cert reqest.</param>
            <param name="attributes">ASN1Set of Attributes.</param>
            <remarks>
            After the object is constructed use the <see cref="M:Org.BouncyCastle.Pkcs.Pkcs10CertificationRequestDelaySigned.GetDataToSign"/> and finally the
            SignRequest methods to finalize the request.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs12Store.GetCertificate(System.String)">
            simply return the cert entry for the private key
        </member>
        <member name="T:Org.BouncyCastle.Pkcs.Pkcs12Utilities">
            Utility class for reencoding PKCS#12 files to definite length.
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs12Utilities.ConvertToDefiniteLength(System.Byte[])">
             Just re-encode the outer layer of the PKCS#12 file to definite length encoding.
            
             @param berPKCS12File - original PKCS#12 file
             @return a byte array representing the DER encoding of the PFX structure
             @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs12Utilities.ConvertToDefiniteLength(System.Byte[],System.Char[])">
             Re-encode the PKCS#12 structure to definite length encoding at the inner layer
             as well, recomputing the MAC accordingly.
            
             @param berPKCS12File - original PKCS12 file.
             @param provider - provider to use for MAC calculation.
             @return a byte array representing the DER encoding of the PFX structure.
             @throws IOException on parsing, encoding errors.
        </member>
        <member name="T:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo">
            <summary>
            A holding class for a PKCS#8 encrypted private key info object that allows for its decryption.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo.#ctor(Org.BouncyCastle.Asn1.Pkcs.EncryptedPrivateKeyInfo)">
            <summary>
            Base constructor from a PKCS#8 EncryptedPrivateKeyInfo object.
            </summary>
            <param name="encryptedPrivateKeyInfo">A PKCS#8 EncryptedPrivateKeyInfo object.</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo.#ctor(System.Byte[])">
            <summary>
            Base constructor from a BER encoding of a PKCS#8 EncryptedPrivateKeyInfo object.
            </summary>
            <param name="encryptedPrivateKeyInfo">A BER encoding of a PKCS#8 EncryptedPrivateKeyInfo objects.</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo.ToAsn1Structure">
            <summary>
            Returns the underlying ASN.1 structure inside this object.
            </summary>
            <returns>Return the EncryptedPrivateKeyInfo structure in this object.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo.GetEncryptedData">
            <summary>
            Returns a copy of the encrypted data in this structure.
            </summary>
            <returns>Return a copy of the encrypted data in this object.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo.GetEncoded">
            <summary>
            Return a binary ASN.1 encoding of the EncryptedPrivateKeyInfo structure in this object.
            </summary>
            <returns>A byte array containing the encoded object.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfo.DecryptPrivateKeyInfo(Org.BouncyCastle.Crypto.IDecryptorBuilderProvider)">
            <summary>
            Get a decryptor from the passed in provider and decrypt the encrypted private key info, returning the result.
            </summary>
            <param name="inputDecryptorProvider">A provider to query for decryptors for the object.</param>
            <returns>The decrypted private key info structure.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.Pkcs8EncryptedPrivateKeyInfoBuilder.Build(Org.BouncyCastle.Crypto.ICipherBuilder)">
            <summary>
            Create the encrypted private key info using the passed in encryptor.
            </summary>
            <param name="encryptor">The encryptor to use.</param>
            <returns>An encrypted private key info containing the original private key info.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Pkcs.PkcsException">
            <summary>
            Base exception for PKCS related issues.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Pkcs.PkcsIOException">
            <summary>
            Base exception for parsing related issues in the PKCS namespace.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkcs.PrivateKeyInfoFactory.CreatePrivateKeyInfo(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Asn1.Asn1Set)">
             Create a PrivateKeyInfo representation of a private key with attributes.
            
             @param privateKey the key to be encoded into the info object.
             @param attributes the set of attributes to be included.
             @return the appropriate PrivateKeyInfo
             @throws java.io.IOException on an error encoding the key
        </member>
        <member name="P:Org.BouncyCastle.Pkix.CertStatus.RevocationDate">
            <summary>
            Returns the revocationDate.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.CertStatus.Status">
            <summary>
            Returns the certStatus.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixAttrCertChecker.GetSupportedExtensions">
            Returns an immutable <code>Set</code> of X.509 attribute certificate
            extensions that this <code>PkixAttrCertChecker</code> supports or
            <code>null</code> if no extensions are supported.
            <p>
            Each element of the set is a <code>String</code> representing the
            Object Identifier (OID) of the X.509 extension that is supported.
            </p>
            <p>
            All X.509 attribute certificate extensions that a
            <code>PkixAttrCertChecker</code> might possibly be able to process
            should be included in the set.
            </p>
            
            @return an immutable <code>Set</code> of X.509 extension OIDs (in
                    <code>String</code> format) supported by this
                    <code>PkixAttrCertChecker</code>, or <code>null</code> if no
                    extensions are supported
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixAttrCertChecker.Check(Org.BouncyCastle.X509.IX509AttributeCertificate,Org.BouncyCastle.Pkix.PkixCertPath,Org.BouncyCastle.Pkix.PkixCertPath,System.Collections.ICollection)">
            Performs checks on the specified attribute certificate. Every handled
            extension is rmeoved from the <code>unresolvedCritExts</code>
            collection.
            
            @param attrCert The attribute certificate to be checked.
            @param certPath The certificate path which belongs to the attribute
                       certificate issuer public key certificate.
            @param holderCertPath The certificate path which belongs to the holder
                       certificate.
            @param unresolvedCritExts a <code>Collection</code> of OID strings
                       representing the current set of unresolved critical extensions
            @throws CertPathValidatorException if the specified attribute certificate
                        does not pass the check.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixAttrCertChecker.Clone">
            Returns a clone of this object.
            
            @return a copy of this <code>PkixAttrCertChecker</code>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixAttrCertPathBuilder.Build(Org.BouncyCastle.Pkix.PkixBuilderParameters)">
             Build and validate a CertPath using the given parameter.
            
             @param params PKIXBuilderParameters object containing all information to
                        build the CertPath
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixAttrCertPathValidator">
            CertPathValidatorSpi implementation for X.509 Attribute Certificates la RFC 3281.
            
            @see org.bouncycastle.x509.ExtendedPkixParameters
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixAttrCertPathValidator.Validate(Org.BouncyCastle.Pkix.PkixCertPath,Org.BouncyCastle.Pkix.PkixParameters)">
            Validates an attribute certificate with the given certificate path.
            
            <p>
            <code>params</code> must be an instance of
            <code>ExtendedPkixParameters</code>.
            </p><p>
            The target constraints in the <code>params</code> must be an
            <code>X509AttrCertStoreSelector</code> with at least the attribute
            certificate criterion set. Obey that also target informations may be
            necessary to correctly validate this attribute certificate.
            </p><p>
            The attribute certificate issuer must be added to the trusted attribute
            issuers with {@link ExtendedPkixParameters#setTrustedACIssuers(Set)}.
            </p>
            @param certPath The certificate path which belongs to the attribute
                       certificate issuer public key certificate.
            @param params The PKIX parameters.
            @return A <code>PKIXCertPathValidatorResult</code> of the result of
                    validating the <code>certPath</code>.
            @throws InvalidAlgorithmParameterException if <code>params</code> is
                        inappropriate for this validator.
            @throws CertPathValidatorException if the verification fails.
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixBuilderParameters">
            <summary>
            Summary description for PkixBuilderParameters.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixParameters">
            <summary>
            Summary description for PkixParameters.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Pkix.PkixParameters.PkixValidityModel">
            This is the default PKIX validity model. Actually there are two variants
            of this: The PKIX model and the modified PKIX model. The PKIX model
            verifies that all involved certificates must have been valid at the
            current time. The modified PKIX model verifies that all involved
            certificates were valid at the signing time. Both are indirectly choosen
            with the {@link PKIXParameters#setDate(java.util.Date)} method, so this
            methods sets the Date when <em>all</em> certificates must have been
            valid.
        </member>
        <member name="F:Org.BouncyCastle.Pkix.PkixParameters.ChainValidityModel">
            This model uses the following validity model. Each certificate must have
            been valid at the moment where is was used. That means the end
            certificate must have been valid at the time the signature was done. The
            CA certificate which signed the end certificate must have been valid,
            when the end certificate was signed. The CA (or Root CA) certificate must
            have been valid, when the CA certificate was signed and so on. So the
            {@link PKIXParameters#setDate(java.util.Date)} method sets the time, when
            the <em>end certificate</em> must have been valid. <p/> It is used e.g.
            in the German signature law.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.#ctor(Org.BouncyCastle.Utilities.Collections.ISet)">
             Creates an instance of PKIXParameters with the specified Set of
             most-trusted CAs. Each element of the set is a TrustAnchor.<br />
             <br />
             Note that the Set is copied to protect against subsequent modifications.
            
             @param trustAnchors
                        a Set of TrustAnchors
            
             @exception InvalidAlgorithmParameterException
                            if the specified Set is empty
                            <code>(trustAnchors.isEmpty() == true)</code>
             @exception NullPointerException
                            if the specified Set is <code>null</code>
             @exception ClassCastException
                            if any of the elements in the Set are not of type
                            <code>java.security.cert.TrustAnchor</code>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetTargetCertConstraints">
             Returns the required constraints on the target certificate. The
             constraints are returned as an instance of CertSelector. If
             <code>null</code>, no constraints are defined.<br />
             <br />
             Note that the CertSelector returned is cloned to protect against
             subsequent modifications.
            
             @return a CertSelector specifying the constraints on the target
                     certificate (or <code>null</code>)
            
             @see #setTargetCertConstraints(CertSelector)
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetTargetCertConstraints(Org.BouncyCastle.X509.Store.IX509Selector)">
             Sets the required constraints on the target certificate. The constraints
             are specified as an instance of CertSelector. If null, no constraints are
             defined.<br />
             <br />
             Note that the CertSelector specified is cloned to protect against
             subsequent modifications.
            
             @param selector
                        a CertSelector specifying the constraints on the target
                        certificate (or <code>null</code>)
            
             @see #getTargetCertConstraints()
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetInitialPolicies">
             Returns an immutable Set of initial policy identifiers (OID strings),
             indicating that any one of these policies would be acceptable to the
             certificate user for the purposes of certification path processing. The
             default return value is an empty <code>Set</code>, which is
             interpreted as meaning that any policy would be acceptable.
            
             @return an immutable <code>Set</code> of initial policy OIDs in String
                     format, or an empty <code>Set</code> (implying any policy is
                     acceptable). Never returns <code>null</code>.
            
             @see #setInitialPolicies(java.util.Set)
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetInitialPolicies(Org.BouncyCastle.Utilities.Collections.ISet)">
             Sets the <code>Set</code> of initial policy identifiers (OID strings),
             indicating that any one of these policies would be acceptable to the
             certificate user for the purposes of certification path processing. By
             default, any policy is acceptable (i.e. all policies), so a user that
             wants to allow any policy as acceptable does not need to call this
             method, or can call it with an empty <code>Set</code> (or
             <code>null</code>).<br />
             <br />
             Note that the Set is copied to protect against subsequent modifications.<br />
             <br />
            
             @param initialPolicies
                        a Set of initial policy OIDs in String format (or
                        <code>null</code>)
            
             @exception ClassCastException
                            if any of the elements in the set are not of type String
            
             @see #getInitialPolicies()
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetCertPathCheckers(System.Collections.IList)">
             Sets a <code>List</code> of additional certification path checkers. If
             the specified List contains an object that is not a PKIXCertPathChecker,
             it is ignored.<br />
             <br />
             Each <code>PKIXCertPathChecker</code> specified implements additional
             checks on a certificate. Typically, these are checks to process and
             verify private extensions contained in certificates. Each
             <code>PKIXCertPathChecker</code> should be instantiated with any
             initialization parameters needed to execute the check.<br />
             <br />
             This method allows sophisticated applications to extend a PKIX
             <code>CertPathValidator</code> or <code>CertPathBuilder</code>. Each
             of the specified PKIXCertPathCheckers will be called, in turn, by a PKIX
             <code>CertPathValidator</code> or <code>CertPathBuilder</code> for
             each certificate processed or validated.<br />
             <br />
             Regardless of whether these additional PKIXCertPathCheckers are set, a
             PKIX <code>CertPathValidator</code> or <code>CertPathBuilder</code>
             must perform all of the required PKIX checks on each certificate. The one
             exception to this rule is if the RevocationEnabled flag is set to false
             (see the {@link #setRevocationEnabled(boolean) setRevocationEnabled}
             method).<br />
             <br />
             Note that the List supplied here is copied and each PKIXCertPathChecker
             in the list is cloned to protect against subsequent modifications.
            
             @param checkers
                        a List of PKIXCertPathCheckers. May be null, in which case no
                        additional checkers will be used.
             @exception ClassCastException
                            if any of the elements in the list are not of type
                            <code>java.security.cert.PKIXCertPathChecker</code>
             @see #getCertPathCheckers()
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetCertPathCheckers">
             Returns the List of certification path checkers. Each PKIXCertPathChecker
             in the returned IList is cloned to protect against subsequent modifications.
            
             @return an immutable List of PKIXCertPathCheckers (may be empty, but not
                     <code>null</code>)
            
             @see #setCertPathCheckers(java.util.List)
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.AddCertPathChecker(Org.BouncyCastle.Pkix.PkixCertPathChecker)">
             Adds a <code>PKIXCertPathChecker</code> to the list of certification
             path checkers. See the {@link #setCertPathCheckers setCertPathCheckers}
             method for more details.
             <p>
             Note that the <code>PKIXCertPathChecker</code> is cloned to protect
             against subsequent modifications.</p>
            
             @param checker a <code>PKIXCertPathChecker</code> to add to the list of
             checks. If <code>null</code>, the checker is ignored (not added to list).
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetParams(Org.BouncyCastle.Pkix.PkixParameters)">
             Method to support <code>Clone()</code> under J2ME.
             <code>super.Clone()</code> does not exist and fields are not copied.
            
             @param params Parameters to set. If this are
                        <code>ExtendedPkixParameters</code> they are copied to.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetStores(System.Collections.IList)">
             Sets the Bouncy Castle Stores for finding CRLs, certificates, attribute
             certificates or cross certificates.
             <p>
             The <code>IList</code> is cloned.
             </p>
            
             @param stores A list of stores to use.
             @see #getStores
             @throws ClassCastException if an element of <code>stores</code> is not
                         a {@link Store}.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.AddStore(Org.BouncyCastle.X509.Store.IX509Store)">
             Adds a Bouncy Castle {@link Store} to find CRLs, certificates, attribute
             certificates or cross certificates.
             <p>
             This method should be used to add local stores, like collection based
             X.509 stores, if available. Local stores should be considered first,
             before trying to use additional (remote) locations, because they do not
             need possible additional network traffic.
             </p><p>
             If <code>store</code> is <code>null</code> it is ignored.
             </p>
            
             @param store The store to add.
             @see #getStores
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.AddAdditionalStore(Org.BouncyCastle.X509.Store.IX509Store)">
             Adds an additional Bouncy Castle {@link Store} to find CRLs, certificates,
             attribute certificates or cross certificates.
             <p>
             You should not use this method. This method is used for adding additional
             X.509 stores, which are used to add (remote) locations, e.g. LDAP, found
             during X.509 object processing, e.g. in certificates or CRLs. This method
             is used in PKIX certification path processing.
             </p><p>
             If <code>store</code> is <code>null</code> it is ignored.
             </p>
            
             @param store The store to add.
             @see #getStores()
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetAdditionalStores">
             Returns an <code>IList</code> of additional Bouncy Castle
             <code>Store</code>s used for finding CRLs, certificates, attribute
             certificates or cross certificates.
            
             @return an immutable <code>IList</code> of additional Bouncy Castle
                     <code>Store</code>s. Never <code>null</code>.
            
             @see #addAddionalStore(Store)
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetStores">
             Returns an <code>IList</code> of Bouncy Castle
             <code>Store</code>s used for finding CRLs, certificates, attribute
             certificates or cross certificates.
            
             @return an immutable <code>IList</code> of Bouncy Castle
                     <code>Store</code>s. Never <code>null</code>.
            
             @see #setStores(IList)
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetAdditionalLocationsEnabled(System.Boolean)">
             Sets if additional {@link X509Store}s for locations like LDAP found in
             certificates or CRLs should be used.
            
             @param enabled <code>true</code> if additional stores are used.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetTargetConstraints">
             Returns the required constraints on the target certificate or attribute
             certificate. The constraints are returned as an instance of
             <code>IX509Selector</code>. If <code>null</code>, no constraints are
             defined.
            
             <p>
             The target certificate in a PKIX path may be a certificate or an
             attribute certificate.
             </p><p>
             Note that the <code>IX509Selector</code> returned is cloned to protect
             against subsequent modifications.
             </p>
             @return a <code>IX509Selector</code> specifying the constraints on the
                     target certificate or attribute certificate (or <code>null</code>)
             @see #setTargetConstraints
             @see X509CertStoreSelector
             @see X509AttributeCertStoreSelector
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetTargetConstraints(Org.BouncyCastle.X509.Store.IX509Selector)">
             Sets the required constraints on the target certificate or attribute
             certificate. The constraints are specified as an instance of
             <code>IX509Selector</code>. If <code>null</code>, no constraints are
             defined.
             <p>
             The target certificate in a PKIX path may be a certificate or an
             attribute certificate.
             </p><p>
             Note that the <code>IX509Selector</code> specified is cloned to protect
             against subsequent modifications.
             </p>
            
             @param selector a <code>IX509Selector</code> specifying the constraints on
                        the target certificate or attribute certificate (or
                        <code>null</code>)
             @see #getTargetConstraints
             @see X509CertStoreSelector
             @see X509AttributeCertStoreSelector
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetTrustedACIssuers">
             Returns the trusted attribute certificate issuers. If attribute
             certificates is verified the trusted AC issuers must be set.
             <p>
             The returned <code>ISet</code> consists of <code>TrustAnchor</code>s.
             </p><p>
             The returned <code>ISet</code> is immutable. Never <code>null</code>
             </p>
            
             @return Returns an immutable set of the trusted AC issuers.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetTrustedACIssuers(Org.BouncyCastle.Utilities.Collections.ISet)">
             Sets the trusted attribute certificate issuers. If attribute certificates
             is verified the trusted AC issuers must be set.
             <p>
             The <code>trustedACIssuers</code> must be a <code>ISet</code> of
             <code>TrustAnchor</code>
             </p><p>
             The given set is cloned.
             </p>
            
             @param trustedACIssuers The trusted AC issuers to set. Is never
                        <code>null</code>.
             @throws ClassCastException if an element of <code>stores</code> is not
                         a <code>TrustAnchor</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetNecessaryACAttributes">
             Returns the necessary attributes which must be contained in an attribute
             certificate.
             <p>
             The returned <code>ISet</code> is immutable and contains
             <code>String</code>s with the OIDs.
             </p>
            
             @return Returns the necessary AC attributes.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetNecessaryACAttributes(Org.BouncyCastle.Utilities.Collections.ISet)">
             Sets the necessary which must be contained in an attribute certificate.
             <p>
             The <code>ISet</code> must contain <code>String</code>s with the
             OIDs.
             </p><p>
             The set is cloned.
             </p>
            
             @param necessaryACAttributes The necessary AC attributes to set.
             @throws ClassCastException if an element of
                         <code>necessaryACAttributes</code> is not a
                         <code>String</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetProhibitedACAttributes">
             Returns the attribute certificates which are not allowed.
             <p>
             The returned <code>ISet</code> is immutable and contains
             <code>String</code>s with the OIDs.
             </p>
            
             @return Returns the prohibited AC attributes. Is never <code>null</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetProhibitedACAttributes(Org.BouncyCastle.Utilities.Collections.ISet)">
             Sets the attribute certificates which are not allowed.
             <p>
             The <code>ISet</code> must contain <code>String</code>s with the
             OIDs.
             </p><p>
             The set is cloned.
             </p>
            
             @param prohibitedACAttributes The prohibited AC attributes to set.
             @throws ClassCastException if an element of
                         <code>prohibitedACAttributes</code> is not a
                         <code>String</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.GetAttrCertCheckers">
             Returns the attribute certificate checker. The returned set contains
             {@link PKIXAttrCertChecker}s and is immutable.
            
             @return Returns the attribute certificate checker. Is never
                     <code>null</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixParameters.SetAttrCertCheckers(Org.BouncyCastle.Utilities.Collections.ISet)">
             Sets the attribute certificate checkers.
             <p>
             All elements in the <code>ISet</code> must a {@link PKIXAttrCertChecker}.
             </p>
             <p>
             The given set is cloned.
             </p>
            
             @param attrCertCheckers The attribute certificate checkers to set. Is
                        never <code>null</code>.
             @throws ClassCastException if an element of <code>attrCertCheckers</code>
                         is not a <code>PKIXAttrCertChecker</code>.
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixParameters.IsUseDeltasEnabled">
            Whether delta CRLs should be used for checking the revocation status.
            Defaults to <code>false</code>.
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixParameters.ValidityModel">
            The validity model.
            @see #CHAIN_VALIDITY_MODEL
            @see #PKIX_VALIDITY_MODEL
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixParameters.IsAdditionalLocationsEnabled">
             Returns if additional {@link X509Store}s for locations like LDAP found
             in certificates or CRLs should be used.
            
             @return Returns <code>true</code> if additional stores are used.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixBuilderParameters.GetInstance(Org.BouncyCastle.Pkix.PkixParameters)">
             Returns an instance of <code>PkixBuilderParameters</code>.
             <p>
             This method can be used to get a copy from other
             <code>PKIXBuilderParameters</code>, <code>PKIXParameters</code>,
             and <code>ExtendedPKIXParameters</code> instances.
             </p>
            
             @param pkixParams The PKIX parameters to create a copy of.
             @return An <code>PkixBuilderParameters</code> instance.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixBuilderParameters.GetExcludedCerts">
            <summary>
            Excluded certificates are not used for building a certification path.
            </summary>
            <returns>the excluded certificates.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixBuilderParameters.SetExcludedCerts(Org.BouncyCastle.Utilities.Collections.ISet)">
            <summary>
            Sets the excluded certificates which are not used for building a
            certification path. If the <code>ISet</code> is <code>null</code> an
            empty set is assumed.
            </summary>
            <remarks>
            The given set is cloned to protect it against subsequent modifications.
            </remarks>
            <param name="excludedCerts">The excluded certificates to set.</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixBuilderParameters.SetParams(Org.BouncyCastle.Pkix.PkixParameters)">
            Can alse handle <code>ExtendedPKIXBuilderParameters</code> and
            <code>PKIXBuilderParameters</code>.
            
            @param params Parameters to set.
            @see org.bouncycastle.x509.ExtendedPKIXParameters#setParams(java.security.cert.PKIXParameters)
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixBuilderParameters.Clone">
             Makes a copy of this <code>PKIXParameters</code> object. Changes to the
             copy will not affect the original and vice versa.
            
             @return a copy of this <code>PKIXParameters</code> object
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPath">
             An immutable sequence of certificates (a certification path).<br />
             <br />
             This is an abstract class that defines the methods common to all CertPaths.
             Subclasses can handle different kinds of certificates (X.509, PGP, etc.).<br />
             <br />
             All CertPath objects have a type, a list of Certificates, and one or more
             supported encodings. Because the CertPath class is immutable, a CertPath
             cannot change in any externally visible way after being constructed. This
             stipulation applies to all public fields and methods of this class and any
             added or overridden by subclasses.<br />
             <br />
             The type is a string that identifies the type of Certificates in the
             certification path. For each certificate cert in a certification path
             certPath, cert.getType().equals(certPath.getType()) must be true.<br />
             <br />
             The list of Certificates is an ordered List of zero or more Certificates.
             This List and all of the Certificates contained in it must be immutable.<br />
             <br />
             Each CertPath object must support one or more encodings so that the object
             can be translated into a byte array for storage or transmission to other
             parties. Preferably, these encodings should be well-documented standards
             (such as PKCS#7). One of the encodings supported by a CertPath is considered
             the default encoding. This encoding is used if no encoding is explicitly
             requested (for the {@link #getEncoded()} method, for instance).<br />
             <br />
             All CertPath objects are also Serializable. CertPath objects are resolved
             into an alternate {@link CertPathRep} object during serialization. This
             allows a CertPath object to be serialized into an equivalent representation
             regardless of its underlying implementation.<br />
             <br />
             CertPath objects can be created with a CertificateFactory or they can be
             returned by other classes, such as a CertPathBuilder.<br />
             <br />
             By convention, X.509 CertPaths (consisting of X509Certificates), are ordered
             starting with the target certificate and ending with a certificate issued by
             the trust anchor. That is, the issuer of one certificate is the subject of
             the following one. The certificate representing the
             {@link TrustAnchor TrustAnchor} should not be included in the certification
             path. Unvalidated X.509 CertPaths may not follow these conventions. PKIX
             CertPathValidators will detect any departure from these conventions that
             cause the certification path to be invalid and throw a
             CertPathValidatorException.<br />
             <br />
             <strong>Concurrent Access</strong><br />
             <br />
             All CertPath objects must be thread-safe. That is, multiple threads may
             concurrently invoke the methods defined in this class on a single CertPath
             object (or more than one) with no ill effects. This is also true for the List
             returned by CertPath.getCertificates.<br />
             <br />
             Requiring CertPath objects to be immutable and thread-safe allows them to be
             passed around to various pieces of code without worrying about coordinating
             access. Providing this thread-safety is generally not difficult, since the
             CertPath and List objects in question are immutable.
            
             @see CertificateFactory
             @see CertPathBuilder
            <summary>
            CertPath implementation for X.509 certificates.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPath.SortCerts(System.Collections.IList)">
            @param certs
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPath.#ctor(System.Collections.ICollection)">
             Creates a CertPath of the specified type.
             This constructor is protected because most users should use
             a CertificateFactory to create CertPaths.
             @param type the standard name of the type of Certificatesin this path
            
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPath.#ctor(System.IO.Stream,System.String)">
             Creates a CertPath of the specified type.
             This constructor is protected because most users should use
             a CertificateFactory to create CertPaths.
            
             @param type the standard name of the type of Certificatesin this path
            
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPath.Equals(System.Object)">
             Compares this certification path for equality with the specified object.
             Two CertPaths are equal if and only if their types are equal and their
             certificate Lists (and by implication the Certificates in those Lists)
             are equal. A CertPath is never equal to an object that is not a CertPath.<br />
             <br />
             This algorithm is implemented by this method. If it is overridden, the
             behavior specified here must be maintained.
            
             @param other
                        the object to test for equality with this certification path
            
             @return true if the specified object is equal to this certification path,
                     false otherwise
            
             @see Object#hashCode() Object.hashCode()
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPath.GetEncoded">
             Returns the encoded form of this certification path, using
             the default encoding.
            
             @return the encoded bytes
             @exception CertificateEncodingException if an encoding error occurs
            
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPath.GetEncoded(System.String)">
             Returns the encoded form of this certification path, using
             the specified encoding.
            
             @param encoding the name of the encoding to use
             @return the encoded bytes
             @exception CertificateEncodingException if an encoding error
             occurs or the encoding requested is not supported
            
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPath.ToAsn1Object(Org.BouncyCastle.X509.X509Certificate)">
             Return a DERObject containing the encoded certificate.
            
             @param cert the X509Certificate object to be encoded
            
             @return the DERObject
            
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixCertPath.Encodings">
             Returns an iteration of the encodings supported by this
             certification path, with the default encoding
             first. Attempts to modify the returned Iterator via its
             remove method result in an UnsupportedOperationException.
            
             @return an Iterator over the names of the supported encodings (as Strings)
            
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixCertPath.Certificates">
            <summary>
            Returns the list of certificates in this certification
            path.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPathBuilder">
             Implements the PKIX CertPathBuilding algorithm for BouncyCastle.
            
             @see CertPathBuilderSpi
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathBuilder.Build(Org.BouncyCastle.Pkix.PkixBuilderParameters)">
             Build and validate a CertPath using the given parameter.
            
             @param params PKIXBuilderParameters object containing all information to
                        build the CertPath
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPathBuilderException">
            <summary>
            Summary description for PkixCertPathBuilderException.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPathBuilderResult">
            <summary>
            Summary description for PkixCertPathBuilderResult.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPathValidatorResult">
            <summary>
            Summary description for PkixCertPathValidatorResult.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathChecker.Init(System.Boolean)">
                     * Initializes the internal state of this <code>PKIXCertPathChecker</code>.
                     * <p>
                     * The <code>forward</code> flag specifies the order that certificates
                     * will be passed to the {@link #check check} method (forward or reverse). A
                     * <code>PKIXCertPathChecker</code> <b>must</b> support reverse checking
                     * and <b>may</b> support forward checking.
            		 * </p>
                     * 
                     * @param forward
                     *            the order that certificates are presented to the
                     *            <code>check</code> method. If <code>true</code>,
                     *            certificates are presented from target to most-trusted CA
                     *            (forward); if <code>false</code>, from most-trusted CA to
                     *            target (reverse).
                     * @exception CertPathValidatorException
                     *                if this <code>PKIXCertPathChecker</code> is unable to
                     *                check certificates in the specified order; it should never
                     *                be thrown if the forward flag is false since reverse
                     *                checking must be supported
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathChecker.IsForwardCheckingSupported">
            Indicates if forward checking is supported. Forward checking refers to
            the ability of the <code>PKIXCertPathChecker</code> to perform its
            checks when certificates are presented to the <code>check</code> method
            in the forward direction (from target to most-trusted CA).
            
            @return <code>true</code> if forward checking is supported,
                    <code>false</code> otherwise
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathChecker.GetSupportedExtensions">
                     * Returns an immutable <code>Set</code> of X.509 certificate extensions
                     * that this <code>PKIXCertPathChecker</code> supports (i.e. recognizes,
                     * is able to process), or <code>null</code> if no extensions are
                     * supported.
                     * <p>
                     * Each element of the set is a <code>String</code> representing the
                     * Object Identifier (OID) of the X.509 extension that is supported. The OID
                     * is represented by a set of nonnegative integers separated by periods.
                     * </p><p>
                     * All X.509 certificate extensions that a <code>PKIXCertPathChecker</code>
                     * might possibly be able to process should be included in the set.
            		 * </p>
                     * 
                     * @return an immutable <code>Set</code> of X.509 extension OIDs (in
                     *         <code>String</code> format) supported by this
                     *         <code>PKIXCertPathChecker</code>, or <code>null</code> if no
                     *         extensions are supported
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathChecker.Check(Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Utilities.Collections.ISet)">
            Performs the check(s) on the specified certificate using its internal
            state and removes any critical extensions that it processes from the
            specified collection of OID strings that represent the unresolved
            critical extensions. The certificates are presented in the order
            specified by the <code>init</code> method.
            
            @param cert
                       the <code>Certificate</code> to be checked
            @param unresolvedCritExts
                       a <code>Collection</code> of OID strings representing the
                       current set of unresolved critical extensions
            @exception CertPathValidatorException
                           if the specified certificate does not pass the check
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathChecker.Clone">
            Returns a clone of this object. Calls the <code>Object.clone()</code>
            method. All subclasses which maintain state must support and override
            this method, if necessary.
            
            @return a copy of this <code>PKIXCertPathChecker</code>
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPathValidator">
            The <i>Service Provider Interface</i> (<b>SPI</b>)
            for the {@link CertPathValidator CertPathValidator} class. All
            <code>CertPathValidator</code> implementations must include a class (the
            SPI class) that extends this class (<code>CertPathValidatorSpi</code>)
            and implements all of its methods. In general, instances of this class
            should only be accessed through the <code>CertPathValidator</code> class.
            For details, see the Java Cryptography Architecture.<br />
            <br />
            <b>Concurrent Access</b><br />
            <br />
            Instances of this class need not be protected against concurrent
            access from multiple threads. Threads that need to access a single
            <code>CertPathValidatorSpi</code> instance concurrently should synchronize
            amongst themselves and provide the necessary locking before calling the
            wrapping <code>CertPathValidator</code> object.<br />
            <br />
            However, implementations of <code>CertPathValidatorSpi</code> may still
            encounter concurrency issues, since multiple threads each
            manipulating a different <code>CertPathValidatorSpi</code> instance need not
            synchronize.
            <summary>
            CertPathValidatorSpi implementation for X.509 Certificate validation a la RFC
            3280.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPathValidatorException">
             An exception indicating one of a variety of problems encountered when 
             validating a certification path. <br />
             <br />
             A <code>CertPathValidatorException</code> provides support for wrapping
             exceptions. The {@link #getCause getCause} method returns the throwable, 
             if any, that caused this exception to be thrown. <br />
             <br />
             A <code>CertPathValidatorException</code> may also include the 
             certification path that was being validated when the exception was thrown 
             and the index of the certificate in the certification path that caused the 
             exception to be thrown. Use the {@link #getCertPath getCertPath} and
             {@link #getIndex getIndex} methods to retrieve this information.<br />
             <br />
             <b>Concurrent Access</b><br />
             <br />
             Unless otherwise specified, the methods defined in this class are not
             thread-safe. Multiple threads that need to access a single
             object concurrently should synchronize amongst themselves and
             provide the necessary locking. Multiple threads each manipulating
             separate objects need not synchronize.
            
             @see CertPathValidator
            
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorException.#ctor(System.String)">
            <summary>
            Creates a <code>PkixCertPathValidatorException</code> with the given detail
            message. A detail message is a <code>String</code> that describes this
            particular exception. 
            </summary>
            <param name="message">the detail message</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a <code>PkixCertPathValidatorException</code> with the specified
            detail message and cause.
            </summary>
            <param name="message">the detail message</param>
            <param name="cause">the cause (which is saved for later retrieval by the
            {@link #getCause getCause()} method). (A <code>null</code>
            value is permitted, and indicates that the cause is
            nonexistent or unknown.)</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorException.#ctor(System.String,System.Exception,Org.BouncyCastle.Pkix.PkixCertPath,System.Int32)">
            <summary>
            Creates a <code>PkixCertPathValidatorException</code> with the specified
            detail message, cause, certification path, and index.
            </summary>
            <param name="message">the detail message (or <code>null</code> if none)</param>
            <param name="cause">the cause (or <code>null</code> if none)</param>
            <param name="certPath">the certification path that was in the process of being
            validated when the error was encountered</param>
            <param name="index">the index of the certificate in the certification path that</param>																																																																																   * 
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixCertPathValidatorException.Message">
            <summary>
            Returns the detail message for this <code>CertPathValidatorException</code>.
            </summary>
            <returns>the detail message, or <code>null</code> if neither the message nor cause were specified</returns>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixCertPathValidatorException.CertPath">
            Returns the certification path that was being validated when the
            exception was thrown.
            
            @return the <code>CertPath</code> that was being validated when the
                    exception was thrown (or <code>null</code> if not specified)
        </member>
        <member name="P:Org.BouncyCastle.Pkix.PkixCertPathValidatorException.Index">
            Returns the index of the certificate in the certification path that
            caused the exception to be thrown. Note that the list of certificates in
            a <code>CertPath</code> is zero based. If no index has been set, -1 is
            returned.
            
            @return the index that has been set, or -1 if none has been set
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities">
            <summary>
            Summary description for PkixCertPathValidatorUtilities.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.KEY_CERT_SIGN">
            <summary>
            key usage bits
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.FindTrustAnchor(Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Utilities.Collections.ISet)">
            <summary>
            Search the given Set of TrustAnchor's for one that is the
            issuer of the given X509 certificate.
            </summary>
            <param name="cert">the X509 certificate</param>
            <param name="trustAnchors">a Set of TrustAnchor's</param>
            <returns>the <code>TrustAnchor</code> object if found or
            <code>null</code> if not.
            </returns>
            @exception
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.GetIssuerPrincipal(System.Object)">
            <summary>
            Returns the issuer of an attribute certificate or certificate.
            </summary>
            <param name="cert">The attribute certificate or certificate.</param>
            <returns>The issuer as <code>X500Principal</code>.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.GetNextWorkingKey(System.Collections.IList,System.Int32)">
             Return the next working key inheriting DSA parameters if necessary.
             <p>
             This methods inherits DSA parameters from the indexed certificate or
             previous certificates in the certificate chain to the returned
             <code>PublicKey</code>. The list is searched upwards, meaning the end
             certificate is at position 0 and previous certificates are following.
             </p>
             <p>
             If the indexed certificate does not contain a DSA key this method simply
             returns the public key. If the DSA key already contains DSA parameters
             the key is also only returned.
             </p>
            
             @param certs The certification path.
             @param index The index of the certificate which contains the public key
                        which should be extended with DSA parameters.
             @return The public key of the certificate in list position
                     <code>index</code> extended with DSA parameters if applicable.
             @throws Exception if DSA parameters cannot be inherited.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.FindCertificates(Org.BouncyCastle.X509.Store.X509CertStoreSelector,System.Collections.IList)">
            <summary>
            Return a Collection of all certificates or attribute certificates found
            in the X509Store's that are matching the certSelect criteriums.
            </summary>
            <param name="certSelect">a {@link Selector} object that will be used to select
            the certificates</param>
            <param name="certStores">a List containing only X509Store objects. These
            are used to search for certificates.</param>
            <returns>a Collection of all found <see cref="T:Org.BouncyCastle.X509.X509Certificate"/> or
            <see cref="T:Org.BouncyCastle.X509.IX509AttributeCertificate"/> objects.
            May be empty but never <code>null</code>.</returns>
            <exception> <see cref="T:System.Exception"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.GetCrlIssuersFromDistributionPoint(Org.BouncyCastle.Asn1.X509.DistributionPoint,System.Collections.ICollection,Org.BouncyCastle.X509.Store.X509CrlStoreSelector,Org.BouncyCastle.Pkix.PkixParameters)">
             Add the CRL issuers from the cRLIssuer field of the distribution point or
             from the certificate if not given to the issuer criterion of the
             <code>selector</code>.
             <p>
             The <code>issuerPrincipals</code> are a collection with a single
             <code>X500Principal</code> for <code>X509Certificate</code>s. For
             {@link X509AttributeCertificate}s the issuer may contain more than one
             <code>X500Principal</code>.
             </p>
            
             @param dp The distribution point.
             @param issuerPrincipals The issuers of the certificate or attribute
                        certificate which contains the distribution point.
             @param selector The CRL selector.
             @param pkixParams The PKIX parameters containing the cert stores.
             @throws Exception if an exception occurs while processing.
             @throws ClassCastException if <code>issuerPrincipals</code> does not
             contain only <code>X500Principal</code>s.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.GetCompleteCrls(Org.BouncyCastle.Asn1.X509.DistributionPoint,System.Object,System.DateTime,Org.BouncyCastle.Pkix.PkixParameters)">
             Fetches complete CRLs according to RFC 3280.
            
             @param dp The distribution point for which the complete CRL
             @param cert The <code>X509Certificate</code> or
                        {@link org.bouncycastle.x509.X509AttributeCertificate} for
                        which the CRL should be searched.
             @param currentDate The date for which the delta CRLs must be valid.
             @param paramsPKIX The extended PKIX parameters.
             @return A <code>Set</code> of <code>X509CRL</code>s with complete
                     CRLs.
             @throws Exception if an exception occurs while picking the CRLs
                         or no CRLs are found.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.GetDeltaCrls(System.DateTime,Org.BouncyCastle.Pkix.PkixParameters,Org.BouncyCastle.X509.X509Crl)">
             Fetches delta CRLs according to RFC 3280 section 5.2.4.
            
             @param currentDate The date for which the delta CRLs must be valid.
             @param paramsPKIX The extended PKIX parameters.
             @param completeCRL The complete CRL the delta CRL is for.
             @return A <code>Set</code> of <code>X509CRL</code>s with delta CRLs.
             @throws Exception if an exception occurs while picking the delta
                         CRLs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.FindIssuerCerts(Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Pkix.PkixBuilderParameters)">
             Find the issuer certificates of a given certificate.
            
             @param cert
                        The certificate for which an issuer should be found.
             @param pkixParams
             @return A <code>Collection</code> object containing the issuer
                     <code>X509Certificate</code>s. Never <code>null</code>.
            
             @exception Exception
                            if an error occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCertPathValidatorUtilities.GetExtensionValue(Org.BouncyCastle.X509.IX509Extension,Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            <summary>
            Extract the value of the given extension, if it exists.
            </summary>
            <param name="ext">The extension object.</param>
            <param name="oid">The object identifier to obtain.</param>
            <returns>Asn1Object</returns>
            <exception> <see cref="T:System.Exception"/>if the extension cannot be read.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixCrlUtilities.FindCrls(Org.BouncyCastle.X509.Store.X509CrlStoreSelector,System.Collections.IList)">
            <summary>
            crl checking
            Return a Collection of all CRLs found in the X509Store's that are
            matching the crlSelect criteriums.
            </summary>
            <param name="crlSelect">a {@link X509CRLStoreSelector} object that will be used
            to select the CRLs</param>
            <param name="crlStores">a List containing only {@link org.bouncycastle.x509.X509Store
            X509Store} objects. These are used to search for CRLs</param>
            <returns>a Collection of all found {@link X509CRL X509CRL} objects. May be
            empty but never <code>null</code>.
            </returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.IntersectIP(Org.BouncyCastle.Utilities.Collections.ISet,Org.BouncyCastle.Utilities.Collections.ISet)">
             Returns the intersection of the permitted IP ranges in
             <code>permitted</code> with <code>ip</code>.
            
             @param permitted A <code>Set</code> of permitted IP addresses with
                              their subnet mask as byte arrays.
             @param ips       The IP address with its subnet mask.
             @return The <code>Set</code> of permitted IP ranges intersected with
                     <code>ip</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.UnionIP(Org.BouncyCastle.Utilities.Collections.ISet,System.Byte[])">
             Returns the union of the excluded IP ranges in <code>excluded</code>
             with <code>ip</code>.
            
             @param excluded A <code>Set</code> of excluded IP addresses with their
                             subnet mask as byte arrays.
             @param ip       The IP address with its subnet mask.
             @return The <code>Set</code> of excluded IP ranges unified with
                     <code>ip</code> as byte arrays.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.UnionIPRange(System.Byte[],System.Byte[])">
             Calculates the union if two IP ranges.
            
             @param ipWithSubmask1 The first IP address with its subnet mask.
             @param ipWithSubmask2 The second IP address with its subnet mask.
             @return A <code>Set</code> with the union of both addresses.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.IntersectIPRange(System.Byte[],System.Byte[])">
             Calculates the interesction if two IP ranges.
            
             @param ipWithSubmask1 The first IP address with its subnet mask.
             @param ipWithSubmask2 The second IP address with its subnet mask.
             @return A <code>Set</code> with the single IP address with its subnet
                     mask as a byte array or an empty <code>Set</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.IpWithSubnetMask(System.Byte[],System.Byte[])">
             Concatenates the IP address with its subnet mask.
            
             @param ip         The IP address.
             @param subnetMask Its subnet mask.
             @return The concatenated IP address with its subnet mask.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.ExtractIPsAndSubnetMasks(System.Byte[],System.Byte[])">
             Splits the IP addresses and their subnet mask.
            
             @param ipWithSubmask1 The first IP address with the subnet mask.
             @param ipWithSubmask2 The second IP address with the subnet mask.
             @return An array with two elements. Each element contains the IP address
                     and the subnet mask in this order.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.MinMaxIPs(System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
             Based on the two IP addresses and their subnet masks the IP range is
             computed for each IP address - subnet mask pair and returned as the
             minimum IP address and the maximum address of the range.
            
             @param ip1         The first IP address.
             @param subnetmask1 The subnet mask of the first IP address.
             @param ip2         The second IP address.
             @param subnetmask2 The subnet mask of the second IP address.
             @return A array with two elements. The first/second element contains the
                     min and max IP address of the first/second IP address and its
                     subnet mask.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.IsIPConstrained(System.Byte[],System.Byte[])">
             Checks if the IP address <code>ip</code> is constrained by
             <code>constraint</code>.
            
             @param constraint The constraint. This is an IP address concatenated with
                               its subnetmask.
             @param ip         The IP address.
             @return <code>true</code> if constrained, <code>false</code>
                     otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.CheckPermittedIP(Org.BouncyCastle.Utilities.Collections.ISet,System.Byte[])">
             Checks if the IP <code>ip</code> is included in the permitted ISet
             <code>permitted</code>.
            
             @param permitted A <code>Set</code> of permitted IP addresses with
                              their subnet mask as byte arrays.
             @param ip        The IP address.
             @throws PkixNameConstraintValidatorException
                      if the IP is not permitted.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.CheckExcludedIP(Org.BouncyCastle.Utilities.Collections.ISet,System.Byte[])">
             Checks if the IP <code>ip</code> is included in the excluded ISet
             <code>excluded</code>.
            
             @param excluded A <code>Set</code> of excluded IP addresses with their
                             subnet mask as byte arrays.
             @param ip       The IP address.
             @throws PkixNameConstraintValidatorException
                      if the IP is excluded.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.UnionEmail(System.String,System.String,Org.BouncyCastle.Utilities.Collections.ISet)">
             The common part of <code>email1</code> and <code>email2</code> is
             added to the union <code>union</code>. If <code>email1</code> and
             <code>email2</code> have nothing in common they are added both.
            
             @param email1 Email address constraint 1.
             @param email2 Email address constraint 2.
             @param union  The union.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.IntersectEmail(System.String,System.String,Org.BouncyCastle.Utilities.Collections.ISet)">
             The most restricting part from <code>email1</code> and
             <code>email2</code> is added to the intersection <code>intersect</code>.
            
             @param email1    Email address constraint 1.
             @param email2    Email address constraint 2.
             @param intersect The intersection.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.checkPermitted(Org.BouncyCastle.Asn1.X509.GeneralName)">
             Checks if the given GeneralName is in the permitted ISet.
            
             @param name The GeneralName
             @throws PkixNameConstraintValidatorException
                      If the <code>name</code>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.checkExcluded(Org.BouncyCastle.Asn1.X509.GeneralName)">
             Check if the given GeneralName is contained in the excluded ISet.
            
             @param name The GeneralName.
             @throws PkixNameConstraintValidatorException
                      If the <code>name</code> is
                      excluded.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.IntersectPermittedSubtree(Org.BouncyCastle.Asn1.Asn1Sequence)">
             Updates the permitted ISet of these name constraints with the intersection
             with the given subtree.
            
             @param permitted The permitted subtrees
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.AddExcludedSubtree(Org.BouncyCastle.Asn1.X509.GeneralSubtree)">
             Adds a subtree to the excluded ISet of these name constraints.
            
             @param subtree A subtree with an excluded GeneralName.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.Max(System.Byte[],System.Byte[])">
             Returns the maximum IP address.
            
             @param ip1 The first IP address.
             @param ip2 The second IP address.
             @return The maximum IP address.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.Min(System.Byte[],System.Byte[])">
             Returns the minimum IP address.
            
             @param ip1 The first IP address.
             @param ip2 The second IP address.
             @return The minimum IP address.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.CompareTo(System.Byte[],System.Byte[])">
             Compares IP address <code>ip1</code> with <code>ip2</code>. If ip1
             is equal to ip2 0 is returned. If ip1 is bigger 1 is returned, -1
             otherwise.
            
             @param ip1 The first IP address.
             @param ip2 The second IP address.
             @return 0 if ip1 is equal to ip2, 1 if ip1 is bigger, -1 otherwise.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.Or(System.Byte[],System.Byte[])">
             Returns the logical OR of the IP addresses <code>ip1</code> and
             <code>ip2</code>.
            
             @param ip1 The first IP address.
             @param ip2 The second IP address.
             @return The OR of <code>ip1</code> and <code>ip2</code>.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixNameConstraintValidator.StringifyIP(System.Byte[])">
             Stringifies an IPv4 or v6 address with subnet mask.
            
             @param ip The IP with subnet mask.
             @return The stringified IP address.
        </member>
        <member name="T:Org.BouncyCastle.Pkix.PkixPolicyNode">
            <summary>
            Summary description for PkixPolicyNode.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.PkixPolicyNode.#ctor(System.Collections.IList,System.Int32,Org.BouncyCastle.Utilities.Collections.ISet,Org.BouncyCastle.Pkix.PkixPolicyNode,Org.BouncyCastle.Utilities.Collections.ISet,System.String,System.Boolean)">
            Constructors
        </member>
        <member name="T:Org.BouncyCastle.Pkix.ReasonsMask">
            <summary>
            This class helps to handle CRL revocation reasons mask. Each CRL handles a
            certain set of revocation reasons.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.ReasonsMask.#ctor(System.Int32)">
            <summary>
            Constructs are reason mask with the reasons.
            </summary>
            <param name="reasons">The reasons.</param>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.ReasonsMask.#ctor">
            <summary>
            A reason mask with no reason.
            </summary>
        </member>
        <member name="F:Org.BouncyCastle.Pkix.ReasonsMask.AllReasons">
            <summary>
            A mask with all revocation reasons.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.ReasonsMask.AddReasons(Org.BouncyCastle.Pkix.ReasonsMask)">
             Adds all reasons from the reasons mask to this mask.
            
             @param mask The reasons mask to add.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.ReasonsMask.Intersect(Org.BouncyCastle.Pkix.ReasonsMask)">
            <summary>
            Intersects this mask with the given reasons mask.
            </summary>
            <param name="mask">mask The mask to intersect with.</param>
            <returns>The intersection of this and teh given mask.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.ReasonsMask.HasNewReasons(Org.BouncyCastle.Pkix.ReasonsMask)">
            <summary>
            Returns <c>true</c> if the passed reasons mask has new reasons.
            </summary>
            <param name="mask">The reasons mask which should be tested for new reasons.</param>
            <returns><c>true</c> if the passed reasons mask has new reasons.</returns>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.ReasonsMask.IsAllReasons">
            <summary>
            Returns <code>true</code> if this reasons mask contains all possible
            reasons.
            </summary>
            <returns>true if this reasons mask contains all possible reasons.
            </returns>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.ReasonsMask.Reasons">
            <summary>
            Returns the reasons in this mask.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities.ProcessCrlB2(Org.BouncyCastle.Asn1.X509.DistributionPoint,System.Object,Org.BouncyCastle.X509.X509Crl)">
             If the complete CRL includes an issuing distribution point (IDP) CRL
             extension check the following:
             <p>
             (i) If the distribution point name is present in the IDP CRL extension
             and the distribution field is present in the DP, then verify that one of
             the names in the IDP matches one of the names in the DP. If the
             distribution point name is present in the IDP CRL extension and the
             distribution field is omitted from the DP, then verify that one of the
             names in the IDP matches one of the names in the cRLIssuer field of the
             DP.
             </p>
             <p>
             (ii) If the onlyContainsUserCerts boolean is asserted in the IDP CRL
             extension, verify that the certificate does not include the basic
             constraints extension with the cA boolean asserted.
             </p>
             <p>
             (iii) If the onlyContainsCACerts boolean is asserted in the IDP CRL
             extension, verify that the certificate includes the basic constraints
             extension with the cA boolean asserted.
             </p>
             <p>
             (iv) Verify that the onlyContainsAttributeCerts boolean is not asserted.
             </p>
            
             @param dp   The distribution point.
             @param cert The certificate.
             @param crl  The CRL.
             @throws AnnotatedException if one of the conditions is not met or an error occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities.ProcessCrlB1(Org.BouncyCastle.Asn1.X509.DistributionPoint,System.Object,Org.BouncyCastle.X509.X509Crl)">
             If the DP includes cRLIssuer, then verify that the issuer field in the
             complete CRL matches cRLIssuer in the DP and that the complete CRL
             contains an
                  g distribution point extension with the indirectCRL
             boolean asserted. Otherwise, verify that the CRL issuer matches the
             certificate issuer.
            
             @param dp   The distribution point.
             @param cert The certificate ot attribute certificate.
             @param crl  The CRL for <code>cert</code>.
             @throws AnnotatedException if one of the above conditions does not apply or an error
                                        occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities.ProcessCrlF(Org.BouncyCastle.X509.X509Crl,System.Object,Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Pkix.PkixParameters,System.Collections.IList)">
             Obtain and validate the certification path for the complete CRL issuer.
             If a key usage extension is present in the CRL issuer's certificate,
             verify that the cRLSign bit is set.
            
             @param crl                CRL which contains revocation information for the certificate
                                       <code>cert</code>.
             @param cert               The attribute certificate or certificate to check if it is
                                       revoked.
             @param defaultCRLSignCert The issuer certificate of the certificate <code>cert</code>.
             @param defaultCRLSignKey  The public key of the issuer certificate
                                       <code>defaultCRLSignCert</code>.
             @param paramsPKIX         paramsPKIX PKIX parameters.
             @param certPathCerts      The certificates on the certification path.
             @return A <code>Set</code> with all keys of possible CRL issuer
                     certificates.
             @throws AnnotatedException if the CRL is not valid or the status cannot be checked or
                                        some error occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities.CheckCrl(Org.BouncyCastle.Asn1.X509.DistributionPoint,Org.BouncyCastle.Pkix.PkixParameters,Org.BouncyCastle.X509.X509Certificate,System.DateTime,Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Pkix.CertStatus,Org.BouncyCastle.Pkix.ReasonsMask,System.Collections.IList)">
             Checks a distribution point for revocation information for the
             certificate <code>cert</code>.
            
             @param dp                 The distribution point to consider.
             @param paramsPKIX         PKIX parameters.
             @param cert               Certificate to check if it is revoked.
             @param validDate          The date when the certificate revocation status should be
                                       checked.
             @param defaultCRLSignCert The issuer certificate of the certificate <code>cert</code>.
             @param defaultCRLSignKey  The public key of the issuer certificate
                                       <code>defaultCRLSignCert</code>.
             @param certStatus         The current certificate revocation status.
             @param reasonMask         The reasons mask which is already checked.
             @param certPathCerts      The certificates of the certification path.
             @throws AnnotatedException if the certificate is revoked or the status cannot be checked
                                        or some error occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities.CheckCrls(Org.BouncyCastle.Pkix.PkixParameters,Org.BouncyCastle.X509.X509Certificate,System.DateTime,Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Collections.IList)">
             Checks a certificate if it is revoked.
            
             @param paramsPKIX       PKIX parameters.
             @param cert             Certificate to check if it is revoked.
             @param validDate        The date when the certificate revocation status should be
                                     checked.
             @param sign             The issuer certificate of the certificate <code>cert</code>.
             @param workingPublicKey The public key of the issuer certificate <code>sign</code>.
             @param certPathCerts    The certificates of the certification path.
             @throws AnnotatedException if the certificate is revoked or the status cannot be checked
                                        or some error occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3280CertPathUtilities.ProcessCrlC(Org.BouncyCastle.X509.X509Crl,Org.BouncyCastle.X509.X509Crl,Org.BouncyCastle.Pkix.PkixParameters)">
             If use-deltas is set, verify the issuer and scope of the delta CRL.
            
             @param deltaCRL    The delta CRL.
             @param completeCRL The complete CRL.
             @param pkixParams  The PKIX paramaters.
             @throws AnnotatedException if an exception occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3281CertPathUtilities.CheckCrls(Org.BouncyCastle.X509.IX509AttributeCertificate,Org.BouncyCastle.Pkix.PkixParameters,Org.BouncyCastle.X509.X509Certificate,System.DateTime,System.Collections.IList)">
            Checks if an attribute certificate is revoked.
            
            @param attrCert Attribute certificate to check if it is revoked.
            @param paramsPKIX PKIX parameters.
            @param issuerCert The issuer certificate of the attribute certificate
                       <code>attrCert</code>.
            @param validDate The date when the certificate revocation status should
                       be checked.
            @param certPathCerts The certificates of the certification path to be
                       checked.
            
            @throws CertPathValidatorException if the certificate is revoked or the
                        status cannot be checked or some error occurs.
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3281CertPathUtilities.ProcessAttrCert1(Org.BouncyCastle.X509.IX509AttributeCertificate,Org.BouncyCastle.Pkix.PkixParameters)">
            Searches for a holder public key certificate and verifies its
            certification path.
            
            @param attrCert the attribute certificate.
            @param pkixParams The PKIX parameters.
            @return The certificate path of the holder certificate.
            @throws Exception if
                        <ul>
                        <li>no public key certificate can be found although holder
                        information is given by an entity name or a base certificate
                        ID</li>
                        <li>support classes cannot be created</li>
                        <li>no certification path for the public key certificate can
                        be built</li>
                        </ul>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.Rfc3281CertPathUtilities.CheckCrl(Org.BouncyCastle.Asn1.X509.DistributionPoint,Org.BouncyCastle.X509.IX509AttributeCertificate,Org.BouncyCastle.Pkix.PkixParameters,System.DateTime,Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.Pkix.CertStatus,Org.BouncyCastle.Pkix.ReasonsMask,System.Collections.IList)">
            
            Checks a distribution point for revocation information for the
            certificate <code>attrCert</code>.
            
            @param dp The distribution point to consider.
            @param attrCert The attribute certificate which should be checked.
            @param paramsPKIX PKIX parameters.
            @param validDate The date when the certificate revocation status should
                       be checked.
            @param issuerCert Certificate to check if it is revoked.
            @param reasonMask The reasons mask which is already checked.
            @param certPathCerts The certificates of the certification path to be
                       checked.
            @throws Exception if the certificate is revoked or the status
                        cannot be checked or some error occurs.
        </member>
        <member name="T:Org.BouncyCastle.Pkix.TrustAnchor">
            <summary>
            A trust anchor or most-trusted Certification Authority (CA).
            
            This class represents a "most-trusted CA", which is used as a trust anchor
            for validating X.509 certification paths. A most-trusted CA includes the
            public key of the CA, the CA's name, and any constraints upon the set of
            paths which may be validated using this key. These parameters can be
            specified in the form of a trusted X509Certificate or as individual
            parameters.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.TrustAnchor.#ctor(Org.BouncyCastle.X509.X509Certificate,System.Byte[])">
             <summary>
             Creates an instance of TrustAnchor with the specified X509Certificate and
             optional name constraints, which are intended to be used as additional
             constraints when validating an X.509 certification path.
            	The name constraints are specified as a byte array. This byte array
            	should contain the DER encoded form of the name constraints, as they
            	would appear in the NameConstraints structure defined in RFC 2459 and
            	X.509. The ASN.1 definition of this structure appears below.
            	
            	<pre>
            	NameConstraints ::= SEQUENCE {
            		permittedSubtrees       [0]     GeneralSubtrees OPTIONAL,
            		excludedSubtrees        [1]     GeneralSubtrees OPTIONAL }
            	   
             GeneralSubtrees ::= SEQUENCE SIZE (1..MAX) OF GeneralSubtree
             
            		GeneralSubtree ::= SEQUENCE {
            		base                    GeneralName,
            		minimum         [0]     BaseDistance DEFAULT 0,
            		maximum         [1]     BaseDistance OPTIONAL }
            		
            		BaseDistance ::= INTEGER (0..MAX)
            
            		GeneralName ::= CHOICE {
            		otherName                       [0]     OtherName,
            		rfc822Name                      [1]     IA5String,
            		dNSName                         [2]     IA5String,
            		x400Address                     [3]     ORAddress,
            		directoryName                   [4]     Name,
            		ediPartyName                    [5]     EDIPartyName,
            		uniformResourceIdentifier       [6]     IA5String,
            		iPAddress                       [7]     OCTET STRING,
            		registeredID                    [8]     OBJECT IDENTIFIER}
            	</pre>
            	
            	Note that the name constraints byte array supplied is cloned to protect
            	against subsequent modifications.
             </summary>
             <param name="trustedCert">a trusted X509Certificate</param>
             <param name="nameConstraints">a byte array containing the ASN.1 DER encoding of a
             NameConstraints extension to be used for checking name
             constraints. Only the value of the extension is included, not
             the OID or criticality flag. Specify null to omit the
             parameter.</param>
             <exception> <see cref="T:System.ArgumentNullException"/>if the specified X509Certificate is null</exception>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.TrustAnchor.#ctor(Org.BouncyCastle.Asn1.X509.X509Name,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[])">
            <summary>
            Creates an instance of <c>TrustAnchor</c> where the
            most-trusted CA is specified as an X500Principal and public key.
            </summary>
            <remarks>
            <p>
            Name constraints are an optional parameter, and are intended to be used
            as additional constraints when validating an X.509 certification path.
            </p><p>
            The name constraints are specified as a byte array. This byte array
            contains the DER encoded form of the name constraints, as they
            would appear in the NameConstraints structure defined in RFC 2459
            and X.509. The ASN.1 notation for this structure is supplied in the
            documentation for the other constructors.
            </p><p>
            Note that the name constraints byte array supplied here is cloned to
            protect against subsequent modifications.
            </p>
            </remarks>
            <param name="caPrincipal">the name of the most-trusted CA as X509Name</param>
            <param name="pubKey">the public key of the most-trusted CA</param>
            <param name="nameConstraints">
            a byte array containing the ASN.1 DER encoding of a NameConstraints extension to
            be used for checking name constraints. Only the value of the extension is included,
            not the OID or criticality flag. Specify <c>null</c> to omit the parameter.
            </param>
            <exception> <see cref="T:System.ArgumentNullException"/>
            if <c>caPrincipal</c> or <c>pubKey</c> is null
            </exception>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.TrustAnchor.#ctor(System.String,Org.BouncyCastle.Crypto.AsymmetricKeyParameter,System.Byte[])">
            <summary>
            Creates an instance of <code>TrustAnchor</code> where the most-trusted
            CA is specified as a distinguished name and public key. Name constraints
            are an optional parameter, and are intended to be used as additional
            constraints when validating an X.509 certification path.
            <br/>
            The name constraints are specified as a byte array. This byte array
            contains the DER encoded form of the name constraints, as they would
            appear in the NameConstraints structure defined in RFC 2459 and X.509.
            </summary>
            <param name="caName">the X.500 distinguished name of the most-trusted CA in RFC
            2253 string format</param>
            <param name="pubKey">the public key of the most-trusted CA</param>
            <param name="nameConstraints">a byte array containing the ASN.1 DER encoding of a
            NameConstraints extension to be used for checking name
            constraints. Only the value of the extension is included, not 
            the OID or criticality flag. Specify null to omit the 
            parameter.</param>
            throws NullPointerException, IllegalArgumentException
        </member>
        <member name="M:Org.BouncyCastle.Pkix.TrustAnchor.setNameConstraints(System.Byte[])">
            <summary>
            Decode the name constraints and clone them if not null.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Pkix.TrustAnchor.ToString">
            <summary>
            Returns a formatted string describing the <code>TrustAnchor</code>.
            </summary>
            <returns>a formatted string describing the <code>TrustAnchor</code></returns>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.TrustAnchor.TrustedCert">
            <summary>
            Returns the most-trusted CA certificate.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.TrustAnchor.CA">
            <summary>
            Returns the name of the most-trusted CA as an X509Name.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.TrustAnchor.CAName">
            <summary>
            Returns the name of the most-trusted CA in RFC 2253 string format.
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.Pkix.TrustAnchor.CAPublicKey">
            <summary>
            Returns the public key of the most-trusted CA.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Security.AgreementUtilities">
            <remarks>
             Utility class for creating IBasicAgreement objects from their names/Oids
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Security.CipherUtilities">
            <remarks>
             Cipher Utility class contains methods that can not be specifically grouped into other classes.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Security.CipherUtilities.GetObjectIdentifier(System.String)">
            <summary>
            Returns a ObjectIdentifier for a give encoding.
            </summary>
            <param name="mechanism">A string representation of the encoding.</param>
            <returns>A DerObjectIdentifier, null if the Oid is not available.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Security.DigestUtilities">
            <remarks>
             Utility class for creating IDigest objects from their names/Oids
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.Security.DigestUtilities.GetObjectIdentifier(System.String)">
            <summary>
            Returns a ObjectIdentifier for a given digest mechanism.
            </summary>
            <param name="mechanism">A string representation of the digest meanism.</param>
            <returns>A DerObjectIdentifier, null if the Oid is not available.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Security.DotNetUtilities">
            <summary>
            A class containing methods to interface the BouncyCastle world to the .NET Crypto world.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Security.DotNetUtilities.ToX509Certificate(Org.BouncyCastle.Asn1.X509.X509CertificateStructure)">
            <summary>
            Create an System.Security.Cryptography.X509Certificate from an X509Certificate Structure.
            </summary>
            <param name="x509Struct"></param>
            <returns>A System.Security.Cryptography.X509Certificate.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Security.MacUtilities">
            <remarks>
             Utility class for creating HMac object from their names/Oids
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Security.PbeUtilities">
             <summary>
            
             </summary>
        </member>
        <member name="M:Org.BouncyCastle.Security.PbeUtilities.GetObjectIdentifier(System.String)">
            <summary>
            Returns a ObjectIdentifier for a give encoding.
            </summary>
            <param name="mechanism">A string representation of the encoding.</param>
            <returns>A DerObjectIdentifier, null if the Oid is not available.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Security.SecurityUtilityException.#ctor">
            base constructor.
        </member>
        <member name="M:Org.BouncyCastle.Security.SecurityUtilityException.#ctor(System.String)">
             create a SecurityUtilityException with the given message.
            
             @param message the message to be carried with the exception.
        </member>
        <member name="T:Org.BouncyCastle.Security.SignerUtilities">
            <summary>
             Signer Utility class contains methods that can not be specifically grouped into other classes.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Security.SignerUtilities.GetObjectIdentifier(System.String)">
            <summary>
            Returns an ObjectIdentifier for a given encoding.
            </summary>
            <param name="mechanism">A string representation of the encoding.</param>
            <returns>A DerObjectIdentifier, null if the OID is not available.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Security.WrapperUtilities">
            <remarks>
             Utility class for creating IWrapper objects from their names/Oids
            </remarks>
        </member>
        <member name="T:Org.BouncyCastle.Tsp.TimeStampRequest">
            Base class for an RFC 3161 Time Stamp Request.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequest.#ctor(System.Byte[])">
             Create a TimeStampRequest from the past in byte array.
            
             @param req byte array containing the request.
             @throws IOException if the request is malformed.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequest.#ctor(System.IO.Stream)">
             Create a TimeStampRequest from the past in input stream.
            
             @param in input stream containing the request.
             @throws IOException if the request is malformed.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequest.Validate(System.Collections.IList,System.Collections.IList,System.Collections.IList)">
             Validate the timestamp request, checking the digest to see if it is of an
             accepted type and whether it is of the correct length for the algorithm specified.
            
             @param algorithms a set of string OIDS giving accepted algorithms.
             @param policies if non-null a set of policies we are willing to sign under.
             @param extensions if non-null a set of extensions we are willing to accept.
             @throws TspException if the request is invalid, or processing fails.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequest.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="T:Org.BouncyCastle.Tsp.TimeStampRequestGenerator">
            Generator for RFC 3161 Time Stamp Request objects.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequestGenerator.AddExtension(System.String,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            add a given extension field for the standard extensions tag (tag 3)
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequestGenerator.AddExtension(System.String,System.Boolean,System.Byte[])">
            add a given extension field for the standard extensions tag
            The value parameter becomes the contents of the octet string associated
            with the extension.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequestGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            add a given extension field for the standard extensions tag (tag 3)
            @throws IOException
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampRequestGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,System.Byte[])">
            add a given extension field for the standard extensions tag
            The value parameter becomes the contents of the octet string associated
            with the extension.
        </member>
        <member name="T:Org.BouncyCastle.Tsp.TimeStampResponse">
            Base class for an RFC 3161 Time Stamp Response object.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampResponse.#ctor(System.Byte[])">
             Create a TimeStampResponse from a byte array containing an ASN.1 encoding.
            
             @param resp the byte array containing the encoded response.
             @throws TspException if the response is malformed.
             @throws IOException if the byte array doesn't represent an ASN.1 encoding.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampResponse.#ctor(System.IO.Stream)">
             Create a TimeStampResponse from an input stream containing an ASN.1 encoding.
            
             @param input the input stream containing the encoded response.
             @throws TspException if the response is malformed.
             @throws IOException if the stream doesn't represent an ASN.1 encoding.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampResponse.Validate(Org.BouncyCastle.Tsp.TimeStampRequest)">
             Check this response against to see if it a well formed response for
             the passed in request. Validation will include checking the time stamp
             token if the response status is GRANTED or GRANTED_WITH_MODS.
            
             @param request the request to be checked against
             @throws TspException if the request can not match this response.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampResponse.GetEncoded">
            return the ASN.1 encoded representation of this object.
        </member>
        <member name="T:Org.BouncyCastle.Tsp.TimeStampResponseGenerator">
            Generator for RFC 3161 Time Stamp Responses.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampResponseGenerator.Generate(Org.BouncyCastle.Tsp.TimeStampRequest,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Utilities.Date.DateTimeObject)">
             Return an appropriate TimeStampResponse.
             <p>
             If genTime is null a timeNotAvailable error response will be returned.
            
             @param request the request this response is for.
             @param serialNumber serial number for the response token.
             @param genTime generation time for the response token.
             @param provider provider to use for signature calculation.
             @return
             @throws NoSuchAlgorithmException
             @throws NoSuchProviderException
             @throws TSPException
             </p>
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampResponseGenerator.GenerateFailResponse(Org.BouncyCastle.Asn1.Cmp.PkiStatus,System.Int32,System.String)">
             Generate a TimeStampResponse with chosen status and FailInfoField.
            
             @param status the PKIStatus to set.
             @param failInfoField the FailInfoField to set.
             @param statusString an optional string describing the failure.
             @return a TimeStampResponse with a failInfoField and optional statusString
             @throws TSPException in case the response could not be created
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampToken.Validate(Org.BouncyCastle.X509.X509Certificate)">
            Validate the time stamp token.
            <p>
            To be valid the token must be signed by the passed in certificate and
            the certificate must be the one referred to by the SigningCertificate
            attribute included in the hashed attributes of the token. The
            certificate must also have the ExtendedKeyUsageExtension with only
            KeyPurposeID.IdKPTimeStamping and have been valid at the time the
            timestamp was created.
            </p>
            <p>
            A successful call to validate means all the above are true.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampToken.ToCmsSignedData">
             Return the underlying CmsSignedData object.
            
             @return the underlying CMS structure.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampToken.GetEncoded">
             Return a ASN.1 encoded byte stream representing the encoded object.
            
             @throws IOException if encoding fails.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampToken.GetEncoded(System.String)">
             return the ASN.1 encoded representation of this object using the specified encoding.
            
             @param encoding the ASN.1 encoding format to use ("BER" or "DER").
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampTokenGenerator.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,System.String)">
            basic creation - only the default attributes will be included here.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TimeStampTokenGenerator.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.X509.X509Certificate,System.String,System.String,Org.BouncyCastle.Asn1.Cms.AttributeTable,Org.BouncyCastle.Asn1.Cms.AttributeTable)">
            create with a signer with extra signed/unsigned attributes.
        </member>
        <member name="P:Org.BouncyCastle.Tsp.TimeStampTokenInfo.Nonce">
            @return the nonce value, null if there isn't one.
        </member>
        <member name="T:Org.BouncyCastle.Tsp.TspAlgorithms">
            Recognised hash algorithms for the time stamp protocol.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TspUtil.GetSignatureTimestamps(Org.BouncyCastle.Cms.SignerInformation)">
             Fetches the signature time-stamp attributes from a SignerInformation object.
             Checks that the MessageImprint for each time-stamp matches the signature field.
             (see RFC 3161 Appendix A).
            
             @param signerInfo a SignerInformation to search for time-stamps
             @return a collection of TimeStampToken objects
             @throws TSPValidationException
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TspUtil.ValidateCertificate(Org.BouncyCastle.X509.X509Certificate)">
             Validate the passed in certificate as being of the correct type to be used
             for time stamping. To be valid it must have an ExtendedKeyUsage extension
             which has a key purpose identifier of id-kp-timeStamping.
            
             @param cert the certificate of interest.
             @throws TspValidationException if the certicate fails on one of the check points.
        </member>
        <member name="M:Org.BouncyCastle.Tsp.TspUtil.GetDigestAlgName(System.String)">
            <summary>
            Return the digest algorithm using one of the standard JCA string
            representations rather than the algorithm identifier (if possible).
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Tsp.TspValidationException">
            Exception thrown if a TSP request or response fails to validate.
            <p>
            If a failure code is associated with the exception it can be retrieved using
            the getFailureCode() method.</p>
        </member>
        <member name="P:Org.BouncyCastle.Tsp.TspValidationException.FailureCode">
             Return the failure code associated with this exception - if one is set.
            
             @return the failure code if set, -1 otherwise.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Arrays">
            <summary> General array utilities.</summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Arrays.AreEqual(System.Byte[],System.Byte[])">
            <summary>
            Are two arrays equal.
            </summary>
            <param name="a">Left side.</param>
            <param name="b">Right side.</param>
            <returns>True if equal.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Arrays.ConstantTimeAreEqual(System.Byte[],System.Byte[])">
            <summary>
            A constant time equals comparison - does not terminate early if
            test will fail.
            </summary>
            <param name="a">first array</param>
            <param name="b">second array</param>
            <returns>true if arrays equal, false otherwise.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Arrays.CopyOfRange(System.Byte[],System.Int32,System.Int32)">
             Make a copy of a range of bytes from the passed in data array. The range can
             extend beyond the end of the input array, in which case the return array will
             be padded with zeroes.
            
             @param data the array from which the data is to be copied.
             @param from the start index at which the copying should take place.
             @param to the final index of the range (exclusive).
            
             @return a new byte array containing the range given.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.BigIntegers">
            BigInteger utilities.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.BigIntegers.AsUnsignedByteArray(Org.BouncyCastle.Math.BigInteger)">
             Return the passed in value as an unsigned byte array.
            
             @param value the value to be converted.
             @return a byte array without a leading zero byte if present in the signed encoding.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.BigIntegers.AsUnsignedByteArray(System.Int32,Org.BouncyCastle.Math.BigInteger)">
            Return the passed in value as an unsigned byte array of the specified length, padded with
            leading zeros as necessary.
            @param length the fixed length of the result.
            @param n the value to be converted.
            @return a byte array padded to a fixed length with leading zeros.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.BigIntegers.AsUnsignedByteArray(Org.BouncyCastle.Math.BigInteger,System.Byte[],System.Int32,System.Int32)">
             Write the passed in value as unsigned bytes to the specified buffer range, padded with
             leading zeros as necessary.
            
             @param value
                        the value to be converted.
             @param buf
                        the buffer to which the value is written.
             @param off
                        the start offset in array <code>buf</code> at which the data is written.
             @param len
                        the fixed length of data written (possibly padded with leading zeros).
        </member>
        <member name="M:Org.BouncyCastle.Utilities.BigIntegers.CreateRandomBigInteger(System.Int32,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Creates a Random BigInteger from the secure random of a given bit length.
            </summary>
            <param name="bitLength"></param>
            <param name="secureRandom"></param>
            <returns></returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.BigIntegers.CreateRandomInRange(Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Math.BigInteger,Org.BouncyCastle.Security.SecureRandom)">
            Return a random BigInteger not less than 'min' and not greater than 'max'
            
            @param min the least value that may be generated
            @param max the greatest value that may be generated
            @param random the source of randomness
            @return a random BigInteger value in the range [min,max]
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Date.DateTimeUtilities.DateTimeToUnixMs(System.DateTime)">
            <summary>
            Return the number of milliseconds since the Unix epoch (1 Jan., 1970 UTC) for a given DateTime value.
            </summary>
            <param name="dateTime">A UTC DateTime value not before epoch.</param>
            <returns>Number of whole milliseconds after epoch.</returns>
            <exception> <see cref="T:System.ArgumentException"/>'dateTime' is before epoch.</exception>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Date.DateTimeUtilities.UnixMsToDateTime(System.Int64)">
            <summary>
            Create a DateTime value from the number of milliseconds since the Unix epoch (1 Jan., 1970 UTC).
            </summary>
            <param name="unixMs">Number of milliseconds since the epoch.</param>
            <returns>A UTC DateTime value</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Date.DateTimeUtilities.CurrentUnixMs">
            <summary>
            Return the current number of milliseconds since the Unix epoch (1 Jan., 1970 UTC).
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64.Encode(System.Byte[])">
             encode the input data producing a base 64 encoded byte array.
            
             @return a byte array containing the base 64 encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64.Encode(System.Byte[],System.Int32,System.Int32)">
             encode the input data producing a base 64 encoded byte array.
            
             @return a byte array containing the base 64 encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64.Encode(System.Byte[],System.IO.Stream)">
             Encode the byte data to base 64 writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             Encode the byte data to base 64 writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64.Decode(System.Byte[])">
             decode the base 64 encoded input data. It is assumed the input data is valid.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64.Decode(System.String)">
             decode the base 64 encoded string data - whitespace will be ignored.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64.Decode(System.String,System.IO.Stream)">
             decode the base 64 encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.IEncoder">
            Encode and decode byte arrays (typically from binary to 7-bit ASCII
            encodings).
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64Encoder.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             encode the input data producing a base 64 output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64Encoder.Decode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             decode the base 64 encoded byte data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Base64Encoder.DecodeString(System.String,System.IO.Stream)">
             decode the base 64 encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.BufferedDecoder">
            <summary>
             A buffering class to allow translation from one format to another to
                be done in discrete chunks.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.BufferedDecoder.#ctor(Org.BouncyCastle.Utilities.Encoders.ITranslator,System.Int32)">
            <summary>
            Create a buffered Decoder.
            </summary>
            <param name="translator">The translater to use.</param>
            <param name="bufferSize">The size of the buffer.</param>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.BufferedDecoder.ProcessByte(System.Byte,System.Byte[],System.Int32)">
            <summary>
            Process one byte of data.
            </summary>
            <param name="input">Data in.</param>
            <param name="output">Byte array for the output.</param>
            <param name="outOff">The offset in the output byte array to start writing from.</param>
            <returns>The amount of output bytes.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.BufferedDecoder.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Process data from a byte array.
            </summary>
            <param name="input">The input data.</param>
            <param name="inOff">Start position within input data array.</param>
            <param name="len">Amount of data to process from input data array.</param>
            <param name="outBytes">Array to store output.</param>
            <param name="outOff">Position in output array to start writing from.</param>
            <returns>The amount of output bytes.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.BufferedEncoder">
            <summary>
            A class that allows encoding of data using a specific encoder to be processed in chunks.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.BufferedEncoder.#ctor(Org.BouncyCastle.Utilities.Encoders.ITranslator,System.Int32)">
            <summary>
            Create.
            </summary>
            <param name="translator">The translator to use.</param>
            <param name="bufferSize">Size of the chunks.</param>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.BufferedEncoder.ProcessByte(System.Byte,System.Byte[],System.Int32)">
            <summary>
            Process one byte of data.
            </summary>
            <param name="input">The byte.</param>
            <param name="outBytes">An array to store output in.</param>
            <param name="outOff">Offset within output array to start writing from.</param>
            <returns></returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.BufferedEncoder.ProcessBytes(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Process data from a byte array.
            </summary>
            <param name="input">Input data Byte array containing data to be processed.</param>
            <param name="inOff">Start position within input data array.</param>
            <param name="len">Amount of input data to be processed.</param>
            <param name="outBytes">Output data array.</param>
            <param name="outOff">Offset within output data array to start writing to.</param>
            <returns>The amount of data written.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.Hex">
            <summary>
            Class to decode and encode Hex.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[])">
             encode the input data producing a Hex encoded byte array.
            
             @return a byte array containing the Hex encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.Int32,System.Int32)">
             encode the input data producing a Hex encoded byte array.
            
             @return a byte array containing the Hex encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.IO.Stream)">
             Hex encode the byte data writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             Hex encode the byte data writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.Byte[])">
             decode the Hex encoded input data. It is assumed the input data is valid.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.String)">
             decode the Hex encoded string data - whitespace will be ignored.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.Decode(System.String,System.IO.Stream)">
             decode the Hex encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.DecodeStrict(System.String)">
             Decode the hexadecimal-encoded string strictly i.e. any non-hexadecimal characters will be
             considered an error.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.Hex.DecodeStrict(System.String,System.Int32,System.Int32)">
             Decode the hexadecimal-encoded string strictly i.e. any non-hexadecimal characters will be
             considered an error.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Encode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             encode the input data producing a Hex output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.Decode(System.Byte[],System.Int32,System.Int32,System.IO.Stream)">
             decode the Hex encoded byte data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexEncoder.DecodeString(System.String,System.IO.Stream)">
             decode the Hex encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.HexTranslator">
            <summary>
            A hex translator.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.ITranslator">
            <summary>
            Translator interface.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexTranslator.GetEncodedBlockSize">
            <summary>
            Return encoded block size.
            </summary>
            <returns>2</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexTranslator.Encode(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encode some data.
            </summary>
            <param name="input">Input data array.</param>
            <param name="inOff">Start position within input data array.</param>
            <param name="length">The amount of data to process.</param>
            <param name="outBytes">The output data array.</param>
            <param name="outOff">The offset within the output data array to start writing from.</param>
            <returns>Amount of data encoded.</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexTranslator.GetDecodedBlockSize">
            <summary>
            Returns the decoded block size.
            </summary>
            <returns>1</returns>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.HexTranslator.Decode(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Decode data from a byte array.
            </summary>
            <param name="input">The input data array.</param>
            <param name="inOff">Start position within input data array.</param>
            <param name="length">The amounty of data to process.</param>
            <param name="outBytes">The output data array.</param>
            <param name="outOff">The position within the output data array to start writing from.</param>
            <returns>The amount of data written.</returns>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.UrlBase64">
            Convert binary data to and from UrlBase64 encoding.  This is identical to
            Base64 encoding, except that the padding character is "." and the other 
            non-alphanumeric characters are "-" and "_" instead of "+" and "/".
            <p>
            The purpose of UrlBase64 encoding is to provide a compact encoding of binary
            data that is safe for use as an URL parameter. Base64 encoding does not
            produce encoded values that are safe for use in URLs, since "/" can be 
            interpreted as a path delimiter; "+" is the encoded form of a space; and
            "=" is used to separate a name from the corresponding value in an URL 
            parameter.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.UrlBase64.Encode(System.Byte[])">
             Encode the input data producing a URL safe base 64 encoded byte array.
            
             @return a byte array containing the URL safe base 64 encoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.UrlBase64.Encode(System.Byte[],System.IO.Stream)">
             Encode the byte data writing it to the given output stream.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.UrlBase64.Decode(System.Byte[])">
             Decode the URL safe base 64 encoded input data - white space will be ignored.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.UrlBase64.Decode(System.Byte[],System.IO.Stream)">
             decode the URL safe base 64 encoded byte data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.UrlBase64.Decode(System.String)">
             decode the URL safe base 64 encoded string data - whitespace will be ignored.
            
             @return a byte array representing the decoded data.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Encoders.UrlBase64.Decode(System.String,System.IO.Stream)">
             Decode the URL safe base 64 encoded string data writing it to the given output stream,
             whitespace characters will be ignored.
            
             @return the number of bytes produced.
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Encoders.UrlBase64Encoder">
            Convert binary data to and from UrlBase64 encoding.  This is identical to
            Base64 encoding, except that the padding character is "." and the other 
            non-alphanumeric characters are "-" and "_" instead of "+" and "/".
            <p>
            The purpose of UrlBase64 encoding is to provide a compact encoding of binary
            data that is safe for use as an URL parameter. Base64 encoding does not
            produce encoded values that are safe for use in URLs, since "/" can be 
            interpreted as a path delimiter; "+" is the encoded form of a space; and
            "=" is used to separate a name from the corresponding value in an URL 
            parameter.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Pem.PemObjectParser.ParseObject(Org.BouncyCastle.Utilities.IO.Pem.PemObject)">
            <param name="obj">
            A <see cref="T:Org.BouncyCastle.Utilities.IO.Pem.PemObject"/>
            </param>
            <returns>
            A <see cref="T:System.Object"/>
            </returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Streams.PipeAllLimited(System.IO.Stream,System.Int64,System.IO.Stream)">
            <summary>
            Pipe all bytes from <c>inStr</c> to <c>outStr</c>, throwing <c>StreamFlowException</c> if greater
            than <c>limit</c> bytes in <c>inStr</c>.
            </summary>
            <param name="inStr">
            A <see cref="T:System.IO.Stream"/>
            </param>
            <param name="limit">
            A <see cref="T:System.Int64"/>
            </param>
            <param name="outStr">
            A <see cref="T:System.IO.Stream"/>
            </param>
            <returns>The number of bytes actually transferred, if not greater than <c>limit</c></returns>
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Streams.WriteBufTo(System.IO.MemoryStream,System.IO.Stream)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.IO.Streams.WriteBufTo(System.IO.MemoryStream,System.Byte[],System.Int32)">
            <exception> <see cref="T:System.IO.IOException"/></exception>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.MemoableResetException">
            Exception to be thrown on a failure to reset an object implementing Memoable.
            <p>
            The exception extends InvalidCastException to enable users to have a single handling case,
            only introducing specific handling of this one if required.
            </p>
        </member>
        <member name="M:Org.BouncyCastle.Utilities.MemoableResetException.#ctor(System.String)">
             Basic Constructor.
            
             @param msg message to be associated with this exception.
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Net.IPAddress.IsValid(System.String)">
             Validate the given IPv4 or IPv6 address.
            
             @param address the IP address as a string.
            
             @return true if a valid address, false otherwise
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Net.IPAddress.IsValidWithNetMask(System.String)">
             Validate the given IPv4 or IPv6 address and netmask.
            
             @param address the IP address as a string.
            
             @return true if a valid address with netmask, false otherwise
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Net.IPAddress.IsValidIPv4(System.String)">
             Validate the given IPv4 address.
             
             @param address the IP address as a string.
            
             @return true if a valid IPv4 address, false otherwise
        </member>
        <member name="M:Org.BouncyCastle.Utilities.Net.IPAddress.IsValidIPv6(System.String)">
             Validate the given IPv6 address.
            
             @param address the IP address as a string.
            
             @return true if a valid IPv4 address, false otherwise
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Strings">
            <summary> General string utilities.</summary>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Zlib.ZDeflaterOutputStream">
            <summary>
            Summary description for DeflaterOutputStream.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.Utilities.Zlib.ZInflaterInputStream">
            <summary>
            Summary description for DeflaterOutputStream.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.AttributeCertificateHolder">
            <remarks>
            The Holder object.
            <pre>
            Holder ::= SEQUENCE {
            	baseCertificateID   [0] IssuerSerial OPTIONAL,
            		-- the issuer and serial number of
            		-- the holder's Public Key Certificate
            	entityName          [1] GeneralNames OPTIONAL,
            		-- the name of the claimant or role
            	objectDigestInfo    [2] ObjectDigestInfo OPTIONAL
            		-- used to directly authenticate the holder,
            		-- for example, an executable
            }
            </pre>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.AttributeCertificateHolder.#ctor(System.Int32,System.String,System.String,System.Byte[])">
             Constructs a holder for v2 attribute certificates with a hash value for
             some type of object.
             <p>
             <code>digestedObjectType</code> can be one of the following:
             <ul>
             <li>0 - publicKey - A hash of the public key of the holder must be
             passed.</li>
             <li>1 - publicKeyCert - A hash of the public key certificate of the
             holder must be passed.</li>
             <li>2 - otherObjectDigest - A hash of some other object type must be
             passed. <code>otherObjectTypeID</code> must not be empty.</li>
             </ul>
             </p>
             <p>This cannot be used if a v1 attribute certificate is used.</p>
            
             @param digestedObjectType The digest object type.
             @param digestAlgorithm The algorithm identifier for the hash.
             @param otherObjectTypeID The object type ID if
                        <code>digestedObjectType</code> is
                        <code>otherObjectDigest</code>.
             @param objectDigest The hash value.
        </member>
        <member name="M:Org.BouncyCastle.X509.AttributeCertificateHolder.GetObjectDigest">
             Returns the hash if an object digest info is used.
            
             @return The hash or <code>null</code> if no object digest info is set.
        </member>
        <member name="M:Org.BouncyCastle.X509.AttributeCertificateHolder.GetEntityNames">
             Return any principal objects inside the attribute certificate holder entity names field.
            
             @return an array of IPrincipal objects (usually X509Name), null if no entity names field is set.
        </member>
        <member name="M:Org.BouncyCastle.X509.AttributeCertificateHolder.GetIssuer">
             Return the principals associated with the issuer attached to this holder
            
             @return an array of principals, null if no BaseCertificateID is set.
        </member>
        <member name="P:Org.BouncyCastle.X509.AttributeCertificateHolder.DigestedObjectType">
             Returns the digest object type if an object digest info is used.
             <p>
             <ul>
             <li>0 - publicKey - A hash of the public key of the holder must be
             passed.</li>
             <li>1 - publicKeyCert - A hash of the public key certificate of the
             holder must be passed.</li>
             <li>2 - otherObjectDigest - A hash of some other object type must be
             passed. <code>otherObjectTypeID</code> must not be empty.</li>
             </ul>
             </p>
            
             @return The digest object type or -1 if no object digest info is set.
        </member>
        <member name="P:Org.BouncyCastle.X509.AttributeCertificateHolder.DigestAlgorithm">
             Returns the other object type ID if an object digest info is used.
            
             @return The other object type ID or <code>null</code> if no object
                     digest info is set.
        </member>
        <member name="P:Org.BouncyCastle.X509.AttributeCertificateHolder.OtherObjectTypeID">
             Returns the digest algorithm ID if an object digest info is used.
            
             @return The digest algorithm ID or <code>null</code> if no object
                     digest info is set.
        </member>
        <member name="P:Org.BouncyCastle.X509.AttributeCertificateHolder.SerialNumber">
             Return the serial number associated with the issuer attached to this holder.
            
             @return the certificate serial number, null if no BaseCertificateID is set.
        </member>
        <member name="T:Org.BouncyCastle.X509.AttributeCertificateIssuer">
            Carrying class for an attribute certificate issuer.
        </member>
        <member name="M:Org.BouncyCastle.X509.AttributeCertificateIssuer.#ctor(Org.BouncyCastle.Asn1.X509.AttCertIssuer)">
             Set the issuer directly with the ASN.1 structure.
            
             @param issuer The issuer
        </member>
        <member name="M:Org.BouncyCastle.X509.AttributeCertificateIssuer.GetPrincipals">
            <summary>Return any principal objects inside the attribute certificate issuer object.</summary>
            <returns>An array of IPrincipal objects (usually X509Principal).</returns>
        </member>
        <member name="T:Org.BouncyCastle.X509.Extension.AuthorityKeyIdentifierStructure">
            <remarks>A high level authority key identifier.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.Extension.AuthorityKeyIdentifierStructure.#ctor(Org.BouncyCastle.Asn1.Asn1OctetString)">
             Constructor which will take the byte[] returned from getExtensionValue()
            
             @param encodedValue a DER octet encoded string with the extension structure in it.
             @throws IOException on parsing errors.
        </member>
        <member name="M:Org.BouncyCastle.X509.Extension.AuthorityKeyIdentifierStructure.#ctor(Org.BouncyCastle.X509.X509Certificate)">
             Create an AuthorityKeyIdentifier using the passed in certificate's public
             key, issuer and serial number.
            
             @param certificate the certificate providing the information.
             @throws CertificateParsingException if there is a problem processing the certificate
        </member>
        <member name="M:Org.BouncyCastle.X509.Extension.AuthorityKeyIdentifierStructure.#ctor(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
             Create an AuthorityKeyIdentifier using just the hash of the
             public key.
            
             @param pubKey the key to generate the hash from.
             @throws InvalidKeyException if there is a problem using the key.
        </member>
        <member name="T:Org.BouncyCastle.X509.Extension.SubjectKeyIdentifierStructure">
            A high level subject key identifier.
        </member>
        <member name="M:Org.BouncyCastle.X509.Extension.SubjectKeyIdentifierStructure.#ctor(Org.BouncyCastle.Asn1.Asn1OctetString)">
             Constructor which will take the byte[] returned from getExtensionValue()
            
             @param encodedValue a DER octet encoded string with the extension structure in it.
             @throws IOException on parsing errors.
        </member>
        <member name="T:Org.BouncyCastle.X509.IX509AttributeCertificate">
            <remarks>Interface for an X.509 Attribute Certificate.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.IX509AttributeCertificate.GetAttributes">
            <summary>Return the attributes contained in the attribute block in the certificate.</summary>
            <returns>An array of attributes.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.IX509AttributeCertificate.GetAttributes(System.String)">
            <summary>Return the attributes with the same type as the passed in oid.</summary>
            <param name="oid">The object identifier we wish to match.</param>
            <returns>An array of matched attributes, null if there is no match.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.IX509AttributeCertificate.GetEncoded">
            <summary>Return an ASN.1 encoded byte array representing the attribute certificate.</summary>
            <returns>An ASN.1 encoded byte array.</returns>
            <exception> <see cref="T:System.IO.IOException"/>If the certificate cannot be encoded.</exception>
        </member>
        <member name="P:Org.BouncyCastle.X509.IX509AttributeCertificate.Version">
            <summary>The version number for the certificate.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.IX509AttributeCertificate.SerialNumber">
            <summary>The serial number for the certificate.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.IX509AttributeCertificate.NotBefore">
            <summary>The UTC DateTime before which the certificate is not valid.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.IX509AttributeCertificate.NotAfter">
            <summary>The UTC DateTime after which the certificate is not valid.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.IX509AttributeCertificate.Holder">
            <summary>The holder of the certificate.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.IX509AttributeCertificate.Issuer">
            <summary>The issuer details for the certificate.</summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.PrincipalUtilities">
            <remarks>
            A utility class that will extract X509Principal objects from X.509 certificates.
            <p>
            Use this in preference to trying to recreate a principal from a string, not all
            DNs are what they should be, so it's best to leave them encoded where they
            can be.</p>
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.PrincipalUtilities.GetIssuerX509Principal(Org.BouncyCastle.X509.X509Certificate)">
            <summary>Return the issuer of the given cert as an X509Principal.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.PrincipalUtilities.GetSubjectX509Principal(Org.BouncyCastle.X509.X509Certificate)">
            <summary>Return the subject of the given cert as an X509Principal.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.PrincipalUtilities.GetIssuerX509Principal(Org.BouncyCastle.X509.X509Crl)">
            <summary>Return the issuer of the given CRL as an X509Principal.</summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector">
             This class is an <code>Selector</code> like implementation to select
             attribute certificates from a given set of criteria.
            
             @see org.bouncycastle.x509.X509AttributeCertificate
             @see org.bouncycastle.x509.X509Store
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.Match(System.Object)">
            <summary>
            Decides if the given attribute certificate should be selected.
            </summary>
            <param name="obj">The attribute certificate to be checked.</param>
            <returns><code>true</code> if the object matches this selector.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.AddTargetName(Org.BouncyCastle.Asn1.X509.GeneralName)">
             Adds a target name criterion for the attribute certificate to the target
             information extension criteria. The <code>X509AttributeCertificate</code>
             must contain at least one of the specified target names.
             <p>
             Each attribute certificate may contain a target information extension
             limiting the servers where this attribute certificate can be used. If
             this extension is not present, the attribute certificate is not targeted
             and may be accepted by any server.
             </p>
            
             @param name The name as a GeneralName (not <code>null</code>)
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.AddTargetName(System.Byte[])">
             Adds a target name criterion for the attribute certificate to the target
             information extension criteria. The <code>X509AttributeCertificate</code>
             must contain at least one of the specified target names.
             <p>
             Each attribute certificate may contain a target information extension
             limiting the servers where this attribute certificate can be used. If
             this extension is not present, the attribute certificate is not targeted
             and may be accepted by any server.
             </p>
            
             @param name a byte array containing the name in ASN.1 DER encoded form of a GeneralName
             @throws IOException if a parsing error occurs.
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.SetTargetNames(System.Collections.IEnumerable)">
            Adds a collection with target names criteria. If <code>null</code> is
            given any will do.
            <p>
            The collection consists of either GeneralName objects or byte[] arrays representing
            DER encoded GeneralName structures.
            </p>
            
            @param names A collection of target names.
            @throws IOException if a parsing error occurs.
            @see #AddTargetName(byte[])
            @see #AddTargetName(GeneralName)
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.GetTargetNames">
            Gets the target names. The collection consists of <code>List</code>s
            made up of an <code>Integer</code> in the first entry and a DER encoded
            byte array or a <code>String</code> in the second entry.
            <p>The returned collection is immutable.</p>
            
            @return The collection of target names
            @see #setTargetNames(Collection)
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.AddTargetGroup(Org.BouncyCastle.Asn1.X509.GeneralName)">
             Adds a target group criterion for the attribute certificate to the target
             information extension criteria. The <code>X509AttributeCertificate</code>
             must contain at least one of the specified target groups.
             <p>
             Each attribute certificate may contain a target information extension
             limiting the servers where this attribute certificate can be used. If
             this extension is not present, the attribute certificate is not targeted
             and may be accepted by any server.
             </p>
            
             @param group The group as GeneralName form (not <code>null</code>)
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.AddTargetGroup(System.Byte[])">
             Adds a target group criterion for the attribute certificate to the target
             information extension criteria. The <code>X509AttributeCertificate</code>
             must contain at least one of the specified target groups.
             <p>
             Each attribute certificate may contain a target information extension
             limiting the servers where this attribute certificate can be used. If
             this extension is not present, the attribute certificate is not targeted
             and may be accepted by any server.
             </p>
            
             @param name a byte array containing the group in ASN.1 DER encoded form of a GeneralName
             @throws IOException if a parsing error occurs.
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.SetTargetGroups(System.Collections.IEnumerable)">
             Adds a collection with target groups criteria. If <code>null</code> is
             given any will do.
             <p>
             The collection consists of <code>GeneralName</code> objects or <code>byte[]</code>
             representing DER encoded GeneralNames.
             </p>
            
             @param names A collection of target groups.
             @throws IOException if a parsing error occurs.
             @see #AddTargetGroup(byte[])
             @see #AddTargetGroup(GeneralName)
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.GetTargetGroups">
             Gets the target groups. The collection consists of <code>List</code>s
             made up of an <code>Integer</code> in the first entry and a DER encoded
             byte array or a <code>String</code> in the second entry.
             <p>The returned collection is immutable.</p>
            
             @return The collection of target groups.
             @see #setTargetGroups(Collection)
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.AttributeCert">
            <summary>The attribute certificate which must be matched.</summary>
            <remarks>If <c>null</c> is given, any will do.</remarks>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.AttributeCertificateValid">
            <summary>The criteria for validity</summary>
            <remarks>If <c>null</c> is given any will do.</remarks>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.Holder">
            <summary>The holder.</summary>
            <remarks>If <c>null</c> is given any will do.</remarks>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.Issuer">
            <summary>The issuer.</summary>
            <remarks>If <c>null</c> is given any will do.</remarks>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509AttrCertStoreSelector.SerialNumber">
            <summary>The serial number.</summary>
            <remarks>If <c>null</c> is given any will do.</remarks>
        </member>
        <member name="T:Org.BouncyCastle.X509.Store.X509CertPairStoreSelector">
            <remarks>
            This class is an <code>IX509Selector</code> implementation to select
            certificate pairs, which are e.g. used for cross certificates. The set of
            criteria is given from two <code>X509CertStoreSelector</code> objects,
            each of which, if present, must match the respective component of a pair.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509CertPairStoreSelector.Match(System.Object)">
            <summary>
            Decides if the given certificate pair should be selected. If
            <c>obj</c> is not a <code>X509CertificatePair</code>, this method
            returns <code>false</code>.
            </summary>
            <param name="obj">The <code>X509CertificatePair</code> to be tested.</param>
            <returns><code>true</code> if the object matches this selector.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CertPairStoreSelector.CertPair">
            <summary>The certificate pair which is used for testing on equality.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CertPairStoreSelector.ForwardSelector">
            <summary>The certificate selector for the forward part.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CertPairStoreSelector.ReverseSelector">
            <summary>The certificate selector for the reverse part.</summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.Store.X509CollectionStore">
            A simple collection backed store.
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509CollectionStore.#ctor(System.Collections.ICollection)">
             Basic constructor.
            
             @param collection - initial contents for the store, this is copied.
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509CollectionStore.GetMatches(Org.BouncyCastle.X509.Store.IX509Selector)">
             Return the matches in the collection for the passed in selector.
            
             @param selector the selector to match against.
             @return a possibly empty collection of matching objects.
        </member>
        <member name="T:Org.BouncyCastle.X509.Store.X509CollectionStoreParameters">
            <remarks>This class contains a collection for collection based <code>X509Store</code>s.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509CollectionStoreParameters.#ctor(System.Collections.ICollection)">
            <summary>
            Constructor.
            <p>
            The collection is copied.
            </p>
            </summary>
            <param name="collection">The collection containing X.509 object types.</param>
            <exception> <see cref="T:System.ArgumentNullException"/>If collection is null.</exception>
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509CollectionStoreParameters.GetCollection">
            <summary>Returns a copy of the <code>ICollection</code>.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.Store.X509CollectionStoreParameters.ToString">
            <summary>Returns a formatted string describing the parameters.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CrlStoreSelector.Issuers">
            <summary>
            An <code>ICollection</code> of <code>X509Name</code> objects
            </summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CrlStoreSelector.AttrCertChecking">
             The attribute certificate being checked. This is not a criterion.
             Rather, it is optional information that may help a {@link X509Store} find
             CRLs that would be relevant when checking revocation for the specified
             attribute certificate. If <code>null</code> is specified, then no such
             optional information is provided.
            
             @param attrCert the <code>IX509AttributeCertificate</code> being checked (or
                         <code>null</code>)
             @see #getAttrCertificateChecking()
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CrlStoreSelector.CompleteCrlEnabled">
             If <code>true</code> only complete CRLs are returned. Defaults to
             <code>false</code>.
            
             @return <code>true</code> if only complete CRLs are returned.
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CrlStoreSelector.DeltaCrlIndicatorEnabled">
             Returns if this selector must match CRLs with the delta CRL indicator
             extension set. Defaults to <code>false</code>.
            
             @return Returns <code>true</code> if only CRLs with the delta CRL
                     indicator extension are selected.
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CrlStoreSelector.IssuingDistributionPoint">
             The issuing distribution point.
             <p>
             The issuing distribution point extension is a CRL extension which
             identifies the scope and the distribution point of a CRL. The scope
             contains among others information about revocation reasons contained in
             the CRL. Delta CRLs and complete CRLs must have matching issuing
             distribution points.</p>
             <p>
             The byte array is cloned to protect against subsequent modifications.</p>
             <p>
             You must also enable or disable this criteria with
             {@link #setIssuingDistributionPointEnabled(bool)}.</p>
            
             @param issuingDistributionPoint The issuing distribution point to set.
                                             This is the DER encoded OCTET STRING extension value.
             @see #getIssuingDistributionPoint()
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CrlStoreSelector.IssuingDistributionPointEnabled">
             Whether the issuing distribution point criteria should be applied.
             Defaults to <code>false</code>.
             <p>
             You may also set the issuing distribution point criteria if not a missing
             issuing distribution point should be assumed.</p>
            
             @return Returns if the issuing distribution point check is enabled.
        </member>
        <member name="P:Org.BouncyCastle.X509.Store.X509CrlStoreSelector.MaxBaseCrlNumber">
             The maximum base CRL number. Defaults to <code>null</code>.
            
             @return Returns the maximum base CRL number.
             @see #setMaxBaseCRLNumber(BigInteger)
        </member>
        <member name="T:Org.BouncyCastle.X509.SubjectPublicKeyInfoFactory">
            <summary>
            A factory to produce Public Key Info Objects.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.SubjectPublicKeyInfoFactory.CreateSubjectPublicKeyInfo(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Create a Subject Public Key Info object for a given public key.
            </summary>
            <param name="publicKey">One of ElGammalPublicKeyParameters, DSAPublicKeyParameter, DHPublicKeyParameters, RsaKeyParameters or ECPublicKeyParameters</param>
            <returns>A subject public key info object.</returns>
            <exception> <see cref="T:System.Exception"/>Throw exception if object provided is not one of the above.</exception>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509AttrCertParser.ReadAttrCert(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509AttrCertParser.ReadAttrCerts(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509AttrCertParser.ReadAttrCert(System.IO.Stream)">
            Generates a certificate object and initializes it with the data
            read from the input stream inStream.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509AttrCertParser.ReadAttrCerts(System.IO.Stream)">
            Returns a (possibly empty) collection view of the certificates
            read from the given input stream inStream.
        </member>
        <member name="T:Org.BouncyCastle.X509.X509Attribute">
            Class for carrying the values in an X.509 Attribute.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Attribute.#ctor(Org.BouncyCastle.Asn1.Asn1Encodable)">
            @param at an object representing an attribute.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Attribute.#ctor(System.String,Org.BouncyCastle.Asn1.Asn1Encodable)">
             Create an X.509 Attribute with the type given by the passed in oid and
             the value represented by an ASN.1 Set containing value.
            
             @param oid type of the attribute
             @param value value object to go into the atribute's value set.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Attribute.#ctor(System.String,Org.BouncyCastle.Asn1.Asn1EncodableVector)">
             Create an X.59 Attribute with the type given by the passed in oid and the
             value represented by an ASN.1 Set containing the objects in value.
            
             @param oid type of the attribute
             @param value vector of values to go in the attribute's value set.
        </member>
        <member name="T:Org.BouncyCastle.X509.X509Certificate">
            <summary>
            An Object representing an X509 Certificate.
            Has static methods for loading Certificates encoded in many forms that return X509Certificate Objects.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.IsValid(System.DateTime)">
            <summary>
            Return true if the nominated time is within the start and end times nominated on the certificate.
            </summary>
            <param name="time">The time to test validity against.</param>
            <returns>True if certificate is valid for nominated time.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.CheckValidity">
            <summary>
            Checks if the current date is within certificate's validity period.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.CheckValidity(System.DateTime)">
            <summary>
            Checks if the given date is within certificate's validity period.
            </summary>
            <exception> <see cref="T:Org.BouncyCastle.Security.Certificates.CertificateExpiredException"/>if the certificate is expired by given date</exception>
            <exception> <see cref="T:Org.BouncyCastle.Security.Certificates.CertificateNotYetValidException"/>if the certificate is not yet valid on given date</exception>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.GetTbsCertificate">
            <summary>
            Return the Der encoded TbsCertificate data.
            This is the certificate component less the signature.
            To Get the whole certificate call the GetEncoded() member.
            </summary>
            <returns>A byte array containing the Der encoded Certificate component.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.GetSignature">
            <summary>
            The signature.
            </summary>
            <returns>A byte array containg the signature of the certificate.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.GetSigAlgParams">
            <summary>
            Get the signature algorithms parameters. (EG DSA Parameters)
            </summary>
            <returns>A byte array containing the Der encoded version of the parameters or null if there are none.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.GetKeyUsage">
            <summary>
            Get a key usage guidlines.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.GetPublicKey">
            <summary>
            Get the public key of the subject of the certificate.
            </summary>
            <returns>The public key parameters.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.GetEncoded">
            <summary>
            Return a Der encoded version of this certificate.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.Verify(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Verify the certificate's signature using the nominated public key.
            </summary>
            <param name="key">An appropriate public key parameter object, RsaPublicKeyParameters, DsaPublicKeyParameters or ECDsaPublicKeyParameters</param>
            <returns>True if the signature is valid.</returns>
            <exception> <see cref="T:System.Exception"/>If key submitted is not of the above nominated types.</exception>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Certificate.Verify(Org.BouncyCastle.Crypto.IVerifierFactoryProvider)">
            <summary>
            Verify the certificate's signature using a verifier created using the passed in verifier provider.
            </summary>
            <param name="verifierProvider">An appropriate provider for verifying the certificate's signature.</param>
            <returns>True if the signature is valid.</returns>
            <exception> <see cref="T:System.Exception"/>If verifier provider is not appropriate or the certificate algorithm is invalid.</exception>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.IsValidNow">
            <summary>
            Return true if the current time is within the start and end times nominated on the certificate.
            </summary>
            <returns>true id certificate is valid for the current time.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.Version">
            <summary>
            Return the certificate's version.
            </summary>
            <returns>An integer whose value Equals the version of the cerficate.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.SerialNumber">
            <summary>
            Return a <see cref="T:Org.BouncyCastle.Math.BigInteger">BigInteger</see> containing the serial number.
            </summary>
            <returns>The Serial number.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.IssuerDN">
            <summary>
            Get the Issuer Distinguished Name. (Who signed the certificate.)
            </summary>
            <returns>And X509Object containing name and value pairs.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.SubjectDN">
            <summary>
            Get the subject of this certificate.
            </summary>
            <returns>An X509Name object containing name and value pairs.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.NotBefore">
            <summary>
            The time that this certificate is valid from.
            </summary>
            <returns>A DateTime object representing that time in the local time zone.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.NotAfter">
            <summary>
            The time that this certificate is valid up to.
            </summary>
            <returns>A DateTime object representing that time in the local time zone.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.SigAlgName">
            <summary>
            A meaningful version of the Signature Algorithm. (EG SHA1WITHRSA)
            </summary>
            <returns>A sting representing the signature algorithm.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.SigAlgOid">
            <summary>
            Get the Signature Algorithms Object ID.
            </summary>
            <returns>A string containg a '.' separated object id.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.IssuerUniqueID">
            <summary>
            Get the issuers UID.
            </summary>
            <returns>A DerBitString.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509Certificate.SubjectUniqueID">
            <summary>
            Get the subjects UID.
            </summary>
            <returns>A DerBitString.</returns>
        </member>
        <member name="T:Org.BouncyCastle.X509.X509CertificatePair">
            <remarks>
            This class contains a cross certificate pair. Cross certificates pairs may
            contain two cross signed certificates from two CAs. A certificate from the
            other CA to this CA is contained in the forward certificate, the certificate
            from this CA to the other CA is contained in the reverse certificate.
            </remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertificatePair.#ctor(Org.BouncyCastle.X509.X509Certificate,Org.BouncyCastle.X509.X509Certificate)">
            <summary>Constructor</summary>
            <param name="forward">Certificate from the other CA to this CA.</param>
            <param name="reverse">Certificate from this CA to the other CA.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertificatePair.#ctor(Org.BouncyCastle.Asn1.X509.CertificatePair)">
            <summary>Constructor from a ASN.1 CertificatePair structure.</summary>
            <param name="pair">The <c>CertificatePair</c> ASN.1 object.</param>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509CertificatePair.Forward">
            <summary>Returns the certificate from the other CA to this CA.</summary>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509CertificatePair.Reverse">
            <summary>Returns the certificate from this CA to the other CA.</summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.X509CertificateParser">
            class for dealing with X509 certificates.
            <p>
            At the moment this will deal with "-----BEGIN CERTIFICATE-----" to "-----END CERTIFICATE-----"
            base 64 encoded certs, as well as the BER binaries of certificates and some classes of PKCS#7
            objects.</p>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertificateParser.ReadCertificates(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertificateParser.ReadCertificate(System.IO.Stream)">
            Generates a certificate object and initializes it with the data
            read from the input stream inStream.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertificateParser.ReadCertificates(System.IO.Stream)">
            Returns a (possibly empty) collection view of the certificates
            read from the given input stream inStream.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertPairParser.ReadCertPair(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CertPairParser.ReadCertPairs(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="T:Org.BouncyCastle.X509.X509Crl">
             The following extensions are listed in RFC 2459 as relevant to CRLs
            
             Authority Key Identifier
             Issuer Alternative Name
             CRL Number
             Delta CRL Indicator (critical)
             Issuing Distribution Point (critical)
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Crl.Verify(Org.BouncyCastle.Crypto.IVerifierFactoryProvider)">
            <summary>
            Verify the CRL's signature using a verifier created using the passed in verifier provider.
            </summary>
            <param name="verifierProvider">An appropriate provider for verifying the CRL's signature.</param>
            <returns>True if the signature is valid.</returns>
            <exception> <see cref="T:System.Exception"/>If verifier provider is not appropriate or the CRL algorithm is invalid.</exception>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Crl.ToString">
             Returns a string representation of this CRL.
            
             @return a string representation of this CRL.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509Crl.IsRevoked(Org.BouncyCastle.X509.X509Certificate)">
             Checks whether the given certificate is on this CRL.
            
             @param cert the certificate to check for.
             @return true if the given certificate is on this CRL,
             false otherwise.
        </member>
        <member name="T:Org.BouncyCastle.X509.X509CrlEntry">
             The following extensions are listed in RFC 2459 as relevant to CRL Entries
            
             ReasonCode Hode Instruction Code Invalidity Date Certificate Issuer
             (critical)
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CrlEntry.#ctor(Org.BouncyCastle.Asn1.X509.CrlEntry,System.Boolean,Org.BouncyCastle.Asn1.X509.X509Name)">
             Constructor for CRLEntries of indirect CRLs. If <code>isIndirect</code>
             is <code>false</code> {@link #getCertificateIssuer()} will always
             return <code>null</code>, <code>previousCertificateIssuer</code> is
             ignored. If this <code>isIndirect</code> is specified and this CrlEntry
             has no certificate issuer CRL entry extension
             <code>previousCertificateIssuer</code> is returned by
             {@link #getCertificateIssuer()}.
            
             @param c
                        TbsCertificateList.CrlEntry object.
             @param isIndirect
                        <code>true</code> if the corresponding CRL is a indirect
                        CRL.
             @param previousCertificateIssuer
                        Certificate issuer of the previous CrlEntry.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CrlParser.ReadCrl(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CrlParser.ReadCrls(System.Byte[])">
            <summary>
            Create loading data from byte array.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CrlParser.ReadCrl(System.IO.Stream)">
            Generates a certificate revocation list (CRL) object and initializes
            it with the data read from the input stream inStream.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509CrlParser.ReadCrls(System.IO.Stream)">
             Returns a (possibly empty) collection view of the CRLs read from
             the given input stream inStream.
            
             The inStream may contain a sequence of DER-encoded CRLs, or
             a PKCS#7 CRL set.  This is a PKCS#7 SignedData object, with the
             only significant field being crls.  In particular the signature
             and the contents are ignored.
        </member>
        <member name="T:Org.BouncyCastle.X509.X509KeyUsage">
             A holding class for constructing an X509 Key Usage extension.
            
             <pre>
                id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }
            
                KeyUsage ::= BIT STRING {
                     digitalSignature        (0),
                     nonRepudiation          (1),
                     keyEncipherment         (2),
                     dataEncipherment        (3),
                     keyAgreement            (4),
                     keyCertSign             (5),
                     cRLSign                 (6),
                     encipherOnly            (7),
                     decipherOnly            (8) }
             </pre>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509KeyUsage.#ctor(System.Int32)">
             Basic constructor.
            
             @param usage - the bitwise OR of the Key Usage flags giving the
             allowed uses for the key.
             e.g. (X509KeyUsage.keyEncipherment | X509KeyUsage.dataEncipherment)
        </member>
        <member name="M:Org.BouncyCastle.X509.X509SignatureUtilities.GetDigestAlgName(Org.BouncyCastle.Asn1.DerObjectIdentifier)">
            Return the digest algorithm using one of the standard JCA string
            representations rather than the algorithm identifier (if possible).
        </member>
        <member name="T:Org.BouncyCastle.X509.X509V1CertificateGenerator">
            <summary>
            Class to Generate X509V1 Certificates.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.Reset">
            <summary>
            Reset the generator.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.SetSerialNumber(Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Set the certificate's serial number.
            </summary>
            <remarks>Make serial numbers long, if you have no serial number policy make sure the number is at least 16 bytes of secure random data.
            You will be surprised how ugly a serial number collision can get.</remarks>
            <param name="serialNumber">The serial number.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.SetIssuerDN(Org.BouncyCastle.Asn1.X509.X509Name)">
            <summary>
            Set the issuer distinguished name.
            The issuer is the entity whose private key is used to sign the certificate.
            </summary>
            <param name="issuer">The issuers DN.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.SetNotBefore(System.DateTime)">
            <summary>
            Set the date that this certificate is to be valid from.
            </summary>
            <param name="date"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.SetNotAfter(System.DateTime)">
            <summary>
            Set the date after which this certificate will no longer be valid.
            </summary>
            <param name="date"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.SetSubjectDN(Org.BouncyCastle.Asn1.X509.X509Name)">
            <summary>
            Set the subject distinguished name.
            The subject describes the entity associated with the public key.
            </summary>
            <param name="subject"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.SetPublicKey(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Set the public key that this certificate identifies.
            </summary>
            <param name="publicKey"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.SetSignatureAlgorithm(System.String)">
            <summary>
            Set the signature algorithm that will be used to sign this certificate.
            This can be either a name or an OID, names are treated as case insensitive.
            </summary>
            <param name="signatureAlgorithm">string representation of the algorithm name</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Generate a new X509Certificate.
            </summary>
            <param name="privateKey">The private key of the issuer used to sign this certificate.</param>
            <returns>An X509Certificate.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Generate a new X509Certificate specifying a SecureRandom instance that you would like to use.
            </summary>
            <param name="privateKey">The private key of the issuer used to sign this certificate.</param>
            <param name="random">The Secure Random you want to use.</param>
            <returns>An X509Certificate.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V1CertificateGenerator.Generate(Org.BouncyCastle.Crypto.ISignatureFactory)">
            <summary>
            Generate a new X509Certificate using the passed in SignatureCalculator.
            </summary>
            <param name="signatureCalculatorFactory">A signature calculator factory with the necessary algorithm details.</param>
            <returns>An X509Certificate.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509V1CertificateGenerator.SignatureAlgNames">
            <summary>
            Allows enumeration of the signature names supported by the generator.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.X509V2AttributeCertificate">
            <summary>An implementation of a version 2 X.509 Attribute Certificate.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificate.Verify(Org.BouncyCastle.Crypto.IVerifierFactoryProvider)">
            <summary>
            Verify the certificate's signature using a verifier created using the passed in verifier provider.
            </summary>
            <param name="verifierProvider">An appropriate provider for verifying the certificate's signature.</param>
            <returns>True if the signature is valid.</returns>
            <exception> <see cref="T:System.Exception"/>If verifier provider is not appropriate or the certificate algorithm is invalid.</exception>
        </member>
        <member name="T:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator">
            <remarks>Class to produce an X.509 Version 2 AttributeCertificate.</remarks>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.Reset">
            <summary>Reset the generator</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.SetHolder(Org.BouncyCastle.X509.AttributeCertificateHolder)">
            <summary>Set the Holder of this Attribute Certificate.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.SetIssuer(Org.BouncyCastle.X509.AttributeCertificateIssuer)">
            <summary>Set the issuer.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.SetSerialNumber(Org.BouncyCastle.Math.BigInteger)">
            <summary>Set the serial number for the certificate.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.SetSignatureAlgorithm(System.String)">
            <summary>
            Set the signature algorithm. This can be either a name or an OID, names
            are treated as case insensitive.
            </summary>
            <param name="signatureAlgorithm">The algorithm name.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.AddAttribute(Org.BouncyCastle.X509.X509Attribute)">
            <summary>Add an attribute.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.AddExtension(System.String,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            <summary>Add a given extension field for the standard extensions tag.</summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.AddExtension(System.String,System.Boolean,System.Byte[])">
            <summary>
            Add a given extension field for the standard extensions tag.
            The value parameter becomes the contents of the octet string associated
            with the extension.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Generate an X509 certificate, based on the current issuer and subject.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Generate an X509 certificate, based on the current issuer and subject,
            using the supplied source of randomness, if required.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.Generate(Org.BouncyCastle.Crypto.ISignatureFactory)">
            <summary>
            Generate a new X.509 Attribute Certificate using the passed in SignatureCalculator.
            </summary>
            <param name="signatureCalculatorFactory">A signature calculator factory with the necessary algorithm details.</param>
            <returns>An IX509AttributeCertificate.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509V2AttributeCertificateGenerator.SignatureAlgNames">
            <summary>
            Allows enumeration of the signature names supported by the generator.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.X509V2CrlGenerator">
            class to produce an X.509 Version 2 CRL.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.Reset">
            reset the generator
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.SetIssuerDN(Org.BouncyCastle.Asn1.X509.X509Name)">
            Set the issuer distinguished name - the issuer is the entity whose private key is used to sign the
            certificate.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddCrlEntry(Org.BouncyCastle.Math.BigInteger,System.DateTime,System.Int32)">
             Reason being as indicated by CrlReason, i.e. CrlReason.KeyCompromise
             or 0 if CrlReason is not to be used
            
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddCrlEntry(Org.BouncyCastle.Math.BigInteger,System.DateTime,System.Int32,System.DateTime)">
             Add a CRL entry with an Invalidity Date extension as well as a CrlReason extension.
             Reason being as indicated by CrlReason, i.e. CrlReason.KeyCompromise
             or 0 if CrlReason is not to be used
            
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddCrlEntry(Org.BouncyCastle.Math.BigInteger,System.DateTime,Org.BouncyCastle.Asn1.X509.X509Extensions)">
             Add a CRL entry with extensions.
            
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddCrl(Org.BouncyCastle.X509.X509Crl)">
             Add the CRLEntry objects contained in a previous CRL.
            
             @param other the X509Crl to source the other entries from.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.SetSignatureAlgorithm(System.String)">
            <summary>
            Set the signature algorithm that will be used to sign this CRL.
            </summary>
            <param name="signatureAlgorithm"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddExtension(System.String,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            add a given extension field for the standard extensions tag (tag 0)
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            add a given extension field for the standard extensions tag (tag 0)
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddExtension(System.String,System.Boolean,System.Byte[])">
            add a given extension field for the standard extensions tag (tag 0)
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,System.Byte[])">
            add a given extension field for the standard extensions tag (tag 0)
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Generate an X.509 CRL, based on the current issuer and subject.
            </summary>
            <param name="privateKey">The private key of the issuer that is signing this certificate.</param>
            <returns>An X509Crl.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Generate an X.509 CRL, based on the current issuer and subject using the specified secure random.
            </summary>
            <param name="privateKey">The private key of the issuer that is signing this certificate.</param>
            <param name="random">Your Secure Random instance.</param>
            <returns>An X509Crl.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V2CrlGenerator.Generate(Org.BouncyCastle.Crypto.ISignatureFactory)">
            <summary>
            Generate a new X509Crl using the passed in SignatureCalculator.
            </summary>
            <param name="signatureCalculatorFactory">A signature calculator factory with the necessary algorithm details.</param>
            <returns>An X509Crl.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509V2CrlGenerator.SignatureAlgNames">
            <summary>
            Allows enumeration of the signature names supported by the generator.
            </summary>
        </member>
        <member name="T:Org.BouncyCastle.X509.X509V3CertificateGenerator">
            <summary>
            A class to Generate Version 3 X509Certificates.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.Reset">
            <summary>
            Reset the Generator.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetSerialNumber(Org.BouncyCastle.Math.BigInteger)">
            <summary>
            Set the certificate's serial number.
            </summary>
            <remarks>Make serial numbers long, if you have no serial number policy make sure the number is at least 16 bytes of secure random data.
            You will be surprised how ugly a serial number collision can Get.</remarks>
            <param name="serialNumber">The serial number.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetIssuerDN(Org.BouncyCastle.Asn1.X509.X509Name)">
            <summary>
            Set the distinguished name of the issuer.
            The issuer is the entity which is signing the certificate.
            </summary>
            <param name="issuer">The issuer's DN.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetNotBefore(System.DateTime)">
            <summary>
            Set the date that this certificate is to be valid from.
            </summary>
            <param name="date"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetNotAfter(System.DateTime)">
            <summary>
            Set the date after which this certificate will no longer be valid.
            </summary>
            <param name="date"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetSubjectDN(Org.BouncyCastle.Asn1.X509.X509Name)">
            <summary>
            Set the DN of the entity that this certificate is about.
            </summary>
            <param name="subject"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetPublicKey(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Set the public key that this certificate identifies.
            </summary>
            <param name="publicKey"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetSignatureAlgorithm(System.String)">
            <summary>
            Set the signature algorithm that will be used to sign this certificate.
            </summary>
            <param name="signatureAlgorithm"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetSubjectUniqueID(System.Boolean[])">
            <summary>
            Set the subject unique ID - note: it is very rare that it is correct to do this.
            </summary>
            <param name="uniqueID"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.SetIssuerUniqueID(System.Boolean[])">
            <summary>
            Set the issuer unique ID - note: it is very rare that it is correct to do this.
            </summary>
            <param name="uniqueID"/>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.AddExtension(System.String,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            <summary>
            Add a given extension field for the standard extensions tag (tag 3).
            </summary>
            <param name="oid">string containing a dotted decimal Object Identifier.</param>
            <param name="critical">Is it critical.</param>
            <param name="extensionValue">The value.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,Org.BouncyCastle.Asn1.Asn1Encodable)">
            <summary>
            Add an extension to this certificate.
            </summary>
            <param name="oid">Its Object Identifier.</param>
            <param name="critical">Is it critical.</param>
            <param name="extensionValue">The value.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.AddExtension(System.String,System.Boolean,System.Byte[])">
            <summary>
            Add an extension using a string with a dotted decimal OID.
            </summary>
            <param name="oid">string containing a dotted decimal Object Identifier.</param>
            <param name="critical">Is it critical.</param>
            <param name="extensionValue">byte[] containing the value of this extension.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.AddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,System.Byte[])">
            <summary>
            Add an extension to this certificate.
            </summary>
            <param name="oid">Its Object Identifier.</param>
            <param name="critical">Is it critical.</param>
            <param name="extensionValue">byte[] containing the value of this extension.</param>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.CopyAndAddExtension(System.String,System.Boolean,Org.BouncyCastle.X509.X509Certificate)">
            <summary>
            Add a given extension field for the standard extensions tag (tag 3),
            copying the extension value from another certificate.
            </summary>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.CopyAndAddExtension(Org.BouncyCastle.Asn1.DerObjectIdentifier,System.Boolean,Org.BouncyCastle.X509.X509Certificate)">
            add a given extension field for the standard extensions tag (tag 3)
            copying the extension value from another certificate.
            @throws CertificateParsingException if the extension cannot be extracted.
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter)">
            <summary>
            Generate an X509Certificate.
            </summary>
            <param name="privateKey">The private key of the issuer that is signing this certificate.</param>
            <returns>An X509Certificate.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.Generate(Org.BouncyCastle.Crypto.AsymmetricKeyParameter,Org.BouncyCastle.Security.SecureRandom)">
            <summary>
            Generate an X509Certificate using your own SecureRandom.
            </summary>
            <param name="privateKey">The private key of the issuer that is signing this certificate.</param>
            <param name="random">You Secure Random instance.</param>
            <returns>An X509Certificate.</returns>
        </member>
        <member name="M:Org.BouncyCastle.X509.X509V3CertificateGenerator.Generate(Org.BouncyCastle.Crypto.ISignatureFactory)">
            <summary>
            Generate a new X509Certificate using the passed in SignatureCalculator.
            </summary>
            <param name="signatureCalculatorFactory">A signature calculator factory with the necessary algorithm details.</param>
            <returns>An X509Certificate.</returns>
        </member>
        <member name="P:Org.BouncyCastle.X509.X509V3CertificateGenerator.SignatureAlgNames">
            <summary>
            Allows enumeration of the signature names supported by the generator.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.FontInformation">
             <summary>
             Represents the font information present in a PDF document, this class is used to get the font file name, encoding, embed and font type information.
             </summary>
            ^WebOpenFont.Example3
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FontInformation.Name">
            <summary>
            Gets the name of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FontInformation.Encoding">
            <summary>
            Gets the encoding of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FontInformation.Type">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.Merger.FontType"/> of the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FontInformation.Subset">
            <summary>
            Returns true if the font is subsetted otherwise false.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.FontInformation.Embed">
            <summary>
            Returns true if the font is embeded otherwise false.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.FontType">
            <summary>
            Represents font types.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.FontType.TrueType">
            <summary>
            Font type is true type.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.FontType.Type0">
            <summary>
            Font type is type0.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.FontType.Type1">
            <summary>
            Font type is type1.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.FontType.Type3">
            <summary>
            Font type is type3.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.FontType.Unknown">
            <summary>
             Font type is unknown.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.Forms.XfaInfo">
            <summary>
            Specifies the type of XFA.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Forms.XfaInfo.Static">
            <summary>
            XFA type static.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Forms.XfaInfo.Dynamic">
            <summary>
            XFA type dynamic.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.Merger.Forms.XfaInfo.None">
            <summary>
             XFA type none.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.ByteRange">
            <summary>
            This class represents the signed content byte range in a PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ByteRange.StartIndex">
            <summary>
            Returns the start index of the signed content data in a PDF document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.ByteRange.Length">
            <summary>
            Returns the length of the signed content data in a PDF document.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.LtvEmbeddingOption">
            <summary>
            The <see cref="T:ceTe.DynamicPDF.Merger.LtvEmbeddingOption"/> uses to specify the options for adding the PAdES-LTV profile to a PDF document.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.#ctor(System.String[])">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.Merger.LtvEmbeddingOption"/> using the list of signature field names to which the PAdES-LTV profile needs to be applied.
            </summary>
            <param name="signatureFieldNames">List of signatures to which the PAdES-LTV profile needs to be added. The names are case sensitive.</param>
            <remarks>
            If the <see cref="F:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.signatureFieldNames"/> array is null or empty then all the signed signatures in the document will be selected.
            No details will be embedded when none of the signature names in the document and the array matched.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.#ctor(ceTe.DynamicPDF.Merger.VerificationInformation)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.Merger.LtvEmbeddingOption"/> using the specified <see cref="T:ceTe.DynamicPDF.Merger.VerificationInformation"/> which needs to be embedded.
            </summary>
            <param name="verificationInformationToEmbed">Specifies the verification informations that needs to be embedded.</param>
            <remarks>
            Informations that are not available at the time of <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> will not be embedded.
            No exception will be raised for the missing information.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.#ctor(System.String[],ceTe.DynamicPDF.Merger.VerificationInformation)">
            <summary>
            Creates a new instance of <see cref="T:ceTe.DynamicPDF.Merger.LtvEmbeddingOption"/> using the list of signature field names to which the PAdES-LTV profile needs to be applied and the <see cref="T:ceTe.DynamicPDF.Merger.VerificationInformation"/> which needs to be embedded. The names are case sensitive.
            </summary>
            <param name="signatureFieldNames">List of signatures to which the PAdES-LTV profile needs to be added. The names are case sensitive.</param>
            <param name="verificationInformationToEmbed">Specifies the verification informations that needs to be embedded.</param>
            <remarks>
            If the <see cref="F:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.signatureFieldNames"/> array is null or empty then all the signed signatures in the document will be selected.
            No details will be embedded when none of the signature names in the document and the array matched.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.MaxInfoSize">
            <summary>
            Size in bytes after which if any of the individual verification information exceeds will be ignored from embedding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.SignatureFieldNames">
            <summary>
            List of signature field names to which the PAdES-LTV profile needs to be applied.
            </summary>
            <remarks>
            Null or Empty list specifies all the signed signatures fields present in the document to be selected.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.LtvEmbeddingOption.VerificationInformationToEmbed">
            <summary>
            Flags specifying the informations that needs to be embedded. Informations that are unavailable at the time of fetching the data will be skipped.
            </summary>        
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance">
             <summary>
             The <b>IncrementalSignatureAppearance</b> class provides options to customize the apperance of visible signature fields, such as font, text visibility, reason to sign and location at the time of singing.
             </summary>
            ^Lic.Merger.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.#ctor">
            <summary>
            Creates a new instance of a incremental signature appearance with default values.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.HideAllText">
            <summary>
            Hides the text in all signature panels.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.PanelLayout">
            <summary>
             Gets or sets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanelLayout"/> specifying how the panel are laid out.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.LeftPanel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel"/> for the left panel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.RightPanel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel"/> for the right panel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.FullPanel">
            <summary>
            Gets the <see cref="T:ceTe.DynamicPDF.PageElements.Forms.SignaturePanel"/> for the full panel.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.Reason">
            <summary>
             Gets or sets a value indicating the reason of signing the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.Location">
            <summary>
            Gets or sets a value indicating the location of signing.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.Font">
            <summary>
             Gets or sets <see cref="P:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance.Font"/> used to display the signature text.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument">
             <summary>
             The <b>IncrementalUpdateDocument</b> class updates the PDF document incrementally by appending the changes after the end of the file.    
             </summary>
             <remarks>
             Current support is limited to signing as existing signature field and updating existing form field values.
             Changes will be allowed based to the document's <see cref="P:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Permission"/>.
             </remarks>
            ^Lic.Merger.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.#ctor(ceTe.DynamicPDF.Merger.PdfDocument)">
            <summary>
            Creates a new instance of an incremental update document by taking the original document as a <see cref="T:ceTe.DynamicPDF.Merger.PdfDocument"/> object.
            </summary>
            <param name="originalDocument">The source PDF that needs to be updated.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Sign(System.String,ceTe.DynamicPDF.Certificate)">
             <summary>
             Marks the document for signing using the specified signature form field name and the <see cref="T:ceTe.DynamicPDF.Certificate"/>.
             </summary>
             <param name="fieldName">Name of the existing signature field.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <remarks>
             Actual signing happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.
             Signature will be PKCS #7 and covers the complete document contents.
             </remarks>
            ^IncrementalUpdate.Example1
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Sign(System.String,ceTe.DynamicPDF.Certificate,ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance)">
             <summary>
             Marks the document for signing using the specified signature form field name, the <see cref="T:ceTe.DynamicPDF.Certificate"/> and with a customized apperance <see cref="T:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance"/>.
             </summary>
             <param name="fieldName">Name of the existing signature field.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="incrementalSignatureAppearance">The <see cref="T:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance"/> of the signature field that specifies different appearance properties of the signature.</param>
             <remarks>
             Actual signing happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.
             Signature will be PKCS #7 and covers the complete document contents.
             </remarks>
            ^IncrementalUpdate.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Sign(System.String,ceTe.DynamicPDF.Certificate,ceTe.DynamicPDF.TimestampServer)">
             <summary>
             Marks the document for signing using the specified signature form field name, the <see cref="T:ceTe.DynamicPDF.Certificate"/> and a <see cref="T:ceTe.DynamicPDF.TimestampServer"/> to timestamp the signature.
             </summary>
             <param name="fieldName">Name of the existing signature field.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="timestampServer">Reference of type <see cref="T:ceTe.DynamicPDF.TimestampServer"/> that contain the time stamp server details.</param>
             <remarks>
             Actual signing happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.
             Signature will be compatible with PAdES-Basic. 
             </remarks>
            ^IncrementalUpdate.Example3
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Sign(System.String,ceTe.DynamicPDF.Certificate,ceTe.DynamicPDF.TimestampServer,ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance)">
             <summary>
             Marks the document for signing using the specified signature form field name, the <see cref="T:ceTe.DynamicPDF.Certificate"/>, <see cref="T:ceTe.DynamicPDF.TimestampServer"/> to timestamp the signature with a customized apperance <see cref="T:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance"/>.
             </summary>
             <param name="fieldName">Name of the existing signature field.</param>
             <param name="certificate">Reference of type <see cref="T:ceTe.DynamicPDF.Certificate"/>.</param>
             <param name="timestampServer">Reference of type <see cref="T:ceTe.DynamicPDF.TimestampServer"/> that containes the time stamp server details.</param>
             <param name="incrementalSignatureAppearance">The <see cref="T:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance"/> of the signature field that specifies different appearance properties of the signature. A null value passed instantiates the appearances with default values.</param>
             <remarks>
             Actual signing happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.
             Signature will be compatible with PAdES-Basic.
             </remarks>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>Throws exception if the source PDF document does not allow making changes to the form fields.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>Throws exception if the source PDF document does not contain the signature field by the specified name.</exception>
            ^IncrementalUpdate.Example4
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Sign(System.String,ceTe.DynamicPDF.SigningProvider)">
             <summary>
             Marks the document for signing using the specified signature field and an external signing provider like cloud signing.
             </summary>
             <param name="fieldName">Name of the existing signature field.</param>
             <param name="signingProvider">Reference of type <see cref="T:ceTe.DynamicPDF.SigningProvider"/>.</param>
             <remarks>
             Actual signing happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.        
             A document can be either signed or certified or timestamped. For signing or certifying and document timestamp it has to be done through multiple incremental updates.
             </remarks>
            ^IncrementalUpdate.Example5
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Sign(System.String,ceTe.DynamicPDF.SigningProvider,ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance)">
             <summary>
              Mark the document for signing using the signature form field name, the <see cref="T:ceTe.DynamicPDF.SigningProvider"/> and <see cref="T:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance"/>.
             </summary>
             <param name="fieldName">Name of the existing signature field.</param>
             <param name="signingProvider">Reference of type <see cref="T:ceTe.DynamicPDF.SigningProvider"/>.</param>
             <param name="incrementalSignatureAppearance">The <see cref="T:ceTe.DynamicPDF.Merger.IncrementalSignatureAppearance"/> of the signature field that specifies different appearance properties of the signature. A null value passed instantiates the appearances with default values.</param>
             <remarks>
             Actual signing happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.        
             A document can be either signed or certified or timestamped. For signing or certifying and document timestamp it has to be done through multiple incremental updates.
             </remarks>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>Throws exception if the source PDF document does not allow making changes to the form fields.</exception>
             <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>Throws exception if the source PDF document does not contain the signature field by the specified name.</exception>
            ^IncrementalUpdate.Example6
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.AddPadesLtv">
             <summary>
             Marks the document to add the Document Security Store. All the signed signatures including document timestamp's informations will be embedded.
             </summary>        
             <remarks>
             This makes the signatures that are already PAdES-Enhanced profile complaint to become PAdES-LTV profile complaint.
             Only the available information will be embedded.
             </remarks>
            ^IncrementalUpdate.Example7
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.AddPadesLtv(ceTe.DynamicPDF.Merger.LtvEmbeddingOption)">
             <summary>
             Marks the document to add the Document Security Store. Signatures and informations specified will only be embedded.
             </summary>
             <param name="ltvEmbeddingOption">Option specifying what signatures and information to embedded.</param>
             <remarks>
             This makes the signatures that are already PAdES-Enhanced complaint to become PAdES-LTV complaint.
             Only the available information will be embedded, even if the options specifies to embedded those.
             </remarks>
            ^IncrementalUpdate.Example8
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Timestamp(System.String,ceTe.DynamicPDF.TimestampServer)">
             <summary>
             Marks the document to add a timestamp to the existing signature filed.
             </summary>
             <remarks>
             Actual timestamping happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.        
             A document can be either signed or certified or timestamped. For signing or certifying and document timestamp it has to be done through multiple incremental updates.
             </remarks>
            ^IncrementalUpdate.Example9
             <param name="signatureFieldName">Name of a signature field that is already exsit in the document.</param>
             <param name="timestampServer">Timestamp server to be used for timestamping the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Timestamp(System.String,ceTe.DynamicPDF.SigningProvider)">
             <summary>
             Marks the document to add a timestamp to the existing signature filed.
             </summary>
             <remarks>
             Actual timestamping happens at the time of creating the PDF content in the <see cref="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw"/> method.        
             A document can be either signed or certified or timestamped. For signing or certifying and document timestamp it has to be done through multiple incremental updates.
             </remarks>
            ^IncrementalUpdate.Example10
             <param name="signatureFieldName">Name of a signature field that is already exsit in the document.</param>
             <param name="signingProvider">Signing provider to be used for timestamping the document.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw">
            <summary>
            Outputs the generated document to a byte array.
            </summary>
            <returns>The byte arrays of the PDF contents.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw(System.String)">
            <summary>
            Outputs the generated document to a file.
            </summary>
            <param name="filePath">The output PDF file path.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Draw(System.IO.Stream)">
            <summary>
            Outputs the generated document to the given <see cref="T:System.IO.Stream"/> object.
            </summary>
            <param name="stream"><b>Stream</b> object that receive the <b>Document</b> output.</param>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.FormFields">
            <summary>
            Gets a <see cref="T:ceTe.DynamicPDF.Merger.IncrementalUpdateFormFieldList"/> containing the form fields that support incremental update.
            </summary>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>Throws exception if the source PDF document does not allow making changes to the form fields.</exception>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Certified">
            <summary>
            Gets a boolean indicating if the document is certified.
            </summary>
            <remarks>
            For details of the permissions granted while certifying refer to <see cref="P:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Permission"/> property.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Permission">
            <summary>
            Gets the permissions granted for the document while certifying. If the document is not certified, the default value will be <see cref="F:ceTe.DynamicPDF.CertifyingPermission.AllowFormFillingAndAnnotation"/>.
            </summary>
            <remarks>
            Refer <see cref="P:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Certified"/> property to verify if the document is certified.
            </remarks>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateDocument.Form">
            <summary>
             Gets a form object for the PDF document.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.IncrementalUpdateFormField">
            <summary>
            Represents incremental update document formfield.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateFormField.Value">
            <summary>
            Gets or sets the value of the form field.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.IncrementalUpdateFormFieldList">
            <summary>
            Represents incremental update document form field list that contains the list of <see cref="T:ceTe.DynamicPDF.Merger.IncrementalUpdateFormField"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateFormFieldList.Count">
            <summary>
            Gets the number of fields in the list.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateFormFieldList.Item(System.String)">
            <summary>
            Gets a form field by the given name.
            </summary>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>Throws exception if the source PDF document does not contain the signature field by the specified name.</exception>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.IncrementalUpdateFormFieldList.Item(System.Int32)">
            <summary>
            Gets a form field by index.
            </summary>
            <exception> <see cref="T:ceTe.DynamicPDF.Merger.MergerException"/>Throws exception if the index is out of range.</exception>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.PdfNoteAnnotation">
             <summary>
             Represents a Note Annotation from an imported PDF document.
             </summary>
            ^Lic.Merger.Std
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfNoteAnnotation.Open">
            <summary>
            Gets the boolean for open or close state of note.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfNoteAnnotation.Type">
            <summary>
            Specifies a note type.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfNoteAnnotation.Author">
             <summary>
             Gets or sets the author of the note.
             </summary>
            ^PdfNoteAnnotation
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.SignatureValidationItem">
            <summary>
            This class gives the signature validation details that includes certificate details, revocation lists if any present and time stamp etc.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SignatureValidationItem.Certificates">
            <summary>
            Gets the list of certificate byte arrays.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SignatureValidationItem.CertificateRevocationLists">
            <summary>
            Gets the certificate revocation details as a list of byte arrays.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SignatureValidationItem.OnlineCertificateStatusProtocol">
            <summary>
            Gets the online certificate status protocol data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SignatureValidationItem.Timestamp">
            <summary>
            Gets the time stamp information of the signature.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Merger.SecurityStore">
            <summary>
            Represents the Document Security Store (DSS) appended to the PDF document containing security, 
            Validation Related Information (VRI) and indirect references to the values of validation data
            of all signatures present in the document.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SecurityStore.Certificates">
            <summary>
            Gets the list of certificate byte arrays.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SecurityStore.CertificateRevocationLists">
            <summary>
            Gets the certificate revocation details as a list of byte arrays.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SecurityStore.OnlineCertificateStatusProtocols">
            <summary>
            Gets the online certificate status protocol data.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.SecurityStore.ValidationInformation">
            <summary>
            Returns the Validation Related Information (VRI) of the signature fields from the Document Security Store (DSS).
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Html.CssFontStyle">
            <summary>
            Specifies font style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Html.CssFontStyle.Normal">
            <summary>
            Specifies normal font style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Html.CssFontStyle.Italic">
            <summary>
            Specifies italic font style.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.Html.CssFontStyle.Oblique">
            <summary>
            Specifies oblique font style.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.Html.FontSelectingEventArgs">
            <summary>
            Provides the font information to HtmlArea's text in the FontSelecting event.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.FontSelectingEventArgs.Font">
            <summary>
            Gets or sets the <see cref="P:ceTe.DynamicPDF.PageElements.Html.FontSelectingEventArgs.Font"/> object used to specify the font of the text for the HTML Area.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.FontSelectingEventArgs.FontStyle">
            <summary>
            Gets the css font style.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.FontSelectingEventArgs.FontWeight">
            <summary>
            Gets the css font weight.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.PageElements.Html.FontSelectingEventArgs.FontFamily">
            <summary>
            Gets the css font family or font name.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.SigningProvider">
             <summary>
             Represents Signing Provider.
             </summary>
            ^Lic.Generator.Ent
        </member>
        <member name="M:ceTe.DynamicPDF.SigningProvider.Sign(System.Byte[])">
            <summary>
            Signs and returns DER encoded PKCS#7 data.
            </summary>
            <param name="data">Actual PDF data for which the signature needs to be computed.</param>
            <returns>Byte array contaning DER encoded PKCS#7 data.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.SigningProvider.PublicCertificate">
            <summary>
            Gets a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> object containing the public protion of the certificate.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.LayoutEngine.PhysicalPathResourceProvider">
            <summary>
            Physical path resource provider class provides base path for all the resources referenced in the Dlex file.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.PhysicalPathResourceProvider.#ctor(System.String)">
            <summary>
            Creates new insteance of the physical path resource provider class.
            </summary>
            <param name="basePath">The physical base path to use for resources referenced in the DLEX file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.PhysicalPathResourceProvider.GetImageData(System.String)">
            <summary>
            Gets the image data from the file path specified using base path.
            </summary>
            <param name="filePath">The file path of the image.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.PhysicalPathResourceProvider.GetPdfDocument(System.String)">
            <summary>
            Gets the pdf document from the file path specified using base path.
            </summary>
            <param name="filePath">The file path of the  pdf document.</param>
            <returns></returns>
        </member>
        <member name="M:ceTe.DynamicPDF.LayoutEngine.PhysicalPathResourceProvider.GetOpenTypeFont(System.String)">
            <summary>
            Gets the font from the file path specified using base path.
            </summary>
            <param name="filePath">The file path of the  font.</param>
            <returns></returns>
        </member>
        <member name="P:ceTe.DynamicPDF.LayoutEngine.PhysicalPathResourceProvider.BasePath">
            <summary>
            Gets the base path of the resources referenced in the Dlex file.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.SignatureType">
            <summary>
            Represents signature type.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.OpenTypeFontCollection">
             <summary>
             Represents an OpenType font collection.
             </summary>
            ^OpenTypeFont.Example5
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFontCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFontCollection"/> class.
            </summary>
            <param name="filePath">Physical file path of the truetype collection file.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFontCollection.#ctor(System.IO.Stream)">
            <summary>
            Intializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.OpenTypeFont"/> class.
            </summary>
            <param name="reader">Stream containing the opentype  / truetype font data.</param>    
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFontCollection.GetFont(System.Int32)">
             <summary>
             Gets the font from the Open type collection based on the index.
             </summary>
             <param name="index">Index of the font in the open type collection.</param>
             <param name="useCharacterShaping">Value indicating whether to use the advance typographic tables (GSUB, GPOS) when writing the text. Setting this property to true will turn on character shaping.</param>
            ^OpenTypeFont.Example6
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFontCollection.GetFont(System.String)">
             <summary>
             Gets the font from the Open type collection based on the font name.
             </summary>
             <param name="fontName">The name of the font in the collection to get.</param>
             <returns>
             Opentype font based on the given font name.
             </returns>
            ^OpenTypeFont.Example7
        </member>
        <member name="M:ceTe.DynamicPDF.Text.OpenTypeFontCollection.GetFontNames">
            <summary>
            Gets the names of the fonts present in the open type collection.
            </summary>
            <returns>The font names array.</returns>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader">
            <summary>Bit reading helpers.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.Capacity">
            <summary>
            Input byte buffer, consist of a ring-buffer and a "slack" region where bytes from the start of
            the ring-buffer are copied.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.endOfStreamReached">
            <summary>Input stream is finished.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.accumulator">
            <summary>Pre-fetched bits.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.bitOffset">
            <summary>Current bit-reading position in accumulator.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.intOffset">
            <summary>Offset of next item in intBuffer.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.ReadMoreInput(ceTe.DynamicPDF.IO.Compression.Brotli.BitReader)">
            <summary>Fills up the input buffer.</summary>
            <remarks>
            Fills up the input buffer.
            No-op if there are at least 36 bytes present after current position.
            After encountering the end of the input stream, 64 additional zero bytes are copied to the
            buffer.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.FillBitWindow(ceTe.DynamicPDF.IO.Compression.Brotli.BitReader)">
            <summary>Advances the Read buffer by 5 bytes to make room for reading next 24 bits.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.ReadBits(ceTe.DynamicPDF.IO.Compression.Brotli.BitReader,System.Int32)">
            <summary>Reads the specified number of bits from Read Buffer.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.Init(ceTe.DynamicPDF.IO.Compression.Brotli.BitReader,System.IO.Stream)">
            <summary>Initialize bit reader.</summary>
            <remarks>
            Initialize bit reader.
            Initialisation turns bit reader to a ready state. Also a number of bytes is prefetched to
            accumulator. Because of that this method may block until enough data could be read from input.
            </remarks>
            <param name="br">BitReader POJO</param>
            <param name="input">data source</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.BitReader.Close(ceTe.DynamicPDF.IO.Compression.Brotli.BitReader)">
            <exception cref="T:System.IO.IOException"/>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.BrotliRuntimeException">
            <summary>Unchecked exception used internally.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Context">
            <summary>Common context lookup table for all context modes.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Decode">
            <summary>API for ceTe.DynamicPDF.IO.Compression.Brotli decompression.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.Decode.FixedTable">
            <summary>Static Huffman code for the code length code lengths.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Decode.DecodeVarLenUnsignedByte(ceTe.DynamicPDF.IO.Compression.Brotli.BitReader)">
            <summary>Decodes a number in the range [0..255], by reading 1 - 11 bits.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Decode.ReadSymbol(System.Int32[],System.Int32,ceTe.DynamicPDF.IO.Compression.Brotli.BitReader)">
            <summary>Decodes the next Huffman code from bit-stream.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Decode.ReadMetablockInfo(ceTe.DynamicPDF.IO.Compression.Brotli.State)">
            <summary>Reads next metablock header.</summary>
            <param name="state">decoding state</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Decode.Decompress(ceTe.DynamicPDF.IO.Compression.Brotli.State)">
            <summary>Actual decompress implementation.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Dictionary">
            <summary>Collection of static dictionary words.</summary>
            <remarks>
            Collection of static dictionary words.
            Dictionary content is loaded from binary resource when
            <see cref="M:ceTe.DynamicPDF.IO.Compression.Brotli.Dictionary.GetData"/>
            is executed for the
            first time. Consequently, it saves memory and CPU in case dictionary is not required.
            One possible drawback is that multiple threads that need dictionary data may be blocked (only
            once in each classworld). To avoid this, it is enough to call
            <see cref="M:ceTe.DynamicPDF.IO.Compression.Brotli.Dictionary.GetData"/>
            proactively.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Dictionary.DataHolder0">
            <summary>"Initialization-on-demand holder idiom" implementation.</summary>
            <remarks>
            "Initialization-on-demand holder idiom" implementation.
            This static class definition is not initialized until the JVM determines that it must be
            executed (when the static method
            <see cref="M:ceTe.DynamicPDF.IO.Compression.Brotli.Dictionary.DataHolder0.GetData"/>
            is invoked).
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Huffman">
            <summary>Utilities for building Huffman decoding tables.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.Huffman.HuffmanMaxTableSize">
            <summary>
            Maximum possible Huffman table size for an alphabet size of 704, max code length 15 and root
            table bits 8.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Huffman.GetNextKey(System.Int32,System.Int32)">
            <summary>Returns reverse(reverse(key, len) + 1, len).</summary>
            <remarks>
            Returns reverse(reverse(key, len) + 1, len).
            reverse(key, len) is the bit-wise reversal of the len least significant bits of key.
            </remarks>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Huffman.ReplicateValue(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Stores
            <paramref name="item"/>
            in
            <c>table[0], table[step], table[2 * step] .., table[end]</c>
            .
            Assumes that end is an integer multiple of step.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Huffman.NextTableBitSize(System.Int32[],System.Int32,System.Int32)">
            <param name="count">histogram of bit lengths for the remaining symbols,</param>
            <param name="len">code length of the next processed symbol.</param>
            <returns>table width of the next 2nd level table.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Huffman.BuildHuffmanTable(System.Int32[],System.Int32,System.Int32,System.Int32[],System.Int32)">
            <summary>Builds Huffman lookup table assuming code lengths are in symbol order.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup">
            <summary>Contains a collection of huffman trees with the same alphabet size.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup.alphabetSize">
            <summary>The maximal alphabet size in this group.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup.codes">
            <summary>Storage for Huffman lookup tables.</summary>
        </member>
        <member name="F:ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup.trees">
            <summary>
            Offsets of distinct lookup tables in
            <see cref="F:ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup.codes"/>
            storage.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup.Init(ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup,System.Int32,System.Int32)">
            <summary>Initializes the Huffman tree group.</summary>
            <param name="group">POJO to be initialised</param>
            <param name="alphabetSize">the maximal alphabet size in this group</param>
            <param name="n">number of Huffman codes</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup.Decode(ceTe.DynamicPDF.IO.Compression.Brotli.HuffmanTreeGroup,ceTe.DynamicPDF.IO.Compression.Brotli.BitReader)">
            <summary>Decodes Huffman trees from input stream and constructs lookup tables.</summary>
            <param name="group">target POJO</param>
            <param name="br">data source</param>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.IntReader">
            <summary>Byte-to-int conversion magic.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.IntReader.Convert(ceTe.DynamicPDF.IO.Compression.Brotli.IntReader,System.Int32)">
            <summary>Translates bytes to ints.</summary>
            <remarks>
            Translates bytes to ints.
            NB: intLen == 4 * byteSize!
            NB: intLen should be less or equal to intBuffer length.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Prefix">
            <summary>Lookup tables to map prefix codes to value ranges.</summary>
            <remarks>
            Lookup tables to map prefix codes to value ranges.
            This is used during decoding of the block lengths, literal insertion lengths and copy
            lengths.
            Range represents values: [offset, offset + 2 ^ n_bits)
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.RunningState">
            <summary>Enumeration of decoding state-machine.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.State.SetInput(ceTe.DynamicPDF.IO.Compression.Brotli.State,System.IO.Stream)">
            <summary>Associate input with decoder state.</summary>
            <param name="state">uninitialized state without associated input</param>
            <param name="input">compressed data source</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.State.Close(ceTe.DynamicPDF.IO.Compression.Brotli.State)">
            <exception cref="T:System.IO.IOException"/>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Transform">
            <summary>Transformations on dictionary words.</summary>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.Utils">
            <summary>A set of utility methods.</summary>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Utils.FillWithZeroes(System.Byte[],System.Int32,System.Int32)">
            <summary>Fills byte array with zeroes.</summary>
            <remarks>
            Fills byte array with zeroes.
            Current implementation uses
            <see cref="!:System.Array.Copy(object, int, object, int, int)"/>
            , so it should be used for length not
            less than 16.
            </remarks>
            <param name="dest">array to fill with zeroes</param>
            <param name="offset">the first byte to fill</param>
            <param name="length">number of bytes to change</param>
        </member>
        <member name="M:ceTe.DynamicPDF.IO.Compression.Brotli.Utils.FillWithZeroes(System.Int32[],System.Int32,System.Int32)">
            <summary>Fills int array with zeroes.</summary>
            <remarks>
            Fills int array with zeroes.
            Current implementation uses
            <see cref="!:System.Array.Copy(object, int, object, int, int)"/>
            , so it should be used for length not
            less than 16.
            </remarks>
            <param name="dest">array to fill with zeroes</param>
            <param name="offset">the first item to fill</param>
            <param name="length">number of item to change</param>
        </member>
        <member name="T:ceTe.DynamicPDF.IO.Compression.Brotli.WordTransformType">
            <summary>Enumeration of all possible word transformations.</summary>
            <remarks>
            Enumeration of all possible word transformations.
            There are two simple types of transforms: omit X first/last symbols, two character-case
            transforms and the identity transform.
            </remarks>
        </member>
        <member name="T:ceTe.DynamicPDF.Text.WebOpenFont">
             <summary>
             Represents an web open font.
             </summary>
            ^WebOpenFont
            ^Lic.Generator.Pro
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.#ctor(System.String)">
             <summary>
             Initializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.WebOpenFont"/> class.
             </summary>
             <param name="filePath">Physical file path of the web open font file.</param>
            ^WebOpenFont.Example1
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.#ctor(System.IO.Stream)">
             <summary>
             Initializes a new instance of <see cref="T:ceTe.DynamicPDF.Text.WebOpenFont"/> class.
             </summary>
             <param name="stream">Stream containing the web open font data.</param>
            ^WebOpenFont.Example2
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:ceTe.DynamicPDF.Text.WebOpenFont"/> object.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draw the opentype font data to the <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/>.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object used to receive the web open font output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.GetFontSubsetter">
            <summary>
            eturns a font subsetter for the opentype font.
            </summary>
            <returns><see cref="T:ceTe.DynamicPDF.IO.FontSubsetter"/> object used for the font.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.GetGlyphWidth(System.Char)">
            <summary>
            Returns the mwidth of the given char.
            </summary>
            <param name="glyph">Glyph whose mwidth is required.</param>
            <returns>mwdith of the given glyph.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.GetKernValue(System.Char,System.Char)">
            <summary>
            Returns the kern value correspoding to the given glyph combination.
            </summary>
            <param name="left">Left glyph.</param>
            <param name="right">Right glyph.</param>
            <returns>Kern value correponds to the combination given.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.Text.WebOpenFont.HasKerning">
            <summary>
            Returns whether the font has inbuilt kerning pairs.
            </summary>
            <returns>true, if the font has inbuilt kerning pair.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.Ascender">
            <summary>
            Gets the ascender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.Descender">
            <summary>
            Gets the descender for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.Embed">
            <summary>
            Gets or sets a value indicating whether the font need to be embedded in to the pdf.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.LineBreaker">
            <summary>
            Gets the instance of <see cref="P:ceTe.DynamicPDF.Text.WebOpenFont.LineBreaker"/> used for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.LineGap">
            <summary>
            Gets the line gap for the font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.Name">
            <summary>
            Gets the font name for the file given.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.OutLineType">
            <summary>
            Gets the <see cref="P:ceTe.DynamicPDF.Text.WebOpenFont.OutLineType"/> of the web open font.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.RequiredPdfObjects">
            <summary>
            Gets the required pdf objects.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.ResourceType">
            <summary>
            Gets the value of <see cref="P:ceTe.DynamicPDF.Text.WebOpenFont.ResourceType"/>.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Text.WebOpenFont.Subset">
            <summary>
            Gets or sets a value indicating whether the font need to subset while embedding.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.Merger.PdfToUnicodeContent.RequiredPdfObjects">
            <summary>
            Gets the number of PDF objects required by the resource.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.Xmp.PdfUASchema">
             <summary>
             This class used to create PDF/UA version 1 documents.
             </summary>
            ^PDFUaSchema
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.PdfUASchema.#ctor">
            <summary>
            Creates new instance of the PDF/UA schema.
            </summary>
        </member>
        <member name="M:ceTe.DynamicPDF.Xmp.PdfUASchema.Draw(ceTe.DynamicPDF.Xmp.XmpWriter)">
            <summary>
            Draws the PdfUA Schema to the given <see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object.
            </summary>
            <param name="xwriter"><see cref="T:ceTe.DynamicPDF.Xmp.XmpWriter"/> object to receive the Basic Schema's output.</param>
        </member>
        <member name="T:ceTe.DynamicPDF.AutoBodyDimensions">
             <summary>
             Represents the dimensions of the areas body.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="P:ceTe.DynamicPDF.AutoBodyDimensions.Left">
            <summary>
            Gets or sets the left edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoBodyDimensions.Top">
            <summary>
            Gets or sets the top edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoBodyDimensions.Right">
            <summary>
            Gets or sets the right edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoBodyDimensions.Bottom">
            <summary>
            Gets or sets the bottom edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoBodyDimensions.Width">
            <summary>
            Gets or sets the width of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoBodyDimensions.Height">
            <summary>
            Gets or sets height of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.InheritableDimensions">
             <summary>
             Represents the dimensions of a rectangle.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.InheritableDimensions.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.InheritableDimensions"/> structure.
            </summary>
            <param name="size">The page size of the dimensions in points (1/72 inches).</param>
            <param name="orientation">The orientation of the dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.InheritableDimensions.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.InheritableDimensions"/> structure.
            </summary>
            <param name="width">The width of the dimensions in points (1/72 inches).</param>
            <param name="height">the height of the dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.InheritableDimensions.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.InheritableDimensions"/> structure.
            </summary>
            <param name="left">The left edge of the dimensions in points (1/72 inches).</param>
            <param name="top">The top edge of the dimensions in points (1/72 inches).</param>
            <param name="right">The right edge of the dimensions in points (1/72 inches).</param>
            <param name="bottom">The bottom edge of the dimensions in points (1/72 inches).</param>
        </member>
        <member name="P:ceTe.DynamicPDF.InheritableDimensions.Inherit">
            <summary>
             Gets or sets the inherits the dimensions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.InheritableDimensions.InheritsFrom">
            <summary>
            Gets the inherits from the dimensions.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AutoMediaBoxDimensions">
            <summary>
            Represents the media box dimensions of the page.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoMediaBoxDimensions.Left">
            <summary>
            Gets or sets the left media box edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoMediaBoxDimensions.Top">
            <summary>
            Gets or sets the top media box edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoMediaBoxDimensions.Right">
            <summary>
            Gets or sets the right media box edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoMediaBoxDimensions.Bottom">
            <summary>
            Gets or sets the bottom media box edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoMediaBoxDimensions.Width">
            <summary>
            Gets or sets the media box width of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoMediaBoxDimensions.Height">
            <summary>
            Gets or sets meida box height of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AutoEdgeDimensions">
             <summary>
             Represents the dimensions of the areas edge.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="P:ceTe.DynamicPDF.AutoEdgeDimensions.Left">
            <summary>
            Gets or sets the left edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoEdgeDimensions.Top">
            <summary>
            Gets or sets the top edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoEdgeDimensions.Right">
            <summary>
            Gets or sets the right edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoEdgeDimensions.Bottom">
            <summary>
            Gets or sets the bottom edge of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoEdgeDimensions.Width">
            <summary>
            Gets or sets the width of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoEdgeDimensions.Height">
            <summary>
            Gets or sets the height of the dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AutoInheritableDimensions">
             <summary>
             Represents the dimensions of a rectangle.
             </summary>
            ^Lic.Generator.Comm
        </member>
        <member name="P:ceTe.DynamicPDF.AutoInheritableDimensions.Inherit">
            <summary>
             Gets or sets the inherits the dimensions.
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoInheritableDimensions.InheritsFrom">
            <summary>
            Gets the inherits from the dimensions.
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.AutoPageDimensions">
             <summary>
             Represents the dimensions of a page.
             </summary>
             <remarks>This class can be used to specify the dimensions and other formatting details of a page.  It can then be passed into a <see cref="T:ceTe.DynamicPDF.Page"/> constructor.</remarks>
            ^Lic.Generator.Comm
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.#ctor(ceTe.DynamicPDF.PageSize)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoPageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoPageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
            <param name="orientation"></param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.#ctor(ceTe.DynamicPDF.PageSize,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoPageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
            <param name="margins">Margins of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.#ctor(ceTe.DynamicPDF.PageSize,ceTe.DynamicPDF.PageOrientation,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoPageDimensions"/> class.
            </summary>
            <param name="size">Page size of the page dimensions in points (1/72 inches).</param>
            <param name="orientation">Orientation of the page dimensions in points (1/72 inches).</param>
            <param name="margins">Margins of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoPageDimensions"/> class.
            </summary>
            <param name="width">Width of the page dimensions in points (1/72 inches).</param>
            <param name="height">Height of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:ceTe.DynamicPDF.AutoPageDimensions"/> class.
            </summary>
            <param name="width">Width of the page dimensions in points (1/72 inches).</param>
            <param name="height">Height of the page dimensions in points (1/72 inches).</param>
            <param name="margins">Margins of the page dimensions in points (1/72 inches).</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.Draw(ceTe.DynamicPDF.IO.DocumentWriter)">
            <summary>
            Draws the page dimensions to the given <see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> object.
            </summary>
            <param name="writer"><see cref="T:ceTe.DynamicPDF.IO.DocumentWriter"/> to receive the page dimensions output.</param>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.GetPdfX(System.Single)">
            <summary>
            Gets the translated X coordinate.
            </summary>
            <param name="x">X coordinate to translate.</param>
            <returns>A translated X coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.GetPdfX(System.Single,ceTe.DynamicPDF.PageElements.RelativeTo,System.Boolean)">
            <summary>
            Gets the translated X coordinate.
            </summary>
            <param name="x">X coordinate to translate.</param>
            <param name="relativeTo">Placement of the page element on the page</param>
            <param name="ignoreMargins">Setting false will consider the margin while placing the page element based on the RelativeTo property.</param>
            <returns>A translated X coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.GetPdfY(System.Single)">
            <summary>
            Gets the translated Y coordinate.
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="M:ceTe.DynamicPDF.AutoPageDimensions.GetPdfY(System.Single,ceTe.DynamicPDF.PageElements.RelativeTo,System.Boolean)">
            <summary>
            Gets the translated Y coordinate.
            </summary>
            <param name="y">Y coordinate to translate.</param>
            <param name="relativeTo">Placement of the page element on the page</param>
            <param name="ignoreMargins">Setting false will consider the margin while placing the page element based on the RelativeTo property.</param>
            <returns>A translated Y coordinate.</returns>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoPageDimensions.MediaBox">
            <summary>
            Gets the media box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoPageDimensions.CropBox">
            <summary>
            Gets the crop box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoPageDimensions.BleedBox">
            <summary>
            Gets the bleed box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoPageDimensions.TrimBox">
            <summary>
            Gets the trim box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoPageDimensions.ArtBox">
            <summary>
            Gets the art box dimensions of the page in points (1/72 inches). 
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoPageDimensions.Width">
            <summary>
            Gets or sets the width of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="P:ceTe.DynamicPDF.AutoPageDimensions.Height">
            <summary>
            Gets or sets the height of the page dimensions in points (1/72 inches).
            </summary>
        </member>
        <member name="T:ceTe.DynamicPDF.PageElements.RelativeTo">
            <summary>
            Represents a page element's placement.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.RelativeTo.TopLeft">
            <summary>
            Represents a top left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.RelativeTo.TopCenter">
            <summary>
            Represents a top center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.RelativeTo.TopRight">
            <summary>
            Represents a top right.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.RelativeTo.BottomLeft">
            <summary>
            Represents a bottom left.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.RelativeTo.BottomCenter">
            <summary>
            Represents a bottom center.
            </summary>
        </member>
        <member name="F:ceTe.DynamicPDF.PageElements.RelativeTo.BottomRight">
            <summary>
            Represents a bottom right.
            </summary>
        </member>
    </members>
</doc>
